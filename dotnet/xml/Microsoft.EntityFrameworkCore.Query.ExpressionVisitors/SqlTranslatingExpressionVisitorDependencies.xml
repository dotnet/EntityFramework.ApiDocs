<Type Name="SqlTranslatingExpressionVisitorDependencies" FullName="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies">
  <TypeSignature Language="C#" Value="public sealed class SqlTranslatingExpressionVisitorDependencies" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTranslatingExpressionVisitorDependencies extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTranslatingExpressionVisitorDependencies" />
  <TypeSignature Language="F#" Value="type SqlTranslatingExpressionVisitorDependencies = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlTranslatingExpressionVisitorDependencies (Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator compositeExpressionFragmentTranslator, Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator methodCallTranslator, Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator memberTranslator, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator compositeExpressionFragmentTranslator, class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator methodCallTranslator, class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator memberTranslator, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (compositeExpressionFragmentTranslator As IExpressionFragmentTranslator, methodCallTranslator As ICompositeMethodCallTranslator, memberTranslator As IMemberTranslator, relationalTypeMapper As IRelationalTypeMapper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies : Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator * Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator * Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies" Usage="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies (compositeExpressionFragmentTranslator, methodCallTranslator, memberTranslator, relationalTypeMapper)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compositeExpressionFragmentTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="methodCallTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="memberTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator" Index="2" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="relationalTypeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" Index="3" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="compositeExpressionFragmentTranslator"> The composite expression fragment translator. </param>
        <param name="methodCallTranslator"> The method call translator. </param>
        <param name="memberTranslator"> The member translator. </param>
        <param name="relationalTypeMapper"> The relational type mapper. </param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" />.
                </para>
          <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlTranslatingExpressionVisitorDependencies (Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator compositeExpressionFragmentTranslator, Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator methodCallTranslator, Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator memberTranslator, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator compositeExpressionFragmentTranslator, class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator methodCallTranslator, class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator memberTranslator, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (compositeExpressionFragmentTranslator As IExpressionFragmentTranslator, methodCallTranslator As ICompositeMethodCallTranslator, memberTranslator As IMemberTranslator, relationalTypeMapper As IRelationalTypeMapper, typeMappingSource As IRelationalTypeMappingSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies : Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator * Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator * Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies" Usage="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies (compositeExpressionFragmentTranslator, methodCallTranslator, memberTranslator, relationalTypeMapper, typeMappingSource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compositeExpressionFragmentTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="methodCallTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="memberTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="relationalTypeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="compositeExpressionFragmentTranslator"> The composite expression fragment translator. </param>
        <param name="methodCallTranslator"> The method call translator. </param>
        <param name="memberTranslator"> The member translator. </param>
        <param name="relationalTypeMapper"> The relational type mapper. </param>
        <param name="typeMappingSource"> The type mapper. </param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" />.
                </para>
          <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeExpressionFragmentTranslator">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator CompositeExpressionFragmentTranslator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator CompositeExpressionFragmentTranslator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.CompositeExpressionFragmentTranslator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositeExpressionFragmentTranslator As IExpressionFragmentTranslator" />
      <MemberSignature Language="F#" Value="member this.CompositeExpressionFragmentTranslator : Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator" Usage="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.CompositeExpressionFragmentTranslator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The composite expression fragment translator.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberTranslator">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator MemberTranslator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator MemberTranslator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.MemberTranslator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberTranslator As IMemberTranslator" />
      <MemberSignature Language="F#" Value="member this.MemberTranslator : Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator" Usage="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.MemberTranslator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The member translator.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodCallTranslator">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator MethodCallTranslator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator MethodCallTranslator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.MethodCallTranslator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodCallTranslator As ICompositeMethodCallTranslator" />
      <MemberSignature Language="F#" Value="member this.MethodCallTranslator : Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator" Usage="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.MethodCallTranslator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The method call translator.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalTypeMapper">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper RelationalTypeMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper RelationalTypeMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.RelationalTypeMapper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationalTypeMapper As IRelationalTypeMapper" />
      <MemberSignature Language="F#" Value="member this.RelationalTypeMapper : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" Usage="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.RelationalTypeMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("Use TypeMappingSource.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use TypeMappingSource.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The relational type mapper.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeMappingSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource TypeMappingSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource TypeMappingSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.TypeMappingSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeMappingSource As IRelationalTypeMappingSource" />
      <MemberSignature Language="F#" Value="member this.TypeMappingSource : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Usage="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.TypeMappingSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The type mapping source.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator methodCallTranslator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator methodCallTranslator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (methodCallTranslator As ICompositeMethodCallTranslator) As SqlTranslatingExpressionVisitorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies" Usage="sqlTranslatingExpressionVisitorDependencies.With methodCallTranslator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodCallTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ICompositeMethodCallTranslator" />
      </Parameters>
      <Docs>
        <param name="methodCallTranslator"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator compositeExpressionFragmentTranslator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator compositeExpressionFragmentTranslator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (compositeExpressionFragmentTranslator As IExpressionFragmentTranslator) As SqlTranslatingExpressionVisitorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies" Usage="sqlTranslatingExpressionVisitorDependencies.With compositeExpressionFragmentTranslator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositeExpressionFragmentTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator" />
      </Parameters>
      <Docs>
        <param name="compositeExpressionFragmentTranslator"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator memberTranslator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator memberTranslator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (memberTranslator As IMemberTranslator) As SqlTranslatingExpressionVisitorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies" Usage="sqlTranslatingExpressionVisitorDependencies.With memberTranslator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberTranslator" Type="Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator" />
      </Parameters>
      <Docs>
        <param name="memberTranslator"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (relationalTypeMapper As IRelationalTypeMapper) As SqlTranslatingExpressionVisitorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies" Usage="sqlTranslatingExpressionVisitorDependencies.With relationalTypeMapper" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("Use IRelationalTypeMappingSource.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IRelationalTypeMappingSource.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationalTypeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" />
      </Parameters>
      <Docs>
        <param name="relationalTypeMapper"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With (Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies With(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (typeMappingSource As IRelationalTypeMappingSource) As SqlTranslatingExpressionVisitorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies" Usage="sqlTranslatingExpressionVisitorDependencies.With typeMappingSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="typeMappingSource"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
