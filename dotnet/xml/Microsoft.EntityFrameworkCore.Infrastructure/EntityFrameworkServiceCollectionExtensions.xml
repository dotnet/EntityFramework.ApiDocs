<Type Name="EntityFrameworkServiceCollectionExtensions" FullName="Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class EntityFrameworkServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EntityFrameworkServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EntityFrameworkServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type EntityFrameworkServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods for setting up Entity Framework related services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEntityFramework">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddEntityFramework (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddEntityFramework(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServiceCollectionExtensions.AddEntityFramework(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddEntityFramework (serviceCollection As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddEntityFramework : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServiceCollectionExtensions.AddEntityFramework serviceCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("AddEntityFramework is no longer functional. Use AddEntityFrameworkSqlServer, AddEntityFrameworkSqlite, etc. instead.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("AddEntityFramework is no longer functional. Use AddEntityFrameworkSqlServer, AddEntityFrameworkSqlite, etc. instead.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="serviceCollection"> The service collection. </param>
        <summary>
                This method is no longer functional. Call a provider-specific method such as
                AddEntityFrameworkSqlServer, AddEntityFrameworkSqlite, etc. instead.
            </summary>
        <returns> Always throws NotSupportedException. </returns>
        <remarks>
          <para>
                    You only need to use this functionality when you want Entity Framework to resolve the services it uses
                    from an external <see cref="T:System.IServiceProvider" />. If you are not using an external
                    <see cref="T:System.IServiceProvider" /> Entity Framework will take care of creating the services it requires.
                </para>
          <para>
                    The database you are using will also define extension methods that can be called on the returned
                    <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to register the services required by the database.
                    For example, when using Microsoft.EntityFrameworkCore.SqlServer you would call
                    <c>collection.AddEntityFrameworkSqlServer()</c>.
                </para>
          <para>
                    For derived contexts to be registered in the <see cref="T:System.IServiceProvider" /> and resolve their services
                    from the <see cref="T:System.IServiceProvider" /> you must chain a call to the
                    <see cref="M:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
                    method on the returned <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
                </para>
        </remarks>
        <exception cref="T:System.NotSupportedException"> Always throws NotSupportedException. </exception>
        <example>
          <code>
                    public void ConfigureServices(IServiceCollection services) 
                    {
                        var connectionString = "connection string to database";
            
                        services.AddDbContext&lt;MyContext&gt;(options =&gt; options.UseSqlServer(connectionString)); 
                    }
                </code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
