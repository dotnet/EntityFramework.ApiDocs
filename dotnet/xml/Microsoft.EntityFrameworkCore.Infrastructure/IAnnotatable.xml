<Type Name="IAnnotatable" FullName="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable">
  <TypeSignature Language="C#" Value="public interface IAnnotatable" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAnnotatable" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAnnotatable" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="F#" Value="type IAnnotatable = interface" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="C#" Value="public interface IAnnotatable : Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAnnotatable implements class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAnnotatable&#xA;Implements IReadOnlyAnnotatable" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type IAnnotatable = interface&#xA;    interface IReadOnlyAnnotatable" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IAnnotatable implements class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    A class that exposes build-time and run-time annotations. Annotations allow for arbitrary metadata to be stored on an object.
                </para>
      <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRuntimeAnnotation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation AddRuntimeAnnotation (string name, object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation AddRuntimeAnnotation(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.AddRuntimeAnnotation(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRuntimeAnnotation (name As String, value As Object) As IAnnotation" />
      <MemberSignature Language="F#" Value="abstract member AddRuntimeAnnotation : string * obj -&gt; Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Usage="iAnnotatable.AddRuntimeAnnotation (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to be added.</param>
        <param name="value">The value to be stored in the annotation.</param>
        <summary>
                Adds a runtime annotation to this object. Throws if an annotation with the specified name already exists.
            </summary>
        <returns>The newly added annotation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAnnotation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation FindAnnotation (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation FindAnnotation(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.FindAnnotation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAnnotation (name As String) As IAnnotation" />
      <MemberSignature Language="F#" Value="abstract member FindAnnotation : string -&gt; Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Usage="iAnnotatable.FindAnnotation name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the annotation to find. </param>
        <summary>
                Gets the annotation with the given name, returning <see langword="null" /> if it does not exist.
            </summary>
        <returns>
                The existing annotation if an annotation with the specified name already exists. Otherwise, <see langword="null" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindRuntimeAnnotation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation? FindRuntimeAnnotation (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation FindRuntimeAnnotation(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.FindRuntimeAnnotation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindRuntimeAnnotation (name As String) As IAnnotation" />
      <MemberSignature Language="F#" Value="abstract member FindRuntimeAnnotation : string -&gt; Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Usage="iAnnotatable.FindRuntimeAnnotation name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to find.</param>
        <summary>
                Gets the runtime annotation with the given name, returning <see langword="null" /> if it does not exist.
            </summary>
        <returns>
                The existing runtime annotation if an annotation with the specified name already exists. Otherwise, <see langword="null" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindRuntimeAnnotationValue">
      <MemberSignature Language="C#" Value="public virtual object? FindRuntimeAnnotationValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindRuntimeAnnotationValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.FindRuntimeAnnotationValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindRuntimeAnnotationValue (name As String) As Object" />
      <MemberSignature Language="F#" Value="abstract member FindRuntimeAnnotationValue : string -&gt; obj&#xA;override this.FindRuntimeAnnotationValue : string -&gt; obj" Usage="iAnnotatable.FindRuntimeAnnotationValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to find.</param>
        <summary>
                Gets the value of the runtime annotation with the given name, returning <see langword="null" /> if it does not exist.
            </summary>
        <returns>
                The value of the existing runtime annotation if an annotation with the specified name already exists.
                Otherwise, <see langword="null" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; GetAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; GetAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.GetAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnnotations () As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member GetAnnotations : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="iAnnotatable.GetAnnotations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets all annotations on the current object.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddRuntimeAnnotationValue&lt;TValue,TArg&gt;">
      <MemberSignature Language="C#" Value="public TValue GetOrAddRuntimeAnnotationValue&lt;TValue,TArg&gt; (string name, Func&lt;TArg?,TValue&gt; valueFactory, TArg? factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TValue GetOrAddRuntimeAnnotationValue&lt;TValue, TArg&gt;(string name, class System.Func`2&lt;!!TArg, !!TValue&gt; valueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.GetOrAddRuntimeAnnotationValue``2(System.String,System.Func{``1,``0},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddRuntimeAnnotationValue(Of TValue, TArg) (name As String, valueFactory As Func(Of TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="F#" Value="abstract member GetOrAddRuntimeAnnotationValue : string * Func&lt;'Arg, 'Value&gt; * 'Arg -&gt; 'Value" Usage="iAnnotatable.GetOrAddRuntimeAnnotationValue (name, valueFactory, factoryArgument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TArg,TValue&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="factoryArgument" Type="TArg" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <param name="name">The name of the annotation.</param>
        <param name="valueFactory">The factory used to create the value if the annotation doesn't exist.</param>
        <param name="factoryArgument">An argument for the factory method.</param>
        <summary>
                Gets the value of the runtime annotation with the given name, adding it if one does not exist.
            </summary>
        <returns>
                The value of the existing runtime annotation if an annotation with the specified name already exists.
                Otherwise a newly created value.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeAnnotations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; GetRuntimeAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; GetRuntimeAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.GetRuntimeAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeAnnotations () As IEnumerable(Of IAnnotation)" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeAnnotations : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Usage="iAnnotatable.GetRuntimeAnnotations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets all the runtime annotations on the current object.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the annotation to find. </param>
        <summary>
                Gets the value annotation with the given name, returning <see langword="null" /> if it does not exist.
            </summary>
        <value>
                The value of the existing annotation if an annotation with the specified name already exists. Otherwise, <see langword="null" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRuntimeAnnotation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation? RemoveRuntimeAnnotation (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation RemoveRuntimeAnnotation(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.RemoveRuntimeAnnotation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRuntimeAnnotation (name As String) As IAnnotation" />
      <MemberSignature Language="F#" Value="abstract member RemoveRuntimeAnnotation : string -&gt; Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Usage="iAnnotatable.RemoveRuntimeAnnotation name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to remove.</param>
        <summary>
                Removes the given runtime annotation from this object.
            </summary>
        <returns>The annotation that was removed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRuntimeAnnotation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation SetRuntimeAnnotation (string name, object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation SetRuntimeAnnotation(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.SetRuntimeAnnotation(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetRuntimeAnnotation (name As String, value As Object) As IAnnotation" />
      <MemberSignature Language="F#" Value="abstract member SetRuntimeAnnotation : string * obj -&gt; Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Usage="iAnnotatable.SetRuntimeAnnotation (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to be added.</param>
        <param name="value">The value to be stored in the annotation.</param>
        <summary>
                Sets the runtime annotation stored under the given key. Overwrites the existing annotation if an
                annotation with the specified name already exists.
            </summary>
        <returns>The newly added annotation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
