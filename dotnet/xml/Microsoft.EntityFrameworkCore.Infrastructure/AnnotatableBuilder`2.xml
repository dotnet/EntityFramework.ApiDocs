<Type Name="AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;" FullName="Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;">
  <TypeSignature Language="C#" Value="public abstract class AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt; : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder where TMetadata : ConventionAnnotatable where TModelBuilder : IConventionModelBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AnnotatableBuilder`2&lt;(class Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable) TMetadata, (class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder) TModelBuilder&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AnnotatableBuilder(Of TMetadata, TModelBuilder)&#xA;Implements IConventionAnnotatableBuilder" />
  <TypeSignature Language="F#" Value="type AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; ConventionAnnotatable and 'ModelBuilder :&gt; IConventionModelBuilder)&gt; = class&#xA;    interface IConventionAnnotatableBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TMetadata">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TModelBuilder">
      <Constraints>
        <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("Builder {Metadata,nq}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("Builder {Metadata,nq}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TMetadata">To be added.</typeparam>
    <typeparam name="TModelBuilder">To be added.</typeparam>
    <summary>
      <para>
                    A base type with a simple API surface for configuring a <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable" />.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnnotatableBuilder (TMetadata metadata, TModelBuilder modelBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TMetadata metadata, !TModelBuilder modelBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.#ctor(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (metadata As TMetadata, modelBuilder As TModelBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt; : 'Metadata * 'ModelBuilder -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;" Usage="new Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt; (metadata, modelBuilder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="TMetadata" />
        <Parameter Name="modelBuilder" Type="TModelBuilder" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="modelBuilder">To be added.</param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemoveAnnotation">
      <MemberSignature Language="C#" Value="public virtual bool CanRemoveAnnotation (string name, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRemoveAnnotation(string name, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.CanRemoveAnnotation(System.String,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRemoveAnnotation (name As String, configurationSource As ConfigurationSource) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanRemoveAnnotation : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; bool&#xA;override this.CanRemoveAnnotation : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; bool" Usage="annotatableBuilder.CanRemoveAnnotation (name, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to remove.</param>
        <param name="configurationSource">The configuration source of the annotation to be set.</param>
        <summary>
                Returns a value indicating whether an annotation with the given name can be removed using this configuration source.
            </summary>
        <returns>
          <see langword="true" /> if the annotation can be removed, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetAnnotation">
      <MemberSignature Language="C#" Value="public virtual bool CanSetAnnotation (string name, object value, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetAnnotation(string name, object value, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.CanSetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetAnnotation (name As String, value As Object, configurationSource As ConfigurationSource) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetAnnotation : string * obj * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; bool&#xA;override this.CanSetAnnotation : string * obj * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; bool" Usage="annotatableBuilder.CanSetAnnotation (name, value, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual bool CanSetAnnotation (string name, object? value, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to be added.</param>
        <param name="value">The value to be stored in the annotation.</param>
        <param name="configurationSource">The configuration source of the annotation to be set.</param>
        <summary>
                Returns a value indicating whether an annotation with the given name and value can be set from this configuration source.
            </summary>
        <returns>
          <see langword="true" /> if the annotation can be set, <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnnotation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt; HasAnnotation (string name, object value, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2&lt;!TMetadata, !TModelBuilder&gt; HasAnnotation(string name, object value, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.HasAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAnnotation (name As String, value As Object, configurationSource As ConfigurationSource) As AnnotatableBuilder(Of TMetadata, TModelBuilder)" />
      <MemberSignature Language="F#" Value="abstract member HasAnnotation : string * obj * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;&#xA;override this.HasAnnotation : string * obj * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;" Usage="annotatableBuilder.HasAnnotation (name, value, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;? HasAnnotation (string name, object? value, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="name">The key of the annotation to be set.</param>
        <param name="value">The value to be stored in the annotation.</param>
        <param name="configurationSource">The configuration source of the annotation to be set.</param>
        <summary>
                Sets the annotation with given key and value on this object using given configuration source.
                Overwrites the existing annotation if an annotation with the specified name already exists.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNoAnnotation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;? HasNoAnnotation (string name, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2&lt;!TMetadata, !TModelBuilder&gt; HasNoAnnotation(string name, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.HasNoAnnotation(System.String,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNoAnnotation (name As String, configurationSource As ConfigurationSource) As AnnotatableBuilder(Of TMetadata, TModelBuilder)" />
      <MemberSignature Language="F#" Value="abstract member HasNoAnnotation : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;&#xA;override this.HasNoAnnotation : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;" Usage="annotatableBuilder.HasNoAnnotation (name, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to remove.</param>
        <param name="configurationSource">The configuration source of the annotation to be set.</param>
        <summary>
                Removes any annotation with the given name.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNonNullAnnotation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt; HasNonNullAnnotation (string name, object value, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2&lt;!TMetadata, !TModelBuilder&gt; HasNonNullAnnotation(string name, object value, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.HasNonNullAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNonNullAnnotation (name As String, value As Object, configurationSource As ConfigurationSource) As AnnotatableBuilder(Of TMetadata, TModelBuilder)" />
      <MemberSignature Language="F#" Value="abstract member HasNonNullAnnotation : string * obj * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;&#xA;override this.HasNonNullAnnotation : string * obj * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;" Usage="annotatableBuilder.HasNonNullAnnotation (name, value, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;? HasNonNullAnnotation (string name, object? value, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="name">The key of the annotation to be set.</param>
        <param name="value">The value to be stored in the annotation.</param>
        <param name="configurationSource">The configuration source of the annotation to be set.</param>
        <summary>
                Sets the annotation with given key and value on this object using given configuration source.
                Overwrites the existing annotation if an annotation with the specified name already exists.
                Removes the annotation if <see langword="null" /> value is specified.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAnnotationsFrom">
      <MemberSignature Language="C#" Value="public virtual void MergeAnnotationsFrom (TMetadata annotatable);" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeAnnotationsFrom(!TMetadata annotatable) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.MergeAnnotationsFrom(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MergeAnnotationsFrom (annotatable As TMetadata)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member MergeAnnotationsFrom : 'Metadata -&gt; unit&#xA;override this.MergeAnnotationsFrom : 'Metadata -&gt; unit" Usage="annotatableBuilder.MergeAnnotationsFrom annotatable" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt; MergeAnnotationsFrom (TMetadata annotatable);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2&lt;!TMetadata, !TModelBuilder&gt; MergeAnnotationsFrom(!TMetadata annotatable) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeAnnotationsFrom (annotatable As TMetadata) As AnnotatableBuilder(Of TMetadata, TModelBuilder)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member MergeAnnotationsFrom : 'Metadata -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;&#xA;override this.MergeAnnotationsFrom : 'Metadata -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;" Usage="annotatableBuilder.MergeAnnotationsFrom annotatable" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotatable" Type="TMetadata" />
      </Parameters>
      <Docs>
        <param name="annotatable">The object to copy annotations from.</param>
        <summary>
                Copies all the explicitly configured annotations from the given object overwriting any existing ones.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAnnotationsFrom">
      <MemberSignature Language="C#" Value="public virtual void MergeAnnotationsFrom (TMetadata annotatable, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource minimalConfigurationSource);" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeAnnotationsFrom(!TMetadata annotatable, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource minimalConfigurationSource) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.MergeAnnotationsFrom(`0,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MergeAnnotationsFrom (annotatable As TMetadata, minimalConfigurationSource As ConfigurationSource)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="abstract member MergeAnnotationsFrom : 'Metadata * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; unit&#xA;override this.MergeAnnotationsFrom : 'Metadata * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; unit" Usage="annotatableBuilder.MergeAnnotationsFrom (annotatable, minimalConfigurationSource)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt; MergeAnnotationsFrom (TMetadata annotatable, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource minimalConfigurationSource);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2&lt;!TMetadata, !TModelBuilder&gt; MergeAnnotationsFrom(!TMetadata annotatable, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource minimalConfigurationSource) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeAnnotationsFrom (annotatable As TMetadata, minimalConfigurationSource As ConfigurationSource) As AnnotatableBuilder(Of TMetadata, TModelBuilder)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member MergeAnnotationsFrom : 'Metadata * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;&#xA;override this.MergeAnnotationsFrom : 'Metadata * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;" Usage="annotatableBuilder.MergeAnnotationsFrom (annotatable, minimalConfigurationSource)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotatable" Type="TMetadata" />
        <Parameter Name="minimalConfigurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="annotatable">The object to copy annotations from.</param>
        <param name="minimalConfigurationSource">The minimum configuration source for an annotation to be copied.</param>
        <summary>
                Copies all the configured annotations from the given object overwriting any existing ones.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual TMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Metadata As TMetadata" />
      <MemberSignature Language="F#" Value="member this.Metadata : 'Metadata" Usage="Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the item being configured.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanRemoveAnnotation">
      <MemberSignature Language="C#" Value="bool IConventionAnnotatableBuilder.CanRemoveAnnotation (string name, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanRemoveAnnotation(string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionAnnotatableBuilder#CanRemoveAnnotation(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanRemoveAnnotation (name As String, fromDataAnnotation As Boolean) As Boolean Implements IConventionAnnotatableBuilder.CanRemoveAnnotation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanRemoveAnnotation : string * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanRemoveAnnotation : string * bool -&gt; bool" Usage="annotatableBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanRemoveAnnotation (name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanRemoveAnnotation(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanSetAnnotation">
      <MemberSignature Language="C#" Value="bool IConventionAnnotatableBuilder.CanSetAnnotation (string name, object value, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanSetAnnotation(string name, object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionAnnotatableBuilder#CanSetAnnotation(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetAnnotation (name As String, value As Object, fromDataAnnotation As Boolean) As Boolean Implements IConventionAnnotatableBuilder.CanSetAnnotation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanSetAnnotation : string * obj * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanSetAnnotation : string * obj * bool -&gt; bool" Usage="annotatableBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanSetAnnotation (name, value, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionAnnotatableBuilder.CanSetAnnotation (string name, object? value, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.CanSetAnnotation(System.String,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasAnnotation">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder IConventionAnnotatableBuilder.HasAnnotation (string name, object value, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasAnnotation(string name, object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionAnnotatableBuilder#HasAnnotation(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasAnnotation (name As String, value As Object, fromDataAnnotation As Boolean) As IConventionAnnotatableBuilder Implements IConventionAnnotatableBuilder.HasAnnotation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasAnnotation : string * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasAnnotation : string * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder" Usage="annotatableBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasAnnotation (name, value, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder? IConventionAnnotatableBuilder.HasAnnotation (string name, object? value, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasAnnotation(System.String,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNoAnnotation">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder IConventionAnnotatableBuilder.HasNoAnnotation (string name, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNoAnnotation(string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionAnnotatableBuilder#HasNoAnnotation(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasNoAnnotation (name As String, fromDataAnnotation As Boolean) As IConventionAnnotatableBuilder Implements IConventionAnnotatableBuilder.HasNoAnnotation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNoAnnotation : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNoAnnotation : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder" Usage="annotatableBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNoAnnotation (name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder? IConventionAnnotatableBuilder.HasNoAnnotation (string name, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNoAnnotation(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNonNullAnnotation">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder IConventionAnnotatableBuilder.HasNonNullAnnotation (string name, object value, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNonNullAnnotation(string name, object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionAnnotatableBuilder#HasNonNullAnnotation(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasNonNullAnnotation (name As String, value As Object, fromDataAnnotation As Boolean) As IConventionAnnotatableBuilder Implements IConventionAnnotatableBuilder.HasNonNullAnnotation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNonNullAnnotation : string * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNonNullAnnotation : string * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder" Usage="annotatableBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNonNullAnnotation (name, value, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder? IConventionAnnotatableBuilder.HasNonNullAnnotation (string name, object? value, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.HasNonNullAnnotation(System.String,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.Metadata">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionAnnotatableBuilder#Metadata" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Metadata As IConventionAnnotatable Implements IConventionAnnotatableBuilder.Metadata" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.Metadata : Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.Metadata" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.Metadata</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.ModelBuilder">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.ModelBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.ModelBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionAnnotatableBuilder#ModelBuilder" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ModelBuilder As IConventionModelBuilder Implements IConventionAnnotatableBuilder.ModelBuilder" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.ModelBuilder : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.ModelBuilder" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder.ModelBuilder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ModelBuilder">
      <MemberSignature Language="C#" Value="public virtual TModelBuilder ModelBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TModelBuilder ModelBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.ModelBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ModelBuilder As TModelBuilder" />
      <MemberSignature Language="F#" Value="member this.ModelBuilder : 'ModelBuilder" Usage="Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;.ModelBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TModelBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the model builder.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAnnotation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt; RemoveAnnotation (string name, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2&lt;!TMetadata, !TModelBuilder&gt; RemoveAnnotation(string name, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2.RemoveAnnotation(System.String,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAnnotation (name As String, configurationSource As ConfigurationSource) As AnnotatableBuilder(Of TMetadata, TModelBuilder)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAnnotation : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;&#xA;override this.RemoveAnnotation : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;'Metadata, 'ModelBuilder (requires 'Metadata :&gt; Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable and 'ModelBuilder :&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)&gt;" Usage="annotatableBuilder.RemoveAnnotation (name, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;? RemoveAnnotation (string name, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[System.Obsolete("Use HasNoAnnotation instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use HasNoAnnotation instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;TMetadata,TModelBuilder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to remove.</param>
        <param name="configurationSource">The configuration source of the annotation to be set.</param>
        <summary>
                Removes any annotation with the given name.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
