<Type Name="IInternalServiceCollectionMap" FullName="Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap">
  <TypeSignature Language="C#" Value="public interface IInternalServiceCollectionMap" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInternalServiceCollectionMap" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInternalServiceCollectionMap" />
  <TypeSignature Language="F#" Value="type IInternalServiceCollectionMap = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IInternalServiceCollectionMap" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Exposes methods allowing providers to register EF service dependency objects on the internal service provider.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDependencyScoped&lt;TDependencies&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap AddDependencyScoped&lt;TDependencies&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap AddDependencyScoped&lt;TDependencies&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap.AddDependencyScoped``1" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDependencyScoped(Of TDependencies) () As IInternalServiceCollectionMap" />
      <MemberSignature Language="F#" Value="abstract member AddDependencyScoped : unit -&gt; Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap" Usage="iInternalServiceCollectionMap.AddDependencyScoped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDependencies">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TDependencies">The dependency type.</typeparam>
        <summary>
                Adds a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />  dependency object.
            </summary>
        <returns>The same collection map so that further methods can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDependencySingleton&lt;TDependencies&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap AddDependencySingleton&lt;TDependencies&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap AddDependencySingleton&lt;TDependencies&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap.AddDependencySingleton``1" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDependencySingleton(Of TDependencies) () As IInternalServiceCollectionMap" />
      <MemberSignature Language="F#" Value="abstract member AddDependencySingleton : unit -&gt; Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap" Usage="iInternalServiceCollectionMap.AddDependencySingleton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IInternalServiceCollectionMap</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDependencies">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TDependencies">The dependency type.</typeparam>
        <summary>
                Adds a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />  dependency object.
            </summary>
        <returns>The same collection map so that further methods can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
