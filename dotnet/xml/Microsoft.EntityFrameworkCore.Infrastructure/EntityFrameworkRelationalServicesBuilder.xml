<Type Name="EntityFrameworkRelationalServicesBuilder" FullName="Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder">
  <TypeSignature Language="C#" Value="public class EntityFrameworkRelationalServicesBuilder : Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityFrameworkRelationalServicesBuilder extends Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityFrameworkRelationalServicesBuilder&#xA;Inherits EntityFrameworkServicesBuilder" />
  <TypeSignature Language="F#" Value="type EntityFrameworkRelationalServicesBuilder = class&#xA;    inherit EntityFrameworkServicesBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                A builder API designed for relational database providers to use when registering services.
            </summary>
    <remarks>
      <para>
                    Providers should create an instance of this class, use its methods to register
                    services, and then call <see cref="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.TryAddCoreServices" /> to fill out the remaining Entity
                    Framework services.
                </para>
      <para>
                    Entity Framework ensures that services are registered with the appropriate scope. In some cases a provider
                    may register a service with a different scope, but great care must be taken that all its dependencies
                    can handle the new scope, and that it does not cause issue for services that depend on it.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                    for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityFrameworkRelationalServicesBuilder (Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceCollection As IServiceCollection)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder" Usage="new Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder serviceCollection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="serviceCollection">The collection to which services will be registered.</param>
        <summary>
                Used by relational database providers to create a new <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder" /> for
                registration of provider services.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceCharacteristics">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.ServiceCharacteristics GetServiceCharacteristics (Type serviceType);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder/ServiceCharacteristics GetServiceCharacteristics(class System.Type serviceType) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.GetServiceCharacteristics(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetServiceCharacteristics (serviceType As Type) As EntityFrameworkServicesBuilder.ServiceCharacteristics" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="override this.GetServiceCharacteristics : Type -&gt; Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.ServiceCharacteristics" Usage="entityFrameworkRelationalServicesBuilder.GetServiceCharacteristics serviceType" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics GetServiceCharacteristics (Type serviceType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics GetServiceCharacteristics(class System.Type serviceType) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetServiceCharacteristics (serviceType As Type) As ServiceCharacteristics" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="override this.GetServiceCharacteristics : Type -&gt; Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics" Usage="entityFrameworkRelationalServicesBuilder.GetServiceCharacteristics serviceType" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder+ServiceCharacteristics</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="serviceType"> The type that defines the service API. </param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics" /> for the given service type.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics" /> for the type. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> when the type is not an EF service. </exception>
      </Docs>
    </Member>
    <Member MemberName="RelationalServices">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Generic.IDictionary&lt;Type,Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.ServiceCharacteristics&gt; RelationalServices;" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Generic.IDictionary`2&lt;class System.Type, valuetype Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder/ServiceCharacteristics&gt; RelationalServices" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.RelationalServices" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RelationalServices As IDictionary(Of Type, EntityFrameworkServicesBuilder.ServiceCharacteristics) " FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value=" staticval mutable RelationalServices : System.Collections.Generic.IDictionary&lt;Type, Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.ServiceCharacteristics&gt;" Usage="Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.RelationalServices" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Generic.IDictionary&lt;Type,Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics&gt; RelationalServices;" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.Generic.IDictionary`2&lt;class System.Type, valuetype Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics&gt; RelationalServices" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RelationalServices As IDictionary(Of Type, ServiceCharacteristics) " FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value=" staticval mutable RelationalServices : System.Collections.Generic.IDictionary&lt;Type, Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics&gt;" Usage="Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.RelationalServices" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1">System.Collections.Generic.IDictionary&lt;System.Type,Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder+ServiceCharacteristics&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Collections.Generic.IDictionary&lt;System.Type,Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>
                This dictionary is exposed for testing and provider-validation only.
                It should not be used from application code.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddCoreServices">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder TryAddCoreServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder TryAddCoreServices() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.TryAddCoreServices" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryAddCoreServices () As EntityFrameworkServicesBuilder" />
      <MemberSignature Language="F#" Value="override this.TryAddCoreServices : unit -&gt; Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder" Usage="entityFrameworkRelationalServicesBuilder.TryAddCoreServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Registers default implementations of all services, including relational services, not already
                registered by the provider. Relational database providers must call this method as the last
                step of service registration--that is, after all provider services have been registered.
            </summary>
        <returns>This builder, such that further calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetServiceCharacteristics">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics? TryGetServiceCharacteristics (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics&gt; TryGetServiceCharacteristics(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkRelationalServicesBuilder.TryGetServiceCharacteristics(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryGetServiceCharacteristics (serviceType As Type) As Nullable(Of ServiceCharacteristics)" />
      <MemberSignature Language="F#" Value="override this.TryGetServiceCharacteristics : Type -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics&gt;" Usage="entityFrameworkRelationalServicesBuilder.TryGetServiceCharacteristics serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="serviceType">The type that defines the service API.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics" /> for the given service type.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.ServiceCharacteristics" /> for the type or <see langword="null" /> if it's not an EF service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
