<Type Name="CosmosTypeMappingSource+PlaceholderJsonStringKeyedDictionaryReaderWriter&lt;TElement&gt;" FullName="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMappingSource+PlaceholderJsonStringKeyedDictionaryReaderWriter&lt;TElement&gt;">
  <TypeSignature Language="C#" Value="public sealed class CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter&lt;TElement&gt; : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,TElement&gt;&gt;&gt;, Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit CosmosTypeMappingSource/PlaceholderJsonStringKeyedDictionaryReaderWriter`1&lt;TElement&gt; extends Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1&lt;class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, !TElement&gt;&gt;&gt; implements class Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter(Of TElement)&#xA;Inherits JsonValueReaderWriter(Of IEnumerable(Of KeyValuePair(Of String, TElement)))&#xA;Implements ICompositeJsonValueReaderWriter" />
  <TypeSignature Language="F#" Value="type CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter&lt;'Element&gt; = class&#xA;    inherit JsonValueReaderWriter&lt;seq&lt;KeyValuePair&lt;string, 'Element&gt;&gt;&gt;&#xA;    interface ICompositeJsonValueReaderWriter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TElement">
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,TElement&gt;&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,TElement&gt;&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 0, 1, 1 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 0, 1, 1 })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TElement">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PlaceholderJsonStringKeyedDictionaryReaderWriter (Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter elementReaderWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter elementReaderWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter`1.#ctor(Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementReaderWriter As JsonValueReaderWriter)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter&lt;'Element&gt; : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter -&gt; Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter&lt;'Element&gt;" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter&lt;'Element&gt; elementReaderWriter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" />
      </Parameters>
      <Docs>
        <param name="elementReaderWriter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructorExpression">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression ConstructorExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression ConstructorExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter`1.ConstructorExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConstructorExpression As Expression" />
      <MemberSignature Language="F#" Value="member this.ConstructorExpression : System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter&lt;'Element&gt;.ConstructorExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FromJsonTyped">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,TElement&gt;&gt; FromJsonTyped (ref Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager manager, object? existingObject = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, !TElement&gt;&gt; FromJsonTyped(valuetype Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager&amp; manager, object existingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter`1.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FromJsonTyped (ByRef manager As Utf8JsonReaderManager, Optional existingObject As Object = Nothing) As IEnumerable(Of KeyValuePair(Of String, TElement))" />
      <MemberSignature Language="F#" Value="override this.FromJsonTyped : Utf8JsonReaderManager * obj -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, 'Element&gt;&gt;" Usage="placeholderJsonStringKeyedDictionaryReaderWriter.FromJsonTyped (manager, existingObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,TElement&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" RefType="ref" />
        <Parameter Name="existingObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="existingObject">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter`1.Microsoft#EntityFrameworkCore#Storage#Internal#ICompositeJsonValueReaderWriter#InnerReaderWriter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property InnerReaderWriter As JsonValueReaderWriter Implements ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJsonTyped">
      <MemberSignature Language="C#" Value="public override void ToJsonTyped (System.Text.Json.Utf8JsonWriter writer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,TElement&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ToJsonTyped(class System.Text.Json.Utf8JsonWriter writer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, !TElement&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMappingSource.PlaceholderJsonStringKeyedDictionaryReaderWriter`1.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ToJsonTyped (writer As Utf8JsonWriter, value As IEnumerable(Of KeyValuePair(Of String, TElement)))" />
      <MemberSignature Language="F#" Value="override this.ToJsonTyped : System.Text.Json.Utf8JsonWriter * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, 'Element&gt;&gt; -&gt; unit" Usage="placeholderJsonStringKeyedDictionaryReaderWriter.ToJsonTyped (writer, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="value" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,TElement&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 0, 1, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
