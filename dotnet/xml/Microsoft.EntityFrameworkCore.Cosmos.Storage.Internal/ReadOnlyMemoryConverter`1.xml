<Type Name="ReadOnlyMemoryConverter&lt;T&gt;" FullName="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class ReadOnlyMemoryConverter&lt;T&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;ReadOnlyMemory&lt;T&gt;,T[]&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReadOnlyMemoryConverter`1&lt;T&gt; extends Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;valuetype System.ReadOnlyMemory`1&lt;!T&gt;, !T[]&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ReadOnlyMemoryConverter(Of T)&#xA;Inherits ValueConverter(Of ReadOnlyMemory(Of T), T())" />
  <TypeSignature Language="F#" Value="type ReadOnlyMemoryConverter&lt;'T&gt; = class&#xA;    inherit ValueConverter&lt;ReadOnlyMemory&lt;'T&gt;, 'T[]&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;System.ReadOnlyMemory&lt;T&gt;,T[]&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.ReadOnlyMemory&lt;T&gt;</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">T[]</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 0, 1, 1, 1 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 0, 1, 1, 1 })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyMemoryConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyMemoryConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints? mappingHints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter`1.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mappingHints As ConverterMappingHints)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter&lt;'T&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter&lt;'T&gt;" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter&lt;'T&gt; mappingHints" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mappingHints" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" />
      </Parameters>
      <Docs>
        <param name="mappingHints">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInfo">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo DefaultInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo DefaultInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter`1.DefaultInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInfo As ValueConverterInfo" />
      <MemberSignature Language="F#" Value="static member DefaultInfo : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" Usage="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter&lt;'T&gt;.DefaultInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public static T[] ToArray (ReadOnlyMemory&lt;T&gt; memory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !T[] ToArray(valuetype System.ReadOnlyMemory`1&lt;!T&gt; memory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter`1.ToArray(System.ReadOnlyMemory{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToArray (memory As ReadOnlyMemory(Of T)) As T()" />
      <MemberSignature Language="F#" Value="static member ToArray : ReadOnlyMemory&lt;'T&gt; -&gt; 'T[]" Usage="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter&lt;'T&gt;.ToArray memory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="memory">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToMemory">
      <MemberSignature Language="C#" Value="public static ReadOnlyMemory&lt;T&gt; ToMemory (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlyMemory`1&lt;!T&gt; ToMemory(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter`1.ToMemory(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToMemory (array As T()) As ReadOnlyMemory(Of T)" />
      <MemberSignature Language="F#" Value="static member ToMemory : 'T[] -&gt; ReadOnlyMemory&lt;'T&gt;" Usage="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ReadOnlyMemoryConverter&lt;'T&gt;.ToMemory array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;T&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
