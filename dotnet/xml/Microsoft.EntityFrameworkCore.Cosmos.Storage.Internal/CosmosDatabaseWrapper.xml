<Type Name="CosmosDatabaseWrapper" FullName="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper">
  <TypeSignature Language="C#" Value="public class CosmosDatabaseWrapper : Microsoft.EntityFrameworkCore.Storage.Database" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CosmosDatabaseWrapper extends Microsoft.EntityFrameworkCore.Storage.Database" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper" />
  <TypeSignature Language="VB.NET" Value="Public Class CosmosDatabaseWrapper&#xA;Inherits Database" />
  <TypeSignature Language="F#" Value="type CosmosDatabaseWrapper = class&#xA;    inherit Database" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.Database</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosDatabaseWrapper (Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies dependencies, Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosClientWrapper cosmosClient, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies dependencies, class Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosClientWrapper cosmosClient, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper.#ctor(Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies,Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosClientWrapper,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As DatabaseDependencies, cosmosClient As CosmosClientWrapper, loggingOptions As ILoggingOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper : Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies * Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosClientWrapper * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions -&gt; Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper (dependencies, cosmosClient, loggingOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cosmosClient" Type="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosClientWrapper" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="cosmosClient">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosDatabaseWrapper (Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies dependencies, Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ICosmosClientWrapper cosmosClient, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies dependencies, class Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ICosmosClientWrapper cosmosClient, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper.#ctor(Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies,Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ICosmosClientWrapper,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As DatabaseDependencies, cosmosClient As ICosmosClientWrapper, loggingOptions As ILoggingOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper : Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies * Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ICosmosClientWrapper * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions -&gt; Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper (dependencies, cosmosClient, loggingOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cosmosClient" Type="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ICosmosClientWrapper" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="cosmosClient">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentSource">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource GetDocumentSource (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource GetDocumentSource(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper.GetDocumentSource(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocumentSource (entityType As IEntityType) As DocumentSource" />
      <MemberSignature Language="F#" Value="abstract member GetDocumentSource : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource&#xA;override this.GetDocumentSource : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource" Usage="cosmosDatabaseWrapper.GetDocumentSource entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public override int SaveChanges (System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 SaveChanges(class System.Collections.Generic.IList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper.SaveChanges(System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SaveChanges (entries As IList(Of IUpdateEntry)) As Integer" />
      <MemberSignature Language="F#" Value="override this.SaveChanges : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; -&gt; int" Usage="cosmosDatabaseWrapper.SaveChanges entries" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; SaveChangesAsync (System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; SaveChangesAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper.SaveChangesAsync(System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SaveChangesAsync (entries As IList(Of IUpdateEntry), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Integer)" />
      <MemberSignature Language="F#" Value="override this.SaveChangesAsync : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="cosmosDatabaseWrapper.SaveChangesAsync (entries, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
