<Type Name="CosmosVectorTypeMapping" FullName="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping">
  <TypeSignature Language="C#" Value="public class CosmosVectorTypeMapping : Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CosmosVectorTypeMapping extends Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMapping" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class CosmosVectorTypeMapping&#xA;Inherits CosmosTypeMapping" />
  <TypeSignature Language="F#" Value="type CosmosVectorTypeMapping = class&#xA;    inherit CosmosTypeMapping" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMapping</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EF9103")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EF9103")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosVectorTypeMapping (Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMapping mapping, Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType vectorType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMapping mapping, class Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType vectorType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMapping,Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mapping As CosmosTypeMapping, vectorType As CosmosVectorType)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping : Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMapping * Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType -&gt; Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping (mapping, vectorType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosTypeMapping" />
        <Parameter Name="vectorType" Type="Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType" />
      </Parameters>
      <Docs>
        <param name="mapping">To be added.</param>
        <param name="vectorType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CosmosVectorTypeMapping (Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters parameters, Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType vectorType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping/CoreTypeMappingParameters parameters, class Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType vectorType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters,Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parameters As CoreTypeMapping.CoreTypeMappingParameters, vectorType As CosmosVectorType)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping : Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters * Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType -&gt; Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping (parameters, vectorType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters" />
        <Parameter Name="vectorType" Type="Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <param name="vectorType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosVectorTypeMapping (Type clrType, Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType vectorType, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? keyComparer = default, Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping? elementMapping = default, Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter? jsonValueReaderWriter = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type clrType, class Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType vectorType, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping elementMapping, class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter jsonValueReaderWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping.#ctor(System.Type,Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping,Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clrType As Type, vectorType As CosmosVectorType, Optional comparer As ValueComparer = Nothing, Optional keyComparer As ValueComparer = Nothing, Optional elementMapping As CoreTypeMapping = Nothing, Optional jsonValueReaderWriter As JsonValueReaderWriter = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping : Type * Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping * Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter -&gt; Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping (clrType, vectorType, comparer, keyComparer, elementMapping, jsonValueReaderWriter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="vectorType" Type="Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" />
        <Parameter Name="keyComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" />
        <Parameter Name="elementMapping" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" />
        <Parameter Name="jsonValueReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" />
      </Parameters>
      <Docs>
        <param name="clrType">To be added.</param>
        <param name="vectorType">To be added.</param>
        <param name="comparer">To be added.</param>
        <param name="keyComparer">To be added.</param>
        <param name="elementMapping">To be added.</param>
        <param name="jsonValueReaderWriter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping Clone (Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping Clone(valuetype Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping/CoreTypeMappingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone (parameters As CoreTypeMapping.CoreTypeMappingParameters) As CoreTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping.CoreTypeMappingParameters -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Usage="cosmosVectorTypeMapping.Clone parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping+CoreTypeMappingParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As CosmosVectorTypeMapping" />
      <MemberSignature Language="F#" Value="static member Default : Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping" Usage="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateJToken">
      <MemberSignature Language="C#" Value="public override Newtonsoft.Json.Linq.JToken? GenerateJToken (object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Newtonsoft.Json.Linq.JToken GenerateJToken(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping.GenerateJToken(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GenerateJToken (value As Object) As JToken" />
      <MemberSignature Language="F#" Value="override this.GenerateJToken : obj -&gt; Newtonsoft.Json.Linq.JToken" Usage="cosmosVectorTypeMapping.GenerateJToken value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType VectorType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType VectorType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping.VectorType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VectorType As CosmosVectorType" />
      <MemberSignature Language="F#" Value="member this.VectorType : Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType" Usage="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping.VectorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Metadata.Internal.CosmosVectorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithComposedConverter">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping WithComposedConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? keyComparer = default, Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping? elementMapping = default, Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter? jsonValueReaderWriter = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping WithComposedConverter(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping elementMapping, class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter jsonValueReaderWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosVectorTypeMapping.WithComposedConverter(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping,Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WithComposedConverter (converter As ValueConverter, Optional comparer As ValueComparer = Nothing, Optional keyComparer As ValueComparer = Nothing, Optional elementMapping As CoreTypeMapping = Nothing, Optional jsonValueReaderWriter As JsonValueReaderWriter = Nothing) As CoreTypeMapping" />
      <MemberSignature Language="F#" Value="override this.WithComposedConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping * Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Usage="cosmosVectorTypeMapping.WithComposedConverter (converter, comparer, keyComparer, elementMapping, jsonValueReaderWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" />
        <Parameter Name="keyComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" />
        <Parameter Name="elementMapping" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" />
        <Parameter Name="jsonValueReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" />
      </Parameters>
      <Docs>
        <param name="converter">To be added.</param>
        <param name="comparer">To be added.</param>
        <param name="keyComparer">To be added.</param>
        <param name="elementMapping">To be added.</param>
        <param name="jsonValueReaderWriter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
