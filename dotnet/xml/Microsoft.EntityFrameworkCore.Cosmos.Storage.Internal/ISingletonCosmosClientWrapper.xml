<Type Name="ISingletonCosmosClientWrapper" FullName="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ISingletonCosmosClientWrapper">
  <TypeSignature Language="C#" Value="public interface ISingletonCosmosClientWrapper : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISingletonCosmosClientWrapper implements class System.IDisposable" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ISingletonCosmosClientWrapper" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISingletonCosmosClientWrapper&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type ISingletonCosmosClientWrapper = interface&#xA;    interface IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ISingletonCosmosClientWrapper implements class System.IDisposable" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>
                The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> and multiple registrations
                are allowed. This means a single instance of each service is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />
                instances. The implementation must be thread-safe.
                This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Cosmos.CosmosClient Client { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Cosmos.CosmosClient Client" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ISingletonCosmosClientWrapper.Client" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Client As CosmosClient" />
      <MemberSignature Language="F#" Value="member this.Client : Microsoft.Azure.Cosmos.CosmosClient" Usage="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.ISingletonCosmosClientWrapper.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.CosmosClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
