<Type Name="JsonCastValueReaderWriter&lt;TConverted&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.Json.JsonCastValueReaderWriter&lt;TConverted&gt;">
  <TypeSignature Language="C#" Value="public class JsonCastValueReaderWriter&lt;TConverted&gt; : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;TConverted&gt;, Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonCastValueReaderWriter`1&lt;TConverted&gt; extends Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1&lt;!TConverted&gt; implements class Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonCastValueReaderWriter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonCastValueReaderWriter(Of TConverted)&#xA;Inherits JsonValueReaderWriter(Of TConverted)&#xA;Implements ICompositeJsonValueReaderWriter" />
  <TypeSignature Language="F#" Value="type JsonCastValueReaderWriter&lt;'Converted&gt; = class&#xA;    inherit JsonValueReaderWriter&lt;'Converted&gt;&#xA;    interface ICompositeJsonValueReaderWriter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TConverted" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;TConverted&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TValue">TConverted</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TConverted">To be added.</typeparam>
    <summary>
                A <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1" /> that wraps an existing reader/writer and adds casts to the given type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonCastValueReaderWriter (Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter providerReaderWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter providerReaderWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonCastValueReaderWriter`1.#ctor(Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerReaderWriter As JsonValueReaderWriter)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Json.JsonCastValueReaderWriter&lt;'Converted&gt; : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter -&gt; Microsoft.EntityFrameworkCore.Storage.Json.JsonCastValueReaderWriter&lt;'Converted&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.Json.JsonCastValueReaderWriter&lt;'Converted&gt; providerReaderWriter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" />
      </Parameters>
      <Docs>
        <param name="providerReaderWriter">The underlying provider type reader/writer.</param>
        <summary>
                Creates a new instance of this reader/writer wrapping the given reader/writer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromJsonTyped">
      <MemberSignature Language="C#" Value="public override TConverted FromJsonTyped (ref Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager manager, object? existingObject = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !TConverted FromJsonTyped(valuetype Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager&amp; manager, object existingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonCastValueReaderWriter`1.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FromJsonTyped (ByRef manager As Utf8JsonReaderManager, Optional existingObject As Object = Nothing) As TConverted" />
      <MemberSignature Language="F#" Value="override this.FromJsonTyped : Utf8JsonReaderManager * obj -&gt; 'Converted" Usage="jsonCastValueReaderWriter.FromJsonTyped (manager, existingObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverted</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" RefType="ref" />
        <Parameter Name="existingObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="existingObject">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Json.JsonCastValueReaderWriter`1.Microsoft#EntityFrameworkCore#Storage#Internal#ICompositeJsonValueReaderWriter#InnerReaderWriter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property InnerReaderWriter As JsonValueReaderWriter Implements ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJsonTyped">
      <MemberSignature Language="C#" Value="public override void ToJsonTyped (System.Text.Json.Utf8JsonWriter writer, TConverted value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ToJsonTyped(class System.Text.Json.Utf8JsonWriter writer, !TConverted value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonCastValueReaderWriter`1.ToJsonTyped(System.Text.Json.Utf8JsonWriter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ToJsonTyped (writer As Utf8JsonWriter, value As TConverted)" />
      <MemberSignature Language="F#" Value="override this.ToJsonTyped : System.Text.Json.Utf8JsonWriter * 'Converted -&gt; unit" Usage="jsonCastValueReaderWriter.ToJsonTyped (writer, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="value" Type="TConverted" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
