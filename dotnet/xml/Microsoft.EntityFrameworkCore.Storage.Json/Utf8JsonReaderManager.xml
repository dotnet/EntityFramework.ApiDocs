<Type Name="Utf8JsonReaderManager" FullName="Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager">
  <TypeSignature Language="C#" Value="public ref struct Utf8JsonReaderManager" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Utf8JsonReaderManager extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" />
  <TypeSignature Language="VB.NET" Value="Public Structure Utf8JsonReaderManager" />
  <TypeSignature Language="F#" Value="type Utf8JsonReaderManager = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.CompilerFeatureRequired("RefStructs")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CompilerFeatureRequired("RefStructs")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsByRefLike]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsByRefLike&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Manages buffering underneath a <see cref="T:System.Text.Json.Utf8JsonReader" />.
            </summary>
    <remarks>
                The consumer should call <see cref="M:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.MoveNext" /> to advance to the next token in the JSON document, which may involve reading
                more data from the stream and creating a new <see cref="T:System.Text.Json.Utf8JsonReader" /> instance in <see cref="F:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.CurrentReader" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Utf8JsonReaderManager (Microsoft.EntityFrameworkCore.Storage.Json.JsonReaderData data, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt;? queryLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.Json.JsonReaderData data, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; queryLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.#ctor(Microsoft.EntityFrameworkCore.Storage.Json.JsonReaderData,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As JsonReaderData, queryLogger As IDiagnosticsLogger(Of DbLoggerCategory.Query))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager : Microsoft.EntityFrameworkCore.Storage.Json.JsonReaderData * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" Usage="new Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager (data, queryLogger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonReaderData" />
        <Parameter Name="queryLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" />
      </Parameters>
      <Docs>
        <param name="data">The data.</param>
        <param name="queryLogger">
                Logger for logging events that happen when reading/writing JSON values, or <see langword="null" /> if logging is
                not available.
            </param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" /> instance that will start reading at the position in the JSON document
                captured in the given <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonReaderData" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureState">
      <MemberSignature Language="C#" Value="public void CaptureState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CaptureState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.CaptureState" />
      <MemberSignature Language="VB.NET" Value="Public Sub CaptureState ()" />
      <MemberSignature Language="F#" Value="member this.CaptureState : unit -&gt; unit" Usage="utf8JsonReaderManager.CaptureState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Called to capture the state of this <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" /> into the associated <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonReaderData" /> so
                that a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" /> can later be created to pick up at the same position in the JSON document.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentReader">
      <MemberSignature Language="C#" Value="public System.Text.Json.Utf8JsonReader CurrentReader;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Text.Json.Utf8JsonReader CurrentReader" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.CurrentReader" />
      <MemberSignature Language="VB.NET" Value="Public CurrentReader As Utf8JsonReader " />
      <MemberSignature Language="F#" Value="val mutable CurrentReader : System.Text.Json.Utf8JsonReader" Usage="Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.CurrentReader" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.Utf8JsonReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The <see cref="T:System.Text.Json.Utf8JsonReader" /> set to the next token to be consumed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public readonly Microsoft.EntityFrameworkCore.Storage.Json.JsonReaderData Data;" />
      <MemberSignature Language="ILAsm" Value=".field public initonly class Microsoft.EntityFrameworkCore.Storage.Json.JsonReaderData Data" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Data As JsonReaderData " />
      <MemberSignature Language="F#" Value="val mutable Data : Microsoft.EntityFrameworkCore.Storage.Json.JsonReaderData" Usage="Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.Data" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Json.JsonReaderData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Tracks state and underlying stream or buffer of UTF8 bytes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonTokenType MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.Json.JsonTokenType MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As JsonTokenType" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; System.Text.Json.JsonTokenType" Usage="utf8JsonReaderManager.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonTokenType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Moves to the next token, which may involve reading more data from the stream and creating a new <see cref="T:System.Text.Json.Utf8JsonReader" />
                instance in <see cref="F:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.CurrentReader" />.
            </summary>
        <returns>The token type of the current token.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryLogger">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt;? QueryLogger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; QueryLogger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.QueryLogger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryLogger As IDiagnosticsLogger(Of DbLoggerCategory.Query)" />
      <MemberSignature Language="F#" Value="member this.QueryLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.QueryLogger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Logger for logging events that happen when reading/writing JSON values, or <see langword="null" /> if logging is not available.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
