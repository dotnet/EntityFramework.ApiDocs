<Type Name="JsonValueReaderWriter&lt;TValue&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;TValue&gt;">
  <TypeSignature Language="C#" Value="public abstract class JsonValueReaderWriter&lt;TValue&gt; : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JsonValueReaderWriter`1&lt;TValue&gt; extends Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JsonValueReaderWriter(Of TValue)&#xA;Inherits JsonValueReaderWriter" />
  <TypeSignature Language="F#" Value="type JsonValueReaderWriter&lt;'Value&gt; = class&#xA;    inherit JsonValueReaderWriter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TValue">To be added.</typeparam>
    <summary>
                Reads and writes the JSON value for a given model or provider value.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JsonValueReaderWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromJson">
      <MemberSignature Language="C#" Value="public override sealed object FromJson (ref Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager manager, object? existingObject = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object FromJson(valuetype Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager&amp; manager, object existingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1.FromJson(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function FromJson (ByRef manager As Utf8JsonReaderManager, Optional existingObject As Object = Nothing) As Object" />
      <MemberSignature Language="F#" Value="override this.FromJson : Utf8JsonReaderManager * obj -&gt; obj" Usage="jsonValueReaderWriter.FromJson (manager, existingObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" RefType="ref" />
        <Parameter Name="existingObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="existingObject">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FromJsonTyped">
      <MemberSignature Language="C#" Value="public abstract TValue FromJsonTyped (ref Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager manager, object? existingObject = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue FromJsonTyped(valuetype Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager&amp; manager, object existingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FromJsonTyped (ByRef manager As Utf8JsonReaderManager, Optional existingObject As Object = Nothing) As TValue" />
      <MemberSignature Language="F#" Value="abstract member FromJsonTyped : Utf8JsonReaderManager * obj -&gt; 'Value" Usage="jsonValueReaderWriter.FromJsonTyped (manager, existingObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" RefType="ref" />
        <Parameter Name="existingObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" /> for the JSON being read.</param>
        <param name="existingObject">Can be used to update an existing object, rather than create a new one.</param>
        <summary>
                Reads the value from JSON.
            </summary>
        <returns>The read value.</returns>
        <remarks>
          <para>
                    The <see cref="F:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.CurrentReader" /> is at the node that contains the value to be read. The value should be read
                    as appropriate from the JSON, and then further converted as necessary.
                </para>
          <para>
                    Nulls are handled externally to this reader. That is, this method will never be called if the JSON value is "null".
                </para>
          <para>
                    In most cases, the value is represented in the JSON document as a simple property value--e.g. a number, boolean, or string.
                    However, it could be an array or sub-document. In this case, the <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" /> should be used to parse
                    the JSON as appropriate.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJson">
      <MemberSignature Language="C#" Value="public override sealed void ToJson (System.Text.Json.Utf8JsonWriter writer, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ToJson(class System.Text.Json.Utf8JsonWriter writer, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1.ToJson(System.Text.Json.Utf8JsonWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub ToJson (writer As Utf8JsonWriter, value As Object)" />
      <MemberSignature Language="F#" Value="override this.ToJson : System.Text.Json.Utf8JsonWriter * obj -&gt; unit" Usage="jsonValueReaderWriter.ToJson (writer, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ToJsonTyped">
      <MemberSignature Language="C#" Value="public abstract void ToJsonTyped (System.Text.Json.Utf8JsonWriter writer, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToJsonTyped(class System.Text.Json.Utf8JsonWriter writer, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1.ToJsonTyped(System.Text.Json.Utf8JsonWriter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ToJsonTyped (writer As Utf8JsonWriter, value As TValue)" />
      <MemberSignature Language="F#" Value="abstract member ToJsonTyped : System.Text.Json.Utf8JsonWriter * 'Value -&gt; unit" Usage="jsonValueReaderWriter.ToJsonTyped (writer, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> into which the value should be written.</param>
        <param name="value">The value to write.</param>
        <summary>
                Writes the value to JSON.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override sealed Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property ValueType As Type" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;'Value&gt;.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
