<Type Name="IJsonValueReaderWriterSource" FullName="Microsoft.EntityFrameworkCore.Storage.Json.IJsonValueReaderWriterSource">
  <TypeSignature Language="C#" Value="public interface IJsonValueReaderWriterSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IJsonValueReaderWriterSource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Json.IJsonValueReaderWriterSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IJsonValueReaderWriterSource" />
  <TypeSignature Language="F#" Value="type IJsonValueReaderWriterSource = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Attempts to find a <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" /> for a given CLR type.
                </para>
    </summary>
    <remarks>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                    for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FindReaderWriter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter? FindReaderWriter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter FindReaderWriter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.IJsonValueReaderWriterSource.FindReaderWriter(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindReaderWriter (type As Type) As JsonValueReaderWriter" />
      <MemberSignature Language="F#" Value="abstract member FindReaderWriter : Type -&gt; Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Usage="iJsonValueReaderWriterSource.FindReaderWriter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type.</param>
        <summary>
                Attempts to find a <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" /> for a given CLR type.
            </summary>
        <returns>The found <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" />, or <see langword="null" /> if none is available.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
