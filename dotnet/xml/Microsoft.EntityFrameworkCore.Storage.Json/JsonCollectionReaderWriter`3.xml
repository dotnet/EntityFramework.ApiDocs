<Type Name="JsonCollectionReaderWriter&lt;TCollection,TConcreteCollection,TElement&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.Json.JsonCollectionReaderWriter&lt;TCollection,TConcreteCollection,TElement&gt;">
  <TypeSignature Language="C#" Value="public class JsonCollectionReaderWriter&lt;TCollection,TConcreteCollection,TElement&gt; : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;System.Collections.Generic.IEnumerable&lt;TElement&gt;&gt;, Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter where TCollection : IEnumerable&lt;TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonCollectionReaderWriter`3&lt;(class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;) TCollection, TConcreteCollection, TElement&gt; extends Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1&lt;class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;&gt; implements class Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonCollectionReaderWriter`3" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonCollectionReaderWriter(Of TCollection, TConcreteCollection, TElement)&#xA;Inherits JsonValueReaderWriter(Of IEnumerable(Of TElement))&#xA;Implements ICompositeJsonValueReaderWriter" />
  <TypeSignature Language="F#" Value="type JsonCollectionReaderWriter&lt;#seq&lt;'Element&gt;, 'ConcreteCollection, 'Element&gt; = class&#xA;    inherit JsonValueReaderWriter&lt;seq&lt;'Element&gt;&gt;&#xA;    interface ICompositeJsonValueReaderWriter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TCollection">
      <Constraints>
        <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TConcreteCollection" />
    <TypeParameter Name="TElement" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;System.Collections.Generic.IEnumerable&lt;TElement&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TValue">System.Collections.Generic.IEnumerable&lt;TElement&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TCollection">The collection type.</typeparam>
    <typeparam name="TConcreteCollection">The collection type to create an index of, if needed.</typeparam>
    <typeparam name="TElement">The element type.</typeparam>
    <summary>
                A <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1" /> for collections of primitive elements that are a not <see cref="T:System.Nullable" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonCollectionReaderWriter (Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;TElement&gt; elementReaderWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1&lt;!TElement&gt; elementReaderWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonCollectionReaderWriter`3.#ctor(Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter{`2})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementReaderWriter As JsonValueReaderWriter(Of TElement))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Json.JsonCollectionReaderWriter&lt;#seq&lt;'Element&gt;, 'ConcreteCollection, 'Element&gt; : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;'Element&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.Json.JsonCollectionReaderWriter&lt;#seq&lt;'Element&gt;, 'ConcreteCollection, 'Element&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.Json.JsonCollectionReaderWriter&lt;#System.Collections.Generic.seq&lt;'Element&gt;, 'ConcreteCollection, 'Element&gt; elementReaderWriter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;TElement&gt;" />
      </Parameters>
      <Docs>
        <param name="elementReaderWriter">The reader/writer to use for each element.</param>
        <summary>
                Creates a new instance of this collection reader/writer, using the given reader/writer for its elements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromJsonTyped">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;TElement?&gt; FromJsonTyped (ref Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager manager, object? existingObject = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt; FromJsonTyped(valuetype Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager&amp; manager, object existingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonCollectionReaderWriter`3.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FromJsonTyped (ByRef manager As Utf8JsonReaderManager, Optional existingObject As Object = Nothing) As IEnumerable(Of TElement)" />
      <MemberSignature Language="F#" Value="override this.FromJsonTyped : Utf8JsonReaderManager * obj -&gt; seq&lt;'Element&gt;" Usage="jsonCollectionReaderWriter.FromJsonTyped (manager, existingObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" RefType="ref" />
        <Parameter Name="existingObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="existingObject">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Json.JsonCollectionReaderWriter`3.Microsoft#EntityFrameworkCore#Storage#Internal#ICompositeJsonValueReaderWriter#InnerReaderWriter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property InnerReaderWriter As JsonValueReaderWriter Implements ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJsonTyped">
      <MemberSignature Language="C#" Value="public override void ToJsonTyped (System.Text.Json.Utf8JsonWriter writer, System.Collections.Generic.IEnumerable&lt;TElement?&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ToJsonTyped(class System.Text.Json.Utf8JsonWriter writer, class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonCollectionReaderWriter`3.ToJsonTyped(System.Text.Json.Utf8JsonWriter,System.Collections.Generic.IEnumerable{`2})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ToJsonTyped (writer As Utf8JsonWriter, value As IEnumerable(Of TElement))" />
      <MemberSignature Language="F#" Value="override this.ToJsonTyped : System.Text.Json.Utf8JsonWriter * seq&lt;'Element&gt; -&gt; unit" Usage="jsonCollectionReaderWriter.ToJsonTyped (writer, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="value" Type="System.Collections.Generic.IEnumerable&lt;TElement&gt;" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
