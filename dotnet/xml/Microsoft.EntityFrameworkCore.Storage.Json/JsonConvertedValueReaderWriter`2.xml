<Type Name="JsonConvertedValueReaderWriter&lt;TModel,TProvider&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.Json.JsonConvertedValueReaderWriter&lt;TModel,TProvider&gt;">
  <TypeSignature Language="C#" Value="public class JsonConvertedValueReaderWriter&lt;TModel,TProvider&gt; : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;TModel&gt;, Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonConvertedValueReaderWriter`2&lt;TModel, TProvider&gt; extends Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1&lt;!TModel&gt; implements class Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter, class Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonConvertedValueReaderWriter`2" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonConvertedValueReaderWriter(Of TModel, TProvider)&#xA;Inherits JsonValueReaderWriter(Of TModel)&#xA;Implements IJsonConvertedValueReaderWriter" />
  <TypeSignature Language="F#" Value="type JsonConvertedValueReaderWriter&lt;'Model, 'Provider&gt; = class&#xA;    inherit JsonValueReaderWriter&lt;'Model&gt;&#xA;    interface IJsonConvertedValueReaderWriter&#xA;    interface ICompositeJsonValueReaderWriter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TModel" />
    <TypeParameter Name="TProvider" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;TModel&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TValue">TModel</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TModel">The model type.</typeparam>
    <typeparam name="TProvider">The provider type.</typeparam>
    <summary>
                A <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1" /> that wraps an existing reader/writer and adds conversions from the model
                type to and from the provider type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonConvertedValueReaderWriter (Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;TProvider&gt; providerReaderWriter, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1&lt;!TProvider&gt; providerReaderWriter, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonConvertedValueReaderWriter`2.#ctor(Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter{`1},Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerReaderWriter As JsonValueReaderWriter(Of TProvider), converter As ValueConverter)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.Json.JsonConvertedValueReaderWriter&lt;'Model, 'Provider&gt; : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;'Provider&gt; * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter -&gt; Microsoft.EntityFrameworkCore.Storage.Json.JsonConvertedValueReaderWriter&lt;'Model, 'Provider&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.Json.JsonConvertedValueReaderWriter&lt;'Model, 'Provider&gt; (providerReaderWriter, converter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerReaderWriter" Type="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter&lt;TProvider&gt;" />
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />
      </Parameters>
      <Docs>
        <param name="providerReaderWriter">The underlying provider type reader/writer.</param>
        <param name="converter">The value converter.</param>
        <summary>
                Creates a new instance of this reader/writer wrapping the given reader/writer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromJsonTyped">
      <MemberSignature Language="C#" Value="public override TModel FromJsonTyped (ref Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager manager, object? existingObject = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !TModel FromJsonTyped(valuetype Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager&amp; manager, object existingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonConvertedValueReaderWriter`2.FromJsonTyped(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FromJsonTyped (ByRef manager As Utf8JsonReaderManager, Optional existingObject As Object = Nothing) As TModel" />
      <MemberSignature Language="F#" Value="override this.FromJsonTyped : Utf8JsonReaderManager * obj -&gt; 'Model" Usage="jsonConvertedValueReaderWriter.FromJsonTyped (manager, existingObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" RefType="ref" />
        <Parameter Name="existingObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="existingObject">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Json.JsonConvertedValueReaderWriter`2.Microsoft#EntityFrameworkCore#Storage#Internal#ICompositeJsonValueReaderWriter#InnerReaderWriter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property InnerReaderWriter As JsonValueReaderWriter Implements ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter : Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.Internal.ICompositeJsonValueReaderWriter.InnerReaderWriter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter.Converter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter.Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter.Converter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Json.JsonConvertedValueReaderWriter`2.Microsoft#EntityFrameworkCore#Storage#Internal#IJsonConvertedValueReaderWriter#Converter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Converter As ValueConverter Implements IJsonConvertedValueReaderWriter.Converter" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter.Converter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter.Converter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.Internal.IJsonConvertedValueReaderWriter.Converter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJsonTyped">
      <MemberSignature Language="C#" Value="public override void ToJsonTyped (System.Text.Json.Utf8JsonWriter writer, TModel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ToJsonTyped(class System.Text.Json.Utf8JsonWriter writer, !TModel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonConvertedValueReaderWriter`2.ToJsonTyped(System.Text.Json.Utf8JsonWriter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ToJsonTyped (writer As Utf8JsonWriter, value As TModel)" />
      <MemberSignature Language="F#" Value="override this.ToJsonTyped : System.Text.Json.Utf8JsonWriter * 'Model -&gt; unit" Usage="jsonConvertedValueReaderWriter.ToJsonTyped (writer, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="value" Type="TModel" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
