<Type Name="JsonValueReaderWriter" FullName="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter">
  <TypeSignature Language="C#" Value="public abstract class JsonValueReaderWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JsonValueReaderWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JsonValueReaderWriter" />
  <TypeSignature Language="F#" Value="type JsonValueReaderWriter = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Reads and writes the JSON value for a given model or provider value.
            </summary>
    <remarks>
                Implementations of this type must inherit from the generic <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1" /></remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFromType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter? CreateFromType (Type? readerWriterType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter CreateFromType(class System.Type readerWriterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter.CreateFromType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromType (readerWriterType As Type) As JsonValueReaderWriter" />
      <MemberSignature Language="F#" Value="static member CreateFromType : Type -&gt; Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter" Usage="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter.CreateFromType readerWriterType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readerWriterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="readerWriterType">The type, which must inherit from <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1" />.</param>
        <summary>
                Creates a <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1" /> instance of the given type, using the <c>Instance</c>
                property to get th singleton instance if possible.
            </summary>
        <returns>The reader/writer instance./</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
                if the type does not represent a
                <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter`1" /> that can be instantiated.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FromJson">
      <MemberSignature Language="C#" Value="public abstract object FromJson (ref Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager manager, object? existingObject = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FromJson(valuetype Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager&amp; manager, object existingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter.FromJson(Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FromJson (ByRef manager As Utf8JsonReaderManager, Optional existingObject As Object = Nothing) As Object" />
      <MemberSignature Language="F#" Value="abstract member FromJson : Utf8JsonReaderManager * obj -&gt; obj" Usage="jsonValueReaderWriter.FromJson (manager, existingObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" RefType="ref" />
        <Parameter Name="existingObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" /> for the JSON being read.</param>
        <param name="existingObject">Can be used to update an existing object, rather than create a new one.</param>
        <summary>
                Reads the value from a UTF8 JSON stream or buffer.
            </summary>
        <returns>The read value.</returns>
        <remarks>
          <para>
                    The <see cref="F:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager.CurrentReader" /> is at the node that contains the value to be read. The value should be read
                    as appropriate from the JSON, and then further converted as necessary.
                </para>
          <para>
                    Nulls are handled externally to this reader. That is, this method will never be called if the JSON value is "null".
                </para>
          <para>
                    In most cases, the value is represented in the JSON document as a simple property value--e.g. a number, boolean, or string.
                    However, it could be an array or sub-document. In this case, the <see cref="T:Microsoft.EntityFrameworkCore.Storage.Json.Utf8JsonReaderManager" /> should be used to parse
                    the JSON as appropriate.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromJsonString">
      <MemberSignature Language="C#" Value="public object FromJsonString (string json, object? existingObject = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FromJsonString(string json, object existingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter.FromJsonString(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromJsonString (json As String, Optional existingObject As Object = Nothing) As Object" />
      <MemberSignature Language="F#" Value="member this.FromJsonString : string * obj -&gt; obj" Usage="jsonValueReaderWriter.FromJsonString (json, existingObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.String" />
        <Parameter Name="existingObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="json">The JSON to parse.</param>
        <param name="existingObject">Can be used to update an existing object, rather than create a new one.</param>
        <summary>
                Reads the value from JSON in a string.
            </summary>
        <returns>The read value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJson">
      <MemberSignature Language="C#" Value="public abstract void ToJson (System.Text.Json.Utf8JsonWriter writer, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToJson(class System.Text.Json.Utf8JsonWriter writer, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter.ToJson(System.Text.Json.Utf8JsonWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ToJson (writer As Utf8JsonWriter, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member ToJson : System.Text.Json.Utf8JsonWriter * obj -&gt; unit" Usage="jsonValueReaderWriter.ToJson (writer, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> into which the value should be written.</param>
        <param name="value">The value to write.</param>
        <summary>
                Writes the value to JSON.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJsonString">
      <MemberSignature Language="C#" Value="public string ToJsonString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToJsonString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter.ToJsonString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToJsonString (value As Object) As String" />
      <MemberSignature Language="F#" Value="member this.ToJsonString : obj -&gt; string" Usage="jsonValueReaderWriter.ToJsonString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The value to write.</param>
        <summary>
                Writes the value to a JSON string.
            </summary>
        <returns>The JSON representation of the given value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public abstract Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueType As Type" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="Microsoft.EntityFrameworkCore.Storage.Json.JsonValueReaderWriter.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The type of the value being read/written.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
