<Type Name="SqliteLegacyUpdateSqlGenerator" FullName="Microsoft.EntityFrameworkCore.Sqlite.Update.Internal.SqliteLegacyUpdateSqlGenerator">
  <TypeSignature Language="C#" Value="public class SqliteLegacyUpdateSqlGenerator : Microsoft.EntityFrameworkCore.Update.UpdateAndSelectSqlGenerator" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqliteLegacyUpdateSqlGenerator extends Microsoft.EntityFrameworkCore.Update.UpdateAndSelectSqlGenerator" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Sqlite.Update.Internal.SqliteLegacyUpdateSqlGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteLegacyUpdateSqlGenerator&#xA;Inherits UpdateAndSelectSqlGenerator" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="F#" Value="type SqliteLegacyUpdateSqlGenerator = class&#xA;    inherit UpdateAndSelectSqlGenerator" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="C#" Value="public class SqliteLegacyUpdateSqlGenerator" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqliteLegacyUpdateSqlGenerator extends System.Object" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteLegacyUpdateSqlGenerator" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="F#" Value="type SqliteLegacyUpdateSqlGenerator = class" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Update.UpdateAndSelectSqlGenerator</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-8.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="efcore-8.0">
      <AttributeName Language="C#">[System.Obsolete("Call UseSqlReturningClause(false) instead, see https://aka.ms/efcore-docs-sqlite-save-changes-and-returning-clause")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Call UseSqlReturningClause(false) instead, see https://aka.ms/efcore-docs-sqlite-save-changes-and-returning-clause")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteLegacyUpdateSqlGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Update.Internal.SqliteLegacyUpdateSqlGenerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteLegacyUpdateSqlGenerator (Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Update.Internal.SqliteLegacyUpdateSqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As UpdateSqlGeneratorDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Sqlite.Update.Internal.SqliteLegacyUpdateSqlGenerator : Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies -&gt; Microsoft.EntityFrameworkCore.Sqlite.Update.Internal.SqliteLegacyUpdateSqlGenerator" Usage="new Microsoft.EntityFrameworkCore.Sqlite.Update.Internal.SqliteLegacyUpdateSqlGenerator dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Update.UpdateSqlGeneratorDependencies" Index="0" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendIdentityWhereCondition">
      <MemberSignature Language="C#" Value="protected override void AppendIdentityWhereCondition (System.Text.StringBuilder commandStringBuilder, Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AppendIdentityWhereCondition(class System.Text.StringBuilder commandStringBuilder, class Microsoft.EntityFrameworkCore.Update.IColumnModification columnModification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Update.Internal.SqliteLegacyUpdateSqlGenerator.AppendIdentityWhereCondition(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.IColumnModification)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AppendIdentityWhereCondition (commandStringBuilder As StringBuilder, columnModification As IColumnModification)" />
      <MemberSignature Language="F#" Value="override this.AppendIdentityWhereCondition : System.Text.StringBuilder * Microsoft.EntityFrameworkCore.Update.IColumnModification -&gt; unit" Usage="sqliteLegacyUpdateSqlGenerator.AppendIdentityWhereCondition (commandStringBuilder, columnModification)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="columnModification" Type="Microsoft.EntityFrameworkCore.Update.IColumnModification" Index="1" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="columnModification">The column for which the condition is being generated.</param>
        <summary>
                Appends a <c>WHERE</c> condition for the identity (i.e. key value) of the given column.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendRowsAffectedWhereCondition">
      <MemberSignature Language="C#" Value="protected override void AppendRowsAffectedWhereCondition (System.Text.StringBuilder commandStringBuilder, int expectedRowsAffected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AppendRowsAffectedWhereCondition(class System.Text.StringBuilder commandStringBuilder, int32 expectedRowsAffected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Update.Internal.SqliteLegacyUpdateSqlGenerator.AppendRowsAffectedWhereCondition(System.Text.StringBuilder,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AppendRowsAffectedWhereCondition (commandStringBuilder As StringBuilder, expectedRowsAffected As Integer)" />
      <MemberSignature Language="F#" Value="override this.AppendRowsAffectedWhereCondition : System.Text.StringBuilder * int -&gt; unit" Usage="sqliteLegacyUpdateSqlGenerator.AppendRowsAffectedWhereCondition (commandStringBuilder, expectedRowsAffected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="expectedRowsAffected" Type="System.Int32" Index="1" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="expectedRowsAffected">The expected number of rows affected.</param>
        <summary>
                Appends a <c>WHERE</c> condition checking rows affected.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSelectAffectedCountCommand">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCountCommand (System.Text.StringBuilder commandStringBuilder, string name, string? schema, int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping AppendSelectAffectedCountCommand(class System.Text.StringBuilder commandStringBuilder, string name, string schema, int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Update.Internal.SqliteLegacyUpdateSqlGenerator.AppendSelectAffectedCountCommand(System.Text.StringBuilder,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function AppendSelectAffectedCountCommand (commandStringBuilder As StringBuilder, name As String, schema As String, commandPosition As Integer) As ResultSetMapping" />
      <MemberSignature Language="F#" Value="override this.AppendSelectAffectedCountCommand : System.Text.StringBuilder * string * string * int -&gt; Microsoft.EntityFrameworkCore.Update.ResultSetMapping" Usage="sqliteLegacyUpdateSqlGenerator.AppendSelectAffectedCountCommand (commandStringBuilder, name, schema, commandPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.ResultSetMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandStringBuilder" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="commandPosition" Type="System.Int32" Index="3" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="commandStringBuilder">The builder to which the SQL should be appended.</param>
        <param name="name">The name of the table.</param>
        <param name="schema">The table schema, or <see langword="null" /> to use the default schema.</param>
        <param name="commandPosition">The ordinal of the command for which rows affected it being returned.</param>
        <summary>
                Appends a SQL command for selecting the number of rows affected.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" /> for this command.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateNextSequenceValueOperation">
      <MemberSignature Language="C#" Value="public override string GenerateNextSequenceValueOperation (string name, string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GenerateNextSequenceValueOperation(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Update.Internal.SqliteLegacyUpdateSqlGenerator.GenerateNextSequenceValueOperation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GenerateNextSequenceValueOperation (name As String, schema As String) As String" />
      <MemberSignature Language="F#" Value="override this.GenerateNextSequenceValueOperation : string * string -&gt; string" Usage="sqliteLegacyUpdateSqlGenerator.GenerateNextSequenceValueOperation (name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="schema" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
