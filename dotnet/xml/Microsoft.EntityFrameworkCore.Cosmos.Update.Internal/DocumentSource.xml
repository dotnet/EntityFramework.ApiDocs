<Type Name="DocumentSource" FullName="Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource">
  <TypeSignature Language="C#" Value="public class DocumentSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DocumentSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource" />
  <TypeSignature Language="VB.NET" Value="Public Class DocumentSource" />
  <TypeSignature Language="F#" Value="type DocumentSource = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocumentSource (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper database);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper database) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IEntityType, database As CosmosDatabaseWrapper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper -&gt; Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource (entityType, database)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="database" Type="Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosDatabaseWrapper" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="database">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocument">
      <MemberSignature Language="C#" Value="public virtual Newtonsoft.Json.Linq.JObject CreateDocument (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Newtonsoft.Json.Linq.JObject CreateDocument(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource.CreateDocument(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocument (entry As IUpdateEntry) As JObject" />
      <MemberSignature Language="F#" Value="abstract member CreateDocument : Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; Newtonsoft.Json.Linq.JObject&#xA;override this.CreateDocument : Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; Newtonsoft.Json.Linq.JObject" Usage="documentSource.CreateDocument entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDocument">
      <MemberSignature Language="C#" Value="public virtual Newtonsoft.Json.Linq.JObject CreateDocument (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, int? ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Newtonsoft.Json.Linq.JObject CreateDocument(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, valuetype System.Nullable`1&lt;int32&gt; ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource.CreateDocument(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDocument (entry As IUpdateEntry, ordinal As Nullable(Of Integer)) As JObject" />
      <MemberSignature Language="F#" Value="abstract member CreateDocument : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Nullable&lt;int&gt; -&gt; Newtonsoft.Json.Linq.JObject&#xA;override this.CreateDocument : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Nullable&lt;int&gt; -&gt; Newtonsoft.Json.Linq.JObject" Usage="documentSource.CreateDocument (entry, ordinal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="ordinal" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="ordinal">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionId">
      <MemberSignature Language="C#" Value="public virtual string GetCollectionId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCollectionId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource.GetCollectionId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCollectionId () As String" />
      <MemberSignature Language="F#" Value="abstract member GetCollectionId : unit -&gt; string&#xA;override this.GetCollectionId : unit -&gt; string" Usage="documentSource.GetCollectionId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerId">
      <MemberSignature Language="C#" Value="public virtual string GetContainerId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetContainerId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource.GetContainerId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetContainerId () As String" />
      <MemberSignature Language="F#" Value="abstract member GetContainerId : unit -&gt; string&#xA;override this.GetContainerId : unit -&gt; string" Usage="documentSource.GetContainerId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentDocument">
      <MemberSignature Language="C#" Value="public virtual Newtonsoft.Json.Linq.JObject GetCurrentDocument (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Newtonsoft.Json.Linq.JObject GetCurrentDocument(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource.GetCurrentDocument(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCurrentDocument (entry As IUpdateEntry) As JObject" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentDocument : Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; Newtonsoft.Json.Linq.JObject&#xA;override this.GetCurrentDocument : Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; Newtonsoft.Json.Linq.JObject" Usage="documentSource.GetCurrentDocument entry" />
      <MemberSignature Language="C#" Value="public virtual Newtonsoft.Json.Linq.JObject? GetCurrentDocument (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetId">
      <MemberSignature Language="C#" Value="public virtual string GetId (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetId(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource.GetId(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetId (entry As IUpdateEntry) As String" />
      <MemberSignature Language="F#" Value="abstract member GetId : Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; string&#xA;override this.GetId : Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; string" Usage="documentSource.GetId entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDocument">
      <MemberSignature Language="C#" Value="public virtual Newtonsoft.Json.Linq.JObject UpdateDocument (Newtonsoft.Json.Linq.JObject document, Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Newtonsoft.Json.Linq.JObject UpdateDocument(class Newtonsoft.Json.Linq.JObject document, class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource.UpdateDocument(Newtonsoft.Json.Linq.JObject,Microsoft.EntityFrameworkCore.Update.IUpdateEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateDocument (document As JObject, entry As IUpdateEntry) As JObject" />
      <MemberSignature Language="F#" Value="abstract member UpdateDocument : Newtonsoft.Json.Linq.JObject * Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; Newtonsoft.Json.Linq.JObject&#xA;override this.UpdateDocument : Newtonsoft.Json.Linq.JObject * Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; Newtonsoft.Json.Linq.JObject" Usage="documentSource.UpdateDocument (document, entry)" />
      <MemberSignature Language="C#" Value="public virtual Newtonsoft.Json.Linq.JObject? UpdateDocument (Newtonsoft.Json.Linq.JObject document, Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Newtonsoft.Json.Linq.JObject" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
      </Parameters>
      <Docs>
        <param name="document">To be added.</param>
        <param name="entry">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDocument">
      <MemberSignature Language="C#" Value="public virtual Newtonsoft.Json.Linq.JObject UpdateDocument (Newtonsoft.Json.Linq.JObject document, Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, int? ordinal);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Newtonsoft.Json.Linq.JObject UpdateDocument(class Newtonsoft.Json.Linq.JObject document, class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, valuetype System.Nullable`1&lt;int32&gt; ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Update.Internal.DocumentSource.UpdateDocument(Newtonsoft.Json.Linq.JObject,Microsoft.EntityFrameworkCore.Update.IUpdateEntry,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateDocument (document As JObject, entry As IUpdateEntry, ordinal As Nullable(Of Integer)) As JObject" />
      <MemberSignature Language="F#" Value="abstract member UpdateDocument : Newtonsoft.Json.Linq.JObject * Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Nullable&lt;int&gt; -&gt; Newtonsoft.Json.Linq.JObject&#xA;override this.UpdateDocument : Newtonsoft.Json.Linq.JObject * Microsoft.EntityFrameworkCore.Update.IUpdateEntry * Nullable&lt;int&gt; -&gt; Newtonsoft.Json.Linq.JObject" Usage="documentSource.UpdateDocument (document, entry, ordinal)" />
      <MemberSignature Language="C#" Value="public virtual Newtonsoft.Json.Linq.JObject? UpdateDocument (Newtonsoft.Json.Linq.JObject document, Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, int? ordinal);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Newtonsoft.Json.Linq.JObject" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="ordinal" Type="System.Nullable&lt;System.Int32&gt;" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="document">To be added.</param>
        <param name="entry">To be added.</param>
        <param name="ordinal">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
