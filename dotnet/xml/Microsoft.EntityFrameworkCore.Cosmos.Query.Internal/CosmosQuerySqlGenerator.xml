<Type Name="CosmosQuerySqlGenerator" FullName="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator">
  <TypeSignature Language="C#" Value="public class CosmosQuerySqlGenerator : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CosmosQuerySqlGenerator extends Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class CosmosQuerySqlGenerator&#xA;Inherits SqlExpressionVisitor" />
  <TypeSignature Language="F#" Value="type CosmosQuerySqlGenerator = class&#xA;    inherit SqlExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosQuerySqlGenerator (Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource typeMappingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource typeMappingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeMappingSource As ITypeMappingSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator : Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator typeMappingSource" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" />
      </Parameters>
      <Docs>
        <param name="typeMappingSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateIn">
      <MemberSignature Language="C#" Value="protected virtual void GenerateIn (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression inExpression, bool negated);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateIn(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression inExpression, bool negated) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.GenerateIn(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateIn (inExpression As InExpression, negated As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GenerateIn : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression * bool -&gt; unit&#xA;override this.GenerateIn : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression * bool -&gt; unit" Usage="cosmosQuerySqlGenerator.GenerateIn (inExpression, negated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression" />
        <Parameter Name="negated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inExpression">To be added.</param>
        <param name="negated">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlQuery">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosSqlQuery GetSqlQuery (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression selectExpression, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosSqlQuery GetSqlQuery(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression selectExpression, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.GetSqlQuery(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlQuery (selectExpression As SelectExpression, parameterValues As IReadOnlyDictionary(Of String, Object)) As CosmosSqlQuery" />
      <MemberSignature Language="F#" Value="abstract member GetSqlQuery : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosSqlQuery&#xA;override this.GetSqlQuery : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosSqlQuery" Usage="cosmosQuerySqlGenerator.GetSqlQuery (selectExpression, parameterValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Storage.Internal.CosmosSqlQuery</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <param name="parameterValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayConstant">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitArrayConstant (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ArrayConstantExpression arrayConstantExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitArrayConstant(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ArrayConstantExpression arrayConstantExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitArrayConstant(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ArrayConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitArrayConstant (arrayConstantExpression As ArrayConstantExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitArrayConstant : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ArrayConstantExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitArrayConstant arrayConstantExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayConstantExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ArrayConstantExpression" />
      </Parameters>
      <Docs>
        <param name="arrayConstantExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEntityProjection">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitEntityProjection (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression entityProjectionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitEntityProjection(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression entityProjectionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitEntityProjection(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitEntityProjection (entityProjectionExpression As EntityProjectionExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitEntityProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitEntityProjection entityProjectionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityProjectionExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression" />
      </Parameters>
      <Docs>
        <param name="entityProjectionExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExists">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExists (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ExistsExpression existsExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExists(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ExistsExpression existsExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitExists(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ExistsExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitExists (existsExpression As ExistsExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitExists : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ExistsExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitExists existsExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existsExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ExistsExpression" />
      </Parameters>
      <Docs>
        <param name="existsExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFragment">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitFragment (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FragmentExpression fragmentExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitFragment(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FragmentExpression fragmentExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitFragment(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FragmentExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitFragment (fragmentExpression As FragmentExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitFragment : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FragmentExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitFragment fragmentExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragmentExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FragmentExpression" />
      </Parameters>
      <Docs>
        <param name="fragmentExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFromSql">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitFromSql (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FromSqlExpression fromSqlExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitFromSql(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FromSqlExpression fromSqlExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitFromSql(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FromSqlExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitFromSql (fromSqlExpression As FromSqlExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitFromSql : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FromSqlExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitFromSql fromSqlExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromSqlExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FromSqlExpression" />
      </Parameters>
      <Docs>
        <param name="fromSqlExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="VisitIn">
      <MemberSignature Language="C#" Value="protected override sealed System.Linq.Expressions.Expression VisitIn (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression inExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitIn(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression inExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitIn(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function VisitIn (inExpression As InExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitIn : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitIn inExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression" />
      </Parameters>
      <Docs>
        <param name="inExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectAccess">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitObjectAccess (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectAccessExpression objectAccessExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitObjectAccess(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectAccessExpression objectAccessExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitObjectAccess(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectAccessExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitObjectAccess (objectAccessExpression As ObjectAccessExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitObjectAccess : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectAccessExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitObjectAccess objectAccessExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectAccessExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectAccessExpression" />
      </Parameters>
      <Docs>
        <param name="objectAccessExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectArray">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitObjectArray (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayExpression objectArrayExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitObjectArray(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayExpression objectArrayExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitObjectArray(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitObjectArray (objectArrayExpression As ObjectArrayExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitObjectArray : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitObjectArray objectArrayExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectArrayExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayExpression" />
      </Parameters>
      <Docs>
        <param name="objectArrayExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectArrayAccess">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitObjectArrayAccess (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayAccessExpression objectArrayAccessExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitObjectArrayAccess(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayAccessExpression objectArrayAccessExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitObjectArrayAccess(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayAccessExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitObjectArrayAccess (objectArrayAccessExpression As ObjectArrayAccessExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitObjectArrayAccess : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayAccessExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitObjectArrayAccess objectArrayAccessExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectArrayAccessExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayAccessExpression" />
      </Parameters>
      <Docs>
        <param name="objectArrayAccessExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectArrayIndex">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitObjectArrayIndex (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayIndexExpression objectArrayIndexExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitObjectArrayIndex(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayIndexExpression objectArrayIndexExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitObjectArrayIndex(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayIndexExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitObjectArrayIndex (objectArrayIndexExpression As ObjectArrayIndexExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitObjectArrayIndex : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayIndexExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitObjectArrayIndex objectArrayIndexExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectArrayIndexExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayIndexExpression" />
      </Parameters>
      <Docs>
        <param name="objectArrayIndexExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectBinary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitObjectBinary (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectBinaryExpression objectBinaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitObjectBinary(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectBinaryExpression objectBinaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitObjectBinary(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectBinaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitObjectBinary (objectBinaryExpression As ObjectBinaryExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitObjectBinary : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectBinaryExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitObjectBinary objectBinaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectBinaryExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectBinaryExpression" />
      </Parameters>
      <Docs>
        <param name="objectBinaryExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectFunction">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitObjectFunction (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectFunctionExpression objectFunctionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitObjectFunction(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectFunctionExpression objectFunctionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitObjectFunction(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectFunctionExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitObjectFunction (objectFunctionExpression As ObjectFunctionExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitObjectFunction : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectFunctionExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitObjectFunction objectFunctionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectFunctionExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="objectFunctionExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectReference">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitObjectReference (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectReferenceExpression objectReferenceExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitObjectReference(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectReferenceExpression objectReferenceExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitObjectReference(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitObjectReference (objectReferenceExpression As ObjectReferenceExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitObjectReference : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectReferenceExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitObjectReference objectReferenceExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectReferenceExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="objectReferenceExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitOrdering">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitOrdering (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitOrdering(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitOrdering(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitOrdering (orderingExpression As OrderingExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitOrdering : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitOrdering orderingExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orderingExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression" />
      </Parameters>
      <Docs>
        <param name="orderingExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitProjection">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitProjection (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression projectionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitProjection(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression projectionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitProjection(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitProjection (projectionExpression As ProjectionExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitProjection projectionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectionExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression" />
      </Parameters>
      <Docs>
        <param name="projectionExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitScalarAccess">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitScalarAccess (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarAccessExpression scalarAccessExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitScalarAccess(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarAccessExpression scalarAccessExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitScalarAccess(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarAccessExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitScalarAccess (scalarAccessExpression As ScalarAccessExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitScalarAccess : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarAccessExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitScalarAccess scalarAccessExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scalarAccessExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarAccessExpression" />
      </Parameters>
      <Docs>
        <param name="scalarAccessExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitScalarArray">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitScalarArray (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarArrayExpression scalarArrayExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitScalarArray(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarArrayExpression scalarArrayExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitScalarArray(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarArrayExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitScalarArray (scalarArrayExpression As ScalarArrayExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitScalarArray : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarArrayExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitScalarArray scalarArrayExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scalarArrayExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarArrayExpression" />
      </Parameters>
      <Docs>
        <param name="scalarArrayExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitScalarSubquery">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitScalarSubquery (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarSubqueryExpression scalarSubqueryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitScalarSubquery(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarSubqueryExpression scalarSubqueryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitScalarSubquery(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarSubqueryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitScalarSubquery (scalarSubqueryExpression As ScalarSubqueryExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitScalarSubquery : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarSubqueryExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitScalarSubquery scalarSubqueryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scalarSubqueryExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarSubqueryExpression" />
      </Parameters>
      <Docs>
        <param name="scalarSubqueryExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSelect">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSelect (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSelect(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitSelect(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitSelect (selectExpression As SelectExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitSelect : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitSelect selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSource">
      <MemberSignature Language="C#" Value="protected override sealed System.Linq.Expressions.Expression VisitSource (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression sourceExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSource(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression sourceExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitSource(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function VisitSource (sourceExpression As SourceExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitSource : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitSource sourceExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression" />
      </Parameters>
      <Docs>
        <param name="sourceExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlBinary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlBinary (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlBinaryExpression sqlBinaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlBinary(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlBinaryExpression sqlBinaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitSqlBinary(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlBinaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitSqlBinary (sqlBinaryExpression As SqlBinaryExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitSqlBinary : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlBinaryExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitSqlBinary sqlBinaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlBinaryExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlBinaryExpression" />
      </Parameters>
      <Docs>
        <param name="sqlBinaryExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlConditional">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlConditional (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression sqlConditionalExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlConditional(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression sqlConditionalExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitSqlConditional(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitSqlConditional (sqlConditionalExpression As SqlConditionalExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitSqlConditional : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitSqlConditional sqlConditionalExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlConditionalExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression" />
      </Parameters>
      <Docs>
        <param name="sqlConditionalExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlConstant">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlConstant (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConstantExpression sqlConstantExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlConstant(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConstantExpression sqlConstantExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitSqlConstant(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitSqlConstant (sqlConstantExpression As SqlConstantExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitSqlConstant : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConstantExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitSqlConstant sqlConstantExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlConstantExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConstantExpression" />
      </Parameters>
      <Docs>
        <param name="sqlConstantExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlFunction">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlFunction (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlFunctionExpression sqlFunctionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlFunction(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlFunctionExpression sqlFunctionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlFunctionExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitSqlFunction (sqlFunctionExpression As SqlFunctionExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitSqlFunction : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlFunctionExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitSqlFunction sqlFunctionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlFunctionExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="sqlFunctionExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlParameter">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlParameter (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlParameterExpression sqlParameterExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlParameter(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlParameterExpression sqlParameterExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitSqlParameter(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlParameterExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitSqlParameter (sqlParameterExpression As SqlParameterExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitSqlParameter : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlParameterExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitSqlParameter sqlParameterExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlParameterExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlParameterExpression" />
      </Parameters>
      <Docs>
        <param name="sqlParameterExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlUnary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlUnary (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression sqlUnaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlUnary(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression sqlUnaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitSqlUnary(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitSqlUnary (sqlUnaryExpression As SqlUnaryExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitSqlUnary : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitSqlUnary sqlUnaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlUnaryExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression" />
      </Parameters>
      <Docs>
        <param name="sqlUnaryExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitValueReference">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitValueReference (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarReferenceExpression scalarReferenceExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitValueReference(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarReferenceExpression scalarReferenceExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQuerySqlGenerator.VisitValueReference(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitValueReference (scalarReferenceExpression As ScalarReferenceExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitValueReference : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarReferenceExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosQuerySqlGenerator.VisitValueReference scalarReferenceExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scalarReferenceExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ScalarReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="scalarReferenceExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
