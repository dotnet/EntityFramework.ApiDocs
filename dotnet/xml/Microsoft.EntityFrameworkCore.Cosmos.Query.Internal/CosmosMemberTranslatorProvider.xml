<Type Name="CosmosMemberTranslatorProvider" FullName="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosMemberTranslatorProvider">
  <TypeSignature Language="C#" Value="public class CosmosMemberTranslatorProvider : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslatorProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CosmosMemberTranslatorProvider extends System.Object implements class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslatorProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosMemberTranslatorProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CosmosMemberTranslatorProvider&#xA;Implements IMemberTranslatorProvider" />
  <TypeSignature Language="F#" Value="type CosmosMemberTranslatorProvider = class&#xA;    interface IMemberTranslatorProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslatorProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosMemberTranslatorProvider (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory sqlExpressionFactory, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslatorPlugin&gt; plugins);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory sqlExpressionFactory, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslatorPlugin&gt; plugins) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosMemberTranslatorProvider.#ctor(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslatorPlugin})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sqlExpressionFactory As ISqlExpressionFactory, plugins As IEnumerable(Of IMemberTranslatorPlugin))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosMemberTranslatorProvider : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory * seq&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslatorPlugin&gt; -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosMemberTranslatorProvider" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosMemberTranslatorProvider (sqlExpressionFactory, plugins)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sqlExpressionFactory" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory" />
        <Parameter Name="plugins" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslatorPlugin&gt;" />
      </Parameters>
      <Docs>
        <param name="sqlExpressionFactory">To be added.</param>
        <param name="plugins">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTranslators">
      <MemberSignature Language="C#" Value="protected virtual void AddTranslators (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslator&gt; translators);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddTranslators(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslator&gt; translators) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosMemberTranslatorProvider.AddTranslators(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslator})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddTranslators (translators As IEnumerable(Of IMemberTranslator))" />
      <MemberSignature Language="F#" Value="abstract member AddTranslators : seq&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslator&gt; -&gt; unit&#xA;override this.AddTranslators : seq&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslator&gt; -&gt; unit" Usage="cosmosMemberTranslatorProvider.AddTranslators translators" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="translators" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslator&gt;" />
      </Parameters>
      <Docs>
        <param name="translators">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression Translate (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression instance, System.Reflection.MemberInfo member, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression Translate(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression instance, class System.Reflection.MemberInfo member, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosMemberTranslatorProvider.Translate(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression,System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Translate (instance As SqlExpression, member As MemberInfo, returnType As Type) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member Translate : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * System.Reflection.MemberInfo * Type -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression&#xA;override this.Translate : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * System.Reflection.MemberInfo * Type -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Usage="cosmosMemberTranslatorProvider.Translate (instance, member, returnType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslatorProvider.Translate(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression,System.Reflection.MemberInfo,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="returnType" Type="System.Type" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="instance">To be added.</param>
        <param name="member">To be added.</param>
        <param name="returnType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression Translate (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression instance, System.Reflection.MemberInfo member, Type returnType, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; logger);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression Translate(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression instance, class System.Reflection.MemberInfo member, class System.Type returnType, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosMemberTranslatorProvider.Translate(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression,System.Reflection.MemberInfo,System.Type,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Translate (instance As SqlExpression, member As MemberInfo, returnType As Type, logger As IDiagnosticsLogger(Of DbLoggerCategory.Query)) As SqlExpression" />
      <MemberSignature Language="F#" Value="abstract member Translate : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * System.Reflection.MemberInfo * Type * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression&#xA;override this.Translate : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * System.Reflection.MemberInfo * Type * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Usage="cosmosMemberTranslatorProvider.Translate (instance, member, returnType, logger)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? Translate (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? instance, System.Reflection.MemberInfo member, Type returnType, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IMemberTranslatorProvider.Translate(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression,System.Reflection.MemberInfo,System.Type,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="returnType" Type="System.Type" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="instance">To be added.</param>
        <param name="member">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="logger">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
