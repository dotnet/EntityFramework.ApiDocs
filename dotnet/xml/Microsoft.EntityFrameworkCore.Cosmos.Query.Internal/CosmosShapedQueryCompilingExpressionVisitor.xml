<Type Name="CosmosShapedQueryCompilingExpressionVisitor" FullName="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor">
  <TypeSignature Language="C#" Value="public class CosmosShapedQueryCompilingExpressionVisitor : Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CosmosShapedQueryCompilingExpressionVisitor extends Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Public Class CosmosShapedQueryCompilingExpressionVisitor&#xA;Inherits ShapedQueryCompilingExpressionVisitor" />
  <TypeSignature Language="F#" Value="type CosmosShapedQueryCompilingExpressionVisitor = class&#xA;    inherit ShapedQueryCompilingExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosShapedQueryCompilingExpressionVisitor (Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies dependencies, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQueryCompilationContext cosmosQueryCompilationContext, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory sqlExpressionFactory, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IQuerySqlGeneratorFactory querySqlGeneratorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies dependencies, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQueryCompilationContext cosmosQueryCompilationContext, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory sqlExpressionFactory, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IQuerySqlGeneratorFactory querySqlGeneratorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies,Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQueryCompilationContext,Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory,Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IQuerySqlGeneratorFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ShapedQueryCompilingExpressionVisitorDependencies, cosmosQueryCompilationContext As CosmosQueryCompilationContext, sqlExpressionFactory As ISqlExpressionFactory, querySqlGeneratorFactory As IQuerySqlGeneratorFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor : Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQueryCompilationContext * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IQuerySqlGeneratorFactory -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor (dependencies, cosmosQueryCompilationContext, sqlExpressionFactory, querySqlGeneratorFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cosmosQueryCompilationContext" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQueryCompilationContext" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sqlExpressionFactory" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="querySqlGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IQuerySqlGeneratorFactory" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="cosmosQueryCompilationContext">To be added.</param>
        <param name="sqlExpressionFactory">To be added.</param>
        <param name="querySqlGeneratorFactory">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosShapedQueryCompilingExpressionVisitor (Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies dependencies, Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory sqlExpressionFactory, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IQuerySqlGeneratorFactory querySqlGeneratorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies dependencies, class Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory sqlExpressionFactory, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IQuerySqlGeneratorFactory querySqlGeneratorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies,Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory,Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IQuerySqlGeneratorFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ShapedQueryCompilingExpressionVisitorDependencies, queryCompilationContext As QueryCompilationContext, sqlExpressionFactory As ISqlExpressionFactory, querySqlGeneratorFactory As IQuerySqlGeneratorFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor : Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies * Microsoft.EntityFrameworkCore.Query.QueryCompilationContext * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IQuerySqlGeneratorFactory -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor (dependencies, queryCompilationContext, sqlExpressionFactory, querySqlGeneratorFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitorDependencies" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="queryCompilationContext" Type="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="sqlExpressionFactory" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="querySqlGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.IQuerySqlGeneratorFactory" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="queryCompilationContext">To be added.</param>
        <param name="sqlExpressionFactory">To be added.</param>
        <param name="querySqlGeneratorFactory">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitShapedQuery">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitShapedQuery (Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression shapedQueryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitShapedQuery(class Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression shapedQueryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor.VisitShapedQuery(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitShapedQuery (shapedQueryExpression As ShapedQueryExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitShapedQuery : Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosShapedQueryCompilingExpressionVisitor.VisitShapedQuery shapedQueryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shapedQueryExpression" Type="Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="shapedQueryExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitShapedQueryExpression">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitShapedQueryExpression (Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression shapedQueryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitShapedQueryExpression(class Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression shapedQueryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosShapedQueryCompilingExpressionVisitor.VisitShapedQueryExpression(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitShapedQueryExpression (shapedQueryExpression As ShapedQueryExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitShapedQueryExpression : Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression -&gt; System.Linq.Expressions.Expression" Usage="cosmosShapedQueryCompilingExpressionVisitor.VisitShapedQueryExpression shapedQueryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shapedQueryExpression" Type="Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="shapedQueryExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
