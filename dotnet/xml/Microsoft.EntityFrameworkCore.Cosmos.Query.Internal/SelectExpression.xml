<Type Name="SelectExpression" FullName="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression">
  <TypeSignature Language="C#" Value="public class SelectExpression : System.Linq.Expressions.Expression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SelectExpression extends System.Linq.Expressions.Expression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class SelectExpression&#xA;Inherits Expression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type SelectExpression = class&#xA;    inherit Expression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="C#" Value="public sealed class SelectExpression : System.Linq.Expressions.Expression, Microsoft.EntityFrameworkCore.Query.IPrintableExpression" FrameworkAlternate="efcore-9.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SelectExpression extends System.Linq.Expressions.Expression implements class Microsoft.EntityFrameworkCore.Query.IPrintableExpression" FrameworkAlternate="efcore-9.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SelectExpression&#xA;Inherits Expression&#xA;Implements IPrintableExpression" FrameworkAlternate="efcore-9.0" />
  <TypeSignature Language="F#" Value="type SelectExpression = class&#xA;    inherit Expression&#xA;    interface IPrintableExpression" FrameworkAlternate="efcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.Expression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-9.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IPrintableExpression</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="efcore-9.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{PrintShortSql(), nq}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{PrintShortSql(), nq}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectExpression (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression entityType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectExpression (System.Linq.Expressions.Expression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.#ctor(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projection As Expression)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression : System.Linq.Expressions.Expression -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression projection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projection" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="projection">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectExpression (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression source, System.Linq.Expressions.Expression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression source, class System.Linq.Expressions.Expression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.#ctor(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As SourceExpression, projection As Expression)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression * System.Linq.Expressions.Expression -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression (source, projection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="projection" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="projection">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectExpression (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string sql, System.Linq.Expressions.Expression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string sql, class System.Linq.Expressions.Expression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IEntityType, sql As String, argument As Expression)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression : Microsoft.EntityFrameworkCore.Metadata.IEntityType * string * System.Linq.Expressions.Expression -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression (entityType, sql, argument)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sql" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="argument" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="sql">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectExpression (System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; projections, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression fromExpression, System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; orderings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; projections, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression fromExpression, class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; orderings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.#ctor(System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression},Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression,System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projections As List(Of ProjectionExpression), fromExpression As RootReferenceExpression, orderings As List(Of OrderingExpression))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression * System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression (projections, fromExpression, orderings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projections" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt;" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="orderings" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt;" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="projections">To be added.</param>
        <param name="fromExpression">To be added.</param>
        <param name="orderings">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectExpression (System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt; sources, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? predicate, System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; projections, bool distinct, System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; orderings, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? offset, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? limit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt; sources, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression predicate, class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; projections, bool distinct, class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; orderings, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression offset, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.#ctor(System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression},Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression,System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression},System.Boolean,System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression},Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression,Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sources As List(Of SourceExpression), predicate As SqlExpression, projections As List(Of ProjectionExpression), distinct As Boolean, orderings As List(Of OrderingExpression), offset As SqlExpression, limit As SqlExpression)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt; * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; * bool * System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" Usage="new Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression (sources, predicate, projections, distinct, orderings, offset, limit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sources" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt;" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="predicate" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="projections" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt;" Index="2" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="distinct" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="orderings" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt;" Index="4" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="offset" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="5" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="limit" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="6" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="sources">To be added.</param>
        <param name="predicate">To be added.</param>
        <param name="projections">To be added.</param>
        <param name="distinct">To be added.</param>
        <param name="orderings">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="limit">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJoin">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression AddJoin (Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression inner, System.Linq.Expressions.Expression outerShaper, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosAliasManager aliasManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression AddJoin(class Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression inner, class System.Linq.Expressions.Expression outerShaper, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosAliasManager aliasManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.AddJoin(Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression,System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosAliasManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJoin (inner As ShapedQueryExpression, outerShaper As Expression, aliasManager As CosmosAliasManager) As Expression" />
      <MemberSignature Language="F#" Value="member this.AddJoin : Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression * System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosAliasManager -&gt; System.Linq.Expressions.Expression" Usage="selectExpression.AddJoin (inner, outerShaper, aliasManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="Microsoft.EntityFrameworkCore.Query.ShapedQueryExpression" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="outerShaper" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="aliasManager" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosAliasManager" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="inner">To be added.</param>
        <param name="outerShaper">To be added.</param>
        <param name="aliasManager">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPartitionKey">
      <MemberSignature Language="C#" Value="public void AddPartitionKey (Microsoft.EntityFrameworkCore.Metadata.IProperty partitionKeyProperty, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPartitionKey(class Microsoft.EntityFrameworkCore.Metadata.IProperty partitionKeyProperty, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.AddPartitionKey(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPartitionKey (partitionKeyProperty As IProperty, expression As Expression)" />
      <MemberSignature Language="F#" Value="member this.AddPartitionKey : Microsoft.EntityFrameworkCore.Metadata.IProperty * System.Linq.Expressions.Expression -&gt; unit" Usage="selectExpression.AddPartitionKey (partitionKeyProperty, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionKeyProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="partitionKeyProperty">To be added.</param>
        <param name="expression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToProjection">
      <MemberSignature Language="C#" Value="public virtual int AddToProjection (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression entityProjection);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AddToProjection(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression entityProjection) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.AddToProjection(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddToProjection (entityProjection As EntityProjectionExpression) As Integer" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member AddToProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression -&gt; int&#xA;override this.AddToProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression -&gt; int" Usage="selectExpression.AddToProjection entityProjection" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public int AddToProjection (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression entityProjection);" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddToProjection(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression entityProjection) cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddToProjection (entityProjection As EntityProjectionExpression) As Integer" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.AddToProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression -&gt; int" Usage="selectExpression.AddToProjection entityProjection" FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityProjection" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression" />
      </Parameters>
      <Docs>
        <param name="entityProjection">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToProjection">
      <MemberSignature Language="C#" Value="public virtual int AddToProjection (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayProjectionExpression objectArrayProjection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AddToProjection(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayProjectionExpression objectArrayProjection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.AddToProjection(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayProjectionExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddToProjection (objectArrayProjection As ObjectArrayProjectionExpression) As Integer" />
      <MemberSignature Language="F#" Value="abstract member AddToProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayProjectionExpression -&gt; int&#xA;override this.AddToProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayProjectionExpression -&gt; int" Usage="selectExpression.AddToProjection objectArrayProjection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectArrayProjection" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayProjectionExpression" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="objectArrayProjection">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToProjection">
      <MemberSignature Language="C#" Value="public virtual int AddToProjection (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression sqlExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AddToProjection(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression sqlExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.AddToProjection(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddToProjection (sqlExpression As SqlExpression) As Integer" />
      <MemberSignature Language="F#" Value="abstract member AddToProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; int&#xA;override this.AddToProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; int" Usage="selectExpression.AddToProjection sqlExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="sqlExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToProjection">
      <MemberSignature Language="C#" Value="public int AddToProjection (System.Linq.Expressions.Expression sqlExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddToProjection(class System.Linq.Expressions.Expression sqlExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.AddToProjection(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddToProjection (sqlExpression As Expression) As Integer" />
      <MemberSignature Language="F#" Value="member this.AddToProjection : System.Linq.Expressions.Expression -&gt; int" Usage="selectExpression.AddToProjection sqlExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlExpression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="sqlExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendOrdering">
      <MemberSignature Language="C#" Value="public virtual void AppendOrdering (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendOrdering(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.AppendOrdering(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendOrdering (orderingExpression As OrderingExpression)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member AppendOrdering : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression -&gt; unit&#xA;override this.AppendOrdering : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression -&gt; unit" Usage="selectExpression.AppendOrdering orderingExpression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public void AppendOrdering (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression);" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendOrdering(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression) cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendOrdering (orderingExpression As OrderingExpression)" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.AppendOrdering : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression -&gt; unit" Usage="selectExpression.AppendOrdering orderingExpression" FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orderingExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression" />
      </Parameters>
      <Docs>
        <param name="orderingExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDistinct">
      <MemberSignature Language="C#" Value="public virtual void ApplyDistinct ();" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDistinct() cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ApplyDistinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyDistinct ()" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member ApplyDistinct : unit -&gt; unit&#xA;override this.ApplyDistinct : unit -&gt; unit" Usage="selectExpression.ApplyDistinct " FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public void ApplyDistinct ();" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyDistinct() cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyDistinct ()" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.ApplyDistinct : unit -&gt; unit" Usage="selectExpression.ApplyDistinct " FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyLimit">
      <MemberSignature Language="C#" Value="public virtual void ApplyLimit (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression sqlExpression);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyLimit(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression sqlExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ApplyLimit(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyLimit (sqlExpression As SqlExpression)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member ApplyLimit : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; unit&#xA;override this.ApplyLimit : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; unit" Usage="selectExpression.ApplyLimit sqlExpression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public void ApplyLimit (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression sqlExpression);" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyLimit(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression sqlExpression) cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyLimit (sqlExpression As SqlExpression)" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.ApplyLimit : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; unit" Usage="selectExpression.ApplyLimit sqlExpression" FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" />
      </Parameters>
      <Docs>
        <param name="sqlExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOffset">
      <MemberSignature Language="C#" Value="public virtual void ApplyOffset (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression sqlExpression);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyOffset(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression sqlExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ApplyOffset(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyOffset (sqlExpression As SqlExpression)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member ApplyOffset : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; unit&#xA;override this.ApplyOffset : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; unit" Usage="selectExpression.ApplyOffset sqlExpression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public void ApplyOffset (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression sqlExpression);" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyOffset(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression sqlExpression) cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyOffset (sqlExpression As SqlExpression)" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.ApplyOffset : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; unit" Usage="selectExpression.ApplyOffset sqlExpression" FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" />
      </Parameters>
      <Docs>
        <param name="sqlExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOrdering">
      <MemberSignature Language="C#" Value="public virtual void ApplyOrdering (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyOrdering(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ApplyOrdering(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyOrdering (orderingExpression As OrderingExpression)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member ApplyOrdering : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression -&gt; unit&#xA;override this.ApplyOrdering : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression -&gt; unit" Usage="selectExpression.ApplyOrdering orderingExpression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public void ApplyOrdering (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression);" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyOrdering(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression) cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyOrdering (orderingExpression As OrderingExpression)" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.ApplyOrdering : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression -&gt; unit" Usage="selectExpression.ApplyOrdering orderingExpression" FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orderingExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression" />
      </Parameters>
      <Docs>
        <param name="orderingExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPredicate">
      <MemberSignature Language="C#" Value="public virtual void ApplyPredicate (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression expression);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyPredicate(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression expression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ApplyPredicate(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyPredicate (expression As SqlExpression)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member ApplyPredicate : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; unit&#xA;override this.ApplyPredicate : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; unit" Usage="selectExpression.ApplyPredicate expression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public void ApplyPredicate (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression expression);" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyPredicate(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression expression) cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyPredicate (expression As SqlExpression)" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.ApplyPredicate : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; unit" Usage="selectExpression.ApplyPredicate expression" FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyProjection">
      <MemberSignature Language="C#" Value="public virtual void ApplyProjection ();" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyProjection() cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ApplyProjection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyProjection ()" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member ApplyProjection : unit -&gt; unit&#xA;override this.ApplyProjection : unit -&gt; unit" Usage="selectExpression.ApplyProjection " FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public void ApplyProjection ();" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyProjection() cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyProjection ()" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.ApplyProjection : unit -&gt; unit" Usage="selectExpression.ApplyProjection " FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOrdering">
      <MemberSignature Language="C#" Value="public virtual void ClearOrdering ();" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearOrdering() cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ClearOrdering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearOrdering ()" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member ClearOrdering : unit -&gt; unit&#xA;override this.ClearOrdering : unit -&gt; unit" Usage="selectExpression.ClearOrdering " FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public void ClearOrdering ();" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOrdering() cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOrdering ()" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.ClearOrdering : unit -&gt; unit" Usage="selectExpression.ClearOrdering " FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearProjection">
      <MemberSignature Language="C#" Value="public void ClearProjection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearProjection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ClearProjection" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearProjection ()" />
      <MemberSignature Language="F#" Value="member this.ClearProjection : unit -&gt; unit" Usage="selectExpression.ClearProjection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public virtual string Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Container" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Container As String" />
      <MemberSignature Language="F#" Value="member this.Container : string" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForCollection">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression CreateForCollection (System.Linq.Expressions.Expression sourceExpression, string sourceAlias, System.Linq.Expressions.Expression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression CreateForCollection(class System.Linq.Expressions.Expression sourceExpression, string sourceAlias, class System.Linq.Expressions.Expression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.CreateForCollection(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateForCollection (sourceExpression As Expression, sourceAlias As String, projection As Expression) As SelectExpression" />
      <MemberSignature Language="F#" Value="static member CreateForCollection : System.Linq.Expressions.Expression * string * System.Linq.Expressions.Expression -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.CreateForCollection (sourceExpression, sourceAlias, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceExpression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="sourceAlias" Type="System.String" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="projection" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="sourceExpression">To be added.</param>
        <param name="sourceAlias">To be added.</param>
        <param name="projection">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugView">
      <MemberSignature Language="C#" Value="public string DebugView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.DebugView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugView As String" />
      <MemberSignature Language="F#" Value="member this.DebugView : string" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.DebugView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-9.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
                    Expand this property in the debugger for a human-readable representation of this <see cref="T:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" />.
                </para>
          <para>
                    Warning: Do not rely on the format of the debug strings.
                    They are designed for debugging only and may change arbitrarily between releases.
                </para>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromExpression">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression FromExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression FromExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.FromExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FromExpression As RootReferenceExpression" />
      <MemberSignature Language="F#" Value="member this.FromExpression : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.FromExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappedProjection">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression GetMappedProjection (Microsoft.EntityFrameworkCore.Query.ProjectionMember projectionMember);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetMappedProjection(class Microsoft.EntityFrameworkCore.Query.ProjectionMember projectionMember) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.GetMappedProjection(Microsoft.EntityFrameworkCore.Query.ProjectionMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMappedProjection (projectionMember As ProjectionMember) As Expression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member GetMappedProjection : Microsoft.EntityFrameworkCore.Query.ProjectionMember -&gt; System.Linq.Expressions.Expression&#xA;override this.GetMappedProjection : Microsoft.EntityFrameworkCore.Query.ProjectionMember -&gt; System.Linq.Expressions.Expression" Usage="selectExpression.GetMappedProjection projectionMember" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetMappedProjection (Microsoft.EntityFrameworkCore.Query.ProjectionMember projectionMember);" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression GetMappedProjection(class Microsoft.EntityFrameworkCore.Query.ProjectionMember projectionMember) cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMappedProjection (projectionMember As ProjectionMember) As Expression" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.GetMappedProjection : Microsoft.EntityFrameworkCore.Query.ProjectionMember -&gt; System.Linq.Expressions.Expression" Usage="selectExpression.GetMappedProjection projectionMember" FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectionMember" Type="Microsoft.EntityFrameworkCore.Query.ProjectionMember" />
      </Parameters>
      <Docs>
        <param name="projectionMember">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionKey">
      <MemberSignature Language="C#" Value="public virtual string GetPartitionKey (System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPartitionKey(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.GetPartitionKey(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPartitionKey (parameterValues As IReadOnlyDictionary(Of String, Object)) As String" />
      <MemberSignature Language="F#" Value="abstract member GetPartitionKey : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; string&#xA;override this.GetPartitionKey : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; string" Usage="selectExpression.GetPartitionKey parameterValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameterValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionKeyValue">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Cosmos.PartitionKey GetPartitionKeyValue (System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Azure.Cosmos.PartitionKey GetPartitionKeyValue(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.GetPartitionKeyValue(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartitionKeyValue (parameterValues As IReadOnlyDictionary(Of String, Object)) As PartitionKey" />
      <MemberSignature Language="F#" Value="member this.GetPartitionKeyValue : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; Microsoft.Azure.Cosmos.PartitionKey" Usage="selectExpression.GetPartitionKeyValue parameterValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Cosmos.PartitionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="parameterValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDistinct">
      <MemberSignature Language="C#" Value="public bool IsDistinct { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDistinct" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.IsDistinct" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDistinct As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDistinct : bool" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.IsDistinct" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression Limit { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression Limit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Limit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Limit As SqlExpression" />
      <MemberSignature Language="F#" Value="member this.Limit : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Limit" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? Limit { get; }" FrameworkAlternate="efcore-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override sealed System.Linq.Expressions.ExpressionType NodeType { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property NodeType As ExpressionType" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Linq.Expressions.ExpressionType" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.NodeType" />
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.ExpressionType NodeType { get; }" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As ExpressionType" FrameworkAlternate="efcore-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression Offset { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression Offset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As SqlExpression" />
      <MemberSignature Language="F#" Value="member this.Offset : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Offset" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? Offset { get; }" FrameworkAlternate="efcore-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orderings">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; Orderings { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; Orderings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Orderings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Orderings As IReadOnlyList(Of OrderingExpression)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Orderings : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt;" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Orderings" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; Orderings { get; }" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Orderings As IReadOnlyList(Of OrderingExpression)" FrameworkAlternate="efcore-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predicate">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression Predicate { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression Predicate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Predicate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predicate As SqlExpression" />
      <MemberSignature Language="F#" Value="member this.Predicate : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Predicate" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? Predicate { get; }" FrameworkAlternate="efcore-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print (expressionPrinter As ExpressionPrinter)" />
      <MemberSignature Language="F#" Value="abstract member Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit&#xA;override this.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="selectExpression.Print expressionPrinter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; Projection { get; }" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; Projection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Projection As IReadOnlyList(Of ProjectionExpression)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Projection : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt;" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Projection" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; Projection { get; }" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Projection As IReadOnlyList(Of ProjectionExpression)" FrameworkAlternate="efcore-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadItemInfo">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ReadItemInfo? ReadItemInfo { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ReadItemInfo ReadItemInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ReadItemInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadItemInfo As ReadItemInfo" />
      <MemberSignature Language="F#" Value="member this.ReadItemInfo : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ReadItemInfo with get, set" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ReadItemInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ReadItemInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceProjectionMapping">
      <MemberSignature Language="C#" Value="public virtual void ReplaceProjectionMapping (System.Collections.Generic.IDictionary&lt;Microsoft.EntityFrameworkCore.Query.ProjectionMember,System.Linq.Expressions.Expression&gt; projectionMapping);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceProjectionMapping(class System.Collections.Generic.IDictionary`2&lt;class Microsoft.EntityFrameworkCore.Query.ProjectionMember, class System.Linq.Expressions.Expression&gt; projectionMapping) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ReplaceProjectionMapping(System.Collections.Generic.IDictionary{Microsoft.EntityFrameworkCore.Query.ProjectionMember,System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReplaceProjectionMapping (projectionMapping As IDictionary(Of ProjectionMember, Expression))" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member ReplaceProjectionMapping : System.Collections.Generic.IDictionary&lt;Microsoft.EntityFrameworkCore.Query.ProjectionMember, System.Linq.Expressions.Expression&gt; -&gt; unit&#xA;override this.ReplaceProjectionMapping : System.Collections.Generic.IDictionary&lt;Microsoft.EntityFrameworkCore.Query.ProjectionMember, System.Linq.Expressions.Expression&gt; -&gt; unit" Usage="selectExpression.ReplaceProjectionMapping projectionMapping" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public void ReplaceProjectionMapping (System.Collections.Generic.IDictionary&lt;Microsoft.EntityFrameworkCore.Query.ProjectionMember,System.Linq.Expressions.Expression&gt; projectionMapping);" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReplaceProjectionMapping(class System.Collections.Generic.IDictionary`2&lt;class Microsoft.EntityFrameworkCore.Query.ProjectionMember, class System.Linq.Expressions.Expression&gt; projectionMapping) cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceProjectionMapping (projectionMapping As IDictionary(Of ProjectionMember, Expression))" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.ReplaceProjectionMapping : System.Collections.Generic.IDictionary&lt;Microsoft.EntityFrameworkCore.Query.ProjectionMember, System.Linq.Expressions.Expression&gt; -&gt; unit" Usage="selectExpression.ReplaceProjectionMapping projectionMapping" FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectionMapping" Type="System.Collections.Generic.IDictionary&lt;Microsoft.EntityFrameworkCore.Query.ProjectionMember,System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="projectionMapping">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseOrderings">
      <MemberSignature Language="C#" Value="public virtual void ReverseOrderings ();" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReverseOrderings() cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.ReverseOrderings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReverseOrderings ()" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member ReverseOrderings : unit -&gt; unit&#xA;override this.ReverseOrderings : unit -&gt; unit" Usage="selectExpression.ReverseOrderings " FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public void ReverseOrderings ();" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReverseOrderings() cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReverseOrderings ()" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="member this.ReverseOrderings : unit -&gt; unit" Usage="selectExpression.ReverseOrderings " FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPartitionKey">
      <MemberSignature Language="C#" Value="public virtual void SetPartitionKey (Microsoft.EntityFrameworkCore.Metadata.IProperty partitionKeyProperty, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPartitionKey(class Microsoft.EntityFrameworkCore.Metadata.IProperty partitionKeyProperty, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.SetPartitionKey(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPartitionKey (partitionKeyProperty As IProperty, expression As Expression)" />
      <MemberSignature Language="F#" Value="abstract member SetPartitionKey : Microsoft.EntityFrameworkCore.Metadata.IProperty * System.Linq.Expressions.Expression -&gt; unit&#xA;override this.SetPartitionKey : Microsoft.EntityFrameworkCore.Metadata.IProperty * System.Linq.Expressions.Expression -&gt; unit" Usage="selectExpression.SetPartitionKey (partitionKeyProperty, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionKeyProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="partitionKeyProperty">To be added.</param>
        <param name="expression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sources">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt; Sources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt; Sources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Sources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sources As IReadOnlyList(Of SourceExpression)" />
      <MemberSignature Language="F#" Value="member this.Sources : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt;" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Sources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As Type" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression Update (System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; projections, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression fromExpression, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression predicate, System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; orderings, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression limit, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression offset);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression Update(class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; projections, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression fromExpression, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression predicate, class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; orderings, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression limit, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Update(System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression},Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression,Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression,System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression},Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression,Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (projections As List(Of ProjectionExpression), fromExpression As RootReferenceExpression, predicate As SqlExpression, orderings As List(Of OrderingExpression), limit As SqlExpression, offset As SqlExpression) As SelectExpression" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression&#xA;override this.Update : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" Usage="selectExpression.Update (projections, fromExpression, predicate, orderings, limit, offset)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression Update (System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; projections, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression fromExpression, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? predicate, System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt;? orderings, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? limit, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? offset);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projections" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="predicate" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="orderings" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt;" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="limit" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="offset" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="projections">To be added.</param>
        <param name="fromExpression">To be added.</param>
        <param name="predicate">To be added.</param>
        <param name="orderings">To be added.</param>
        <param name="limit">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression Update (System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt; sources, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? predicate, System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; projections, System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; orderings, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? offset, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression? limit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression Update(class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt; sources, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression predicate, class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; projections, class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; orderings, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression offset, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.Update(System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression},Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression,System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression},System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression},Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression,Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (sources As List(Of SourceExpression), predicate As SqlExpression, projections As List(Of ProjectionExpression), orderings As List(Of OrderingExpression), offset As SqlExpression, limit As SqlExpression) As SelectExpression" />
      <MemberSignature Language="F#" Value="member this.Update : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt; * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt; * System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt; * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" Usage="selectExpression.Update (sources, predicate, projections, orderings, offset, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sources" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SourceExpression&gt;" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="predicate" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="projections" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression&gt;" Index="2" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="orderings" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression&gt;" Index="3" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="offset" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="4" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="limit" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpression" Index="5" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="sources">To be added.</param>
        <param name="predicate">To be added.</param>
        <param name="projections">To be added.</param>
        <param name="orderings">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="limit">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="selectExpression.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithReadItemInfo">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression WithReadItemInfo (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ReadItemInfo readItemInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression WithReadItemInfo(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ReadItemInfo readItemInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.WithReadItemInfo(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ReadItemInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithReadItemInfo (readItemInfo As ReadItemInfo) As SelectExpression" />
      <MemberSignature Language="F#" Value="member this.WithReadItemInfo : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ReadItemInfo -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" Usage="selectExpression.WithReadItemInfo readItemInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readItemInfo" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ReadItemInfo" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="readItemInfo">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSingleValueProjection">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression WithSingleValueProjection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression WithSingleValueProjection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression.WithSingleValueProjection" />
      <MemberSignature Language="VB.NET" Value="Public Function WithSingleValueProjection () As SelectExpression" />
      <MemberSignature Language="F#" Value="member this.WithSingleValueProjection : unit -&gt; Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" Usage="selectExpression.WithSingleValueProjection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
