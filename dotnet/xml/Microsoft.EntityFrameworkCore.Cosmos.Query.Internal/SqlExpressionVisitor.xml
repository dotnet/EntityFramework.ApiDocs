<Type Name="SqlExpressionVisitor" FullName="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor">
  <TypeSignature Language="C#" Value="public abstract class SqlExpressionVisitor : System.Linq.Expressions.ExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SqlExpressionVisitor extends System.Linq.Expressions.ExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SqlExpressionVisitor&#xA;Inherits ExpressionVisitor" />
  <TypeSignature Language="F#" Value="type SqlExpressionVisitor = class&#xA;    inherit ExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.ExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlExpressionVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEntityProjection">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitEntityProjection (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression entityProjectionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitEntityProjection(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression entityProjectionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitEntityProjection(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitEntityProjection (entityProjectionExpression As EntityProjectionExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitEntityProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitEntityProjection entityProjectionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityProjectionExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.EntityProjectionExpression" />
      </Parameters>
      <Docs>
        <param name="entityProjectionExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExtension">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression extensionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExtension(class System.Linq.Expressions.Expression extensionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitExtension (extensionExpression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitExtension : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitExtension extensionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionExpression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="extensionExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFromSql">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitFromSql (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FromSqlExpression fromSqlExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitFromSql(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FromSqlExpression fromSqlExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitFromSql(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FromSqlExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitFromSql (fromSqlExpression As FromSqlExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitFromSql : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FromSqlExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitFromSql fromSqlExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromSqlExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.FromSqlExpression" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="fromSqlExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIn">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitIn (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression inExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitIn(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression inExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitIn(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitIn (inExpression As InExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitIn : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitIn inExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.InExpression" />
      </Parameters>
      <Docs>
        <param name="inExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitKeyAccess">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitKeyAccess (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.KeyAccessExpression keyAccessExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitKeyAccess(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.KeyAccessExpression keyAccessExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitKeyAccess(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.KeyAccessExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitKeyAccess (keyAccessExpression As KeyAccessExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitKeyAccess : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.KeyAccessExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitKeyAccess keyAccessExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyAccessExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.KeyAccessExpression" />
      </Parameters>
      <Docs>
        <param name="keyAccessExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectAccess">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitObjectAccess (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectAccessExpression objectAccessExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitObjectAccess(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectAccessExpression objectAccessExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitObjectAccess(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectAccessExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitObjectAccess (objectAccessExpression As ObjectAccessExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitObjectAccess : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectAccessExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitObjectAccess objectAccessExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectAccessExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectAccessExpression" />
      </Parameters>
      <Docs>
        <param name="objectAccessExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectArrayProjection">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitObjectArrayProjection (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayProjectionExpression objectArrayProjectionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitObjectArrayProjection(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayProjectionExpression objectArrayProjectionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitObjectArrayProjection(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayProjectionExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitObjectArrayProjection (objectArrayProjectionExpression As ObjectArrayProjectionExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitObjectArrayProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayProjectionExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitObjectArrayProjection objectArrayProjectionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectArrayProjectionExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ObjectArrayProjectionExpression" />
      </Parameters>
      <Docs>
        <param name="objectArrayProjectionExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitOrdering">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitOrdering (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitOrdering(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression orderingExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitOrdering(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitOrdering (orderingExpression As OrderingExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitOrdering : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitOrdering orderingExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orderingExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.OrderingExpression" />
      </Parameters>
      <Docs>
        <param name="orderingExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitProjection">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitProjection (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression projectionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitProjection(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression projectionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitProjection(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitProjection (projectionExpression As ProjectionExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitProjection : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitProjection projectionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectionExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ProjectionExpression" />
      </Parameters>
      <Docs>
        <param name="projectionExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRootReference">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitRootReference (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression rootReferenceExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitRootReference(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression rootReferenceExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitRootReference(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitRootReference (rootReferenceExpression As RootReferenceExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitRootReference : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitRootReference rootReferenceExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootReferenceExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.RootReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="rootReferenceExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSelect">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitSelect (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSelect(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitSelect(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitSelect (selectExpression As SelectExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitSelect : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitSelect selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlBinary">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitSqlBinary (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlBinaryExpression sqlBinaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSqlBinary(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlBinaryExpression sqlBinaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitSqlBinary(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlBinaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitSqlBinary (sqlBinaryExpression As SqlBinaryExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlBinary : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlBinaryExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitSqlBinary sqlBinaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlBinaryExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlBinaryExpression" />
      </Parameters>
      <Docs>
        <param name="sqlBinaryExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlConditional">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitSqlConditional (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression caseExpression);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSqlConditional(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression caseExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitSqlConditional(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitSqlConditional (caseExpression As SqlConditionalExpression) As Expression" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlConditional : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitSqlConditional caseExpression" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitSqlConditional (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression sqlConditionalExpression);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSqlConditional(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression sqlConditionalExpression) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitSqlConditional (sqlConditionalExpression As SqlConditionalExpression) As Expression" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlConditional : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitSqlConditional sqlConditionalExpression" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caseExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="sqlConditionalExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConditionalExpression" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="caseExpression">To be added.</param>
        <param name="sqlConditionalExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlConstant">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitSqlConstant (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConstantExpression sqlConstantExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSqlConstant(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConstantExpression sqlConstantExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitSqlConstant(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitSqlConstant (sqlConstantExpression As SqlConstantExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlConstant : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConstantExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitSqlConstant sqlConstantExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlConstantExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlConstantExpression" />
      </Parameters>
      <Docs>
        <param name="sqlConstantExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlFunction">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitSqlFunction (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlFunctionExpression sqlFunctionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSqlFunction(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlFunctionExpression sqlFunctionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitSqlFunction(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlFunctionExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitSqlFunction (sqlFunctionExpression As SqlFunctionExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlFunction : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlFunctionExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitSqlFunction sqlFunctionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlFunctionExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="sqlFunctionExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlParameter">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitSqlParameter (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlParameterExpression sqlParameterExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSqlParameter(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlParameterExpression sqlParameterExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitSqlParameter(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlParameterExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitSqlParameter (sqlParameterExpression As SqlParameterExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlParameter : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlParameterExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitSqlParameter sqlParameterExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlParameterExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlParameterExpression" />
      </Parameters>
      <Docs>
        <param name="sqlParameterExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlUnary">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression VisitSqlUnary (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression sqlUnaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitSqlUnary(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression sqlUnaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlExpressionVisitor.VisitSqlUnary(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function VisitSqlUnary (sqlUnaryExpression As SqlUnaryExpression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitSqlUnary : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression -&gt; System.Linq.Expressions.Expression" Usage="sqlExpressionVisitor.VisitSqlUnary sqlUnaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlUnaryExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression" />
      </Parameters>
      <Docs>
        <param name="sqlUnaryExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
