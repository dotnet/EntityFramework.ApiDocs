<Type Name="CosmosReadItemAndPartitionKeysExtractor" FullName="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosReadItemAndPartitionKeysExtractor">
  <TypeSignature Language="C#" Value="public class CosmosReadItemAndPartitionKeysExtractor : System.Linq.Expressions.ExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CosmosReadItemAndPartitionKeysExtractor extends System.Linq.Expressions.ExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosReadItemAndPartitionKeysExtractor" />
  <TypeSignature Language="VB.NET" Value="Public Class CosmosReadItemAndPartitionKeysExtractor&#xA;Inherits ExpressionVisitor" />
  <TypeSignature Language="F#" Value="type CosmosReadItemAndPartitionKeysExtractor = class&#xA;    inherit ExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.ExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Identifies Cosmos queries that can be transformed to optimized ReadItem form and performs the transformation; also extracts out
                partition key comparisons from the predicate.
            </summary>
    <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosReadItemAndPartitionKeysExtractor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosReadItemAndPartitionKeysExtractor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractPartitionKeysAndId">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression ExtractPartitionKeysAndId (Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQueryCompilationContext queryCompilationContext, Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory sqlExpressionFactory, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression ExtractPartitionKeysAndId(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQueryCompilationContext queryCompilationContext, class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory sqlExpressionFactory, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosReadItemAndPartitionKeysExtractor.ExtractPartitionKeysAndId(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQueryCompilationContext,Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExtractPartitionKeysAndId (queryCompilationContext As CosmosQueryCompilationContext, sqlExpressionFactory As ISqlExpressionFactory, expression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member ExtractPartitionKeysAndId : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQueryCompilationContext * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression&#xA;override this.ExtractPartitionKeysAndId : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQueryCompilationContext * Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="cosmosReadItemAndPartitionKeysExtractor.ExtractPartitionKeysAndId (queryCompilationContext, sqlExpressionFactory, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryCompilationContext" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosQueryCompilationContext" />
        <Parameter Name="sqlExpressionFactory" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.ISqlExpressionFactory" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="queryCompilationContext">To be added.</param>
        <param name="sqlExpressionFactory">To be added.</param>
        <param name="expression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExtension">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExtension(class System.Linq.Expressions.Expression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.CosmosReadItemAndPartitionKeysExtractor.VisitExtension(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitExtension (node As Expression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitExtension : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="cosmosReadItemAndPartitionKeysExtractor.VisitExtension node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
