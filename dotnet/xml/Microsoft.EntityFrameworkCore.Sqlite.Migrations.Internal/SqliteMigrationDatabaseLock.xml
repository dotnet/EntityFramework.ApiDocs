<Type Name="SqliteMigrationDatabaseLock" FullName="Microsoft.EntityFrameworkCore.Sqlite.Migrations.Internal.SqliteMigrationDatabaseLock">
  <TypeSignature Language="C#" Value="public class SqliteMigrationDatabaseLock : IAsyncDisposable, IDisposable, Microsoft.EntityFrameworkCore.Migrations.IMigrationsDatabaseLock" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqliteMigrationDatabaseLock extends System.Object implements class Microsoft.EntityFrameworkCore.Migrations.IMigrationsDatabaseLock, class System.IAsyncDisposable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Sqlite.Migrations.Internal.SqliteMigrationDatabaseLock" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteMigrationDatabaseLock&#xA;Implements IAsyncDisposable, IDisposable, IMigrationsDatabaseLock" />
  <TypeSignature Language="F#" Value="type SqliteMigrationDatabaseLock = class&#xA;    interface IMigrationsDatabaseLock&#xA;    interface IDisposable&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Migrations.IMigrationsDatabaseLock</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteMigrationDatabaseLock (Microsoft.EntityFrameworkCore.Storage.IRelationalCommand releaseLockCommand, Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject relationalCommandParameters, Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository historyRepository, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand releaseLockCommand, valuetype Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject relationalCommandParameters, class Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository historyRepository, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Migrations.Internal.SqliteMigrationDatabaseLock.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject,Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (releaseLockCommand As IRelationalCommand, relationalCommandParameters As RelationalCommandParameterObject, historyRepository As IHistoryRepository, Optional cancellationToken As CancellationToken = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Sqlite.Migrations.Internal.SqliteMigrationDatabaseLock : Microsoft.EntityFrameworkCore.Storage.IRelationalCommand * Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject * Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository * System.Threading.CancellationToken -&gt; Microsoft.EntityFrameworkCore.Sqlite.Migrations.Internal.SqliteMigrationDatabaseLock" Usage="new Microsoft.EntityFrameworkCore.Sqlite.Migrations.Internal.SqliteMigrationDatabaseLock (releaseLockCommand, relationalCommandParameters, historyRepository, cancellationToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="releaseLockCommand" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" />
        <Parameter Name="relationalCommandParameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalCommandParameterObject" />
        <Parameter Name="historyRepository" Type="Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="releaseLockCommand">To be added.</param>
        <param name="relationalCommandParameters">To be added.</param>
        <param name="historyRepository">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Migrations.Internal.SqliteMigrationDatabaseLock.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="sqliteMigrationDatabaseLock.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Migrations.Internal.SqliteMigrationDatabaseLock.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="sqliteMigrationDatabaseLock.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HistoryRepository">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository HistoryRepository { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository HistoryRepository" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Sqlite.Migrations.Internal.SqliteMigrationDatabaseLock.HistoryRepository" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HistoryRepository As IHistoryRepository" />
      <MemberSignature Language="F#" Value="member this.HistoryRepository : Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository" Usage="Microsoft.EntityFrameworkCore.Sqlite.Migrations.Internal.SqliteMigrationDatabaseLock.HistoryRepository" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Migrations.IMigrationsDatabaseLock.HistoryRepository</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
