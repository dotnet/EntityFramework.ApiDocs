<Type Name="UnionExpression" FullName="Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression">
  <TypeSignature Language="C#" Value="public class UnionExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UnionExpression extends Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class UnionExpression&#xA;Inherits SetOperationBase" />
  <TypeSignature Language="F#" Value="type UnionExpression = class&#xA;    inherit SetOperationBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    An expression that represents a UNION operation in a SQL tree.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnionExpression (string alias, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression source1, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression source2, bool distinct);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression source1, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression source2, bool distinct) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression.#ctor(System.String,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alias As String, source1 As SelectExpression, source2 As SelectExpression, distinct As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression : string * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression (alias, source1, source2, distinct)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="source1" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
        <Parameter Name="source2" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
        <Parameter Name="distinct" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="alias">A string alias for the table source.</param>
        <param name="source1">A table source which is first source in the set operation.</param>
        <param name="source2">A table source which is second source in the set operation.</param>
        <param name="distinct">A bool value indicating whether result will remove duplicate rows.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWithAnnotations">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase CreateWithAnnotations (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase CreateWithAnnotations(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression.CreateWithAnnotations(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateWithAnnotations (annotations As IEnumerable(Of IAnnotation)) As TableExpressionBase" />
      <MemberSignature Language="F#" Value="override this.CreateWithAnnotations : seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Usage="unionExpression.CreateWithAnnotations annotations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotations" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="annotations">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="unionExpression.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="unionExpression.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public override void Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Print (expressionPrinter As ExpressionPrinter)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="override this.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="unionExpression.Print expressionPrinter" />
      <MemberSignature Language="C#" Value="protected override void Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Print (expressionPrinter As ExpressionPrinter)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression Update (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression source1, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression source2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression Update(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression source1, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (source1 As SelectExpression, source2 As SelectExpression) As UnionExpression" />
      <MemberSignature Language="F#" Value="abstract member Update : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression&#xA;override this.Update : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression" Usage="unionExpression.Update (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source1" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
        <Parameter Name="source2" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="source1">The <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase.Source1" /> property of the result.</param>
        <param name="source2">The <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase.Source2" /> property of the result.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>This expression if no children changed, or an expression with the updated children.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="unionExpression.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
