<Type Name="RowNumberExpression" FullName="Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression">
  <TypeSignature Language="C#" Value="public class RowNumberExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RowNumberExpression extends Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class RowNumberExpression&#xA;Inherits SqlExpression" />
  <TypeSignature Language="F#" Value="type RowNumberExpression = class&#xA;    inherit SqlExpression" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    An expression that represents a ROW_NUMBER operation in a SQL tree.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RowNumberExpression (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; partitions, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt; orderings, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; partitions, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt; orderings, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression},Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (partitions As IReadOnlyList(Of SqlExpression), orderings As IReadOnlyList(Of OrderingExpression), typeMapping As RelationalTypeMapping)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt; * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression (partitions, orderings, typeMapping)" />
      <MemberSignature Language="C#" Value="public RowNumberExpression (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt;? partitions, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt; orderings, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? typeMapping);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="partitions" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt;" />
        <Parameter Name="orderings" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt;" />
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />
      </Parameters>
      <Docs>
        <param name="partitions">A list expressions to partition by.</param>
        <param name="orderings">A list of ordering expressions to order by.</param>
        <param name="typeMapping">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> associated with the expression.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rowNumberExpression.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rowNumberExpression.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Orderings">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt; Orderings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt; Orderings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.Orderings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Orderings As IReadOnlyList(Of OrderingExpression)" />
      <MemberSignature Language="F#" Value="member this.Orderings : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt;" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.Orderings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The list of ordering expressions used to order inside the given partition.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Partitions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; Partitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; Partitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.Partitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Partitions As IReadOnlyList(Of SqlExpression)" />
      <MemberSignature Language="F#" Value="member this.Partitions : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt;" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.Partitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The list of expressions used in partitioning.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public override void Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Print (expressionPrinter As ExpressionPrinter)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="override this.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="rowNumberExpression.Print expressionPrinter" />
      <MemberSignature Language="C#" Value="protected override void Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Print (expressionPrinter As ExpressionPrinter)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression Update (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; partitions, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt; orderings);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression Update(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; partitions, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt; orderings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.Update(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (partitions As IReadOnlyList(Of SqlExpression), orderings As IReadOnlyList(Of OrderingExpression)) As RowNumberExpression" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression&#xA;override this.Update : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression" Usage="rowNumberExpression.Update (partitions, orderings)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression Update (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt;? partitions, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt; orderings);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitions" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt;" />
        <Parameter Name="orderings" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="partitions">The <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.Partitions" /> property of the result.</param>
        <param name="orderings">The <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.Orderings" /> property of the result.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>This expression if no children changed, or an expression with the updated children.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="rowNumberExpression.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
