<Type Name="JoinExpressionBase" FullName="Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase">
  <TypeSignature Language="C#" Value="public abstract class JoinExpressionBase : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JoinExpressionBase extends Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JoinExpressionBase&#xA;Inherits TableExpressionBase" />
  <TypeSignature Language="F#" Value="type JoinExpressionBase = class&#xA;    inherit TableExpressionBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="efcore-8.0;efcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
                    An expression that represents a JOIN in a SQL tree.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JoinExpressionBase (Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase table);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (table As TableExpressionBase)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase table" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">A table source to join with.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JoinExpressionBase (Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase table, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;? annotations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase table, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (table As TableExpressionBase, annotations As IEnumerable(Of IAnnotation))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase * seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase (table, annotations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="annotations" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="table">A table source to join with.</param>
        <param name="annotations">A collection of annotations associated with this expression.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JoinExpressionBase (Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase table, bool prunable, System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;? annotations = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase table, bool prunable, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (table As TableExpressionBase, prunable As Boolean, Optional annotations As IReadOnlyDictionary(Of String, IAnnotation) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase * bool * System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase (table, prunable, annotations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="prunable" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="annotations" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Index="2" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="table">A table source to join with.</param>
        <param name="prunable">Whether this join expression may be pruned if nothing references a column on it.</param>
        <param name="annotations">A collection of annotations associated with this expression.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Clone (string? alias, System.Linq.Expressions.ExpressionVisitor cloningExpressionVisitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Clone(string alias, class System.Linq.Expressions.ExpressionVisitor cloningExpressionVisitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.Clone(System.String,System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone (alias As String, cloningExpressionVisitor As ExpressionVisitor) As TableExpressionBase" />
      <MemberSignature Language="F#" Value="override this.Clone : string * System.Linq.Expressions.ExpressionVisitor -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Usage="joinExpressionBase.Clone (alias, cloningExpressionVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" Index="0" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cloningExpressionVisitor" Type="System.Linq.Expressions.ExpressionVisitor" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="alias">To be added.</param>
        <param name="cloningExpressionVisitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="joinExpressionBase.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="joinExpressionBase.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetRequiredAlias">
      <MemberSignature Language="C#" Value="public override string GetRequiredAlias ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetRequiredAlias() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.GetRequiredAlias" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequiredAlias () As String" />
      <MemberSignature Language="F#" Value="override this.GetRequiredAlias : unit -&gt; string" Usage="joinExpressionBase.GetRequiredAlias " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrunable">
      <MemberSignature Language="C#" Value="public virtual bool IsPrunable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrunable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.IsPrunable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPrunable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPrunable : bool" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.IsPrunable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Whether this join expression may be pruned if nothing references a column on it. This isn't the case, for example, when an
                INNER JOIN is used to filter out rows.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Table" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.Table" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Table As TableExpressionBase" />
      <MemberSignature Language="F#" Value="member this.Table : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the underlying table source to join with.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase Update (Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase Update(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (table As TableExpressionBase) As JoinExpressionBase" />
      <MemberSignature Language="F#" Value="abstract member Update : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase" Usage="joinExpressionBase.Update table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Index="0" FrameworkAlternate="efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="table">The <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.Table" /> property of the result.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>This expression if no children changed, or an expression with the updated children.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAlias">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase WithAlias (string newAlias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase WithAlias(string newAlias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.WithAlias(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WithAlias (newAlias As String) As TableExpressionBase" />
      <MemberSignature Language="F#" Value="override this.WithAlias : string -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Usage="joinExpressionBase.WithAlias newAlias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAlias" Type="System.String" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="newAlias">To be added.</param>
        <summary>
                The implementation of <see cref="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JoinExpressionBase.WithAlias(System.String)" /> for join expressions always throws, since the alias on joins is always
                <see langword="null" />. Set the alias on the enclosed table expression instead.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
