<Type Name="JsonScalarExpression" FullName="Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression">
  <TypeSignature Language="C#" Value="public class JsonScalarExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonScalarExpression extends Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonScalarExpression&#xA;Inherits SqlExpression" />
  <TypeSignature Language="F#" Value="type JsonScalarExpression = class&#xA;    inherit SqlExpression" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    An expression representing a scalar extracted from a JSON column with the given path in SQL tree.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonScalarExpression (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression jsonColumn, Microsoft.EntityFrameworkCore.Metadata.IProperty property, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.PathSegment&gt; path, bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression jsonColumn, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.PathSegment&gt; path, bool nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.PathSegment},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (jsonColumn As ColumnExpression, property As IProperty, path As IReadOnlyList(Of PathSegment), nullable As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression * Microsoft.EntityFrameworkCore.Metadata.IProperty * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.PathSegment&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression (jsonColumn, property, path, nullable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="jsonColumn" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="path" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.PathSegment&gt;" Index="2" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="nullable" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="jsonColumn">A column containg JSON value.</param>
        <param name="property">A property representing the result of this expression.</param>
        <param name="path">A list of path segments leading to the scalar from the root of the JSON stored in the column.</param>
        <param name="nullable">A value indicating whether the expression is nullable.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonScalarExpression (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression json, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.PathSegment&gt; path, Type type, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? typeMapping, bool nullable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression json, class System.Collections.Generic.IReadOnlyList`1&lt;valuetype Microsoft.EntityFrameworkCore.Query.PathSegment&gt; path, class System.Type type, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool nullable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.PathSegment},System.Type,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (json As SqlExpression, path As IReadOnlyList(Of PathSegment), type As Type, typeMapping As RelationalTypeMapping, nullable As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.PathSegment&gt; * Type * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * bool -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression (json, path, type, typeMapping, nullable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="json" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="path" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.PathSegment&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="type" Type="System.Type" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="nullable" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="json">An expression representing a JSON value.</param>
        <param name="type">The <see cref="T:System.Type" /> of the expression.</param>
        <param name="typeMapping">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> associated with the expression.</param>
        <param name="path">A list of path segments leading to the scalar from the root of the JSON stored in the column.</param>
        <param name="nullable">A value indicating whether the expression is nullable.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="jsonScalarExpression.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="jsonScalarExpression.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public virtual bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The value indicating whether the expression is nullable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Json">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Json { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Json" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.Json" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Json As SqlExpression" />
      <MemberSignature Language="F#" Value="member this.Json : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.Json" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The expression containing the JSON value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression JsonColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression JsonColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.JsonColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JsonColumn As ColumnExpression" />
      <MemberSignature Language="F#" Value="member this.JsonColumn : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.JsonColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The column containg JSON value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.PathSegment&gt; Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.PathSegment&gt; Path" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Path As IReadOnlyList(Of PathSegment)" />
      <MemberSignature Language="F#" Value="member this.Path : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.PathSegment&gt;" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.Path" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;valuetype Microsoft.EntityFrameworkCore.Query.PathSegment&gt; Path" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.PathSegment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The list of path segments leading to the scalar from the root of the JSON stored in the column.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="protected override void Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Print (expressionPrinter As ExpressionPrinter)" />
      <MemberSignature Language="F#" Value="override this.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="jsonScalarExpression.Print expressionPrinter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression Update (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression jsonColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression Update(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression jsonColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (jsonColumn As ColumnExpression) As JsonScalarExpression" />
      <MemberSignature Language="F#" Value="abstract member Update : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression&#xA;override this.Update : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression" Usage="jsonScalarExpression.Update jsonColumn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jsonColumn" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" Index="0" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="jsonColumn">The <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.JsonColumn" /> property of the result.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>This expression if no children changed, or an expression with the updated children.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression Update (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression json);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression Update(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression json) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (json As SqlExpression) As JsonScalarExpression" />
      <MemberSignature Language="F#" Value="abstract member Update : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression&#xA;override this.Update : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression" Usage="jsonScalarExpression.Update json" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="json">The <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.Json" /> property of the result.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>This expression if no children changed, or an expression with the updated children.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.JsonScalarExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="jsonScalarExpression.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
