<Type Name="ValuesExpression" FullName="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression">
  <TypeSignature Language="C#" Value="public class ValuesExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase, Microsoft.EntityFrameworkCore.Query.SqlExpressions.IClonableTableExpressionBase" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValuesExpression extends Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase implements class Microsoft.EntityFrameworkCore.Query.SqlExpressions.IClonableTableExpressionBase" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class ValuesExpression&#xA;Inherits TableExpressionBase&#xA;Implements IClonableTableExpressionBase" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="F#" Value="type ValuesExpression = class&#xA;    inherit TableExpressionBase&#xA;    interface IClonableTableExpressionBase" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="C#" Value="public class ValuesExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" FrameworkAlternate="efcore-9.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValuesExpression extends Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" FrameworkAlternate="efcore-9.0" />
  <TypeSignature Language="VB.NET" Value="Public Class ValuesExpression&#xA;Inherits TableExpressionBase" FrameworkAlternate="efcore-9.0" />
  <TypeSignature Language="F#" Value="type ValuesExpression = class&#xA;    inherit TableExpressionBase" FrameworkAlternate="efcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.SqlExpressions.IClonableTableExpressionBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>
                    An expression that represents a constant table in SQL, sometimes known as a table value constructor.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValuesExpression (string? alias, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression valuesParameter, System.Collections.Generic.IReadOnlyList&lt;string&gt; columnNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression valuesParameter, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; columnNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.#ctor(System.String,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression,System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alias As String, valuesParameter As SqlParameterExpression, columnNames As IReadOnlyList(Of String))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression : string * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression (alias, valuesParameter, columnNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alias" Type="System.String" Index="0" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="valuesParameter" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="columnNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="alias">A string alias for the table source.</param>
        <param name="valuesParameter">A parameterized list of values.</param>
        <param name="columnNames">The names of the columns contained in this table.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValuesExpression (string? alias, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; rowValues, System.Collections.Generic.IReadOnlyList&lt;string&gt; columnNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; rowValues, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; columnNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression},System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alias As String, rowValues As IReadOnlyList(Of RowValueExpression), columnNames As IReadOnlyList(Of String))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression : string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression (alias, rowValues, columnNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alias" Type="System.String" Index="0" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="rowValues" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="columnNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="alias">A string alias for the table source.</param>
        <param name="rowValues">The row values for this table.</param>
        <param name="columnNames">The names of the columns contained in this table.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValuesExpression (string? alias, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; rowValues, System.Collections.Generic.IReadOnlyList&lt;string&gt; columnNames, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;? annotations = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; rowValues, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; columnNames, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alias As String, rowValues As IReadOnlyList(Of RowValueExpression), columnNames As IReadOnlyList(Of String), Optional annotations As IEnumerable(Of IAnnotation) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression : string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; * System.Collections.Generic.IReadOnlyList&lt;string&gt; * seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression (alias, rowValues, columnNames, annotations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alias" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="rowValues" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="columnNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="annotations" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Index="3" FrameworkAlternate="efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alias">A string alias for the table source.</param>
        <param name="rowValues">The row values for this table.</param>
        <param name="columnNames">The names of the columns contained in this table.</param>
        <param name="annotations">A collection of annotations associated with this expression.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValuesExpression (string? alias, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt;? rowValues, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression? valuesParameter, System.Collections.Generic.IReadOnlyList&lt;string&gt; columnNames, System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;? annotations = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; rowValues, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression valuesParameter, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; columnNames, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression},Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression,System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alias As String, rowValues As IReadOnlyList(Of RowValueExpression), valuesParameter As SqlParameterExpression, columnNames As IReadOnlyList(Of String), Optional annotations As IReadOnlyDictionary(Of String, IAnnotation) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression : string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression * System.Collections.Generic.IReadOnlyList&lt;string&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression (alias, rowValues, valuesParameter, columnNames, annotations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-9.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="alias" Type="System.String" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="rowValues" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt;" Index="1" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="valuesParameter" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression" Index="2" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="columnNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="3" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="annotations" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Index="4" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alias">To be added.</param>
        <param name="rowValues">To be added.</param>
        <param name="valuesParameter">To be added.</param>
        <param name="columnNames">To be added.</param>
        <param name="annotations">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alias">
      <MemberSignature Language="C#" Value="public override string? Alias { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Alias" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.Alias" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Alias As String" />
      <MemberSignature Language="F#" Value="member this.Alias : string" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.Alias" />
      <MemberSignature Language="C#" Value="public override string Alias { get; }" FrameworkAlternate="efcore-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The alias assigned to this table source.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As TableExpressionBase" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase&#xA;override this.Clone : unit -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Usage="valuesExpression.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.IClonableTableExpressionBase.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Clone (string? alias, System.Linq.Expressions.ExpressionVisitor cloningExpressionVisitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Clone(string alias, class System.Linq.Expressions.ExpressionVisitor cloningExpressionVisitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.Clone(System.String,System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone (alias As String, cloningExpressionVisitor As ExpressionVisitor) As TableExpressionBase" />
      <MemberSignature Language="F#" Value="override this.Clone : string * System.Linq.Expressions.ExpressionVisitor -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Usage="valuesExpression.Clone (alias, cloningExpressionVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" Index="0" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cloningExpressionVisitor" Type="System.Linq.Expressions.ExpressionVisitor" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="alias">To be added.</param>
        <param name="cloningExpressionVisitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ColumnNames">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;string&gt; ColumnNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; ColumnNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.ColumnNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ColumnNames As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="member this.ColumnNames : System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.ColumnNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The names of the columns contained in this table.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWithAnnotations">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase CreateWithAnnotations (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase CreateWithAnnotations(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.CreateWithAnnotations(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateWithAnnotations (annotations As IEnumerable(Of IAnnotation)) As TableExpressionBase" />
      <MemberSignature Language="F#" Value="override this.CreateWithAnnotations : seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Usage="valuesExpression.CreateWithAnnotations annotations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotations" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="annotations">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valuesExpression.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valuesExpression.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="protected override void Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Print (expressionPrinter As ExpressionPrinter)" />
      <MemberSignature Language="F#" Value="override this.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="valuesExpression.Print expressionPrinter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Quote">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression Quote ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression Quote() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.Quote" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Quote () As Expression" />
      <MemberSignature Language="F#" Value="override this.Quote : unit -&gt; System.Linq.Expressions.Expression" Usage="valuesExpression.Quote " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="RowValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; RowValues { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; RowValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.RowValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RowValues As IReadOnlyList(Of RowValueExpression)" />
      <MemberSignature Language="F#" Value="member this.RowValues : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt;" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.RowValues" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt;? RowValues { get; }" FrameworkAlternate="efcore-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The row values for this table.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression Update (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression valuesParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression Update(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression valuesParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (valuesParameter As SqlParameterExpression) As ValuesExpression" />
      <MemberSignature Language="F#" Value="abstract member Update : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression&#xA;override this.Update : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" Usage="valuesExpression.Update valuesParameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuesParameter" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="valuesParameter">To be added.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression Update (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; rowValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression Update(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; rowValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.Update(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (rowValues As IReadOnlyList(Of RowValueExpression)) As ValuesExpression" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression&#xA;override this.Update : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" Usage="valuesExpression.Update rowValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowValues" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="rowValues">To be added.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression Update (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt;? rowValues, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression? valuesParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression Update(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; rowValues, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression valuesParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.Update(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression},Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (rowValues As IReadOnlyList(Of RowValueExpression), valuesParameter As SqlParameterExpression) As ValuesExpression" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression&#xA;override this.Update : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt; * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" Usage="valuesExpression.Update (rowValues, valuesParameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowValues" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowValueExpression&gt;" Index="0" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="valuesParameter" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression" Index="1" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rowValues">To be added.</param>
        <param name="valuesParameter">To be added.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValuesParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression? ValuesParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression ValuesParameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.ValuesParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ValuesParameter As SqlParameterExpression" />
      <MemberSignature Language="F#" Value="member this.ValuesParameter : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.ValuesParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A parameter containing the list of values. The parameterized list get expanded to the actual value
                before the query SQL is generated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="valuesExpression.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WithAlias">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression WithAlias (string newAlias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression WithAlias(string newAlias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.WithAlias(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithAlias (newAlias As String) As ValuesExpression" />
      <MemberSignature Language="F#" Value="override this.WithAlias : string -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" Usage="valuesExpression.WithAlias newAlias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.PreserveBaseOverrides]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.PreserveBaseOverrides&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAlias" Type="System.String" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="newAlias">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WithAnnotations">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression WithAnnotations (System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression WithAnnotations(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression.WithAnnotations(System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function WithAnnotations (annotations As IReadOnlyDictionary(Of String, IAnnotation)) As ValuesExpression" />
      <MemberSignature Language="F#" Value="override this.WithAnnotations : System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression" Usage="valuesExpression.WithAnnotations annotations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.PreserveBaseOverrides]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.PreserveBaseOverrides&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.ValuesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotations" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="annotations">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
