<Type Name="DeleteExpression" FullName="Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression">
  <TypeSignature Language="C#" Value="public sealed class DeleteExpression : System.Linq.Expressions.Expression, Microsoft.EntityFrameworkCore.Query.IPrintableExpression" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DeleteExpression extends System.Linq.Expressions.Expression implements class Microsoft.EntityFrameworkCore.Query.IPrintableExpression" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DeleteExpression&#xA;Inherits Expression&#xA;Implements IPrintableExpression" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type DeleteExpression = class&#xA;    inherit Expression&#xA;    interface IPrintableExpression" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="C#" Value="public sealed class DeleteExpression : System.Linq.Expressions.Expression, Microsoft.EntityFrameworkCore.Query.IPrintableExpression, Microsoft.EntityFrameworkCore.Query.IRelationalQuotableExpression" FrameworkAlternate="efcore-9.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DeleteExpression extends System.Linq.Expressions.Expression implements class Microsoft.EntityFrameworkCore.Query.IPrintableExpression, class Microsoft.EntityFrameworkCore.Query.IRelationalQuotableExpression" FrameworkAlternate="efcore-9.0" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DeleteExpression&#xA;Inherits Expression&#xA;Implements IPrintableExpression, IRelationalQuotableExpression" FrameworkAlternate="efcore-9.0" />
  <TypeSignature Language="F#" Value="type DeleteExpression = class&#xA;    inherit Expression&#xA;    interface IRelationalQuotableExpression&#xA;    interface IPrintableExpression" FrameworkAlternate="efcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.Expression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IPrintableExpression</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-9.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IRelationalQuotableExpression</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    An expression that represents a DELETE operation in a SQL tree.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeleteExpression (Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression table, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression table, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As TableExpression, selectExpression As SelectExpression)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression (table, selectExpression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression" />
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="table">A table on which the delete operation is being applied.</param>
        <param name="selectExpression">A select expression which is used to determine which rows to delete.</param>
        <summary>
                Creates a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeleteExpression (Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression table, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression, System.Collections.Generic.ISet&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression table, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression, class System.Collections.Generic.ISet`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression,System.Collections.Generic.ISet{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As TableExpression, selectExpression As SelectExpression, tags As ISet(Of String))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression * System.Collections.Generic.ISet&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression (table, selectExpression, tags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-9.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="tags" Type="System.Collections.Generic.ISet&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <param name="selectExpression">To be added.</param>
        <param name="tags">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTags">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression ApplyTags (System.Collections.Generic.ISet&lt;string&gt; tags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression ApplyTags(class System.Collections.Generic.ISet`1&lt;string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.ApplyTags(System.Collections.Generic.ISet{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyTags (tags As ISet(Of String)) As DeleteExpression" />
      <MemberSignature Language="F#" Value="member this.ApplyTags : System.Collections.Generic.ISet&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression" Usage="deleteExpression.ApplyTags tags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.ISet&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="tags">A list of tags to apply.</param>
        <summary>
                Applies a given set of tags.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="deleteExpression.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="deleteExpression.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.ExpressionType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As ExpressionType" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Linq.Expressions.ExpressionType" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print (expressionPrinter As ExpressionPrinter)" />
      <MemberSignature Language="F#" Value="abstract member Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit&#xA;override this.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="deleteExpression.Print expressionPrinter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Quote">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Quote ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression Quote() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Quote" />
      <MemberSignature Language="VB.NET" Value="Public Function Quote () As Expression" />
      <MemberSignature Language="F#" Value="override this.Quote : unit -&gt; System.Linq.Expressions.Expression" Usage="deleteExpression.Quote " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IRelationalQuotableExpression.Quote</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SelectExpression">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression SelectExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression SelectExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.SelectExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectExpression As SelectExpression" />
      <MemberSignature Language="F#" Value="member this.SelectExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.SelectExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The select expression which is used to determine which rows to delete.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression Table" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As TableExpression" />
      <MemberSignature Language="F#" Value="member this.Table : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The table on which the delete operation is being applied.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; Tags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Tags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tags As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.Tags : System.Collections.Generic.ISet&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Tags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The list of tags applied to this <see cref="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As Type" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression Update (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression Update(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (selectExpression As SelectExpression) As DeleteExpression" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression" Usage="deleteExpression.Update selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="selectExpression">The <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.SelectExpression" /> property of the result.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>This expression if no children changed, or an expression with the updated children.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression Update (Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression table, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression Update(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression table, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Update(Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (table As TableExpression, selectExpression As SelectExpression) As DeleteExpression" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression" Usage="deleteExpression.Update (table, selectExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="table">The <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.Table" /> property of the result.</param>
        <param name="selectExpression">The <see cref="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.SelectExpression" /> property of the result.</param>
        <summary>
                Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will
                return this expression.
            </summary>
        <returns>This expression if no children changed, or an expression with the updated children.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.DeleteExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="deleteExpression.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
