<Type Name="ColumnValueSetter" FullName="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter">
  <TypeSignature Language="C#" Value="public class ColumnValueSetter" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ColumnValueSetter extends System.Object" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter" />
  <TypeSignature Language="VB.NET" Value="Public Class ColumnValueSetter" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="F#" Value="type ColumnValueSetter = class" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="C#" Value="public readonly struct ColumnValueSetter : IEquatable&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter&gt;" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ColumnValueSetter extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter&gt;" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Structure ColumnValueSetter&#xA;Implements IEquatable(Of ColumnValueSetter)" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="F#" Value="type ColumnValueSetter = struct" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-8.0">System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-8.0">
      <InterfaceName>System.IEquatable&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="efcore-8.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{DebuggerDisplay(),nq}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{DebuggerDisplay(),nq}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="efcore-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="Column">A column to be updated.</param>
    <param name="Value">A value to be assigned to the column.</param>
    <summary>
      <para>
                    An object that represents a column = value construct in a SET clause of UPDATE command in SQL tree.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnValueSetter (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression column, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression value);" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression column, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression value) cil managed" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.#ctor(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (column As ColumnExpression, value As SqlExpression)" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter (column, value)" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="C#" Value="public ColumnValueSetter (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression Column, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Value);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression Column, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Value) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Column As ColumnExpression, Value As SqlExpression)" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter (Column, Value)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="Column" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Index="1" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="Value" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="column">A column to be updated.</param>
        <param name="value">A value to be assigned to the column.</param>
        <param name="Column">A column to be updated.</param>
        <param name="Value">A value to be assigned to the column.</param>
        <summary>
          <para>
                    An object that represents a column = value construct in a SET clause of UPDATE command in SQL tree.
                </para>
          <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression Column { get; }" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.Column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Column As ColumnExpression" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.Column : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.Column" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression Column { get; init; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property Column As ColumnExpression" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Column : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression with get, set" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.Column" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A column to be updated.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct">
      <MemberSignature Language="C#" Value="public void Deconstruct (out Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression Column, out Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Deconstruct([out] class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression&amp; Column, [out] class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&amp; Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.Deconstruct(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression@,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deconstruct (ByRef Column As ColumnExpression, ByRef Value As SqlExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Column" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" RefType="out" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="Value" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" RefType="out" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="Column">To be added.</param>
        <param name="Value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.Equals(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ColumnValueSetter) As Boolean" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="columnValueSetter.Equals obj" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="columnValueSetter.GetHashCode " FrameworkAlternate="efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter left, Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter left, valuetype Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.op_Equality(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter,Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ColumnValueSetter, right As ColumnValueSetter) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter left, Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter left, valuetype Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.op_Inequality(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter,Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ColumnValueSetter, right As ColumnValueSetter) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Value { get; }" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Value As SqlExpression" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="F#" Value="member this.Value : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.Value" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression Value { get; init; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As SqlExpression" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Value : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression with get, set" Usage="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnValueSetter.Value" FrameworkAlternate="efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A value to be assigned to the column.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
