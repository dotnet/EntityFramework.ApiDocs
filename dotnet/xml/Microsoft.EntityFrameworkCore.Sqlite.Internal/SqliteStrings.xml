<Type Name="SqliteStrings" FullName="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings">
  <TypeSignature Language="C#" Value="public static class SqliteStrings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqliteStrings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteStrings" />
  <TypeSignature Language="F#" Value="type SqliteStrings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AggregateOperationNotSupported">
      <MemberSignature Language="C#" Value="public static string AggregateOperationNotSupported (object aggregateOperator, object type);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AggregateOperationNotSupported(object aggregateOperator, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.AggregateOperationNotSupported(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AggregateOperationNotSupported (aggregateOperator As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member AggregateOperationNotSupported : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.AggregateOperationNotSupported (aggregateOperator, type)" />
      <MemberSignature Language="C#" Value="public static string AggregateOperationNotSupported (object? aggregateOperator, object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregateOperator" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="aggregateOperator">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                SQLite cannot apply aggregate operator '{aggregateOperator}' on expressions of type '{type}'. Convert the values to a supported type, or use LINQ to Objects to aggregate the results on the client side.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNotSupported">
      <MemberSignature Language="C#" Value="public static string ApplyNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplyNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.ApplyNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplyNotSupported As String" />
      <MemberSignature Language="F#" Value="static member ApplyNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.ApplyNotSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Translating this query requires the SQL APPLY operation, which is not supported on SQLite.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputedColumnsNotSupported">
      <MemberSignature Language="C#" Value="public static string ComputedColumnsNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ComputedColumnsNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.ComputedColumnsNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ComputedColumnsNotSupported As String" />
      <MemberSignature Language="F#" Value="static member ComputedColumnsNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.ComputedColumnsNotSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                SQLite doesn't support computed columns. For more information, see http://go.microsoft.com/fwlink/?LinkId=723262.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNotSupported">
      <MemberSignature Language="C#" Value="public static string DefaultNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.DefaultNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultNotSupported As String" />
      <MemberSignature Language="F#" Value="static member DefaultNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.DefaultNotSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Translating this operation requires the 'DEFAULT', which is not supported on SQLite.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnNameSridMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateColumnNameSridMismatch (object entityType1, object property1, object entityType2, object property2, object columnName, object table);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateColumnNameSridMismatch(object entityType1, object property1, object entityType2, object property2, object columnName, object table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.DuplicateColumnNameSridMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateColumnNameSridMismatch (entityType1 As Object, property1 As Object, entityType2 As Object, property2 As Object, columnName As Object, table As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnNameSridMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.DuplicateColumnNameSridMismatch (entityType1, property1, entityType2, property2, columnName, table)" />
      <MemberSignature Language="C#" Value="public static string DuplicateColumnNameSridMismatch (object? entityType1, object? property1, object? entityType2, object? property2, object? columnName, object? table);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property1" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property2" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnName" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="property1">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="property2">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}', but are configured with different SRIDs.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleSqlReturningClauseMismatch">
      <MemberSignature Language="C#" Value="public static string IncompatibleSqlReturningClauseMismatch (object? table, object? entityType, object? otherEntityType, object? entityTypeWithSqlReturningClause, object? entityTypeWithoutSqlReturningClause);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncompatibleSqlReturningClauseMismatch(object table, object entityType, object otherEntityType, object entityTypeWithSqlReturningClause, object entityTypeWithoutSqlReturningClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.IncompatibleSqlReturningClauseMismatch(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncompatibleSqlReturningClauseMismatch (table As Object, entityType As Object, otherEntityType As Object, entityTypeWithSqlReturningClause As Object, entityTypeWithoutSqlReturningClause As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncompatibleSqlReturningClauseMismatch : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.IncompatibleSqlReturningClauseMismatch (table, entityType, otherEntityType, entityTypeWithSqlReturningClause, entityTypeWithoutSqlReturningClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityTypeWithSqlReturningClause" Type="System.Object" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityTypeWithoutSqlReturningClause" Type="System.Object" Index="4" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <param name="entityTypeWithSqlReturningClause">To be added.</param>
        <param name="entityTypeWithoutSqlReturningClause">To be added.</param>
        <summary>
                Cannot use table '{table}' for entity type '{entityType}' since it is being used for entity type '{otherEntityType}' and entity type '{entityTypeWithSqlReturningClause}' is configured to use the SQL RETURNING clause, but entity type '{entityTypeWithoutSqlReturningClause}' is not.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidMigrationOperation">
      <MemberSignature Language="C#" Value="public static string InvalidMigrationOperation (object operation);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidMigrationOperation(object operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.InvalidMigrationOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidMigrationOperation (operation As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidMigrationOperation : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.InvalidMigrationOperation operation" />
      <MemberSignature Language="C#" Value="public static string InvalidMigrationOperation (object? operation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>
                SQLite does not support this migration operation ('{operation}'). See https://go.microsoft.com/fwlink/?LinkId=723262 for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyScaffoldErrorPrincipalTableNotFound">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogForeignKeyScaffoldErrorPrincipalTableNotFound;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogForeignKeyScaffoldErrorPrincipalTableNotFound" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogForeignKeyScaffoldErrorPrincipalTableNotFound" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogForeignKeyScaffoldErrorPrincipalTableNotFound As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogForeignKeyScaffoldErrorPrincipalTableNotFound : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogForeignKeyScaffoldErrorPrincipalTableNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Could not scaffold the foreign key '{foreignKeyName}'. The referenced table could not be found. This most likely occurred because the referenced table was excluded from scaffolding.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundColumn">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,bool,string&gt; LogFoundColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, string, bool, string&gt; LogFoundColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundColumn" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundColumn As EventDefinition(Of String, String, String, Boolean, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundColumn : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, bool, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.Boolean,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found column on table: {tableName}, column name: {columnName}, data type: {dataType}, not nullable: {isNotNullable}, default value: {defaultValue}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundForeignKey">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,long,string,string&gt; LogFoundForeignKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, int64, string, string&gt; LogFoundForeignKey" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundForeignKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundForeignKey As EventDefinition(Of String, Long, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundForeignKey : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, int64, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundForeignKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.Int64,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found foreign key on table: {tableName}, id: {id}, principal table: {principalTableName}, delete action: {deleteAction}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundIndex">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,bool?&gt; LogFoundIndex;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, valuetype System.Nullable`1&lt;bool&gt;&gt; LogFoundIndex" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundIndex As EventDefinition(Of String, String, Nullable(Of Boolean)) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundIndex : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, Nullable&lt;bool&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundIndex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.Nullable&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found index with name: {indexName}, table: {tableName}, is unique: {isUnique}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundPrimaryKey">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogFoundPrimaryKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogFoundPrimaryKey" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundPrimaryKey As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundPrimaryKey : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundPrimaryKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found primary key with name: {primaryKeyName}, table: {tableName}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundTable">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogFoundTable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogFoundTable" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundTable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundTable As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundTable : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundTable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found table with name: {name}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundUniqueConstraint">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogFoundUniqueConstraint;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogFoundUniqueConstraint" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundUniqueConstraint" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundUniqueConstraint As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundUniqueConstraint : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogFoundUniqueConstraint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found unique constraint with name: {uniqueConstraintName}, table: {tableName}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMissingTable">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogMissingTable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogMissingTable" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogMissingTable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogMissingTable As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogMissingTable : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogMissingTable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unable to find a table in the database matching the selected table {table}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPrincipalColumnNotFound">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogPrincipalColumnNotFound;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogPrincipalColumnNotFound" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogPrincipalColumnNotFound" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogPrincipalColumnNotFound As EventDefinition(Of String, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogPrincipalColumnNotFound : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogPrincipalColumnNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                For foreign key with identity {id} on table {tableName}, unable to find the column called {principalColumnName} on the foreign key's principal table, {principaltableName}. Skipping foreign key.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSchemaConfigured">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogSchemaConfigured;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogSchemaConfigured" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogSchemaConfigured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogSchemaConfigured As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogSchemaConfigured : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogSchemaConfigured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The entity type '{entityType}' is configured to use schema '{schema}'. SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSequenceConfigured">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogSequenceConfigured;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogSequenceConfigured" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogSequenceConfigured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogSequenceConfigured As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogSequenceConfigured : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogSequenceConfigured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The model was configured with the database sequence '{sequence}'. SQLite does not support sequences.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogUsingSchemaSelectionsWarning">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogUsingSchemaSelectionsWarning;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogUsingSchemaSelectionsWarning" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogUsingSchemaSelectionsWarning" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogUsingSchemaSelectionsWarning As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogUsingSchemaSelectionsWarning : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.LogUsingSchemaSelectionsWarning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                SQLite doesn't support schemas. The specified schema selection arguments will be ignored.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationScriptGenerationNotSupported">
      <MemberSignature Language="C#" Value="public static string MigrationScriptGenerationNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string MigrationScriptGenerationNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.MigrationScriptGenerationNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MigrationScriptGenerationNotSupported As String" />
      <MemberSignature Language="F#" Value="static member MigrationScriptGenerationNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.MigrationScriptGenerationNotSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Generating idempotent scripts for migrations is not currently supported for SQLite. See https://go.microsoft.com/fwlink/?LinkId=723262 for more information and examples.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByNotSupported">
      <MemberSignature Language="C#" Value="public static string OrderByNotSupported (object type);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string OrderByNotSupported(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.OrderByNotSupported(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrderByNotSupported (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member OrderByNotSupported : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.OrderByNotSupported type" />
      <MemberSignature Language="C#" Value="public static string OrderByNotSupported (object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                SQLite does not support expressions of type '{type}' in ORDER BY clauses. Convert the values to a supported type, or use LINQ to Objects to order the results on the client side.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryingIntoJsonCollectionsNotSupported">
      <MemberSignature Language="C#" Value="public static string QueryingIntoJsonCollectionsNotSupported (object? sqliteVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QueryingIntoJsonCollectionsNotSupported(object sqliteVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.QueryingIntoJsonCollectionsNotSupported(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryingIntoJsonCollectionsNotSupported (sqliteVersion As Object) As String" />
      <MemberSignature Language="F#" Value="static member QueryingIntoJsonCollectionsNotSupported : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.QueryingIntoJsonCollectionsNotSupported sqliteVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqliteVersion" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="sqliteVersion">To be added.</param>
        <summary>
                SQLite version {sqliteVersion} is being used, but version 3.38.0 or higher is required for querying into JSON collections.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequencesNotSupported">
      <MemberSignature Language="C#" Value="public static string SequencesNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SequencesNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.SequencesNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SequencesNotSupported As String" />
      <MemberSignature Language="F#" Value="static member SequencesNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.SequencesNotSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                SQLite does not support sequences. See https://go.microsoft.com/fwlink/?LinkId=723262 for more information and examples.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoredProceduresNotSupported">
      <MemberSignature Language="C#" Value="public static string StoredProceduresNotSupported (object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StoredProceduresNotSupported(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.StoredProceduresNotSupported(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StoredProceduresNotSupported (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member StoredProceduresNotSupported : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteStrings.StoredProceduresNotSupported entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                SQLite does not support stored procedures, but one has been configured on entity type '{entityType}'. See https://go.microsoft.com/fwlink/?LinkId=723262 for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
