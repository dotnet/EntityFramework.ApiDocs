<Type Name="SqliteResources" FullName="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources">
  <TypeSignature Language="C#" Value="public static class SqliteResources" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqliteResources extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteResources" />
  <TypeSignature Language="F#" Value="type SqliteResources = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LogCompositeKeyWithValueGeneration">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?,string?&gt; LogCompositeKeyWithValueGeneration (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogCompositeKeyWithValueGeneration(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogCompositeKeyWithValueGeneration(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogCompositeKeyWithValueGeneration (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogCompositeKeyWithValueGeneration : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogCompositeKeyWithValueGeneration logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The entity type '{entityType}' has composite key '{key}' which is configured to use generated values. SQLite does not support generated values on composite keys.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyScaffoldErrorPrincipalTableNotFound">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogForeignKeyScaffoldErrorPrincipalTableNotFound (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogForeignKeyScaffoldErrorPrincipalTableNotFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogForeignKeyScaffoldErrorPrincipalTableNotFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogForeignKeyScaffoldErrorPrincipalTableNotFound (logger As IDiagnosticsLogger) As EventDefinition(Of String)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member LogForeignKeyScaffoldErrorPrincipalTableNotFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogForeignKeyScaffoldErrorPrincipalTableNotFound logger" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogForeignKeyScaffoldErrorPrincipalTableNotFound (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogForeignKeyScaffoldErrorPrincipalTableNotFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogForeignKeyScaffoldErrorPrincipalTableNotFound (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member LogForeignKeyScaffoldErrorPrincipalTableNotFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogForeignKeyScaffoldErrorPrincipalTableNotFound logger" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?,string?,string?&gt; LogForeignKeyScaffoldErrorPrincipalTableNotFound (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Skipping foreign key with identity '{id}' on table '{tableName}' since principal table '{principalTableName}' was not found in the model. This usually happens when the principal table was not included in the selection set.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFormatWarning">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?,string?,string?&gt; LogFormatWarning (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogFormatWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFormatWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogFormatWarning (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogFormatWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFormatWarning logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The column '{columnName}' on table '{tableName}' should map to a property of type '{type}', but its values are in an incompatible format. Using a different type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundColumn">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,bool,string&gt; LogFoundColumn (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, string, bool, string&gt; LogFoundColumn(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundColumn(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogFoundColumn (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, Boolean, String)" />
      <MemberSignature Language="F#" Value="static member LogFoundColumn : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, bool, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundColumn logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?,string?,string?,bool,string?&gt; LogFoundColumn (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.Boolean,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Found column on table '{tableName}' with name: '{columnName}', data type: {dataType}, not nullable: {notNullable}, default value: {defaultValue}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundForeignKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,long,string,string&gt; LogFoundForeignKey (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, int64, string, string&gt; LogFoundForeignKey(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundForeignKey(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogFoundForeignKey (logger As IDiagnosticsLogger) As EventDefinition(Of String, Long, String, String)" />
      <MemberSignature Language="F#" Value="static member LogFoundForeignKey : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, int64, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundForeignKey logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?,long,string?,string?&gt; LogFoundForeignKey (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.Int64,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Found foreign key on table '{tableName}', id: {id}, principal table: {principalTableName}, delete action: {deleteAction}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundIndex">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,bool?&gt; LogFoundIndex (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, valuetype System.Nullable`1&lt;bool&gt;&gt; LogFoundIndex(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundIndex(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogFoundIndex (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member LogFoundIndex : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, Nullable&lt;bool&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundIndex logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?,string?,bool?&gt; LogFoundIndex (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.Nullable&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Found index on table '{tableName}' with name '{indexName}', is unique: {isUnique}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundPrimaryKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogFoundPrimaryKey (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogFoundPrimaryKey(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundPrimaryKey(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogFoundPrimaryKey (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogFoundPrimaryKey : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundPrimaryKey logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?,string?&gt; LogFoundPrimaryKey (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Found primary key on table '{tableName}' with name {primaryKeyName}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundTable">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogFoundTable (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogFoundTable(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundTable(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogFoundTable (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogFoundTable : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundTable logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?&gt; LogFoundTable (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Found table with name: '{name}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundUniqueConstraint">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogFoundUniqueConstraint (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogFoundUniqueConstraint(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundUniqueConstraint(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogFoundUniqueConstraint (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogFoundUniqueConstraint : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogFoundUniqueConstraint logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?,string?&gt; LogFoundUniqueConstraint (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Found unique constraint on table '{tableName}' with name: {uniqueConstraintName}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogInferringTypes">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?&gt; LogInferringTypes (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogInferringTypes(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogInferringTypes(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogInferringTypes (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogInferringTypes : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogInferringTypes logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Querying table '{tableName}' to determine an appropriate CLR type for each column.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMissingTable">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogMissingTable (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogMissingTable(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogMissingTable(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogMissingTable (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogMissingTable : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogMissingTable logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?&gt; LogMissingTable (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Unable to find a table in the database matching the selected table '{table}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogOutOfRangeWarning">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?,string?,string?&gt; LogOutOfRangeWarning (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogOutOfRangeWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogOutOfRangeWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogOutOfRangeWarning (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogOutOfRangeWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogOutOfRangeWarning logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The column '{columnName}' on table '{tableName}' should map to a property of type '{type}', but its values are out of range. Using a different type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPrincipalColumnNotFound">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogPrincipalColumnNotFound (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogPrincipalColumnNotFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogPrincipalColumnNotFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogPrincipalColumnNotFound (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogPrincipalColumnNotFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogPrincipalColumnNotFound logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?,string?,string?,string?&gt; LogPrincipalColumnNotFound (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Skipping foreign key with identity '{id}' on table '{tableName}', since the principal column '{principalColumnName}' on the foreign key's principal table, '{principalTableName}', was not found in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSchemaConfigured">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogSchemaConfigured (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogSchemaConfigured(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogSchemaConfigured(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogSchemaConfigured (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogSchemaConfigured : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogSchemaConfigured logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The entity type '{entityType}' is configured to use schema '{schema}', but SQLite does not support schemas. This configuration will be ignored by the SQLite provider.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSequenceConfigured">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogSequenceConfigured (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogSequenceConfigured(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogSequenceConfigured(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogSequenceConfigured (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogSequenceConfigured : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogSequenceConfigured logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The model was configured with the database sequence '{sequence}'. SQLite does not support sequences.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogTableRebuildPendingWarning">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogTableRebuildPendingWarning (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogTableRebuildPendingWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogTableRebuildPendingWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogTableRebuildPendingWarning (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogTableRebuildPendingWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogTableRebuildPendingWarning logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                An operation of type '{operationType}' will be attempted while a rebuild of table '{tableName}' is pending. The database may not be in an expected state. Review the SQL generated by this migration to help diagnose any failures. Consider moving these operations to a subsequent migration.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogUnexpectedConnectionType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogUnexpectedConnectionType (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogUnexpectedConnectionType(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogUnexpectedConnectionType(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogUnexpectedConnectionType (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogUnexpectedConnectionType : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogUnexpectedConnectionType logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                A connection of an unexpected type ({type}) is being used. The SQL functions prefixed with 'ef_' could not be created automatically. Manually define them if you encounter errors while querying.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogUsingSchemaSelectionsWarning">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogUsingSchemaSelectionsWarning (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogUsingSchemaSelectionsWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogUsingSchemaSelectionsWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogUsingSchemaSelectionsWarning (logger As IDiagnosticsLogger) As EventDefinition" />
      <MemberSignature Language="F#" Value="static member LogUsingSchemaSelectionsWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Sqlite.Internal.SqliteResources.LogUsingSchemaSelectionsWarning logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                SQLite doesn't support schemas. The specified schema selection arguments will be ignored.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
