<Type Name="SqlServerByteArrayTypeMapping" FullName="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping">
  <TypeSignature Language="C#" Value="public class SqlServerByteArrayTypeMapping : Microsoft.EntityFrameworkCore.Storage.ByteArrayTypeMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerByteArrayTypeMapping extends Microsoft.EntityFrameworkCore.Storage.ByteArrayTypeMapping" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerByteArrayTypeMapping&#xA;Inherits ByteArrayTypeMapping" />
  <TypeSignature Language="F#" Value="type SqlServerByteArrayTypeMapping = class&#xA;    inherit ByteArrayTypeMapping" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.ByteArrayTypeMapping</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlServerByteArrayTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parameters As RelationalTypeMapping.RelationalTypeMappingParameters)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlServerByteArrayTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters, System.Data.SqlDbType? sqlDbType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters, valuetype System.Nullable`1&lt;valuetype System.Data.SqlDbType&gt; sqlDbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.Nullable{System.Data.SqlDbType})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parameters As RelationalTypeMapping.RelationalTypeMappingParameters, sqlDbType As Nullable(Of SqlDbType))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters * Nullable&lt;System.Data.SqlDbType&gt; -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping (parameters, sqlDbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sqlDbType" Type="System.Nullable&lt;System.Data.SqlDbType&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <param name="sqlDbType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerByteArrayTypeMapping (string storeType = default, int? size = default, bool fixedLength = false, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer = default, Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix? storeTypePostfix = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storeType, valuetype System.Nullable`1&lt;int32&gt; size, bool fixedLength, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt; storeTypePostfix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.#ctor(System.String,System.Nullable{System.Int32},System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,System.Nullable{Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional storeType As String = Nothing, Optional size As Nullable(Of Integer) = Nothing, Optional fixedLength As Boolean = false, Optional comparer As ValueComparer = Nothing, Optional storeTypePostfix As Nullable(Of StoreTypePostfix) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping : string * Nullable&lt;int&gt; * bool * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Nullable&lt;Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt; -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping (storeType, size, fixedLength, comparer, storeTypePostfix)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="fixedLength" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="3" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="storeTypePostfix" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt;" Index="4" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="storeType">To be added.</param>
        <param name="size">To be added.</param>
        <param name="fixedLength">To be added.</param>
        <param name="comparer">To be added.</param>
        <param name="storeTypePostfix">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerByteArrayTypeMapping (string storeType, System.Data.DbType? dbType = 1, int? size = default, bool fixedLength = false, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer = default, Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix? storeTypePostfix = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storeType, valuetype System.Nullable`1&lt;valuetype System.Data.DbType&gt; dbType, valuetype System.Nullable`1&lt;int32&gt; size, bool fixedLength, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt; storeTypePostfix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType},System.Nullable{System.Int32},System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,System.Nullable{Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeType As String, Optional dbType As Nullable(Of DbType) = 1, Optional size As Nullable(Of Integer) = Nothing, Optional fixedLength As Boolean = false, Optional comparer As ValueComparer = Nothing, Optional storeTypePostfix As Nullable(Of StoreTypePostfix) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping : string * Nullable&lt;System.Data.DbType&gt; * Nullable&lt;int&gt; * bool * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Nullable&lt;Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt; -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping (storeType, dbType, size, fixedLength, comparer, storeTypePostfix)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="dbType" Type="System.Nullable&lt;System.Data.DbType&gt;" Index="1" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="2" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="fixedLength" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="4" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="storeTypePostfix" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt;" Index="5" FrameworkAlternate="efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="storeType">To be added.</param>
        <param name="dbType">To be added.</param>
        <param name="size">To be added.</param>
        <param name="fixedLength">To be added.</param>
        <param name="comparer">To be added.</param>
        <param name="storeTypePostfix">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerByteArrayTypeMapping (string storeType = default, int? size = default, bool fixedLength = false, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer = default, System.Data.SqlDbType? sqlDbType = default, Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix? storeTypePostfix = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storeType, valuetype System.Nullable`1&lt;int32&gt; size, bool fixedLength, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, valuetype System.Nullable`1&lt;valuetype System.Data.SqlDbType&gt; sqlDbType, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt; storeTypePostfix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.#ctor(System.String,System.Nullable{System.Int32},System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,System.Nullable{System.Data.SqlDbType},System.Nullable{Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional storeType As String = Nothing, Optional size As Nullable(Of Integer) = Nothing, Optional fixedLength As Boolean = false, Optional comparer As ValueComparer = Nothing, Optional sqlDbType As Nullable(Of SqlDbType) = Nothing, Optional storeTypePostfix As Nullable(Of StoreTypePostfix) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping : string * Nullable&lt;int&gt; * bool * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Nullable&lt;System.Data.SqlDbType&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt; -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping (storeType, size, fixedLength, comparer, sqlDbType, storeTypePostfix)" />
      <MemberSignature Language="C#" Value="public SqlServerByteArrayTypeMapping (string? storeType = default, int? size = default, bool fixedLength = false, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer = default, System.Data.SqlDbType? sqlDbType = default, Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix? storeTypePostfix = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fixedLength" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sqlDbType" Type="System.Nullable&lt;System.Data.SqlDbType&gt;" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeTypePostfix" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix&gt;" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="storeType">To be added.</param>
        <param name="size">To be added.</param>
        <param name="fixedLength">To be added.</param>
        <param name="comparer">To be added.</param>
        <param name="sqlDbType">To be added.</param>
        <param name="storeTypePostfix">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone (parameters As RelationalTypeMapping.RelationalTypeMappingParameters) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="sqlServerByteArrayTypeMapping.Clone parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameters">The parameters for this mapping.</param>
        <summary>
                Creates a copy of this mapping.
            </summary>
        <returns>The newly created mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping Clone (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping Clone(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone (converter As ValueConverter) As CoreTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Usage="sqlServerByteArrayTypeMapping.Clone converter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="0" FrameworkAlternate="efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="converter">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (string storeType, int? size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone(string storeType, valuetype System.Nullable`1&lt;int32&gt; size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.Clone(System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone (storeType As String, size As Nullable(Of Integer)) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : string * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="sqlServerByteArrayTypeMapping.Clone (storeType, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="storeType">To be added.</param>
        <param name="size">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureParameter">
      <MemberSignature Language="C#" Value="protected override void ConfigureParameter (System.Data.Common.DbParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ConfigureParameter(class System.Data.Common.DbParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ConfigureParameter (parameter As DbParameter)" />
      <MemberSignature Language="F#" Value="override this.ConfigureParameter : System.Data.Common.DbParameter -&gt; unit" Usage="sqlServerByteArrayTypeMapping.ConfigureParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As SqlServerByteArrayTypeMapping" />
      <MemberSignature Language="F#" Value="static member Default : Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping" Usage="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateNonNullSqlLiteral">
      <MemberSignature Language="C#" Value="protected override string GenerateNonNullSqlLiteral (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GenerateNonNullSqlLiteral(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerByteArrayTypeMapping.GenerateNonNullSqlLiteral(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GenerateNonNullSqlLiteral (value As Object) As String" />
      <MemberSignature Language="F#" Value="override this.GenerateNonNullSqlLiteral : obj -&gt; string" Usage="sqlServerByteArrayTypeMapping.GenerateNonNullSqlLiteral value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
