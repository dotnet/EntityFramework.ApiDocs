<Type Name="SqlServerTransaction" FullName="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction">
  <TypeSignature Language="C#" Value="public class SqlServerTransaction : Microsoft.EntityFrameworkCore.Storage.RelationalTransaction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerTransaction extends Microsoft.EntityFrameworkCore.Storage.RelationalTransaction" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerTransaction&#xA;Inherits RelationalTransaction" />
  <TypeSignature Language="F#" Value="type SqlServerTransaction = class&#xA;    inherit RelationalTransaction" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.RelationalTransaction</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerTransaction (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; logger, bool transactionOwned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; logger, bool transactionOwned) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, logger As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), transactionOwned As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * bool -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction (connection, transaction, transactionId, logger, transactionOwned)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" Index="3" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="transactionOwned" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="transaction">To be added.</param>
        <param name="transactionId">To be added.</param>
        <param name="logger">To be added.</param>
        <param name="transactionOwned">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerTransaction (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; logger, bool transactionOwned, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; logger, bool transactionOwned, class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},System.Boolean,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, logger As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), transactionOwned As Boolean, sqlGenerationHelper As ISqlGenerationHelper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * bool * Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction (connection, transaction, transactionId, logger, transactionOwned, sqlGenerationHelper)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionOwned" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Index="5" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="transaction">To be added.</param>
        <param name="transactionId">To be added.</param>
        <param name="logger">To be added.</param>
        <param name="transactionOwned">To be added.</param>
        <param name="sqlGenerationHelper">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateSavepointSql">
      <MemberSignature Language="C#" Value="protected override string GetCreateSavepointSql (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetCreateSavepointSql(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction.GetCreateSavepointSql(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCreateSavepointSql (name As String) As String" />
      <MemberSignature Language="F#" Value="override this.GetCreateSavepointSql : string -&gt; string" Usage="sqlServerTransaction.GetCreateSavepointSql name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetRollbackToSavepointSql">
      <MemberSignature Language="C#" Value="protected override string GetRollbackToSavepointSql (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetRollbackToSavepointSql(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction.GetRollbackToSavepointSql(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetRollbackToSavepointSql (name As String) As String" />
      <MemberSignature Language="F#" Value="override this.GetRollbackToSavepointSql : string -&gt; string" Usage="sqlServerTransaction.GetRollbackToSavepointSql name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ReleaseSavepoint">
      <MemberSignature Language="C#" Value="public override void ReleaseSavepoint (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ReleaseSavepoint(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction.ReleaseSavepoint(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ReleaseSavepoint (name As String)" />
      <MemberSignature Language="F#" Value="override this.ReleaseSavepoint : string -&gt; unit" Usage="sqlServerTransaction.ReleaseSavepoint name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ReleaseSavepointAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task ReleaseSavepointAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task ReleaseSavepointAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction.ReleaseSavepointAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReleaseSavepointAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="override this.ReleaseSavepointAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlServerTransaction.ReleaseSavepointAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SupportsSavepoints">
      <MemberSignature Language="C#" Value="public override bool SupportsSavepoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSavepoints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction.SupportsSavepoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsSavepoints As Boolean" />
      <MemberSignature Language="F#" Value="member this.SupportsSavepoints : bool" Usage="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTransaction.SupportsSavepoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
