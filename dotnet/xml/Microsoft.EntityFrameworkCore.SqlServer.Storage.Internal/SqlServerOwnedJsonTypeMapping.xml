<Type Name="SqlServerOwnedJsonTypeMapping" FullName="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping">
  <TypeSignature Language="C#" Value="public class SqlServerOwnedJsonTypeMapping : Microsoft.EntityFrameworkCore.Storage.JsonTypeMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerOwnedJsonTypeMapping extends Microsoft.EntityFrameworkCore.Storage.JsonTypeMapping" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerOwnedJsonTypeMapping&#xA;Inherits JsonTypeMapping" />
  <TypeSignature Language="F#" Value="type SqlServerOwnedJsonTypeMapping = class&#xA;    inherit JsonTypeMapping" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.JsonTypeMapping</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlServerOwnedJsonTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parameters As RelationalTypeMapping.RelationalTypeMappingParameters)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerOwnedJsonTypeMapping (string storeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeType As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping : string -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping storeType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone (parameters As RelationalTypeMapping.RelationalTypeMappingParameters) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="sqlServerOwnedJsonTypeMapping.Clone parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureParameter">
      <MemberSignature Language="C#" Value="protected override void ConfigureParameter (System.Data.Common.DbParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ConfigureParameter(class System.Data.Common.DbParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ConfigureParameter (parameter As DbParameter)" />
      <MemberSignature Language="F#" Value="override this.ConfigureParameter : System.Data.Common.DbParameter -&gt; unit" Usage="sqlServerOwnedJsonTypeMapping.ConfigureParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUtf8Stream">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryStream CreateUtf8Stream (string json);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryStream CreateUtf8Stream(string json) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.CreateUtf8Stream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUtf8Stream (json As String) As MemoryStream" />
      <MemberSignature Language="F#" Value="static member CreateUtf8Stream : string -&gt; System.IO.MemoryStream" Usage="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.CreateUtf8Stream json" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="json">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeDataReaderExpression">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression CustomizeDataReaderExpression (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression CustomizeDataReaderExpression(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.CustomizeDataReaderExpression(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CustomizeDataReaderExpression (expression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="override this.CustomizeDataReaderExpression : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="sqlServerOwnedJsonTypeMapping.CustomizeDataReaderExpression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As SqlServerOwnedJsonTypeMapping" />
      <MemberSignature Language="F#" Value="static member Default : Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping" Usage="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeSqlLiteral">
      <MemberSignature Language="C#" Value="protected virtual string EscapeSqlLiteral (string literal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EscapeSqlLiteral(string literal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.EscapeSqlLiteral(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EscapeSqlLiteral (literal As String) As String" />
      <MemberSignature Language="F#" Value="abstract member EscapeSqlLiteral : string -&gt; string&#xA;override this.EscapeSqlLiteral : string -&gt; string" Usage="sqlServerOwnedJsonTypeMapping.EscapeSqlLiteral literal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="literal" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="literal">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateNonNullSqlLiteral">
      <MemberSignature Language="C#" Value="protected override string GenerateNonNullSqlLiteral (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GenerateNonNullSqlLiteral(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.GenerateNonNullSqlLiteral(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GenerateNonNullSqlLiteral (value As Object) As String" />
      <MemberSignature Language="F#" Value="override this.GenerateNonNullSqlLiteral : obj -&gt; string" Usage="sqlServerOwnedJsonTypeMapping.GenerateNonNullSqlLiteral value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataReaderMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetDataReaderMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetDataReaderMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.GetDataReaderMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataReaderMethod () As MethodInfo" />
      <MemberSignature Language="F#" Value="override this.GetDataReaderMethod : unit -&gt; System.Reflection.MethodInfo" Usage="sqlServerOwnedJsonTypeMapping.GetDataReaderMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnedJsonTypeDefault">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping OwnedJsonTypeDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping OwnedJsonTypeDefault" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.OwnedJsonTypeDefault" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OwnedJsonTypeDefault As SqlServerOwnedJsonTypeMapping" />
      <MemberSignature Language="F#" Value="static member OwnedJsonTypeDefault : Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping" Usage="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping.OwnedJsonTypeDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerOwnedJsonTypeMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
