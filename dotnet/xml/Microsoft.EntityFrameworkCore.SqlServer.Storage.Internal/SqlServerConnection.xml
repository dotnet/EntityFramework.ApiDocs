<Type Name="SqlServerConnection" FullName="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection">
  <TypeSignature Language="C#" Value="public class SqlServerConnection : Microsoft.EntityFrameworkCore.Storage.RelationalConnection, IDisposable, Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection, Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerConnection extends Microsoft.EntityFrameworkCore.Storage.RelationalConnection implements class Microsoft.EntityFrameworkCore.Infrastructure.IResettableService, class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection, class Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, class Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager, class System.IDisposable" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerConnection&#xA;Inherits RelationalConnection&#xA;Implements IDbContextTransactionManager, IDisposable, ISqlServerConnection" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type SqlServerConnection = class&#xA;    inherit RelationalConnection&#xA;    interface ISqlServerConnection&#xA;    interface IRelationalConnection&#xA;    interface IRelationalTransactionManager&#xA;    interface IDbContextTransactionManager&#xA;    interface IResettableService&#xA;    interface IDisposable" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="C#" Value="public class SqlServerConnection : Microsoft.EntityFrameworkCore.Storage.RelationalConnection, IAsyncDisposable, IDisposable, Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection, Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerConnection extends Microsoft.EntityFrameworkCore.Storage.RelationalConnection implements class Microsoft.EntityFrameworkCore.Infrastructure.IResettableService, class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection, class Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection, class Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager, class System.IAsyncDisposable, class System.IDisposable" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerConnection&#xA;Inherits RelationalConnection&#xA;Implements IAsyncDisposable, IDbContextTransactionManager, IDisposable, ISqlServerConnection" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type SqlServerConnection = class&#xA;    inherit RelationalConnection&#xA;    interface ISqlServerConnection&#xA;    interface IRelationalConnection&#xA;    interface IRelationalTransactionManager&#xA;    interface IDbContextTransactionManager&#xA;    interface IResettableService&#xA;    interface IDisposable&#xA;    interface IAsyncDisposable" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.RelationalConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IResettableService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IRelationalConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerConnection (Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As RelationalConnectionDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection : Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection CreateDbConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbConnection CreateDbConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.CreateDbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbConnection () As DbConnection" />
      <MemberSignature Language="F#" Value="override this.CreateDbConnection : unit -&gt; System.Data.Common.DbConnection" Usage="sqlServerConnection.CreateDbConnection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMasterConnection">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection CreateMasterConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection CreateMasterConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.CreateMasterConnection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMasterConnection () As ISqlServerConnection" />
      <MemberSignature Language="F#" Value="abstract member CreateMasterConnection : unit -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection&#xA;override this.CreateMasterConnection : unit -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection" Usage="sqlServerConnection.CreateMasterConnection " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection.CreateMasterConnection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMultipleActiveResultSetsEnabled">
      <MemberSignature Language="C#" Value="public override bool IsMultipleActiveResultSetsEnabled { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMultipleActiveResultSetsEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.IsMultipleActiveResultSetsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMultipleActiveResultSetsEnabled As Boolean" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="member this.IsMultipleActiveResultSetsEnabled : bool" Usage="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.IsMultipleActiveResultSetsEnabled" />
      <MemberSignature Language="C#" Value="public virtual bool IsMultipleActiveResultSetsEnabled { get; }" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMultipleActiveResultSetsEnabled As Boolean" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1">P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection.IsMultipleActiveResultSetsEnabled</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDbConnection">
      <MemberSignature Language="C#" Value="protected override void OpenDbConnection (bool errorsExpected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OpenDbConnection(bool errorsExpected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.OpenDbConnection(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OpenDbConnection (errorsExpected As Boolean)" />
      <MemberSignature Language="F#" Value="override this.OpenDbConnection : bool -&gt; unit" Usage="sqlServerConnection.OpenDbConnection errorsExpected" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorsExpected" Type="System.Boolean" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="errorsExpected">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAmbientTransactions">
      <MemberSignature Language="C#" Value="protected override bool SupportsAmbientTransactions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAmbientTransactions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.SupportsAmbientTransactions" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property SupportsAmbientTransactions As Boolean" />
      <MemberSignature Language="F#" Value="member this.SupportsAmbientTransactions : bool" Usage="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.SupportsAmbientTransactions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether the store connection supports ambient transactions
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
