<Type Name="SqlServerUdtTypeMapping" FullName="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping">
  <TypeSignature Language="C#" Value="public class SqlServerUdtTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerUdtTypeMapping extends Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerUdtTypeMapping&#xA;Inherits RelationalTypeMapping" />
  <TypeSignature Language="F#" Value="type SqlServerUdtTypeMapping = class&#xA;    inherit RelationalTypeMapping" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlServerUdtTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters, string udtTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters, string udtTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parameters As RelationalTypeMapping.RelationalTypeMappingParameters, udtTypeName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters * string -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping (parameters, udtTypeName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" Index="0" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="udtTypeName" Type="System.String" Index="1" FrameworkAlternate="efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <param name="udtTypeName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlServerUdtTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters, Func&lt;object,System.Linq.Expressions.Expression&gt; literalGenerator, string udtTypeName);" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters, class System.Func`2&lt;object, class System.Linq.Expressions.Expression&gt; literalGenerator, string udtTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.Func{System.Object,System.Linq.Expressions.Expression},System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parameters As RelationalTypeMapping.RelationalTypeMappingParameters, literalGenerator As Func(Of Object, Expression), udtTypeName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters * Func&lt;obj, System.Linq.Expressions.Expression&gt; * string -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping (parameters, literalGenerator, udtTypeName)" />
      <MemberSignature Language="C#" Value="protected SqlServerUdtTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters, Func&lt;object,System.Linq.Expressions.Expression&gt; literalGenerator, string? udtTypeName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="literalGenerator" Type="System.Func&lt;System.Object,System.Linq.Expressions.Expression&gt;" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="udtTypeName" Type="System.String" Index="2" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <param name="literalGenerator">To be added.</param>
        <param name="udtTypeName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerUdtTypeMapping (Type clrType, string storeType, Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix storeTypePostfix = Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix.None, string udtTypeName = default, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer = default, System.Data.DbType? dbType = default, bool unicode = false, int? size = default, bool fixedLength = false, int? precision = default, int? scale = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type clrType, string storeType, valuetype Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix storeTypePostfix, string udtTypeName, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, valuetype System.Nullable`1&lt;valuetype System.Data.DbType&gt; dbType, bool unicode, valuetype System.Nullable`1&lt;int32&gt; size, bool fixedLength, valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.#ctor(System.Type,System.String,Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix,System.String,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,System.Nullable{System.Data.DbType},System.Boolean,System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clrType As Type, storeType As String, Optional storeTypePostfix As StoreTypePostfix = Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix.None, Optional udtTypeName As String = Nothing, Optional converter As ValueConverter = Nothing, Optional comparer As ValueComparer = Nothing, Optional keyComparer As ValueComparer = Nothing, Optional dbType As Nullable(Of DbType) = Nothing, Optional unicode As Boolean = false, Optional size As Nullable(Of Integer) = Nothing, Optional fixedLength As Boolean = false, Optional precision As Nullable(Of Integer) = Nothing, Optional scale As Nullable(Of Integer) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping : Type * string * Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix * string * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Nullable&lt;System.Data.DbType&gt; * bool * Nullable&lt;int&gt; * bool * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping (clrType, storeType, storeTypePostfix, udtTypeName, converter, comparer, keyComparer, dbType, unicode, size, fixedLength, precision, scale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" Index="0" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="storeType" Type="System.String" Index="1" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="storeTypePostfix" Type="Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix" Index="2" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="udtTypeName" Type="System.String" Index="3" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="4" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="5" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="keyComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="6" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="dbType" Type="System.Nullable&lt;System.Data.DbType&gt;" Index="7" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="unicode" Type="System.Boolean" Index="8" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="9" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="fixedLength" Type="System.Boolean" Index="10" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" Index="11" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" Index="12" FrameworkAlternate="efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="clrType">To be added.</param>
        <param name="storeType">To be added.</param>
        <param name="storeTypePostfix">To be added.</param>
        <param name="udtTypeName">To be added.</param>
        <param name="converter">To be added.</param>
        <param name="comparer">To be added.</param>
        <param name="keyComparer">To be added.</param>
        <param name="dbType">To be added.</param>
        <param name="unicode">To be added.</param>
        <param name="size">To be added.</param>
        <param name="fixedLength">To be added.</param>
        <param name="precision">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerUdtTypeMapping (Type clrType, string storeType, Func&lt;object,System.Linq.Expressions.Expression&gt; literalGenerator, Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix storeTypePostfix = Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix.None, string udtTypeName = default, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer = default, System.Data.DbType? dbType = default, bool unicode = false, int? size = default, bool fixedLength = false, int? precision = default, int? scale = default);" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type clrType, string storeType, class System.Func`2&lt;object, class System.Linq.Expressions.Expression&gt; literalGenerator, valuetype Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix storeTypePostfix, string udtTypeName, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer keyComparer, valuetype System.Nullable`1&lt;valuetype System.Data.DbType&gt; dbType, bool unicode, valuetype System.Nullable`1&lt;int32&gt; size, bool fixedLength, valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.#ctor(System.Type,System.String,System.Func{System.Object,System.Linq.Expressions.Expression},Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix,System.String,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,System.Nullable{System.Data.DbType},System.Boolean,System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clrType As Type, storeType As String, literalGenerator As Func(Of Object, Expression), Optional storeTypePostfix As StoreTypePostfix = Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix.None, Optional udtTypeName As String = Nothing, Optional converter As ValueConverter = Nothing, Optional comparer As ValueComparer = Nothing, Optional keyComparer As ValueComparer = Nothing, Optional dbType As Nullable(Of DbType) = Nothing, Optional unicode As Boolean = false, Optional size As Nullable(Of Integer) = Nothing, Optional fixedLength As Boolean = false, Optional precision As Nullable(Of Integer) = Nothing, Optional scale As Nullable(Of Integer) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping : Type * string * Func&lt;obj, System.Linq.Expressions.Expression&gt; * Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix * string * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer * Nullable&lt;System.Data.DbType&gt; * bool * Nullable&lt;int&gt; * bool * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping (clrType, storeType, literalGenerator, storeTypePostfix, udtTypeName, converter, comparer, keyComparer, dbType, unicode, size, fixedLength, precision, scale)" />
      <MemberSignature Language="C#" Value="public SqlServerUdtTypeMapping (Type clrType, string storeType, Func&lt;object,System.Linq.Expressions.Expression&gt; literalGenerator, Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix storeTypePostfix = Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix.None, string? udtTypeName = default, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter? converter = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? comparer = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? keyComparer = default, System.Data.DbType? dbType = default, bool unicode = false, int? size = default, bool fixedLength = false, int? precision = default, int? scale = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeType" Type="System.String" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="literalGenerator" Type="System.Func&lt;System.Object,System.Linq.Expressions.Expression&gt;" Index="2" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeTypePostfix" Type="Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix" Index="3" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="udtTypeName" Type="System.String" Index="4" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="5" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="6" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="7" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dbType" Type="System.Nullable&lt;System.Data.DbType&gt;" Index="8" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="unicode" Type="System.Boolean" Index="9" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="10" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fixedLength" Type="System.Boolean" Index="11" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" Index="12" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" Index="13" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="clrType">To be added.</param>
        <param name="storeType">To be added.</param>
        <param name="literalGenerator">To be added.</param>
        <param name="storeTypePostfix">To be added.</param>
        <param name="udtTypeName">To be added.</param>
        <param name="converter">To be added.</param>
        <param name="comparer">To be added.</param>
        <param name="keyComparer">To be added.</param>
        <param name="dbType">To be added.</param>
        <param name="unicode">To be added.</param>
        <param name="size">To be added.</param>
        <param name="fixedLength">To be added.</param>
        <param name="precision">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone(valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping/RelationalTypeMappingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone (parameters As RelationalTypeMapping.RelationalTypeMappingParameters) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="sqlServerUdtTypeMapping.Clone parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping+RelationalTypeMappingParameters" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameters">The parameters for this mapping.</param>
        <summary>
                Creates a copy of this mapping.
            </summary>
        <returns>The newly created mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping Clone (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping Clone(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone (converter As ValueConverter) As CoreTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Usage="sqlServerUdtTypeMapping.Clone converter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="0" FrameworkAlternate="efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="converter">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone (string storeType, int? size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Clone(string storeType, valuetype System.Nullable`1&lt;int32&gt; size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.Clone(System.String,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone (storeType As String, size As Nullable(Of Integer)) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.Clone : string * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="sqlServerUdtTypeMapping.Clone (storeType, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="storeType">To be added.</param>
        <param name="size">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureParameter">
      <MemberSignature Language="C#" Value="protected override void ConfigureParameter (System.Data.Common.DbParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ConfigureParameter(class System.Data.Common.DbParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ConfigureParameter (parameter As DbParameter)" />
      <MemberSignature Language="F#" Value="override this.ConfigureParameter : System.Data.Common.DbParameter -&gt; unit" Usage="sqlServerUdtTypeMapping.ConfigureParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSqlHierarchyIdMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping CreateSqlHierarchyIdMapping (Type udtType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping CreateSqlHierarchyIdMapping(class System.Type udtType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.CreateSqlHierarchyIdMapping(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSqlHierarchyIdMapping (udtType As Type) As SqlServerUdtTypeMapping" />
      <MemberSignature Language="F#" Value="static member CreateSqlHierarchyIdMapping : Type -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping" Usage="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.CreateSqlHierarchyIdMapping udtType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="udtType" Type="System.Type" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="udtType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSqlSpatialMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping CreateSqlSpatialMapping (Type udtType, string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping CreateSqlSpatialMapping(class System.Type udtType, string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.CreateSqlSpatialMapping(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSqlSpatialMapping (udtType As Type, storeName As String) As SqlServerUdtTypeMapping" />
      <MemberSignature Language="F#" Value="static member CreateSqlSpatialMapping : Type * string -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping" Usage="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.CreateSqlSpatialMapping (udtType, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="udtType" Type="System.Type" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="storeName" Type="System.String" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="udtType">To be added.</param>
        <param name="storeName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeLiteral">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression GenerateCodeLiteral (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression GenerateCodeLiteral(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.GenerateCodeLiteral(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GenerateCodeLiteral (value As Object) As Expression" />
      <MemberSignature Language="F#" Value="override this.GenerateCodeLiteral : obj -&gt; System.Linq.Expressions.Expression" Usage="sqlServerUdtTypeMapping.GenerateCodeLiteral value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiteralGenerator">
      <MemberSignature Language="C#" Value="public virtual Func&lt;object,System.Linq.Expressions.Expression&gt; LiteralGenerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;object, class System.Linq.Expressions.Expression&gt; LiteralGenerator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.LiteralGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LiteralGenerator As Func(Of Object, Expression)" />
      <MemberSignature Language="F#" Value="member this.LiteralGenerator : Func&lt;obj, System.Linq.Expressions.Expression&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.LiteralGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Object,System.Linq.Expressions.Expression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UdtTypeName">
      <MemberSignature Language="C#" Value="public virtual string UdtTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UdtTypeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.UdtTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UdtTypeName As String" />
      <MemberSignature Language="F#" Value="member this.UdtTypeName : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerUdtTypeMapping.UdtTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
