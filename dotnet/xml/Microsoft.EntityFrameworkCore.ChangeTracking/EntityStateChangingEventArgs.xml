<Type Name="EntityStateChangingEventArgs" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangingEventArgs">
  <TypeSignature Language="C#" Value="public class EntityStateChangingEventArgs : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityStateChangingEventArgs extends Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryEventArgs" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityStateChangingEventArgs&#xA;Inherits EntityEntryEventArgs" />
  <TypeSignature Language="F#" Value="type EntityStateChangingEventArgs = class&#xA;    inherit EntityEntryEventArgs" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Event arguments for the <see cref="E:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.StateChanging" /> event.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-state-changes">State changes of entities in EF Core</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityStateChangingEventArgs (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.EntityState oldState, Microsoft.EntityFrameworkCore.EntityState newState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, valuetype Microsoft.EntityFrameworkCore.EntityState oldState, valuetype Microsoft.EntityFrameworkCore.EntityState newState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangingEventArgs.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (internalEntityEntry As InternalEntityEntry, oldState As EntityState, newState As EntityState)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangingEventArgs : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * Microsoft.EntityFrameworkCore.EntityState -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangingEventArgs" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangingEventArgs (internalEntityEntry, oldState, newState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="oldState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="newState" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="internalEntityEntry">To be added.</param>
        <param name="oldState">To be added.</param>
        <param name="newState">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewState">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.EntityState NewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.EntityFrameworkCore.EntityState NewState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangingEventArgs.NewState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NewState As EntityState" />
      <MemberSignature Language="F#" Value="member this.NewState : Microsoft.EntityFrameworkCore.EntityState" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangingEventArgs.NewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.EntityState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The state that the entity is transitioning to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldState">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.EntityState OldState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.EntityFrameworkCore.EntityState OldState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangingEventArgs.OldState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OldState As EntityState" />
      <MemberSignature Language="F#" Value="member this.OldState : Microsoft.EntityFrameworkCore.EntityState" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangingEventArgs.OldState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.EntityState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The state that the entity is transitioning from.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
