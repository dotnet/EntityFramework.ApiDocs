<Type Name="DetectedEntityChangesEventArgs" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.DetectedEntityChangesEventArgs">
  <TypeSignature Language="C#" Value="public class DetectedEntityChangesEventArgs : Microsoft.EntityFrameworkCore.ChangeTracking.DetectedChangesEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetectedEntityChangesEventArgs extends Microsoft.EntityFrameworkCore.ChangeTracking.DetectedChangesEventArgs" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.DetectedEntityChangesEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DetectedEntityChangesEventArgs&#xA;Inherits DetectedChangesEventArgs" />
  <TypeSignature Language="F#" Value="type DetectedEntityChangesEventArgs = class&#xA;    inherit DetectedChangesEventArgs" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.DetectedChangesEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Event arguments for the <see cref="E:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectedEntityChanges" /> event.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-state-changes">State changes of entities in EF Core</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetectedEntityChangesEventArgs (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, bool changesFound);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, bool changesFound) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.DetectedEntityChangesEventArgs.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (internalEntityEntry As InternalEntityEntry, changesFound As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.DetectedEntityChangesEventArgs : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * bool -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.DetectedEntityChangesEventArgs" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.DetectedEntityChangesEventArgs (internalEntityEntry, changesFound)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="changesFound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="internalEntityEntry">To be added.</param>
        <param name="changesFound">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entry">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry Entry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry Entry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.DetectedEntityChangesEventArgs.Entry" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Entry As EntityEntry" />
      <MemberSignature Language="F#" Value="member this.Entry : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.DetectedEntityChangesEventArgs.Entry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for the entity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
