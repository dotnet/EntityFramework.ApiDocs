<Type Name="IDependentKeyValueFactory" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory">
  <TypeSignature Language="C#" Value="public interface IDependentKeyValueFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDependentKeyValueFactory" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDependentKeyValueFactory" />
  <TypeSignature Language="F#" Value="type IDependentKeyValueFactory = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDependentKeyValueFactory" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    A factory for key values based on the foreign key values taken from various forms of entity data.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateDependentEquatableKey">
      <MemberSignature Language="C#" Value="public object? CreateDependentEquatableKey (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, bool fromOriginalValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateDependentEquatableKey(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory.CreateDependentEquatableKey(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDependentEquatableKey (entry As IUpdateEntry, Optional fromOriginalValues As Boolean = false) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateDependentEquatableKey : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * bool -&gt; obj" Usage="iDependentKeyValueFactory.CreateDependentEquatableKey (entry, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entry">The entry tracking an entity instance.</param>
        <param name="fromOriginalValues">Whether the original or current values should be used.</param>
        <summary>
                Creates an equatable key object from the foreign key values in the given entry.
            </summary>
        <returns>The key object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePrincipalEquatableKey">
      <MemberSignature Language="C#" Value="public object CreatePrincipalEquatableKey (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, bool fromOriginalValues = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreatePrincipalEquatableKey(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry, bool fromOriginalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory.CreatePrincipalEquatableKey(Microsoft.EntityFrameworkCore.Update.IUpdateEntry,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePrincipalEquatableKey (entry As IUpdateEntry, Optional fromOriginalValues As Boolean = false) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreatePrincipalEquatableKey : Microsoft.EntityFrameworkCore.Update.IUpdateEntry * bool -&gt; obj" Usage="iDependentKeyValueFactory.CreatePrincipalEquatableKey (entry, fromOriginalValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
        <Parameter Name="fromOriginalValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entry">The entry tracking an entity instance.</param>
        <param name="fromOriginalValues">Whether the original or current values should be used.</param>
        <summary>
                Creates an equatable key object from the key values in the given entry.
            </summary>
        <returns>The key object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
