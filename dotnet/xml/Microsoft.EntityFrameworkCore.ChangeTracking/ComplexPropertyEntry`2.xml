<Type Name="ComplexPropertyEntry&lt;TEntity,TComplexProperty&gt;" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TComplexProperty&gt;">
  <TypeSignature Language="C#" Value="public class ComplexPropertyEntry&lt;TEntity,TComplexProperty&gt; : Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComplexPropertyEntry`2&lt;class TEntity, TComplexProperty&gt; extends Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ComplexPropertyEntry(Of TEntity, TComplexProperty)&#xA;Inherits ComplexPropertyEntry" />
  <TypeSignature Language="F#" Value="type ComplexPropertyEntry&lt;'Entity, 'ComplexProperty (requires 'Entity : null)&gt; = class&#xA;    inherit ComplexPropertyEntry" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TComplexProperty" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEntity">The type of the entity type that contains the property.</typeparam>
    <typeparam name="TComplexProperty">The type of the property.</typeparam>
    <summary>
                Provides access to change tracking information and operations for a given property of a complex type.
            </summary>
    <remarks>
      <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                    examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComplexPropertyEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, Microsoft.EntityFrameworkCore.Metadata.IComplexProperty complexProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty complexProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IComplexProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (internalEntry As InternalEntityEntry, complexProperty As IComplexProperty)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;'Entity, 'ComplexProperty (requires 'Entity : null)&gt; : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IComplexProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;'Entity, 'ComplexProperty (requires 'Entity : null)&gt;" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;'Entity, 'ComplexProperty (requires 'Entity : null)&gt; (internalEntry, complexProperty)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="internalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="complexProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" />
      </Parameters>
      <Docs>
        <param name="internalEntry">To be added.</param>
        <param name="complexProperty">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty&lt;TNestedComplexProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TNestedComplexProperty&gt; ComplexProperty&lt;TNestedComplexProperty&gt; (Microsoft.EntityFrameworkCore.Metadata.IComplexProperty complexProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2&lt;!TEntity, !!TNestedComplexProperty&gt; ComplexProperty&lt;TNestedComplexProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty complexProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2.ComplexProperty``1(Microsoft.EntityFrameworkCore.Metadata.IComplexProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComplexProperty(Of TNestedComplexProperty) (complexProperty As IComplexProperty) As ComplexPropertyEntry(Of TEntity, TNestedComplexProperty)" />
      <MemberSignature Language="F#" Value="override this.ComplexProperty : Microsoft.EntityFrameworkCore.Metadata.IComplexProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;'Entity, 'NestedComplexProperty (requires 'Entity : null)&gt;" Usage="complexPropertyEntry.ComplexProperty complexProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TNestedComplexProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNestedComplexProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="complexProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" />
      </Parameters>
      <Docs>
        <typeparam name="TNestedComplexProperty">The type of the property.</typeparam>
        <param name="complexProperty">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given complex type property of this complex type.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty&lt;TNestedComplexProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TNestedComplexProperty&gt; ComplexProperty&lt;TNestedComplexProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TComplexProperty,TNestedComplexProperty&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2&lt;!TEntity, !!TNestedComplexProperty&gt; ComplexProperty&lt;TNestedComplexProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TComplexProperty, !!TNestedComplexProperty&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComplexProperty(Of TNestedComplexProperty) (propertyExpression As Expression(Of Func(Of TComplexProperty, TNestedComplexProperty))) As ComplexPropertyEntry(Of TEntity, TNestedComplexProperty)" />
      <MemberSignature Language="F#" Value="override this.ComplexProperty : System.Linq.Expressions.Expression&lt;Func&lt;'ComplexProperty, 'NestedComplexProperty&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;'Entity, 'NestedComplexProperty (requires 'Entity : null)&gt;" Usage="complexPropertyEntry.ComplexProperty propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TNestedComplexProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNestedComplexProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TComplexProperty,TNestedComplexProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TNestedComplexProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to access information and operations for.
            </param>
        <summary>
                Provides access to change tracking information and operations for a given complex type property of this complex type.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty&lt;TNestedComplexProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TNestedComplexProperty&gt; ComplexProperty&lt;TNestedComplexProperty&gt; (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2&lt;!TEntity, !!TNestedComplexProperty&gt; ComplexProperty&lt;TNestedComplexProperty&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2.ComplexProperty``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComplexProperty(Of TNestedComplexProperty) (propertyName As String) As ComplexPropertyEntry(Of TEntity, TNestedComplexProperty)" />
      <MemberSignature Language="F#" Value="override this.ComplexProperty : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;'Entity, 'NestedComplexProperty (requires 'Entity : null)&gt;" Usage="complexPropertyEntry.ComplexProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TNestedComplexProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNestedComplexProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TNestedComplexProperty">The type of the property.</typeparam>
        <param name="propertyName">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given complex type property of this complex type.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public virtual TComplexProperty CurrentValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TComplexProperty CurrentValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CurrentValue As TComplexProperty" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : 'ComplexProperty with get, set" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;'Entity, 'ComplexProperty (requires 'Entity : null)&gt;.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TComplexProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets the value currently assigned to this property. If the current value is set using this property,
                the change tracker is aware of the change and <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> is not required
                for the context to detect the change.
            </summary>
        <value>To be added.</value>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityEntry">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;TEntity&gt; EntityEntry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1&lt;!TEntity&gt; EntityEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2.EntityEntry" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntityEntry As EntityEntry(Of TEntity)" />
      <MemberSignature Language="F#" Value="member this.EntityEntry : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;'Entity (requires 'Entity : null)&gt;" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;'Entity, 'ComplexProperty (requires 'Entity : null)&gt;.EntityEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> to which this member belongs.
            </summary>
        <value> An entry for the entity that owns this member. </value>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt; Property&lt;TProperty&gt; (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2&lt;!TEntity, !!TProperty&gt; Property&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2.Property``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Property(Of TProperty) (property As IProperty) As PropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Property : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="complexPropertyEntry.Property property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property.</typeparam>
        <param name="property">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given property of this complex type.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt; Property&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TComplexProperty,TProperty&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2&lt;!TEntity, !!TProperty&gt; Property&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TComplexProperty, !!TProperty&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2.Property``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Property(Of TProperty) (propertyExpression As Expression(Of Func(Of TComplexProperty, TProperty))) As PropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'ComplexProperty, 'Property&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="complexPropertyEntry.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TComplexProperty,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to access information and operations for.
            </param>
        <summary>
                Provides access to change tracking information and operations for a given property of this complex type.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt; Property&lt;TProperty&gt; (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2&lt;!TEntity, !!TProperty&gt; Property&lt;TProperty&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2.Property``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Property(Of TProperty) (propertyName As String) As PropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Property : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="complexPropertyEntry.Property propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property.</typeparam>
        <param name="propertyName">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given property of this complex type.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
