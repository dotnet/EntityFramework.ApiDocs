<Type Name="ComplexPropertyEntry" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry">
  <TypeSignature Language="C#" Value="public class ComplexPropertyEntry : Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComplexPropertyEntry extends Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class ComplexPropertyEntry&#xA;Inherits MemberEntry" />
  <TypeSignature Language="F#" Value="type ComplexPropertyEntry = class&#xA;    inherit MemberEntry" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Provides access to change tracking information and operations for a given property of a complex type.
            </summary>
    <remarks>
      <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                    examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComplexPropertyEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, Microsoft.EntityFrameworkCore.Metadata.IComplexProperty complexProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty complexProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IComplexProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (internalEntry As InternalEntityEntry, complexProperty As IComplexProperty)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IComplexProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry (internalEntry, complexProperty)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="internalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="complexProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" />
      </Parameters>
      <Docs>
        <param name="internalEntry">To be added.</param>
        <param name="complexProperty">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&gt; ComplexProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&gt; ComplexProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.ComplexProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ComplexProperties As IEnumerable(Of ComplexPropertyEntry)" />
      <MemberSignature Language="F#" Value="member this.ComplexProperties : seq&lt;Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&gt;" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.ComplexProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Provides access to change tracking information and operations for all properties of nested complex types on this complex type.
            </summary>
        <value>To be added.</value>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry ComplexProperty (Microsoft.EntityFrameworkCore.Metadata.IComplexProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry ComplexProperty(class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.ComplexProperty(Microsoft.EntityFrameworkCore.Metadata.IComplexProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComplexProperty (property As IComplexProperty) As ComplexPropertyEntry" />
      <MemberSignature Language="F#" Value="abstract member ComplexProperty : Microsoft.EntityFrameworkCore.Metadata.IComplexProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&#xA;override this.ComplexProperty : Microsoft.EntityFrameworkCore.Metadata.IComplexProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry" Usage="complexPropertyEntry.ComplexProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" />
      </Parameters>
      <Docs>
        <param name="property">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given property of a nested complex type on this
                complex type.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry ComplexProperty (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry ComplexProperty(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.ComplexProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComplexProperty (propertyName As String) As ComplexPropertyEntry" />
      <MemberSignature Language="F#" Value="abstract member ComplexProperty : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&#xA;override this.ComplexProperty : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry" Usage="complexPropertyEntry.ComplexProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given property of a nested complex type on this
                complex type.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public override bool IsModified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModified" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.IsModified" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsModified As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsModified : bool with get, set" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.IsModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets a value indicating whether any of the properties of the complex type have been modified
                and should be updated in the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
                    Setting this value causes all of the properties of the complex type to be marked as modified or not as appropriate.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                    examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IComplexProperty Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Metadata As IComplexProperty" />
      <MemberSignature Language="F#" Value="member this.Metadata : Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IComplexProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the metadata that describes the facets of this property and how it maps to the database.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As IEnumerable(Of PropertyEntry)" />
      <MemberSignature Language="F#" Value="member this.Properties : seq&lt;Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&gt;" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Provides access to change tracking information and operations for all properties of this complex type.
            </summary>
        <value>To be added.</value>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry Property (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry Property(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.Property(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Property (property As IProperty) As PropertyEntry" />
      <MemberSignature Language="F#" Value="abstract member Property : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&#xA;override this.Property : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry" Usage="complexPropertyEntry.Property property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given property of this complex type.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry Property (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry Property(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry.Property(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Property (propertyName As String) As PropertyEntry" />
      <MemberSignature Language="F#" Value="abstract member Property : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&#xA;override this.Property : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry" Usage="complexPropertyEntry.Property propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given property of this complex type.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
