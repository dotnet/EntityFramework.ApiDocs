<Type Name="EntityEntry&lt;TEntity&gt;" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;TEntity&gt;">
  <TypeSignature Language="C#" Value="public class EntityEntry&lt;TEntity&gt; : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityEntry`1&lt;class TEntity&gt; extends Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityEntry(Of TEntity)&#xA;Inherits EntityEntry" />
  <TypeSignature Language="F#" Value="type EntityEntry&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    inherit EntityEntry" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEntity">The type of entity being tracked by this entry.</typeparam>
    <summary>
                Provides access to change tracking information and operations for a given entity.
            </summary>
    <remarks>
      <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                    examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (internalEntry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;'Entity (requires 'Entity : null)&gt; : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;'Entity (requires 'Entity : null)&gt;" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;'Entity (requires 'Entity : null)&gt; internalEntry" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="internalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="internalEntry">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;TEntity,TProperty&gt; Collection&lt;TProperty&gt; (Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation) where TProperty : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2&lt;!TEntity, !!TProperty&gt; Collection&lt;class TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(Microsoft.EntityFrameworkCore.Metadata.INavigationBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Collection(Of TProperty As Class) (navigation As INavigationBase) As CollectionEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Collection : Microsoft.EntityFrameworkCore.Metadata.INavigationBase -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="entityEntry.Collection navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="navigation">The collection navigation.</param>
        <summary>
                Provides access to change tracking and loading information for a collection
                navigation property that associates this entity to a collection of another entities.
            </summary>
        <returns>
                An object that exposes change tracking information and operations for the given navigation property.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see>
                and <see href="https://aka.ms/efcore-docs-changing-relationships">Changing foreign keys and navigations</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;TEntity,TProperty&gt; Collection&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,System.Collections.Generic.IEnumerable&lt;TProperty&gt;&gt;&gt; propertyExpression) where TProperty : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2&lt;!TEntity, !!TProperty&gt; Collection&lt;class TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntity, class System.Collections.Generic.IEnumerable`1&lt;!!TProperty&gt;&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Collection(Of TProperty As Class) (propertyExpression As Expression(Of Func(Of TEntity, IEnumerable(Of TProperty)))) As CollectionEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Collection : System.Linq.Expressions.Expression&lt;Func&lt;'Entity, seq&lt;'Property&gt;&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="entityEntry.Collection propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Collections.Generic.IEnumerable&lt;TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the collection navigation to access information and operations for.
            </param>
        <summary>
                Provides access to change tracking and loading information for a collection
                navigation property that associates this entity to a collection of another entities.
            </summary>
        <returns>
                An object that exposes change tracking information and operations for the given navigation property.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see>
                and <see href="https://aka.ms/efcore-docs-changing-relationships">Changing foreign keys and navigations</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;TEntity,TProperty&gt; Collection&lt;TProperty&gt; (string propertyName) where TProperty : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2&lt;!TEntity, !!TProperty&gt; Collection&lt;class TProperty&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Collection(Of TProperty As Class) (propertyName As String) As CollectionEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Collection : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="entityEntry.Collection propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyName">The name of the navigation property.</param>
        <summary>
                Provides access to change tracking and loading information for a collection
                navigation property that associates this entity to a collection of another entities.
            </summary>
        <returns>
                An object that exposes change tracking information and operations for the given navigation property.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see>
                and <see href="https://aka.ms/efcore-docs-changing-relationships">Changing foreign keys and navigations</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TProperty&gt; ComplexProperty&lt;TProperty&gt; (Microsoft.EntityFrameworkCore.Metadata.IComplexProperty complexProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2&lt;!TEntity, !!TProperty&gt; ComplexProperty&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty complexProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.ComplexProperty``1(Microsoft.EntityFrameworkCore.Metadata.IComplexProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComplexProperty(Of TProperty) (complexProperty As IComplexProperty) As ComplexPropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.ComplexProperty : Microsoft.EntityFrameworkCore.Metadata.IComplexProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="entityEntry.ComplexProperty complexProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="complexProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property.</typeparam>
        <param name="complexProperty">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given complex type property of this entity.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TProperty&gt; ComplexProperty&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,TProperty&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2&lt;!TEntity, !!TProperty&gt; ComplexProperty&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntity, !!TProperty&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComplexProperty(Of TProperty) (propertyExpression As Expression(Of Func(Of TEntity, TProperty))) As ComplexPropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.ComplexProperty : System.Linq.Expressions.Expression&lt;Func&lt;'Entity, 'Property&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="entityEntry.ComplexProperty propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,TProperty&gt;&gt;" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to access information and operations for.
            </param>
        <summary>
                Provides access to change tracking information and operations for a given complex type property of this entity.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TProperty&gt; ComplexProperty&lt;TProperty&gt; (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry`2&lt;!TEntity, !!TProperty&gt; ComplexProperty&lt;TProperty&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.ComplexProperty``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComplexProperty(Of TProperty) (propertyName As String) As ComplexPropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.ComplexProperty : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="entityEntry.ComplexProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ComplexPropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property.</typeparam>
        <param name="propertyName">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given complex type property of this entity.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity">
      <MemberSignature Language="C#" Value="public virtual TEntity Entity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Entity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Entity As TEntity" />
      <MemberSignature Language="F#" Value="member this.Entity : 'Entity" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;'Entity (requires 'Entity : null)&gt;.Entity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the entity being tracked by this entry.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt; Property&lt;TProperty&gt; (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2&lt;!TEntity, !!TProperty&gt; Property&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Property(Of TProperty) (property As IProperty) As PropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Property : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="entityEntry.Property property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property.</typeparam>
        <param name="property">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given property of this entity.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt; Property&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,TProperty&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2&lt;!TEntity, !!TProperty&gt; Property&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntity, !!TProperty&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Property(Of TProperty) (propertyExpression As Expression(Of Func(Of TEntity, TProperty))) As PropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'Entity, 'Property&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="entityEntry.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to access information and operations for.
            </param>
        <summary>
                Provides access to change tracking information and operations for a given property of this entity.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt; Property&lt;TProperty&gt; (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2&lt;!TEntity, !!TProperty&gt; Property&lt;TProperty&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Property(Of TProperty) (propertyName As String) As PropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Property : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="entityEntry.Property propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property.</typeparam>
        <param name="propertyName">The property to access information and operations for.</param>
        <summary>
                Provides access to change tracking information and operations for a given property of this entity.
            </summary>
        <returns>An object that exposes change tracking information and operations for the given property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;TEntity,TProperty&gt; Reference&lt;TProperty&gt; (Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation) where TProperty : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2&lt;!TEntity, !!TProperty&gt; Reference&lt;class TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(Microsoft.EntityFrameworkCore.Metadata.INavigationBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Reference(Of TProperty As Class) (navigation As INavigationBase) As ReferenceEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Reference : Microsoft.EntityFrameworkCore.Metadata.INavigationBase -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="entityEntry.Reference navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="navigation">The reference navigation.</param>
        <summary>
                Provides access to change tracking and loading information for a reference (i.e. non-collection)
                navigation that associates this entity to another entity.
            </summary>
        <returns>
                An object that exposes change tracking information and operations for the given navigation property.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see>
                and <see href="https://aka.ms/efcore-docs-changing-relationships">Changing foreign keys and navigations</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;TEntity,TProperty&gt; Reference&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,TProperty&gt;&gt; propertyExpression) where TProperty : class;" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2&lt;!TEntity, !!TProperty&gt; Reference&lt;class TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntity, !!TProperty&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Reference(Of TProperty As Class) (propertyExpression As Expression(Of Func(Of TEntity, TProperty))) As ReferenceEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Reference : System.Linq.Expressions.Expression&lt;Func&lt;'Entity, 'Property&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="entityEntry.Reference propertyExpression" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;TEntity,TProperty&gt; Reference&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,TProperty?&gt;&gt; propertyExpression) where TProperty : class;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,TProperty&gt;&gt;" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the reference navigation to access information and operations for.
            </param>
        <summary>
                Provides access to change tracking and loading information for a reference (i.e. non-collection)
                navigation property that associates this entity to another entity.
            </summary>
        <returns>
                An object that exposes change tracking information and operations for the given navigation property.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see>
                and <see href="https://aka.ms/efcore-docs-changing-relationships">Changing foreign keys and navigations</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;TEntity,TProperty&gt; Reference&lt;TProperty&gt; (string propertyName) where TProperty : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2&lt;!TEntity, !!TProperty&gt; Reference&lt;class TProperty&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Reference(Of TProperty As Class) (propertyName As String) As ReferenceEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Reference : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="entityEntry.Reference propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyName">The name of the navigation property.</param>
        <summary>
                Provides access to change tracking and loading information for a reference (i.e. non-collection)
                navigation that associates this entity to another entity.
            </summary>
        <returns>
                An object that exposes change tracking information and operations for the given navigation property.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-entity-entries">Accessing tracked entities in EF Core</see>
                and <see href="https://aka.ms/efcore-docs-changing-relationships">Changing foreign keys and navigations</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
