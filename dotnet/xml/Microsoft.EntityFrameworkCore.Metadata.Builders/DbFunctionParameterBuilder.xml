<Type Name="DbFunctionParameterBuilder" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder">
  <TypeSignature Language="C#" Value="public class DbFunctionParameterBuilder : Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbFunctionParameterBuilder extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class DbFunctionParameterBuilder&#xA;Implements IConventionDbFunctionParameterBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="F#" Value="type DbFunctionParameterBuilder = class&#xA;    interface IConventionDbFunctionParameterBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="C#" Value="public class DbFunctionParameterBuilder : Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder&gt;" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbFunctionParameterBuilder extends System.Object implements class Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder&gt;" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class DbFunctionParameterBuilder&#xA;Implements IInfrastructure(Of IConventionDbFunctionParameterBuilder)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type DbFunctionParameterBuilder = class&#xA;    interface IInfrastructure&lt;IConventionDbFunctionParameterBuilder&gt;" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-3.0;efcore-3.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Provides a simple API for configuring a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunctionParameter" />.
            </summary>
    <remarks>
                Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                and it is not designed to be directly constructed in your application code.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbFunctionParameterBuilder (Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunctionParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunctionParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunctionParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As IMutableDbFunctionParameter)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder : Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunctionParameter -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder parameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameter" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunctionParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dbFunctionParameterBuilder.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current object.</param>
        <summary>
                Determines whether the specified object is equal to the current object.
            </summary>
        <returns>
          <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dbFunctionParameterBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Serves as the default hash function.
            </summary>
        <returns>A hash code for the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasStoreType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder HasStoreType (string storeType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder HasStoreType(string storeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.HasStoreType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasStoreType (storeType As String) As DbFunctionParameterBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasStoreType : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder&#xA;override this.HasStoreType : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder" Usage="dbFunctionParameterBuilder.HasStoreType storeType" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder HasStoreType (string? storeType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeType">The store type of the function parameter in the database.</param>
        <summary>
                Sets the store type of the function parameter in the database.
            </summary>
        <returns>The same builder instance so that further configuration calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-database-functions">Database functions</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunctionParameter Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunctionParameter Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Metadata As IMutableDbFunctionParameter" />
      <MemberSignature Language="F#" Value="member this.Metadata : Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunctionParameter" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunctionParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The function parameter metadata that is being built.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder&gt;.Instance">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder&gt;.Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder&gt;.Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure&lt;Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionDbFunctionParameterBuilder&gt;#Instance" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Instance As IConventionDbFunctionParameterBuilder Implements IInfrastructure(Of IConventionDbFunctionParameterBuilder).Instance" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder&gt;.Instance : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder" Usage="Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder&gt;.Instance" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDbFunctionParameterBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetStoreType">
      <MemberSignature Language="C#" Value="bool IConventionDbFunctionParameterBuilder.CanSetStoreType (string storeType, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetStoreType(string storeType, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.Microsoft#EntityFrameworkCore#Metadata#IConventionDbFunctionParameterBuilder#CanSetStoreType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetStoreType (storeType As String, fromDataAnnotation As Boolean) As Boolean Implements IConventionDbFunctionParameterBuilder.CanSetStoreType" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetStoreType : string * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetStoreType : string * bool -&gt; bool" Usage="dbFunctionParameterBuilder.Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetStoreType (storeType, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetStoreType(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="storeType">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetTypeMapping">
      <MemberSignature Language="C#" Value="bool IConventionDbFunctionParameterBuilder.CanSetTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetTypeMapping(class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.Microsoft#EntityFrameworkCore#Metadata#IConventionDbFunctionParameterBuilder#CanSetTypeMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetTypeMapping (typeMapping As RelationalTypeMapping, fromDataAnnotation As Boolean) As Boolean Implements IConventionDbFunctionParameterBuilder.CanSetTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * bool -&gt; bool" Usage="dbFunctionParameterBuilder.Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetTypeMapping (typeMapping, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.CanSetTypeMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="typeMapping">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasStoreType">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder IConventionDbFunctionParameterBuilder.HasStoreType (string storeType, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasStoreType(string storeType, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.Microsoft#EntityFrameworkCore#Metadata#IConventionDbFunctionParameterBuilder#HasStoreType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasStoreType (storeType As String, fromDataAnnotation As Boolean) As IConventionDbFunctionParameterBuilder Implements IConventionDbFunctionParameterBuilder.HasStoreType" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasStoreType : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasStoreType : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder" Usage="dbFunctionParameterBuilder.Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasStoreType (storeType, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasStoreType(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="storeType">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasTypeMapping">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder IConventionDbFunctionParameterBuilder.HasTypeMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasTypeMapping(class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.Microsoft#EntityFrameworkCore#Metadata#IConventionDbFunctionParameterBuilder#HasTypeMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasTypeMapping (typeMapping As RelationalTypeMapping, fromDataAnnotation As Boolean) As IConventionDbFunctionParameterBuilder Implements IConventionDbFunctionParameterBuilder.HasTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasTypeMapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder" Usage="dbFunctionParameterBuilder.Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasTypeMapping (typeMapping, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.HasTypeMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="typeMapping">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.Metadata">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameter Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameter Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.Microsoft#EntityFrameworkCore#Metadata#IConventionDbFunctionParameterBuilder#Metadata" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Metadata As IConventionDbFunctionParameter Implements IConventionDbFunctionParameterBuilder.Metadata" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.Metadata : Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameter" Usage="Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.Metadata" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameterBuilder.Metadata</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunctionParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="PropagatesNullability">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder PropagatesNullability (bool propagatesNullability = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder PropagatesNullability(bool propagatesNullability) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.PropagatesNullability(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PropagatesNullability (Optional propagatesNullability As Boolean = true) As DbFunctionParameterBuilder" />
      <MemberSignature Language="F#" Value="abstract member PropagatesNullability : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder&#xA;override this.PropagatesNullability : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder" Usage="dbFunctionParameterBuilder.PropagatesNullability propagatesNullability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propagatesNullability" Type="System.Boolean" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propagatesNullability">Value which indicates whether parameter propagates nullability.</param>
        <summary>
                Indicates whether parameter propagates nullability, meaning if it's value is null the database function itself returns null.
            </summary>
        <returns>The same builder instance so that further configuration calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-database-functions">Database functions</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dbFunctionParameterBuilder.ToString " />
      <MemberSignature Language="C#" Value="public override string? ToString ();" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns a string that represents the current object.
            </summary>
        <returns>A string that represents the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
