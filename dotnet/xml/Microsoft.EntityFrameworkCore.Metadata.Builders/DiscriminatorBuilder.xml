<Type Name="DiscriminatorBuilder" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder">
  <TypeSignature Language="C#" Value="public class DiscriminatorBuilder" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DiscriminatorBuilder extends System.Object" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class DiscriminatorBuilder" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type DiscriminatorBuilder = class" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="C#" Value="public class DiscriminatorBuilder : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DiscriminatorBuilder extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class DiscriminatorBuilder&#xA;Implements IConventionDiscriminatorBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type DiscriminatorBuilder = class&#xA;    interface IConventionDiscriminatorBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Provides a simple API surface for setting discriminator values.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiscriminatorBuilder (Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IMutableEntityType)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder entityType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiscriminatorBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder annotationsBuilder, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations&gt; getRelationalEntityTypeBuilderAnnotations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder annotationsBuilder, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations&gt; getRelationalEntityTypeBuilderAnnotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder,System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (annotationsBuilder As RelationalAnnotationsBuilder, getRelationalEntityTypeBuilderAnnotations As Func(Of InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder (annotationsBuilder, getRelationalEntityTypeBuilderAnnotations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="annotationsBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="getRelationalEntityTypeBuilderAnnotations" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="annotationsBuilder">To be added.</param>
        <param name="getRelationalEntityTypeBuilderAnnotations">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationsBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder AnnotationsBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder AnnotationsBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.AnnotationsBuilder" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property AnnotationsBuilder As RelationalAnnotationsBuilder" />
      <MemberSignature Language="F#" Value="member this.AnnotationsBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.AnnotationsBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder EntityTypeBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder EntityTypeBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.EntityTypeBuilder" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EntityTypeBuilder As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="member this.EntityTypeBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.EntityTypeBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="discriminatorBuilder.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current object.</param>
        <summary>
                Determines whether the specified object is equal to the current object.
            </summary>
        <returns>
          <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="discriminatorBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Serves as the default hash function.
            </summary>
        <returns>A hash code for the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue (object value);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasValue (value As Object) As DiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasValue : obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder&#xA;override this.HasValue : obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="discriminatorBuilder.HasValue value" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue (object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The discriminator value.</param>
        <summary>
                Configures the default discriminator value to use.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue (string entityTypeName, object value);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue(string entityTypeName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasValue (entityTypeName As String, value As Object) As DiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasValue : string * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder&#xA;override this.HasValue : string * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="discriminatorBuilder.HasValue (entityTypeName, value)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue (string entityTypeName, object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityTypeName">The name of the entity type for which a discriminator value is being set.</param>
        <param name="value">The discriminator value.</param>
        <summary>
                Configures the discriminator value to use for entities of the given type.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue (Type entityType, object value);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue(class System.Type entityType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasValue (entityType As Type, value As Object) As DiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasValue : Type * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder&#xA;override this.HasValue : Type * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="discriminatorBuilder.HasValue (entityType, value)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue (Type entityType, object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type for which a discriminator value is being set.</param>
        <param name="value">The discriminator value.</param>
        <summary>
                Configures the discriminator value to use for entities of the given type.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue&lt;TEntity&gt; (object value);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue&lt;TEntity&gt;(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasValue(Of TEntity) (value As Object) As DiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasValue : obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder&#xA;override this.HasValue : obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="discriminatorBuilder.HasValue value" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue&lt;TEntity&gt; (object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">The entity type for which a discriminator value is being set.</typeparam>
        <param name="value">The discriminator value.</param>
        <summary>
                Configures the discriminator value to use for entities of the given generic type.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsComplete">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder IsComplete (bool complete = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder IsComplete(bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.IsComplete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsComplete (Optional complete As Boolean = true) As DiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member IsComplete : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder&#xA;override this.IsComplete : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="discriminatorBuilder.IsComplete complete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complete" Type="System.Boolean" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="complete">The value indicating if this discriminator mapping is complete.</param>
        <summary>
                Configures if the discriminator mapping is complete.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetIsComplete">
      <MemberSignature Language="C#" Value="bool IConventionDiscriminatorBuilder.CanSetIsComplete (bool complete, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetIsComplete(bool complete, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionDiscriminatorBuilder#CanSetIsComplete(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetIsComplete (complete As Boolean, fromDataAnnotation As Boolean) As Boolean Implements IConventionDiscriminatorBuilder.CanSetIsComplete" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetIsComplete : bool * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetIsComplete : bool * bool -&gt; bool" Usage="discriminatorBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetIsComplete (complete, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetIsComplete(System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complete" Type="System.Boolean" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="complete">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue">
      <MemberSignature Language="C#" Value="bool IConventionDiscriminatorBuilder.CanSetValue (object value, bool fromDataAnnotation);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue(object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionDiscriminatorBuilder#CanSetValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetValue (value As Object, fromDataAnnotation As Boolean) As Boolean Implements IConventionDiscriminatorBuilder.CanSetValue" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue : obj * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue : obj * bool -&gt; bool" Usage="discriminatorBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue (value, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionDiscriminatorBuilder.CanSetValue (object? value, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue(System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue">
      <MemberSignature Language="C#" Value="bool IConventionDiscriminatorBuilder.CanSetValue (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, object value, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionDiscriminatorBuilder#CanSetValue(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetValue (entityType As IConventionEntityType, value As Object, fromDataAnnotation As Boolean) As Boolean Implements IConventionDiscriminatorBuilder.CanSetValue" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * obj * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * obj * bool -&gt; bool" Usage="discriminatorBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue (entityType, value, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.EntityType">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionDiscriminatorBuilder#EntityType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property EntityType As IConventionEntityType Implements IConventionDiscriminatorBuilder.EntityType" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.EntityType : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.EntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder IConventionDiscriminatorBuilder.HasValue (object value, bool fromDataAnnotation);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue(object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionDiscriminatorBuilder#HasValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasValue (value As Object, fromDataAnnotation As Boolean) As IConventionDiscriminatorBuilder Implements IConventionDiscriminatorBuilder.HasValue" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue : obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue : obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder" Usage="discriminatorBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue (value, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder? IConventionDiscriminatorBuilder.HasValue (object? value, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue(System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder IConventionDiscriminatorBuilder.HasValue (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, object value, bool fromDataAnnotation);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionDiscriminatorBuilder#HasValue(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasValue (entityType As IConventionEntityType, value As Object, fromDataAnnotation As Boolean) As IConventionDiscriminatorBuilder Implements IConventionDiscriminatorBuilder.HasValue" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder" Usage="discriminatorBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue (entityType, value, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder? IConventionDiscriminatorBuilder.HasValue (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, object? value, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.IsComplete">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder IConventionDiscriminatorBuilder.IsComplete (bool complete, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.IsComplete(bool complete, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionDiscriminatorBuilder#IsComplete(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsComplete (complete As Boolean, fromDataAnnotation As Boolean) As IConventionDiscriminatorBuilder Implements IConventionDiscriminatorBuilder.IsComplete" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.IsComplete : bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.IsComplete : bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder" Usage="discriminatorBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.IsComplete (complete, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder? IConventionDiscriminatorBuilder.IsComplete (bool complete, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.IsComplete(System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complete" Type="System.Boolean" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="complete">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="discriminatorBuilder.ToString " />
      <MemberSignature Language="C#" Value="public override string? ToString ();" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns a string that represents the current object.
            </summary>
        <returns>A string that represents the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
