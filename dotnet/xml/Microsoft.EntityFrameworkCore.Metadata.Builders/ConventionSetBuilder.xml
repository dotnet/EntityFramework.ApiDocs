<Type Name="ConventionSetBuilder" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder">
  <TypeSignature Language="C#" Value="public class ConventionSetBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConventionSetBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ConventionSetBuilder" />
  <TypeSignature Language="F#" Value="type ConventionSetBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Provides a simple API surface for configuring conventions.
            </summary>
    <remarks>
                Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelConfigurationBuilder" /> API
                and it is not designed to be directly constructed in your application code.
            </remarks>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConventionSetBuilder (Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet conventionSet, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet conventionSet, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conventionSet As ConventionSet, serviceProvider As IServiceProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder : Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet * IServiceProvider -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder (conventionSet, serviceProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="conventionSet" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="conventionSet">To be added.</param>
        <param name="serviceProvider">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (Func&lt;IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention&gt; conventionFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Func`2&lt;class System.IServiceProvider, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention&gt; conventionFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder.Add(System.Func{System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (conventionFactory As Func(Of IServiceProvider, IConvention))" />
      <MemberSignature Language="F#" Value="abstract member Add : Func&lt;IServiceProvider, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention&gt; -&gt; unit&#xA;override this.Add : Func&lt;IServiceProvider, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention&gt; -&gt; unit" Usage="conventionSetBuilder.Add conventionFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventionFactory" Type="System.Func&lt;System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention&gt;" />
      </Parameters>
      <Docs>
        <param name="conventionFactory">The factory that creates the convention.</param>
        <summary>
                Adds a convention to the set.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="conventionSetBuilder.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current object.</param>
        <summary>
                Determines whether the specified object is equal to the current object.
            </summary>
        <returns>
          <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="conventionSetBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Serves as the default hash function.
            </summary>
        <returns>A hash code for the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (Type conventionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Type conventionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder.Remove(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (conventionType As Type)" />
      <MemberSignature Language="F#" Value="abstract member Remove : Type -&gt; unit&#xA;override this.Remove : Type -&gt; unit" Usage="conventionSetBuilder.Remove conventionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="conventionType">The convention type to remove.</param>
        <summary>
                Removes the convention of the given type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove&lt;TImplementaion&gt;">
      <MemberSignature Language="C#" Value="public virtual void Remove&lt;TImplementaion&gt; () where TImplementaion : Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove&lt;(class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention) TImplementaion&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder.Remove``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove(Of TImplementaion As IConvention) ()" />
      <MemberSignature Language="F#" Value="abstract member Remove : unit -&gt; unit (requires 'Implementaion :&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention)&#xA;override this.Remove : unit -&gt; unit (requires 'Implementaion :&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention)" Usage="conventionSetBuilder.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TImplementaion">
          <Constraints>
            <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TImplementaion">The type of convention to remove</typeparam>
        <summary>
                Remove the convention of the given type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace&lt;TImplementation&gt;">
      <MemberSignature Language="C#" Value="public virtual void Replace&lt;TImplementation&gt; (Func&lt;IServiceProvider,TImplementation&gt; conventionFactory) where TImplementation : Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Replace&lt;(class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention) TImplementation&gt;(class System.Func`2&lt;class System.IServiceProvider, !!TImplementation&gt; conventionFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder.Replace``1(System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Replace(Of TImplementation As IConvention) (conventionFactory As Func(Of IServiceProvider, TImplementation))" />
      <MemberSignature Language="F#" Value="abstract member Replace : Func&lt;IServiceProvider, 'Implementation (requires 'Implementation :&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention)&gt; -&gt; unit (requires 'Implementation :&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention)&#xA;override this.Replace : Func&lt;IServiceProvider, 'Implementation (requires 'Implementation :&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention)&gt; -&gt; unit (requires 'Implementation :&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention)" Usage="conventionSetBuilder.Replace conventionFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="conventionFactory" Type="System.Func&lt;System.IServiceProvider,TImplementation&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TImplementation">The type of the old convention.</typeparam>
        <param name="conventionFactory">The factory that creates the new convention.</param>
        <summary>
                Replaces an existing convention with a derived convention. Also registers the new convention for any
                convention types not implemented by the existing convention.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string? ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ConventionSetBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="conventionSetBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns a string that represents the current object.
            </summary>
        <returns>A string that represents the current object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
