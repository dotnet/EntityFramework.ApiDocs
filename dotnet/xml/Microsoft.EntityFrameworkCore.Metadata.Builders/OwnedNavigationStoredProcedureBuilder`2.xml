<Type Name="OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;">
  <TypeSignature Language="C#" Value="public class OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder, Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt; where TOwnerEntity : class where TDependentEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OwnedNavigationStoredProcedureBuilder`2&lt;class TOwnerEntity, class TDependentEntity&gt; extends Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder implements class Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2" />
  <TypeSignature Language="VB.NET" Value="Public Class OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)&#xA;Inherits OwnedNavigationStoredProcedureBuilder&#xA;Implements IInfrastructure(Of OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity))" />
  <TypeSignature Language="F#" Value="type OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; = class&#xA;    inherit OwnedNavigationStoredProcedureBuilder&#xA;    interface IInfrastructure&lt;OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOwnerEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TDependentEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TOwnerEntity">The entity type owning the relationship.</typeparam>
    <typeparam name="TDependentEntity">The dependent entity type of the relationship.</typeparam>
    <summary>
                Provides a simple API for configuring a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure" /> that an entity type is mapped to.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OwnedNavigationStoredProcedureBuilder (Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure sproc, Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt; ownedNavigationBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure sproc, class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; ownedNavigationBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure,Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sproc As IMutableStoredProcedure, ownedNavigationBuilder As OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; : Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure * Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; (sproc, ownedNavigationBuilder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sproc" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure" />
        <Parameter Name="ownedNavigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="sproc">To be added.</param>
        <param name="ownedNavigationBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnnotation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasAnnotation (string annotation, object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasAnnotation(string annotation, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasAnnotation(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAnnotation (annotation As String, value As Object) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasAnnotation : string * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasAnnotation (annotation, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotation" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="annotation">The key of the annotation to be added or updated.</param>
        <param name="value">The value to be stored in the annotation.</param>
        <summary>
                Adds or updates an annotation on the stored procedure. If an annotation with the key specified in
                <paramref name="annotation" /> already exists, its value will be updated.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasOriginalValueParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasOriginalValueParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasOriginalValueParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasOriginalValueParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasOriginalValueParameter (propertyName As String) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasOriginalValueParameter propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property name.</param>
        <summary>
                Configures a new parameter that holds the original value if no parameter mapped to the given property exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasOriginalValueParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasOriginalValueParameter (string propertyName, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasOriginalValueParameter(string propertyName, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasOriginalValueParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasOriginalValueParameter (propertyName As String, buildAction As Action(Of StoredProcedureParameterBuilder)) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasOriginalValueParameter : string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasOriginalValueParameter (propertyName, buildAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">The parameter name.</param>
        <param name="buildAction">An action that performs configuration of the parameter.</param>
        <summary>
                Configures a new parameter that holds the original value if no parameter mapped to the given property exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasOriginalValueParameter&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasOriginalValueParameter&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TDependentEntity,TProperty&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasOriginalValueParameter&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TDependentEntity, !!TProperty&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasOriginalValueParameter``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasOriginalValueParameter(Of TProperty) (propertyExpression As Expression(Of Func(Of TDependentEntity, TProperty))) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasOriginalValueParameter : System.Linq.Expressions.Expression&lt;Func&lt;'DependentEntity, 'Property&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasOriginalValueParameter propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TDependentEntity,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to be configured (<c>blog =&gt; blog.Url</c>).
            </param>
        <summary>
                Configures a new parameter that holds the original value if no parameter mapped to the given property exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <genericparam name="TProperty">The property type.</genericparam>
      </Docs>
    </Member>
    <Member MemberName="HasOriginalValueParameter&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasOriginalValueParameter&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TDependentEntity,TProperty&gt;&gt; propertyExpression, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasOriginalValueParameter&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TDependentEntity, !!TProperty&gt;&gt; propertyExpression, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasOriginalValueParameter``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasOriginalValueParameter(Of TProperty) (propertyExpression As Expression(Of Func(Of TDependentEntity, TProperty)), buildAction As Action(Of StoredProcedureParameterBuilder)) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasOriginalValueParameter : System.Linq.Expressions.Expression&lt;Func&lt;'DependentEntity, 'Property&gt;&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasOriginalValueParameter (propertyExpression, buildAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TDependentEntity,TProperty&gt;&gt;" />
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to be configured (<c>blog =&gt; blog.Url</c>).
            </param>
        <param name="buildAction">An action that performs configuration of the parameter.</param>
        <summary>
                Configures a new parameter that holds the original value if no parameter mapped to the given property exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <genericparam name="TProperty">The property type.</genericparam>
      </Docs>
    </Member>
    <Member MemberName="HasParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasParameter (propertyName As String) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasParameter propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property name.</param>
        <summary>
                Configures a new parameter if no parameter mapped to the given property exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasParameter (string propertyName, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasParameter(string propertyName, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasParameter (propertyName As String, buildAction As Action(Of StoredProcedureParameterBuilder)) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasParameter : string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasParameter (propertyName, buildAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">The parameter name.</param>
        <param name="buildAction">An action that performs configuration of the parameter.</param>
        <summary>
                Configures a new parameter if no parameter mapped to the given property exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasParameter&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasParameter&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TDependentEntity,TProperty&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasParameter&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TDependentEntity, !!TProperty&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasParameter``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasParameter(Of TProperty) (propertyExpression As Expression(Of Func(Of TDependentEntity, TProperty))) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasParameter : System.Linq.Expressions.Expression&lt;Func&lt;'DependentEntity, 'Property&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasParameter propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TDependentEntity,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to be configured (<c>blog =&gt; blog.Url</c>).
            </param>
        <summary>
                Configures a new parameter if no parameter mapped to the given property exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <genericparam name="TProperty">The property type.</genericparam>
      </Docs>
    </Member>
    <Member MemberName="HasParameter&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasParameter&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TDependentEntity,TProperty&gt;&gt; propertyExpression, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasParameter&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TDependentEntity, !!TProperty&gt;&gt; propertyExpression, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasParameter``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasParameter(Of TProperty) (propertyExpression As Expression(Of Func(Of TDependentEntity, TProperty)), buildAction As Action(Of StoredProcedureParameterBuilder)) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasParameter : System.Linq.Expressions.Expression&lt;Func&lt;'DependentEntity, 'Property&gt;&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasParameter (propertyExpression, buildAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TDependentEntity,TProperty&gt;&gt;" />
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to be configured (<c>blog =&gt; blog.Url</c>).
            </param>
        <param name="buildAction">An action that performs configuration of the parameter.</param>
        <summary>
                Configures a new parameter if no parameter mapped to the given property exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <genericparam name="TProperty">The property type.</genericparam>
      </Docs>
    </Member>
    <Member MemberName="HasResultColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasResultColumn (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasResultColumn(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasResultColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasResultColumn (propertyName As String) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasResultColumn propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property name.</param>
        <summary>
                Configures a new column of the result for this stored procedure. This is used for database generated columns.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasResultColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasResultColumn (string propertyName, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasResultColumn(string propertyName, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasResultColumn(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasResultColumn (propertyName As String, buildAction As Action(Of StoredProcedureResultColumnBuilder)) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasResultColumn : string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasResultColumn (propertyName, buildAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property name.</param>
        <param name="buildAction">An action that performs configuration of the column.</param>
        <summary>
                Configures a new column of the result for this stored procedure. This is used for database generated columns.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasResultColumn&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasResultColumn&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TDependentEntity,TProperty&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasResultColumn&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TDependentEntity, !!TProperty&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasResultColumn``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasResultColumn(Of TProperty) (propertyExpression As Expression(Of Func(Of TDependentEntity, TProperty))) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasResultColumn : System.Linq.Expressions.Expression&lt;Func&lt;'DependentEntity, 'Property&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasResultColumn propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TDependentEntity,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to be configured (<c>blog =&gt; blog.Url</c>).
            </param>
        <summary>
                Configures a new column of the result for this stored procedure. This is used for database generated columns.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <genericparam name="TProperty">The property type.</genericparam>
      </Docs>
    </Member>
    <Member MemberName="HasResultColumn&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasResultColumn&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TDependentEntity,TProperty&gt;&gt; propertyExpression, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasResultColumn&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TDependentEntity, !!TProperty&gt;&gt; propertyExpression, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasResultColumn``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasResultColumn(Of TProperty) (propertyExpression As Expression(Of Func(Of TDependentEntity, TProperty)), buildAction As Action(Of StoredProcedureResultColumnBuilder)) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasResultColumn : System.Linq.Expressions.Expression&lt;Func&lt;'DependentEntity, 'Property&gt;&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasResultColumn (propertyExpression, buildAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TDependentEntity,TProperty&gt;&gt;" />
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to be configured (<c>blog =&gt; blog.Url</c>).
            </param>
        <param name="buildAction">An action that performs configuration of the column.</param>
        <summary>
                Configures a new column of the result for this stored procedure. This is used for database generated columns.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
        <genericparam name="TProperty">The property type.</genericparam>
      </Docs>
    </Member>
    <Member MemberName="HasRowsAffectedParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasRowsAffectedParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasRowsAffectedParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasRowsAffectedParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasRowsAffectedParameter () As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasRowsAffectedParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Configures a new parameter that returns the rows affected if no such parameter exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRowsAffectedParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasRowsAffectedParameter (Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasRowsAffectedParameter(class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasRowsAffectedParameter(System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasRowsAffectedParameter (buildAction As Action(Of StoredProcedureParameterBuilder)) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasRowsAffectedParameter : Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasRowsAffectedParameter buildAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureParameterBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="buildAction">An action that performs configuration of the parameter.</param>
        <summary>
                Configures a new parameter that returns the rows affected if no such parameter exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasRowsAffectedResultColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasRowsAffectedResultColumn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasRowsAffectedResultColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasRowsAffectedResultColumn () As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasRowsAffectedResultColumn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Configures a new column of the result that returns the rows affected for this stored procedure
                if no such column exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasRowsAffectedResultColumn (Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasRowsAffectedResultColumn(class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasRowsAffectedResultColumn(System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasRowsAffectedResultColumn (buildAction As Action(Of StoredProcedureResultColumnBuilder)) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasRowsAffectedResultColumn : Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasRowsAffectedResultColumn buildAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.StoredProcedureResultColumnBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="buildAction">An action that performs configuration of the column.</param>
        <summary>
                Configures a new column of the result that returns the rows affected for this stored procedure
                if no such column exists.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRowsAffectedReturnValue">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasRowsAffectedReturnValue (bool rowsAffectedReturned = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasRowsAffectedReturnValue(bool rowsAffectedReturned) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.HasRowsAffectedReturnValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasRowsAffectedReturnValue (Optional rowsAffectedReturned As Boolean = true) As OwnedNavigationStoredProcedureBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasRowsAffectedReturnValue : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationStoredProcedureBuilder.HasRowsAffectedReturnValue rowsAffectedReturned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowsAffectedReturned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowsAffectedReturned">
                A value indicating whether this stored procedure returns the number of rows affected.
            </param>
        <summary>
                Configures the result of this stored procedure to be the number of rows affected.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;.Instance">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt; Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;.Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;.Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationStoredProcedureBuilder`2.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure&lt;Microsoft#EntityFrameworkCore#Metadata#Builders#OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;#Instance" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Instance As OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity) Implements IInfrastructure(Of OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity)).Instance" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;.Instance : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;.Instance" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
