<Type Name="ComplexPropertiesConfigurationBuilder&lt;TProperty&gt;" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.ComplexPropertiesConfigurationBuilder&lt;TProperty&gt;">
  <TypeSignature Language="C#" Value="public class ComplexPropertiesConfigurationBuilder&lt;TProperty&gt; : Microsoft.EntityFrameworkCore.Metadata.Builders.ComplexPropertiesConfigurationBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComplexPropertiesConfigurationBuilder`1&lt;TProperty&gt; extends Microsoft.EntityFrameworkCore.Metadata.Builders.ComplexPropertiesConfigurationBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ComplexPropertiesConfigurationBuilder`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ComplexPropertiesConfigurationBuilder(Of TProperty)&#xA;Inherits ComplexPropertiesConfigurationBuilder" />
  <TypeSignature Language="F#" Value="type ComplexPropertiesConfigurationBuilder&lt;'Property&gt; = class&#xA;    inherit ComplexPropertiesConfigurationBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TProperty" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Builders.ComplexPropertiesConfigurationBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TProperty">To be added.</typeparam>
    <summary>
                Provides a simple API surface for setting property defaults before conventions run.
            </summary>
    <remarks>
                Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelConfigurationBuilder" /> API
                and it is not designed to be directly constructed in your application code.
            </remarks>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComplexPropertiesConfigurationBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ComplexPropertiesConfigurationBuilder`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As ComplexPropertyConfiguration)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.ComplexPropertiesConfigurationBuilder&lt;'Property&gt; : Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ComplexPropertiesConfigurationBuilder&lt;'Property&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.ComplexPropertiesConfigurationBuilder&lt;'Property&gt; property" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
