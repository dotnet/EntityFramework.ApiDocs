<Type Name="CollectionCollectionBuilder" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder">
  <TypeSignature Language="C#" Value="public class CollectionCollectionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CollectionCollectionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionCollectionBuilder" />
  <TypeSignature Language="F#" Value="type CollectionCollectionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Provides a simple API for configuring a one-to-many relationship.
            </summary>
    <remarks>
      <para>
                    Instances of this class are returned from methods when using the <see cref="P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and
                    examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionCollectionBuilder (Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType leftEntityType, Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType rightEntityType, Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation leftNavigation, Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation rightNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType leftEntityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType rightEntityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation leftNavigation, class Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation rightNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation,Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (leftEntityType As IMutableEntityType, rightEntityType As IMutableEntityType, leftNavigation As IMutableSkipNavigation, rightNavigation As IMutableSkipNavigation)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation * Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder (leftEntityType, rightEntityType, leftNavigation, rightNavigation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="leftEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
        <Parameter Name="rightEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
        <Parameter Name="leftNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation" />
        <Parameter Name="rightNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation" />
      </Parameters>
      <Docs>
        <param name="leftEntityType">To be added.</param>
        <param name="rightEntityType">To be added.</param>
        <param name="leftNavigation">To be added.</param>
        <param name="rightNavigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="collectionCollectionBuilder.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="collectionCollectionBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="LeftEntityType">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType LeftEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType LeftEntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.LeftEntityType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property LeftEntityType As IMutableEntityType" />
      <MemberSignature Language="F#" Value="member this.LeftEntityType : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.LeftEntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftNavigation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation LeftNavigation { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation LeftNavigation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.LeftNavigation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeftNavigation As IMutableSkipNavigation" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.LeftNavigation : Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.LeftNavigation" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation LeftNavigation { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LeftNavigation As IMutableSkipNavigation" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                One of the navigations involved in the relationship.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder ModelBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder ModelBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.ModelBuilder" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ModelBuilder As InternalModelBuilder" />
      <MemberSignature Language="F#" Value="member this.ModelBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.ModelBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightEntityType">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType RightEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType RightEntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.RightEntityType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property RightEntityType As IMutableEntityType" />
      <MemberSignature Language="F#" Value="member this.RightEntityType : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.RightEntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightNavigation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation RightNavigation { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation RightNavigation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.RightNavigation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightNavigation As IMutableSkipNavigation" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.RightNavigation : Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.RightNavigation" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation RightNavigation { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RightNavigation As IMutableSkipNavigation" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableSkipNavigation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                One of the navigations involved in the relationship.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="collectionCollectionBuilder.ToString " />
      <MemberSignature Language="C#" Value="public override string? ToString ();" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Using">
      <MemberSignature Language="C#" Value="protected virtual void Using (Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey rightForeignKey, Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey leftForeignKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Using(class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey rightForeignKey, class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey leftForeignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.Using(Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey,Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Using (rightForeignKey As IMutableForeignKey, leftForeignKey As IMutableForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member Using : Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey * Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey -&gt; unit&#xA;override this.Using : Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey * Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey -&gt; unit" Usage="collectionCollectionBuilder.Using (rightForeignKey, leftForeignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rightForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="leftForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="rightForeignKey">To be added.</param>
        <param name="leftForeignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (configureJoinEntityType As Action(Of EntityTypeBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity configureJoinEntityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configureJoinEntityType" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="configureJoinEntityType">The configuration of the join entity type.</param>
        <summary>
                Configures the join entity type implementing the many-to-many relationship.
            </summary>
        <returns>The builder for the originating entity type so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (string joinEntityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(string joinEntityName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityName As String) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity joinEntityName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityName" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="joinEntityName">The name of the join entity.</param>
        <summary>
                Configures the join entity type implementing the many-to-many relationship.
            </summary>
        <returns>The builder for the join entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (Type joinEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(class System.Type joinEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityType As Type) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity joinEntityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityType" Type="System.Type" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="joinEntityType">The CLR type of the join entity.</param>
        <summary>
                Configures the join entity type implementing the many-to-many relationship.
            </summary>
        <returns>The builder for the join entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (configureRight As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureLeft As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (configureRight, configureLeft)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configureRight" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureLeft" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="configureRight">The configuration for the relationship to the right entity type.</param>
        <param name="configureLeft">The configuration for the relationship to the left entity type.</param>
        <summary>
                Configures the relationships to the entity types participating in the many-to-many relationship.
            </summary>
        <returns>The builder for the join entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (string joinEntityName, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(string joinEntityName, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityName As String, configureJoinEntityType As Action(Of EntityTypeBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (joinEntityName, configureJoinEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityName" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureJoinEntityType" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="joinEntityName">The name of the join entity.</param>
        <param name="configureJoinEntityType">The configuration of the join entity type.</param>
        <summary>
                Configures the join entity type implementing the many-to-many relationship.
            </summary>
        <returns>The builder for the originating entity type so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (string joinEntityName, Type joinEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(string joinEntityName, class System.Type joinEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityName As String, joinEntityType As Type) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : string * Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : string * Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (joinEntityName, joinEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityName" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="joinEntityType" Type="System.Type" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="joinEntityName">The name of the join entity.</param>
        <param name="joinEntityType">The CLR type of the join entity.</param>
        <summary>
                Configures the join entity type implementing the many-to-many relationship.
            </summary>
        <returns>The builder for the join entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (Type joinEntityType, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(class System.Type joinEntityType, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.Type,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityType As Type, configureJoinEntityType As Action(Of EntityTypeBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : Type * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : Type * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (joinEntityType, configureJoinEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityType" Type="System.Type" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureJoinEntityType" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="joinEntityType">The CLR type of the join entity.</param>
        <param name="configureJoinEntityType">The configuration of the join entity type.</param>
        <summary>
                Configures the join entity type implementing the many-to-many relationship.
            </summary>
        <returns>The builder for the originating entity type so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (configureRight As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureLeft As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureJoinEntityType As Action(Of EntityTypeBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (configureRight, configureLeft, configureJoinEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configureRight" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureLeft" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureJoinEntityType" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt;" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="configureRight">The configuration for the relationship to the right entity type.</param>
        <param name="configureLeft">The configuration for the relationship to the left entity type.</param>
        <param name="configureJoinEntityType">The configuration of the join entity type.</param>
        <summary>
                Configures the relationships to the entity types participating in the many-to-many relationship.
            </summary>
        <returns>The builder for the originating entity type so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (string joinEntityName, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(string joinEntityName, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.String,System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityName As String, configureRight As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureLeft As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : string * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : string * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (joinEntityName, configureRight, configureLeft)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityName" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureRight" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureLeft" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="joinEntityName">The name of the join entity.</param>
        <param name="configureRight">The configuration for the relationship to the right entity type.</param>
        <param name="configureLeft">The configuration for the relationship to the left entity type.</param>
        <summary>
                Configures the relationships to the entity types participating in the many-to-many relationship.
            </summary>
        <returns>The builder for the join entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (string joinEntityName, Type joinEntityType, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(string joinEntityName, class System.Type joinEntityType, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.String,System.Type,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityName As String, joinEntityType As Type, configureJoinEntityType As Action(Of EntityTypeBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : string * Type * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : string * Type * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (joinEntityName, joinEntityType, configureJoinEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityName" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="joinEntityType" Type="System.Type" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureJoinEntityType" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt;" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="joinEntityName">The name of the join entity.</param>
        <param name="joinEntityType">The CLR type of the join entity.</param>
        <param name="configureJoinEntityType">The configuration of the join entity type.</param>
        <summary>
                Configures the join entity type implementing the many-to-many relationship.
            </summary>
        <returns>The builder for the originating entity type so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (Type joinEntityType, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(class System.Type joinEntityType, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.Type,System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityType As Type, configureRight As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureLeft As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : Type * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : Type * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (joinEntityType, configureRight, configureLeft)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityType" Type="System.Type" />
        <Parameter Name="configureRight" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" />
        <Parameter Name="configureLeft" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="joinEntityType">The CLR type of the join entity.</param>
        <param name="configureRight">The configuration for the relationship to the right entity type.</param>
        <param name="configureLeft">The configuration for the relationship to the left entity type.</param>
        <summary>
                Configures the relationships to the entity types participating in the many-to-many relationship.
            </summary>
        <returns>The builder for the join entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (string joinEntityName, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(string joinEntityName, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.String,System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityName As String, configureRight As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureLeft As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureJoinEntityType As Action(Of EntityTypeBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : string * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : string * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (joinEntityName, configureRight, configureLeft, configureJoinEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityName" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureRight" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureLeft" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureJoinEntityType" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt;" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="joinEntityName">The name of the join entity.</param>
        <param name="configureRight">The configuration for the relationship to the right entity type.</param>
        <param name="configureLeft">The configuration for the relationship to the left entity type.</param>
        <param name="configureJoinEntityType">The configuration of the join entity type.</param>
        <summary>
                Configures the relationships to the entity types participating in the many-to-many relationship.
            </summary>
        <returns>The builder for the originating entity type so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (string joinEntityName, Type joinEntityType, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(string joinEntityName, class System.Type joinEntityType, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.String,System.Type,System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityName As String, joinEntityType As Type, configureRight As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureLeft As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : string * Type * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : string * Type * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (joinEntityName, joinEntityType, configureRight, configureLeft)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityName" Type="System.String" />
        <Parameter Name="joinEntityType" Type="System.Type" />
        <Parameter Name="configureRight" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" />
        <Parameter Name="configureLeft" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="joinEntityName">The name of the join entity.</param>
        <param name="joinEntityType">The CLR type of the join entity.</param>
        <param name="configureRight">The configuration for the relationship to the right entity type.</param>
        <param name="configureLeft">The configuration for the relationship to the left entity type.</param>
        <summary>
                Configures the relationships to the entity types participating in the many-to-many relationship.
            </summary>
        <returns>The builder for the join entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType UsingEntity (string? joinEntityName, Type? joinEntityType, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt;? configureRight, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt;? configureLeft);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType UsingEntity(string joinEntityName, class System.Type joinEntityType, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; configureRight, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; configureLeft) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.String,System.Type,System.Func{Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey},System.Func{Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function UsingEntity (joinEntityName As String, joinEntityType As Type, configureRight As Func(Of IMutableEntityType, IMutableForeignKey), configureLeft As Func(Of IMutableEntityType, IMutableForeignKey)) As IMutableEntityType" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : string * Type * Func&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType, Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType, Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType&#xA;override this.UsingEntity : string * Type * Func&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType, Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType, Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" Usage="collectionCollectionBuilder.UsingEntity (joinEntityName, joinEntityType, configureRight, configureLeft)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityName" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="joinEntityType" Type="System.Type" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureRight" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt;" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configureLeft" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt;" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="joinEntityName">To be added.</param>
        <param name="joinEntityType">To be added.</param>
        <param name="configureRight">To be added.</param>
        <param name="configureLeft">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (Type joinEntityType, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(class System.Type joinEntityType, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.Type,System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityType As Type, configureRight As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureLeft As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureJoinEntityType As Action(Of EntityTypeBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : Type * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : Type * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (joinEntityType, configureRight, configureLeft, configureJoinEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityType" Type="System.Type" />
        <Parameter Name="configureRight" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" />
        <Parameter Name="configureLeft" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" />
        <Parameter Name="configureJoinEntityType" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="joinEntityType">The CLR type of the join entity.</param>
        <param name="configureRight">The configuration for the relationship to the right entity type.</param>
        <param name="configureLeft">The configuration for the relationship to the left entity type.</param>
        <param name="configureJoinEntityType">The configuration of the join entity type.</param>
        <summary>
                Configures the relationships to the entity types participating in the many-to-many relationship.
            </summary>
        <returns>The builder for the originating entity type so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingEntity">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity (string joinEntityName, Type joinEntityType, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UsingEntity(string joinEntityName, class System.Type joinEntityType, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureRight, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; configureLeft, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; configureJoinEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionCollectionBuilder.UsingEntity(System.String,System.Type,System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Func{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder},System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UsingEntity (joinEntityName As String, joinEntityType As Type, configureRight As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureLeft As Func(Of EntityTypeBuilder, ReferenceCollectionBuilder), configureJoinEntityType As Action(Of EntityTypeBuilder)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsingEntity : string * Type * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.UsingEntity : string * Type * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="collectionCollectionBuilder.UsingEntity (joinEntityName, joinEntityType, configureRight, configureLeft, configureJoinEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityName" Type="System.String" />
        <Parameter Name="joinEntityType" Type="System.Type" />
        <Parameter Name="configureRight" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" />
        <Parameter Name="configureLeft" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&gt;" />
        <Parameter Name="configureJoinEntityType" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="joinEntityName">The name of the join entity.</param>
        <param name="joinEntityType">The CLR type of the join entity.</param>
        <param name="configureRight">The configuration for the relationship to the right entity type.</param>
        <param name="configureLeft">The configuration for the relationship to the left entity type.</param>
        <param name="configureJoinEntityType">The configuration of the join entity type.</param>
        <summary>
                Configures the relationships to the entity types participating in the many-to-many relationship.
            </summary>
        <returns>The builder for the originating entity type so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
