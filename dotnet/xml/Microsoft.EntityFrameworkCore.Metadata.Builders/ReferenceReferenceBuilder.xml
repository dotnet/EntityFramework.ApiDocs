<Type Name="ReferenceReferenceBuilder" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder">
  <TypeSignature Language="C#" Value="public class ReferenceReferenceBuilder : Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableModel&gt;, Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&gt;" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReferenceReferenceBuilder extends System.Object implements class Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableModel&gt;, class Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&gt;" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ReferenceReferenceBuilder&#xA;Implements IInfrastructure(Of IMutableModel), IInfrastructure(Of InternalRelationshipBuilder)" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="F#" Value="type ReferenceReferenceBuilder = class&#xA;    interface IInfrastructure&lt;IMutableModel&gt;&#xA;    interface IInfrastructure&lt;InternalRelationshipBuilder&gt;" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="C#" Value="public class ReferenceReferenceBuilder : Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilderBase" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReferenceReferenceBuilder extends Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilderBase" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="VB.NET" Value="Public Class ReferenceReferenceBuilder&#xA;Inherits ReferenceReferenceBuilderBase" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type ReferenceReferenceBuilder = class&#xA;    inherit ReferenceReferenceBuilderBase" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="C#" Value="public class ReferenceReferenceBuilder : Microsoft.EntityFrameworkCore.Metadata.Builders.InvertibleRelationshipBuilderBase" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReferenceReferenceBuilder extends Microsoft.EntityFrameworkCore.Metadata.Builders.InvertibleRelationshipBuilderBase" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class ReferenceReferenceBuilder&#xA;Inherits InvertibleRelationshipBuilderBase" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type ReferenceReferenceBuilder = class&#xA;    inherit InvertibleRelationshipBuilderBase" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilderBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.Builders.InvertibleRelationshipBuilderBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-1.0;efcore-1.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableModel&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-1.0;efcore-1.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Provides a simple API for configuring a one-to-one relationship.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReferenceReferenceBuilder (Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType declaringEntityType, Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType relatedEntityType, Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType declaringEntityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType relatedEntityType, class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (declaringEntityType As IMutableEntityType, relatedEntityType As IMutableEntityType, foreignKey As IMutableForeignKey)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder (declaringEntityType, relatedEntityType, foreignKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="declaringEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="relatedEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="declaringEntityType">To be added.</param>
        <param name="relatedEntityType">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReferenceReferenceBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType declaringEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType relatedEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType declaringEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType relatedEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (declaringEntityType As EntityType, relatedEntityType As EntityType, builder As InternalRelationshipBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder (declaringEntityType, relatedEntityType, builder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="declaringEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="relatedEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="declaringEntityType">To be added.</param>
        <param name="relatedEntityType">To be added.</param>
        <param name="builder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReferenceReferenceBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder builder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType declaringEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType relatedEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder builder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType declaringEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType relatedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As InternalRelationshipBuilder, declaringEntityType As EntityType, relatedEntityType As EntityType)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder (builder, declaringEntityType, relatedEntityType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="declaringEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="relatedEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="declaringEntityType">To be added.</param>
        <param name="relatedEntityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReferenceReferenceBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder builder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder oldBuilder, bool inverted = false, bool foreignKeySet = false, bool principalKeySet = false, bool requiredSet = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder builder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder oldBuilder, bool inverted, bool foreignKeySet, bool principalKeySet, bool requiredSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (builder As InternalForeignKeyBuilder, oldBuilder As ReferenceReferenceBuilder, Optional inverted As Boolean = false, Optional foreignKeySet As Boolean = false, Optional principalKeySet As Boolean = false, Optional requiredSet As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder * Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder * bool * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder (builder, oldBuilder, inverted, foreignKeySet, principalKeySet, requiredSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="inverted" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKeySet" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalKeySet" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="requiredSet" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="oldBuilder">To be added.</param>
        <param name="inverted">To be added.</param>
        <param name="foreignKeySet">To be added.</param>
        <param name="principalKeySet">To be added.</param>
        <param name="requiredSet">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReferenceReferenceBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder builder, Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder oldBuilder, bool inverted = false, bool foreignKeySet = false, bool principalKeySet = false, bool requiredSet = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder builder, class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder oldBuilder, bool inverted, bool foreignKeySet, bool principalKeySet, bool requiredSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (builder As InternalRelationshipBuilder, oldBuilder As ReferenceReferenceBuilder, Optional inverted As Boolean = false, Optional foreignKeySet As Boolean = false, Optional principalKeySet As Boolean = false, Optional requiredSet As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder * bool * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder (builder, oldBuilder, inverted, foreignKeySet, principalKeySet, requiredSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="oldBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="inverted" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeySet" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="principalKeySet" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="requiredSet" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="oldBuilder">To be added.</param>
        <param name="inverted">To be added.</param>
        <param name="foreignKeySet">To be added.</param>
        <param name="principalKeySet">To be added.</param>
        <param name="requiredSet">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Builder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Builder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Builder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Builder As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="member this.Builder : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the internal builder being used to configure this relationship.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnnotation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasAnnotation (string annotation, object value);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasAnnotation(string annotation, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasAnnotation(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAnnotation (annotation As String, value As Object) As ReferenceReferenceBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasAnnotation : string * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&#xA;override this.HasAnnotation : string * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="referenceReferenceBuilder.HasAnnotation (annotation, value)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasAnnotation (string annotation, object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotation" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="annotation">The key of the annotation to be added or updated.</param>
        <param name="value">The value to be stored in the annotation.</param>
        <summary>
                Adds or updates an annotation on the relationship. If an annotation with the key specified in
                <paramref name="annotation" /> already exists its value will be updated.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasForeignKey (string dependentEntityTypeName, params string[] foreignKeyPropertyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasForeignKey(string dependentEntityTypeName, string[] foreignKeyPropertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasForeignKey (dependentEntityTypeName As String, ParamArray foreignKeyPropertyNames As String()) As ReferenceReferenceBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKey : string * string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&#xA;override this.HasForeignKey : string * string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="referenceReferenceBuilder.HasForeignKey (dependentEntityTypeName, foreignKeyPropertyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityTypeName" Type="System.String" />
        <Parameter Name="foreignKeyPropertyNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dependentEntityTypeName">
                The name of the entity type that is the dependent in this relationship (the type that has the foreign
                key properties).
            </param>
        <param name="foreignKeyPropertyNames">
                The name(s) of the foreign key property(s).
            </param>
        <summary>
                Configures the property(s) to use as the foreign key for this relationship.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>
          <para>
                    If the specified property name(s) do not exist on the entity type then a new shadow state
                    property(s) will be added to serve as the foreign key. A shadow state property is one
                    that does not have a corresponding property in the entity class. The current value for the
                    property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances
                    of the entity class.
                </para>
          <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])" /> is not specified, then an attempt will be made to
                    match the data type and order of foreign key properties against the primary key of the principal
                    entity type. If they do not match, new shadow state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasForeignKey (Type dependentEntityType, params string[] foreignKeyPropertyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasForeignKey(class System.Type dependentEntityType, string[] foreignKeyPropertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.Type,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasForeignKey (dependentEntityType As Type, ParamArray foreignKeyPropertyNames As String()) As ReferenceReferenceBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKey : Type * string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&#xA;override this.HasForeignKey : Type * string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="referenceReferenceBuilder.HasForeignKey (dependentEntityType, foreignKeyPropertyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityType" Type="System.Type" />
        <Parameter Name="foreignKeyPropertyNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dependentEntityType">
                The entity type that is the dependent in this relationship (the type that has the foreign key
                properties).
            </param>
        <param name="foreignKeyPropertyNames">
                The name(s) of the foreign key property(s).
            </param>
        <summary>
                Configures the property(s) to use as the foreign key for this relationship.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>
          <para>
                    If the specified property name(s) do not exist on the entity type then a new shadow state
                    property(s) will be added to serve as the foreign key. A shadow state property is one
                    that does not have a corresponding property in the entity class. The current value for the
                    property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances
                    of the entity class.
                </para>
          <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])" /> is not specified, then an attempt will be made to
                    match the data type and order of foreign key properties against the primary key of the principal
                    entity type. If they do not match, new shadow state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKey&lt;TDependentEntity&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasForeignKey&lt;TDependentEntity&gt; (params string[] foreignKeyPropertyNames) where TDependentEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasForeignKey&lt;class TDependentEntity&gt;(string[] foreignKeyPropertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey``1(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasForeignKey(Of TDependentEntity As Class) (ParamArray foreignKeyPropertyNames As String()) As ReferenceReferenceBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKey : string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder (requires 'DependentEntity : null)&#xA;override this.HasForeignKey : string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder (requires 'DependentEntity : null)" Usage="referenceReferenceBuilder.HasForeignKey foreignKeyPropertyNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDependentEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="foreignKeyPropertyNames" Type="System.String[]" Index="0" FrameworkAlternate="efcore-1.1">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TDependentEntity">
                The entity type that is the dependent in this relationship (the type that has the foreign key
                properties).
            </typeparam>
        <param name="foreignKeyPropertyNames">
                The name(s) of the foreign key property(s).
            </param>
        <summary>
          <para>
                    Configures the property(s) to use as the foreign key for this relationship.
                </para>
          <para>
                    If the specified property name(s) do not exist on the entity type then a new shadow state
                    property(s) will be added to serve as the foreign key. A shadow state property is one
                    that does not have a corresponding property in the entity class. The current value for the
                    property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances
                    of the entity class.
                </para>
          <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])" /> is not specified, then an attempt will be made to
                    match the data type and order of foreign key properties against the primary key of the principal
                    entity type. If they do not match, new shadow state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                </para>
        </summary>
        <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKeyBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasForeignKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, string dependentEntityTypeName, System.Collections.Generic.IReadOnlyList&lt;System.Reflection.PropertyInfo&gt; foreignKeyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasForeignKeyBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, string dependentEntityTypeName, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Reflection.PropertyInfo&gt; foreignKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasForeignKeyBuilder (dependentEntityType As EntityType, dependentEntityTypeName As String, foreignKeyProperties As IReadOnlyList(Of PropertyInfo)) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.PropertyInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.HasForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.PropertyInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="referenceReferenceBuilder.HasForeignKeyBuilder (dependentEntityType, dependentEntityTypeName, foreignKeyProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="dependentEntityTypeName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="foreignKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.PropertyInfo&gt;" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="dependentEntityType">To be added.</param>
        <param name="dependentEntityTypeName">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKeyBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasForeignKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, string dependentEntityTypeName, System.Collections.Generic.IReadOnlyList&lt;string&gt; foreignKeyPropertyNames);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasForeignKeyBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, string dependentEntityTypeName, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; foreignKeyPropertyNames) cil managed" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasForeignKeyBuilder (dependentEntityType As EntityType, dependentEntityTypeName As String, foreignKeyPropertyNames As IReadOnlyList(Of String)) As InternalRelationshipBuilder" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.HasForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="referenceReferenceBuilder.HasForeignKeyBuilder (dependentEntityType, dependentEntityTypeName, foreignKeyPropertyNames)" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, string dependentEntityTypeName, System.Collections.Generic.IReadOnlyList&lt;string&gt; foreignKeyPropertyNames);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKeyBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, string dependentEntityTypeName, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; foreignKeyPropertyNames) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasForeignKeyBuilder (dependentEntityType As EntityType, dependentEntityTypeName As String, foreignKeyPropertyNames As IReadOnlyList(Of String)) As InternalForeignKeyBuilder" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="referenceReferenceBuilder.HasForeignKeyBuilder (dependentEntityType, dependentEntityTypeName, foreignKeyPropertyNames)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dependentEntityTypeName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKeyPropertyNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="dependentEntityType">To be added.</param>
        <param name="dependentEntityTypeName">To be added.</param>
        <param name="foreignKeyPropertyNames">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKeyBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasForeignKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, string dependentEntityTypeName, System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; foreignKeyProperties);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasForeignKeyBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, string dependentEntityTypeName, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Reflection.MemberInfo&gt; foreignKeyProperties) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.MemberInfo})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasForeignKeyBuilder (dependentEntityType As EntityType, dependentEntityTypeName As String, foreignKeyProperties As IReadOnlyList(Of MemberInfo)) As InternalRelationshipBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.HasForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="referenceReferenceBuilder.HasForeignKeyBuilder (dependentEntityType, dependentEntityTypeName, foreignKeyProperties)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, string dependentEntityTypeName, System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; foreignKeyMembers);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKeyBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, string dependentEntityTypeName, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Reflection.MemberInfo&gt; foreignKeyMembers) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasForeignKeyBuilder (dependentEntityType As EntityType, dependentEntityTypeName As String, foreignKeyMembers As IReadOnlyList(Of MemberInfo)) As InternalForeignKeyBuilder" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="referenceReferenceBuilder.HasForeignKeyBuilder (dependentEntityType, dependentEntityTypeName, foreignKeyMembers)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dependentEntityTypeName" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyMembers" Type="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="dependentEntityType">To be added.</param>
        <param name="dependentEntityTypeName">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="foreignKeyMembers">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrincipalKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasPrincipalKey (string principalEntityTypeName, params string[] keyPropertyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasPrincipalKey(string principalEntityTypeName, string[] keyPropertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasPrincipalKey (principalEntityTypeName As String, ParamArray keyPropertyNames As String()) As ReferenceReferenceBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasPrincipalKey : string * string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&#xA;override this.HasPrincipalKey : string * string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="referenceReferenceBuilder.HasPrincipalKey (principalEntityTypeName, keyPropertyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityTypeName" Type="System.String" />
        <Parameter Name="keyPropertyNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="principalEntityTypeName">
                The name of the entity type that is the principal in this relationship (the type
                that has the reference key properties).
            </param>
        <param name="keyPropertyNames">The name(s) of the reference key property(s).</param>
        <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>
                If multiple principal key properties are specified, the order of principal key properties should
                match the order that the primary key or unique constraint properties were configured on the principal
                entity type.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrincipalKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasPrincipalKey (Type principalEntityType, params string[] keyPropertyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasPrincipalKey(class System.Type principalEntityType, string[] keyPropertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasPrincipalKey (principalEntityType As Type, ParamArray keyPropertyNames As String()) As ReferenceReferenceBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasPrincipalKey : Type * string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&#xA;override this.HasPrincipalKey : Type * string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="referenceReferenceBuilder.HasPrincipalKey (principalEntityType, keyPropertyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="System.Type" />
        <Parameter Name="keyPropertyNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="principalEntityType">
                The entity type that is the principal in this relationship (the type
                that has the reference key properties).
            </param>
        <param name="keyPropertyNames">The name(s) of the reference key property(s).</param>
        <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>
                If multiple principal key properties are specified, the order of principal key properties should
                match the order that the primary key or unique constraint properties were configured on the principal
                entity type.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrincipalKey&lt;TPrincipalEntity&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasPrincipalKey&lt;TPrincipalEntity&gt; (params string[] keyPropertyNames) where TPrincipalEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasPrincipalKey&lt;class TPrincipalEntity&gt;(string[] keyPropertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey``1(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasPrincipalKey(Of TPrincipalEntity As Class) (ParamArray keyPropertyNames As String()) As ReferenceReferenceBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasPrincipalKey : string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder (requires 'PrincipalEntity : null)&#xA;override this.HasPrincipalKey : string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder (requires 'PrincipalEntity : null)" Usage="referenceReferenceBuilder.HasPrincipalKey keyPropertyNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TPrincipalEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyPropertyNames" Type="System.String[]" Index="0" FrameworkAlternate="efcore-1.1">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TPrincipalEntity">
                The entity type that is the principal in this relationship (the type
                that has the reference key properties).
            </typeparam>
        <param name="keyPropertyNames"> The name(s) of the reference key property(s). </param>
        <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
        <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrincipalKeyBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasPrincipalKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, string principalEntityTypeName, System.Collections.Generic.IReadOnlyList&lt;System.Reflection.PropertyInfo&gt; foreignKeyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasPrincipalKeyBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, string principalEntityTypeName, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Reflection.PropertyInfo&gt; foreignKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasPrincipalKeyBuilder (principalEntityType As EntityType, principalEntityTypeName As String, foreignKeyProperties As IReadOnlyList(Of PropertyInfo)) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasPrincipalKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.PropertyInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.HasPrincipalKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.PropertyInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="referenceReferenceBuilder.HasPrincipalKeyBuilder (principalEntityType, principalEntityTypeName, foreignKeyProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="principalEntityTypeName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="foreignKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.PropertyInfo&gt;" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="principalEntityTypeName">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrincipalKeyBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasPrincipalKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, string principalEntityTypeName, System.Collections.Generic.IReadOnlyList&lt;string&gt; foreignKeyPropertyNames);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasPrincipalKeyBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, string principalEntityTypeName, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; foreignKeyPropertyNames) cil managed" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasPrincipalKeyBuilder (principalEntityType As EntityType, principalEntityTypeName As String, foreignKeyPropertyNames As IReadOnlyList(Of String)) As InternalRelationshipBuilder" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member HasPrincipalKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.HasPrincipalKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="referenceReferenceBuilder.HasPrincipalKeyBuilder (principalEntityType, principalEntityTypeName, foreignKeyPropertyNames)" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasPrincipalKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, string principalEntityTypeName, System.Collections.Generic.IReadOnlyList&lt;string&gt; foreignKeyPropertyNames);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasPrincipalKeyBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, string principalEntityTypeName, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; foreignKeyPropertyNames) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasPrincipalKeyBuilder (principalEntityType As EntityType, principalEntityTypeName As String, foreignKeyPropertyNames As IReadOnlyList(Of String)) As InternalForeignKeyBuilder" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member HasPrincipalKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasPrincipalKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="referenceReferenceBuilder.HasPrincipalKeyBuilder (principalEntityType, principalEntityTypeName, foreignKeyPropertyNames)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalEntityTypeName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKeyPropertyNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="principalEntityTypeName">To be added.</param>
        <param name="foreignKeyPropertyNames">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrincipalKeyBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasPrincipalKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, string principalEntityTypeName, System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; foreignKeyProperties);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder HasPrincipalKeyBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, string principalEntityTypeName, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Reflection.MemberInfo&gt; foreignKeyProperties) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.MemberInfo})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasPrincipalKeyBuilder (principalEntityType As EntityType, principalEntityTypeName As String, foreignKeyProperties As IReadOnlyList(Of MemberInfo)) As InternalRelationshipBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member HasPrincipalKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.HasPrincipalKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="referenceReferenceBuilder.HasPrincipalKeyBuilder (principalEntityType, principalEntityTypeName, foreignKeyProperties)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasPrincipalKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, string principalEntityTypeName, System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; foreignKeyMembers);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasPrincipalKeyBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, string principalEntityTypeName, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Reflection.MemberInfo&gt; foreignKeyMembers) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasPrincipalKeyBuilder (principalEntityType As EntityType, principalEntityTypeName As String, foreignKeyMembers As IReadOnlyList(Of MemberInfo)) As InternalForeignKeyBuilder" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member HasPrincipalKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasPrincipalKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="referenceReferenceBuilder.HasPrincipalKeyBuilder (principalEntityType, principalEntityTypeName, foreignKeyMembers)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalEntityTypeName" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyMembers" Type="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="principalEntityTypeName">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="foreignKeyMembers">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder IsRequired (bool required = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder IsRequired(bool required) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.IsRequired(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsRequired (Optional required As Boolean = true) As ReferenceReferenceBuilder" />
      <MemberSignature Language="F#" Value="abstract member IsRequired : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&#xA;override this.IsRequired : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="referenceReferenceBuilder.IsRequired required" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="required" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="required">A value indicating whether this is a required relationship.</param>
        <summary>
                Configures whether this is a required relationship (i.e. whether the foreign key property(s) can
                be assigned <see langword="null" />).
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Metadata As IMutableForeignKey" />
      <MemberSignature Language="F#" Value="member this.Metadata : Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The foreign key that represents this relationship.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableModel&gt;.Instance">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IMutableModel Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableModel&gt;.Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IMutableModel Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableModel&gt;.Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure&lt;Microsoft#EntityFrameworkCore#Metadata#IMutableModel&gt;#Instance" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Instance As IMutableModel Implements IInfrastructure(Of IMutableModel).Instance" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableModel&gt;.Instance : Microsoft.EntityFrameworkCore.Metadata.IMutableModel" Usage="Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableModel&gt;.Instance" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The model that this relationship belongs to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&gt;.Instance">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&gt;.Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&gt;.Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure&lt;Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder&gt;#Instance" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Instance As InternalRelationshipBuilder Implements IInfrastructure(Of InternalRelationshipBuilder).Instance" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&gt;.Instance : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&gt;.Instance" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the internal builder being used to configure this relationship.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDelete">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder OnDelete (Microsoft.EntityFrameworkCore.DeleteBehavior deleteBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder OnDelete(valuetype Microsoft.EntityFrameworkCore.DeleteBehavior deleteBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.OnDelete(Microsoft.EntityFrameworkCore.DeleteBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnDelete (deleteBehavior As DeleteBehavior) As ReferenceReferenceBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnDelete : Microsoft.EntityFrameworkCore.DeleteBehavior -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&#xA;override this.OnDelete : Microsoft.EntityFrameworkCore.DeleteBehavior -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="referenceReferenceBuilder.OnDelete deleteBehavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deleteBehavior" Type="Microsoft.EntityFrameworkCore.DeleteBehavior" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="deleteBehavior">The action to perform.</param>
        <summary>
                Configures the operation applied to dependent entities in the relationship when the
                principal is deleted or the relationship is severed.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDelete">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder OnDelete (Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior deleteBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder OnDelete(valuetype Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior deleteBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnDelete (deleteBehavior As DeleteBehavior) As ReferenceReferenceBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnDelete : Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&#xA;override this.OnDelete : Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="referenceReferenceBuilder.OnDelete deleteBehavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deleteBehavior" Type="Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="deleteBehavior"> The action to perform. </param>
        <summary>
                Configures how a delete operation is applied to dependent entities in the relationship when the
                principal is deleted or the relationship is severed.
            </summary>
        <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntityType">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType ResolveEntityType (string entityTypeName);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType ResolveEntityType(string entityTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveEntityType (entityTypeName As String) As EntityType" />
      <MemberSignature Language="F#" Value="abstract member ResolveEntityType : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType&#xA;override this.ResolveEntityType : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Usage="referenceReferenceBuilder.ResolveEntityType entityTypeName" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType? ResolveEntityType (string entityTypeName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeName" Type="System.String" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntityType">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType ResolveEntityType (Type entityType);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType ResolveEntityType(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveEntityType (entityType As Type) As EntityType" />
      <MemberSignature Language="F#" Value="abstract member ResolveEntityType : Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType&#xA;override this.ResolveEntityType : Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Usage="referenceReferenceBuilder.ResolveEntityType entityType" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType? ResolveEntityType (Type entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDependentEntityType">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder SetDependentEntityType (string dependentEntityTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder SetDependentEntityType(string dependentEntityTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.SetDependentEntityType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetDependentEntityType (dependentEntityTypeName As String) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member SetDependentEntityType : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.SetDependentEntityType : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="referenceReferenceBuilder.SetDependentEntityType dependentEntityTypeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityTypeName" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="dependentEntityTypeName">
                The name of the dependent entity type.
            </param>
        <summary>
                Sets the entity type that is the dependent of the relationship.
            </summary>
        <returns> The builder being used to configure this relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDependentEntityType">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder SetDependentEntityType (Type dependentEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder SetDependentEntityType(class System.Type dependentEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.SetDependentEntityType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetDependentEntityType (dependentEntityType As Type) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member SetDependentEntityType : Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.SetDependentEntityType : Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="referenceReferenceBuilder.SetDependentEntityType dependentEntityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityType" Type="System.Type" Index="0" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="dependentEntityType">
                The dependent entity type.
            </param>
        <summary>
                Sets the entity type that is the dependent of the relationship.
            </summary>
        <returns> The builder being used to configure this relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalEntityType">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder SetPrincipalEntityType (string principalEntityTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder SetPrincipalEntityType(string principalEntityTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.SetPrincipalEntityType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetPrincipalEntityType (principalEntityTypeName As String) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member SetPrincipalEntityType : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.SetPrincipalEntityType : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="referenceReferenceBuilder.SetPrincipalEntityType principalEntityTypeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityTypeName" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="principalEntityTypeName">
                The name of the principal entity type.
            </param>
        <summary>
                Sets the entity type that is the principal of the relationship.
            </summary>
        <returns> The builder being used to configure this relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalEntityType">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder SetPrincipalEntityType (Type principalEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder SetPrincipalEntityType(class System.Type principalEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.SetPrincipalEntityType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetPrincipalEntityType (principalEntityType As Type) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member SetPrincipalEntityType : Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.SetPrincipalEntityType : Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="referenceReferenceBuilder.SetPrincipalEntityType principalEntityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="System.Type" Index="0" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">
                The principal entity type.
            </param>
        <summary>
                Sets the entity type that is the principal of the relationship.
            </summary>
        <returns> The builder being used to configure this relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
