<Type Name="IConventionPropertyBaseBuilder" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder">
  <TypeSignature Language="C#" Value="public interface IConventionPropertyBaseBuilder : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConventionPropertyBaseBuilder implements class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConventionPropertyBaseBuilder&#xA;Implements IConventionAnnotatableBuilder" />
  <TypeSignature Language="F#" Value="type IConventionPropertyBaseBuilder = interface&#xA;    interface IConventionAnnotatableBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Provides a simple API surface for configuring an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionPropertyBase" /> from conventions.
                </para>
      <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSetField">
      <MemberSignature Language="C#" Value="public bool CanSetField (System.Reflection.FieldInfo fieldInfo, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetField(class System.Reflection.FieldInfo fieldInfo, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder.CanSetField(System.Reflection.FieldInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanSetField (fieldInfo As FieldInfo, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetField : System.Reflection.FieldInfo * bool -&gt; bool" Usage="iConventionPropertyBaseBuilder.CanSetField (fieldInfo, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public bool CanSetField (System.Reflection.FieldInfo? fieldInfo, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldInfo" Type="System.Reflection.FieldInfo" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldInfo">The field.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the backing field can be set for this property-like object
                from the current configuration source.
            </summary>
        <returns>
          <see langword="true" /> if the backing field can be set for this property-like object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetField">
      <MemberSignature Language="C#" Value="public bool CanSetField (string fieldName, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetField(string fieldName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder.CanSetField(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanSetField (fieldName As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetField : string * bool -&gt; bool" Usage="iConventionPropertyBaseBuilder.CanSetField (fieldName, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public bool CanSetField (string? fieldName, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldName">The field name.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the backing field can be set for this property-like object
                from the current configuration source.
            </summary>
        <returns>
          <see langword="true" /> if the backing field can be set for this property-like object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetPropertyAccessMode">
      <MemberSignature Language="C#" Value="public bool CanSetPropertyAccessMode (Microsoft.EntityFrameworkCore.PropertyAccessMode? propertyAccessMode, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetPropertyAccessMode(valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; propertyAccessMode, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder.CanSetPropertyAccessMode(System.Nullable{Microsoft.EntityFrameworkCore.PropertyAccessMode},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanSetPropertyAccessMode (propertyAccessMode As Nullable(Of PropertyAccessMode), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetPropertyAccessMode : Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; * bool -&gt; bool" Usage="iConventionPropertyBaseBuilder.CanSetPropertyAccessMode (propertyAccessMode, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessMode" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyAccessMode">The <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" /> to use for this property-like object.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" /> can be set for this property-like object
                from the current configuration source.
            </summary>
        <returns>
          <see langword="true" /> if the <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" /> can be set for this property-like object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasField">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder HasField (System.Reflection.FieldInfo fieldInfo, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder HasField(class System.Reflection.FieldInfo fieldInfo, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder.HasField(System.Reflection.FieldInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasField (fieldInfo As FieldInfo, Optional fromDataAnnotation As Boolean = false) As IConventionPropertyBaseBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasField : System.Reflection.FieldInfo * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder" Usage="iConventionPropertyBaseBuilder.HasField (fieldInfo, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder? HasField (System.Reflection.FieldInfo? fieldInfo, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldInfo" Type="System.Reflection.FieldInfo" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldInfo">The field.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the backing field to use for this property-like object.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasField">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder HasField (string fieldName, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder HasField(string fieldName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder.HasField(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasField (fieldName As String, Optional fromDataAnnotation As Boolean = false) As IConventionPropertyBaseBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasField : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder" Usage="iConventionPropertyBaseBuilder.HasField (fieldName, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder? HasField (string? fieldName, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldName">The field name.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the backing field to use for this property-like object.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionPropertyBase Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IConventionPropertyBase Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As IConventionPropertyBase" />
      <MemberSignature Language="F#" Value="member this.Metadata : Microsoft.EntityFrameworkCore.Metadata.IConventionPropertyBase" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionPropertyBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the property-like object being configured.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsePropertyAccessMode">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder UsePropertyAccessMode (Microsoft.EntityFrameworkCore.PropertyAccessMode? propertyAccessMode, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder UsePropertyAccessMode(valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; propertyAccessMode, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder.UsePropertyAccessMode(System.Nullable{Microsoft.EntityFrameworkCore.PropertyAccessMode},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function UsePropertyAccessMode (propertyAccessMode As Nullable(Of PropertyAccessMode), Optional fromDataAnnotation As Boolean = false) As IConventionPropertyBaseBuilder" />
      <MemberSignature Language="F#" Value="abstract member UsePropertyAccessMode : Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder" Usage="iConventionPropertyBaseBuilder.UsePropertyAccessMode (propertyAccessMode, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder? UsePropertyAccessMode (Microsoft.EntityFrameworkCore.PropertyAccessMode? propertyAccessMode, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBaseBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessMode" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.PropertyAccessMode&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyAccessMode">The <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" /> to use for this property-like object.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the <see cref="T:Microsoft.EntityFrameworkCore.PropertyAccessMode" /> to use for this property-like object.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
