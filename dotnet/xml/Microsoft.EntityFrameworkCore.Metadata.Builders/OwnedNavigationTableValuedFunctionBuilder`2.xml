<Type Name="OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt;" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt;">
  <TypeSignature Language="C#" Value="public class OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt; : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder, Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt; where TOwnerEntity : class where TDependentEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OwnedNavigationTableValuedFunctionBuilder`2&lt;class TOwnerEntity, class TDependentEntity&gt; extends Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder implements class Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2" />
  <TypeSignature Language="VB.NET" Value="Public Class OwnedNavigationTableValuedFunctionBuilder(Of TOwnerEntity, TDependentEntity)&#xA;Inherits OwnedNavigationTableValuedFunctionBuilder&#xA;Implements IInfrastructure(Of OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity))" />
  <TypeSignature Language="F#" Value="type OwnedNavigationTableValuedFunctionBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; = class&#xA;    inherit OwnedNavigationTableValuedFunctionBuilder&#xA;    interface IInfrastructure&lt;OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOwnerEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TDependentEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TOwnerEntity">The entity type owning the relationship.</typeparam>
    <typeparam name="TDependentEntity">The dependent entity type of the relationship.</typeparam>
    <summary>
                Provides a simple API for configuring a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction" /> that an entity type is mapped to.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OwnedNavigationTableValuedFunctionBuilder (Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction function, Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt; ownedNavigationBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction function, class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; ownedNavigationBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction,Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As IMutableDbFunction, ownedNavigationBuilder As OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; : Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction * Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; (function, ownedNavigationBuilder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="function" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction" />
        <Parameter Name="ownedNavigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="function">To be added.</param>
        <param name="ownedNavigationBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnnotation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasAnnotation (string annotation, object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasAnnotation(string annotation, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2.HasAnnotation(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAnnotation (annotation As String, value As Object) As OwnedNavigationTableValuedFunctionBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasAnnotation : string * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationTableValuedFunctionBuilder.HasAnnotation (annotation, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotation" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="annotation">The key of the annotation to be added or updated.</param>
        <param name="value">The value to be stored in the annotation.</param>
        <summary>
                Adds or updates an annotation on the database function. If an annotation with the key specified in
                <paramref name="annotation" /> already exists, its value will be updated.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasName">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2.HasName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasName (name As String) As OwnedNavigationTableValuedFunctionBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasName : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationTableValuedFunctionBuilder.HasName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the function in the database.</param>
        <summary>
                Sets the name of the database function.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-database-functions">Database functions</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasParameter (string name, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasParameter(string name, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2.HasParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasParameter (name As String, buildAction As Action(Of DbFunctionParameterBuilder)) As OwnedNavigationTableValuedFunctionBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasParameter : string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationTableValuedFunctionBuilder.HasParameter (name, buildAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.DbFunctionParameterBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The parameter name.</param>
        <param name="buildAction">An action that performs configuration of the parameter.</param>
        <summary>
                Returns an object that can be used to configure a parameter with the given name.
                If no parameter with the given name exists, then a new parameter will be added.
            </summary>
        <returns>The builder to use for further parameter configuration.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-database-functions">Database functions</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSchema">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt; HasSchema (string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; HasSchema(string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2.HasSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasSchema (schema As String) As OwnedNavigationTableValuedFunctionBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.HasSchema : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationTableValuedFunctionBuilder.HasSchema schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="schema">The schema of the function in the database.</param>
        <summary>
                Sets the schema of the database function.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-database-functions">Database functions</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuiltIn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt; IsBuiltIn (bool builtIn = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; IsBuiltIn(bool builtIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2.IsBuiltIn(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsBuiltIn (Optional builtIn As Boolean = true) As OwnedNavigationTableValuedFunctionBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="override this.IsBuiltIn : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="ownedNavigationTableValuedFunctionBuilder.IsBuiltIn builtIn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builtIn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="builtIn">The value indicating whether the database function is built-in.</param>
        <summary>
                Marks whether the database function is built-in.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-database-functions">Database functions</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;.Instance">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt; Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;.Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!TOwnerEntity, !TDependentEntity&gt; Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;.Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationTableValuedFunctionBuilder`2.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure&lt;Microsoft#EntityFrameworkCore#Metadata#Builders#OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;#Instance" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Instance As OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity) Implements IInfrastructure(Of OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity)).Instance" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;.Instance : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt;" Usage="Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;&gt;.Instance" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
