<Type Name="IConventionStoredProcedureBuilder" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder">
  <TypeSignature Language="C#" Value="public interface IConventionStoredProcedureBuilder : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConventionStoredProcedureBuilder implements class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConventionStoredProcedureBuilder&#xA;Implements IConventionAnnotatableBuilder" />
  <TypeSignature Language="F#" Value="type IConventionStoredProcedureBuilder = interface&#xA;    interface IConventionAnnotatableBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IConventionStoredProcedureBuilder implements class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Provides a simple API for configuring a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanHaveOriginalValueParameter">
      <MemberSignature Language="C#" Value="public bool CanHaveOriginalValueParameter (string propertyName, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanHaveOriginalValueParameter(string propertyName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.CanHaveOriginalValueParameter(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanHaveOriginalValueParameter (propertyName As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanHaveOriginalValueParameter : string * bool -&gt; bool" Usage="iConventionStoredProcedureBuilder.CanHaveOriginalValueParameter (propertyName, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property name.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether a parameter holds the original value of the mapped property
                can be used for stored procedure.
            </summary>
        <returns>
          <see langword="true" /> if the parameter can be used for the stored procedure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanHaveParameter">
      <MemberSignature Language="C#" Value="public bool CanHaveParameter (string propertyName, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanHaveParameter(string propertyName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.CanHaveParameter(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanHaveParameter (propertyName As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanHaveParameter : string * bool -&gt; bool" Usage="iConventionStoredProcedureBuilder.CanHaveParameter (propertyName, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property name.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether a parameter mapped to the given property can be used for stored procedure.
            </summary>
        <returns>
          <see langword="true" /> if the parameter can be used for the stored procedure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanHaveResultColumn">
      <MemberSignature Language="C#" Value="public bool CanHaveResultColumn (string propertyName, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanHaveResultColumn(string propertyName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.CanHaveResultColumn(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanHaveResultColumn (propertyName As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanHaveResultColumn : string * bool -&gt; bool" Usage="iConventionStoredProcedureBuilder.CanHaveResultColumn (propertyName, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property name.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether a column of the result mapped to the given property can be used for stored procedure.
            </summary>
        <returns>
          <see langword="true" /> if the column of the result can be used for the stored procedure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanHaveRowsAffectedParameter">
      <MemberSignature Language="C#" Value="public bool CanHaveRowsAffectedParameter (bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanHaveRowsAffectedParameter(bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.CanHaveRowsAffectedParameter(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanHaveRowsAffectedParameter (Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanHaveRowsAffectedParameter : bool -&gt; bool" Usage="iConventionStoredProcedureBuilder.CanHaveRowsAffectedParameter fromDataAnnotation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether a parameter that returns the rows affected can be used for stored procedure.
            </summary>
        <returns>
          <see langword="true" /> if the parameter can be used for the stored procedure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanHaveRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="public bool CanHaveRowsAffectedResultColumn (bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanHaveRowsAffectedResultColumn(bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.CanHaveRowsAffectedResultColumn(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanHaveRowsAffectedResultColumn (Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanHaveRowsAffectedResultColumn : bool -&gt; bool" Usage="iConventionStoredProcedureBuilder.CanHaveRowsAffectedResultColumn fromDataAnnotation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether a column that contains the rows affected can be used for stored procedure.
            </summary>
        <returns>
          <see langword="true" /> if the column of the result can be used for the stored procedure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetName">
      <MemberSignature Language="C#" Value="public bool CanSetName (string? name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetName(string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.CanSetName(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanSetName (name As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetName : string * bool -&gt; bool" Usage="iConventionStoredProcedureBuilder.CanSetName (name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The name of the stored procedure in the database.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given name can be set for the stored procedure.
            </summary>
        <returns>
          <see langword="true" /> if the given name can be set for the stored procedure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetSchema">
      <MemberSignature Language="C#" Value="public bool CanSetSchema (string? schema, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetSchema(string schema, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.CanSetSchema(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanSetSchema (schema As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetSchema : string * bool -&gt; bool" Usage="iConventionStoredProcedureBuilder.CanSetSchema (schema, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="schema">The schema of the stored procedure in the database.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given schema can be set for the stored procedure.
            </summary>
        <returns>
          <see langword="true" /> if the given schema can be set for the database function.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnnotation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder? HasAnnotation (string name, object? value, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder HasAnnotation(string name, object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.HasAnnotation(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasAnnotation (name As String, value As Object, Optional fromDataAnnotation As Boolean = false) As IConventionStoredProcedureBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasAnnotation : string * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder" Usage="iConventionStoredProcedureBuilder.HasAnnotation (name, value, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to be set.</param>
        <param name="value">The value to be stored in the annotation.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the annotation stored under the given name. Overwrites the existing annotation if an
                annotation with the specified name already exists with same or lower <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />.
            </summary>
        <returns>
                An <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder" /> to continue configuration if the annotation was set, <see langword="null" />
                otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasName">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder? HasName (string? name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder HasName(string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.HasName(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasName (name As String, Optional fromDataAnnotation As Boolean = false) As IConventionStoredProcedureBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasName : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder" Usage="iConventionStoredProcedureBuilder.HasName (name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The name of the stored procedure in the database.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the name of the stored procedure.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasName">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder? HasName (string? name, string? schema, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder HasName(string name, string schema, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.HasName(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasName (name As String, schema As String, Optional fromDataAnnotation As Boolean = false) As IConventionStoredProcedureBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasName : string * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder" Usage="iConventionStoredProcedureBuilder.HasName (name, schema, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The name of the stored procedure in the database.</param>
        <param name="schema">The schema of the stored procedure in the database.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the name and schema of the stored procedure.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNoAnnotation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder? HasNoAnnotation (string name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder HasNoAnnotation(string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.HasNoAnnotation(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasNoAnnotation (name As String, Optional fromDataAnnotation As Boolean = false) As IConventionStoredProcedureBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasNoAnnotation : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder" Usage="iConventionStoredProcedureBuilder.HasNoAnnotation (name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to remove.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Removes the annotation with the given name from this object.
            </summary>
        <returns>
                An <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder" /> to continue configuration if the annotation was set, <see langword="null" />
                otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNonNullAnnotation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder? HasNonNullAnnotation (string name, object? value, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder HasNonNullAnnotation(string name, object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.HasNonNullAnnotation(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasNonNullAnnotation (name As String, value As Object, Optional fromDataAnnotation As Boolean = false) As IConventionStoredProcedureBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasNonNullAnnotation : string * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder" Usage="iConventionStoredProcedureBuilder.HasNonNullAnnotation (name, value, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The name of the annotation to be set.</param>
        <param name="value">The value to be stored in the annotation. <see langword="null" /> to remove the annotations.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the annotation stored under the given name. Overwrites the existing annotation if an
                annotation with the specified name already exists with same or lower <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />.
                Removes the annotation if <see langword="null" /> value is specified.
            </summary>
        <returns>
                An <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder" /> to continue configuration if the annotation was set or removed,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasOriginalValueParameter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder? HasOriginalValueParameter (string propertyName, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder HasOriginalValueParameter(string propertyName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.HasOriginalValueParameter(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasOriginalValueParameter (propertyName As String, Optional fromDataAnnotation As Boolean = false) As IConventionStoredProcedureParameterBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasOriginalValueParameter : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder" Usage="iConventionStoredProcedureBuilder.HasOriginalValueParameter (propertyName, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property name.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures a new parameter that holds the original value of the property with the given name
                if no parameter mapped to the given property exists.
            </summary>
        <returns>
                The builder instance if the configuration was applied, <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasParameter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder? HasParameter (string propertyName, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder HasParameter(string propertyName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.HasParameter(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasParameter (propertyName As String, Optional fromDataAnnotation As Boolean = false) As IConventionStoredProcedureParameterBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasParameter : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder" Usage="iConventionStoredProcedureBuilder.HasParameter (propertyName, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property name.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures a new parameter if no parameter mapped to the given property exists.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasResultColumn">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureResultColumnBuilder? HasResultColumn (string propertyName, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureResultColumnBuilder HasResultColumn(string propertyName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.HasResultColumn(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasResultColumn (propertyName As String, Optional fromDataAnnotation As Boolean = false) As IConventionStoredProcedureResultColumnBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasResultColumn : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureResultColumnBuilder" Usage="iConventionStoredProcedureBuilder.HasResultColumn (propertyName, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureResultColumnBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">The property name.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures a new column of the result for this stored procedure. This is used for database generated columns.
            </summary>
        <returns>
                The builder instance if the configuration was applied, <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRowsAffectedParameter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder? HasRowsAffectedParameter (bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder HasRowsAffectedParameter(bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.HasRowsAffectedParameter(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasRowsAffectedParameter (Optional fromDataAnnotation As Boolean = false) As IConventionStoredProcedureParameterBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasRowsAffectedParameter : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder" Usage="iConventionStoredProcedureBuilder.HasRowsAffectedParameter fromDataAnnotation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures a new parameter that returns the rows affected if no such parameter exists.
            </summary>
        <returns>
                The builder instance if the configuration was applied, <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureResultColumnBuilder? HasRowsAffectedResultColumn (bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureResultColumnBuilder HasRowsAffectedResultColumn(bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.HasRowsAffectedResultColumn(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasRowsAffectedResultColumn (Optional fromDataAnnotation As Boolean = false) As IConventionStoredProcedureResultColumnBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasRowsAffectedResultColumn : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureResultColumnBuilder" Usage="iConventionStoredProcedureBuilder.HasRowsAffectedResultColumn fromDataAnnotation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureResultColumnBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures a new column that contains the rows affected for this stored procedure if no such column exists.
            </summary>
        <returns>
                The builder instance if the configuration was applied, <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSchema">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder? HasSchema (string? schema, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder HasSchema(string schema, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.HasSchema(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasSchema (schema As String, Optional fromDataAnnotation As Boolean = false) As IConventionStoredProcedureBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasSchema : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder" Usage="iConventionStoredProcedureBuilder.HasSchema (schema, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="schema">The schema of the stored procedure in the database.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the schema of the stored procedure.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As IConventionStoredProcedure" />
      <MemberSignature Language="F#" Value="member this.Metadata : Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The function being configured.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
