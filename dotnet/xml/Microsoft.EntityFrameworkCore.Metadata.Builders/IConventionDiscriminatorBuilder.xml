<Type Name="IConventionDiscriminatorBuilder" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder">
  <TypeSignature Language="C#" Value="public interface IConventionDiscriminatorBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConventionDiscriminatorBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConventionDiscriminatorBuilder" />
  <TypeSignature Language="F#" Value="type IConventionDiscriminatorBuilder = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IConventionDiscriminatorBuilder" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                Provides a simple API surface for setting discriminator values from conventions.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSetIsComplete">
      <MemberSignature Language="C#" Value="public bool CanSetIsComplete (bool complete, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetIsComplete(bool complete, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetIsComplete(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanSetIsComplete (complete As Boolean, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetIsComplete : bool * bool -&gt; bool" Usage="iConventionDiscriminatorBuilder.CanSetIsComplete (complete, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complete" Type="System.Boolean" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="complete">The value indicating if this discriminator mapping is complete.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the discriminator mapping is complete can be set from this configuration source.
            </summary>
        <returns>
          <see langword="true" /> if the discriminator value can be set from this configuration source.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetValue">
      <MemberSignature Language="C#" Value="public bool CanSetValue (object value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetValue(object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanSetValue (value As Object, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetValue : obj * bool -&gt; bool" Usage="iConventionDiscriminatorBuilder.CanSetValue (value, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public bool CanSetValue (object? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">The discriminator value.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the discriminator value can be set from this configuration source.
            </summary>
        <returns>
          <see langword="true" /> if the discriminator value can be set from this configuration source.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetValue">
      <MemberSignature Language="C#" Value="public bool CanSetValue (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, object value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetValue(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.CanSetValue(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanSetValue (entityType As IConventionEntityType, value As Object, Optional fromDataAnnotation As Boolean = false) As Boolean" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="abstract member CanSetValue : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * obj * bool -&gt; bool" Usage="iConventionDiscriminatorBuilder.CanSetValue (entityType, value, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public virtual bool CanSetValue (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, object? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetValue (entityType As IConventionEntityType, value As Object, Optional fromDataAnnotation As Boolean = false) As Boolean" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member CanSetValue : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * obj * bool -&gt; bool&#xA;override this.CanSetValue : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * obj * bool -&gt; bool" Usage="iConventionDiscriminatorBuilder.CanSetValue (entityType, value, fromDataAnnotation)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type for which a discriminator value is being set.</param>
        <param name="value">The discriminator value.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the discriminator value can be set from this configuration source.
            </summary>
        <returns>
          <see langword="true" /> if the discriminator value can be set from this configuration source.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityType As IConventionEntityType" />
      <MemberSignature Language="F#" Value="member this.EntityType : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.EntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the entity type on which the discriminator is being configured.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder HasValue (object value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder HasValue(object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasValue (value As Object, Optional fromDataAnnotation As Boolean = false) As IConventionDiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasValue : obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder" Usage="iConventionDiscriminatorBuilder.HasValue (value, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder? HasValue (object? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">The discriminator value.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the discriminator value to use.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder HasValue (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, object value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder HasValue(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.HasValue(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasValue (entityType As IConventionEntityType, value As Object, Optional fromDataAnnotation As Boolean = false) As IConventionDiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasValue : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder" Usage="iConventionDiscriminatorBuilder.HasValue (entityType, value, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder? HasValue (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, object? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type for which a discriminator value is being set.</param>
        <param name="value">The discriminator value.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the discriminator value to use for entities of the given type.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsComplete">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder IsComplete (bool complete, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder IsComplete(bool complete, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder.IsComplete(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsComplete (complete As Boolean, Optional fromDataAnnotation As Boolean = false) As IConventionDiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member IsComplete : bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder" Usage="iConventionDiscriminatorBuilder.IsComplete (complete, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder? IsComplete (bool complete, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionDiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complete" Type="System.Boolean" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="complete">The value indicating if this discriminator mapping is complete.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures if the discriminator mapping is complete.
            </summary>
        <returns>The same builder so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
