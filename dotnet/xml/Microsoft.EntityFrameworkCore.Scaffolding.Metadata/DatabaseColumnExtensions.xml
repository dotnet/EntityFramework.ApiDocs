<Type Name="DatabaseColumnExtensions" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumnExtensions">
  <TypeSignature Language="C#" Value="public static class DatabaseColumnExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DatabaseColumnExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumnExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DatabaseColumnExtensions" />
  <TypeSignature Language="F#" Value="type DatabaseColumnExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetUnderlyingStoreType">
      <MemberSignature Language="C#" Value="public static string GetUnderlyingStoreType (this Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUnderlyingStoreType(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumnExtensions.GetUnderlyingStoreType(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUnderlyingStoreType (column As DatabaseColumn) As String" />
      <MemberSignature Language="F#" Value="static member GetUnderlyingStoreType : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn -&gt; string" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumnExtensions.GetUnderlyingStoreType column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("Set storetype directly on DatabaseColumn.StoreType.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Set storetype directly on DatabaseColumn.StoreType.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn" RefType="this" />
      </Parameters>
      <Docs>
        <param name="column"> The column. </param>
        <summary>
                Gets the underlying store/database type for the given column.
            </summary>
        <returns> The database/store type, or <c>null</c> if none has been set. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUnderlyingStoreType">
      <MemberSignature Language="C#" Value="public static void SetUnderlyingStoreType (this Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetUnderlyingStoreType(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumnExtensions.SetUnderlyingStoreType(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetUnderlyingStoreType (column As DatabaseColumn, value As String)" />
      <MemberSignature Language="F#" Value="static member SetUnderlyingStoreType : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumnExtensions.SetUnderlyingStoreType (column, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("Set storetype directly on DatabaseColumn.StoreType.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Set storetype directly on DatabaseColumn.StoreType.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn" RefType="this" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column"> The column. </param>
        <param name="value"> The database/store type, or <c>null</c> if none. </param>
        <summary>
                Sets the underlying store/database type for the given column.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
