<Type Name="RelationalLoggerExtensions" FullName="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalLoggerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalLoggerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalLoggerExtensions" />
  <TypeSignature Language="F#" Value="type RelationalLoggerExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    This class contains static methods used by EF Core internals and relational database providers to
                    write information to an <see cref="T:Microsoft.Extensions.Logging.ILogger" /> and a <see cref="T:System.Diagnostics.DiagnosticListener" /> for
                    well-known events.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllIndexPropertiesNotToMappedToAnyTable">
      <MemberSignature Language="C#" Value="public static void AllIndexPropertiesNotToMappedToAnyTable (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AllIndexPropertiesNotToMappedToAnyTable(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.AllIndexPropertiesNotToMappedToAnyTable(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AllIndexPropertiesNotToMappedToAnyTable (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), entityType As IEntityType, index As IIndex)" />
      <MemberSignature Language="F#" Value="static member AllIndexPropertiesNotToMappedToAnyTable : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.AllIndexPropertiesNotToMappedToAnyTable (diagnostics, entityType, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="entityType">The entity type on which the index is defined.</param>
        <param name="index">The index on the entity type.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.AllIndexPropertiesNotToMappedToAnyTable" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbientTransactionEnlisted">
      <MemberSignature Language="C#" Value="public static void AmbientTransactionEnlisted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AmbientTransactionEnlisted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.AmbientTransactionEnlisted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Transactions.Transaction)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AmbientTransactionEnlisted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As Transaction)" />
      <MemberSignature Language="F#" Value="static member AmbientTransactionEnlisted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Transactions.Transaction -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.AmbientTransactionEnlisted (diagnostics, connection, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.AmbientTransactionEnlisted" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbientTransactionWarning">
      <MemberSignature Language="C#" Value="public static void AmbientTransactionWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AmbientTransactionWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.AmbientTransactionWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AmbientTransactionWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, startTime As DateTimeOffset)" />
      <MemberSignature Language="F#" Value="static member AmbientTransactionWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.AmbientTransactionWarning (diagnostics, connection, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.AmbientTransactionWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchExecutorFailedToReleaseSavepoint">
      <MemberSignature Language="C#" Value="public static void BatchExecutorFailedToReleaseSavepoint (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Type contextType, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BatchExecutorFailedToReleaseSavepoint(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class System.Type contextType, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.BatchExecutorFailedToReleaseSavepoint(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},System.Type,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub BatchExecutorFailedToReleaseSavepoint (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), contextType As Type, exception As Exception)" />
      <MemberSignature Language="F#" Value="static member BatchExecutorFailedToReleaseSavepoint : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Type * Exception -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.BatchExecutorFailedToReleaseSavepoint (diagnostics, contextType, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="contextType" Type="System.Type" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="contextType">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type being used.</param>
        <param name="exception">The exception that caused this failure.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.BatchExecutorFailedToReleaseSavepoint" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchExecutorFailedToRollbackToSavepoint">
      <MemberSignature Language="C#" Value="public static void BatchExecutorFailedToRollbackToSavepoint (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Type contextType, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BatchExecutorFailedToRollbackToSavepoint(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class System.Type contextType, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.BatchExecutorFailedToRollbackToSavepoint(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},System.Type,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub BatchExecutorFailedToRollbackToSavepoint (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), contextType As Type, exception As Exception)" />
      <MemberSignature Language="F#" Value="static member BatchExecutorFailedToRollbackToSavepoint : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Type * Exception -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.BatchExecutorFailedToRollbackToSavepoint (diagnostics, contextType, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="contextType" Type="System.Type" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="contextType">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type being used.</param>
        <param name="exception">The exception that caused this failure.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.BatchExecutorFailedToRollbackToSavepoint" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchReadyForExecution">
      <MemberSignature Language="C#" Value="public static void BatchReadyForExecution (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, int commandCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BatchReadyForExecution(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, int32 commandCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.BatchReadyForExecution(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub BatchReadyForExecution (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), entries As IEnumerable(Of IUpdateEntry), commandCount As Integer)" />
      <MemberSignature Language="F#" Value="static member BatchReadyForExecution : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * seq&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * int -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.BatchReadyForExecution (diagnostics, entries, commandCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="entries" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" />
        <Parameter Name="commandCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="entries">The entries for entities in the batch.</param>
        <param name="commandCount">The number of commands.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.BatchReadyForExecution" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchSmallerThanMinBatchSize">
      <MemberSignature Language="C#" Value="public static void BatchSmallerThanMinBatchSize (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, int commandCount, int minBatchSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BatchSmallerThanMinBatchSize(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, int32 commandCount, int32 minBatchSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.BatchSmallerThanMinBatchSize(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub BatchSmallerThanMinBatchSize (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), entries As IEnumerable(Of IUpdateEntry), commandCount As Integer, minBatchSize As Integer)" />
      <MemberSignature Language="F#" Value="static member BatchSmallerThanMinBatchSize : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * seq&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * int * int -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.BatchSmallerThanMinBatchSize (diagnostics, entries, commandCount, minBatchSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="entries" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" />
        <Parameter Name="commandCount" Type="System.Int32" />
        <Parameter Name="minBatchSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="entries">The entries for entities in the batch.</param>
        <param name="commandCount">The number of commands.</param>
        <param name="minBatchSize">The minimum batch size.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.BatchSmallerThanMinBatchSize" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoolWithDefaultWarning">
      <MemberSignature Language="C#" Value="public static void BoolWithDefaultWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BoolWithDefaultWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.BoolWithDefaultWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub BoolWithDefaultWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), property As IProperty)" />
      <MemberSignature Language="F#" Value="static member BoolWithDefaultWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.BoolWithDefaultWarning (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="property">The property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.BoolWithDefaultWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnOrderIgnoredWarning">
      <MemberSignature Language="C#" Value="public static void ColumnOrderIgnoredWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; diagnostics, Microsoft.EntityFrameworkCore.Migrations.Operations.ColumnOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColumnOrderIgnoredWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Migrations&gt; diagnostics, class Microsoft.EntityFrameworkCore.Migrations.Operations.ColumnOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ColumnOrderIgnoredWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.Operations.ColumnOperation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ColumnOrderIgnoredWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Migrations), operation As ColumnOperation)" />
      <MemberSignature Language="F#" Value="static member ColumnOrderIgnoredWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; * Microsoft.EntityFrameworkCore.Migrations.Operations.ColumnOperation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ColumnOrderIgnoredWarning (diagnostics, operation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Migrations&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="operation" Type="Microsoft.EntityFrameworkCore.Migrations.Operations.ColumnOperation" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="operation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandCreated">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbCommand CommandCreated (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbCommand CommandCreated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandCreated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandCreated (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, commandMethod As DbCommandMethod, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, duration As TimeSpan) As DbCommand" />
      <MemberSignature Language="F#" Value="static member CommandCreated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * TimeSpan -&gt; System.Data.Common.DbCommand" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandCreated (diagnostics, connection, command, commandMethod, context, commandId, connectionId, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="commandMethod"> The type of method that will be called on this command. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="duration"> The duration of the command creation. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandCreated" /> event.
            </summary>
        <returns> An intercepted result. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandCreating">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbCommand&gt; CommandCreating (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbCommand&gt; CommandCreating(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandCreating(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandCreating (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, commandMethod As DbCommandMethod, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset) As InterceptionResult(Of DbCommand)" />
      <MemberSignature Language="F#" Value="static member CommandCreating : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbCommand&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandCreating (diagnostics, connection, commandMethod, context, commandId, connectionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbCommand&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="commandMethod"> The type of method that will be called on this command. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="startTime"> The time that execution began. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandCreating" /> event.
            </summary>
        <returns> An intercepted result. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandError">
      <MemberSignature Language="C#" Value="public static void CommandError (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, Guid commandId, Guid connectionId, Exception exception, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CommandError(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandError(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Exception,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CommandError (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, executeMethod As DbCommandMethod, commandId As Guid, connectionId As Guid, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan)" />
      <MemberSignature Language="F#" Value="static member CommandError : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * Exception * DateTimeOffset * TimeSpan -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandError (diagnostics, connection, command, context, executeMethod, commandId, connectionId, exception, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="executeMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="9" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="executeMethod"> Represents the method that will be called to execute the command. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="exception"> The exception that caused this failure. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="duration"> The amount of time that passed until the exception was raised. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandError" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandErrorAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task CommandErrorAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, Guid commandId, Guid connectionId, Exception exception, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task CommandErrorAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandErrorAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Exception,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandErrorAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, executeMethod As DbCommandMethod, commandId As Guid, connectionId As Guid, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member CommandErrorAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * Exception * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandErrorAsync (diagnostics, connection, command, context, executeMethod, commandId, connectionId, exception, startTime, duration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="executeMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="9" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="10" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="executeMethod"> Represents the method that will be called to execute the command. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="exception"> The exception that caused this failure. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="duration"> The amount of time that passed until the exception was raised. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandError" /> event.
            </summary>
        <returns> A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecuted">
      <MemberSignature Language="C#" Value="public static int CommandNonQueryExecuted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, int methodResult, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CommandNonQueryExecuted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, int32 methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandNonQueryExecuted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Int32,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandNonQueryExecuted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Integer, startTime As DateTimeOffset, duration As TimeSpan) As Integer" />
      <MemberSignature Language="F#" Value="static member CommandNonQueryExecuted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * int * DateTimeOffset * TimeSpan -&gt; int" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandNonQueryExecuted (diagnostics, connection, command, context, commandId, connectionId, methodResult, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="methodResult" Type="System.Int32" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="methodResult"> The return value from the underlying method execution. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="duration"> The duration of the command execution, not including consuming results. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns> The result of execution, which may have been modified by an interceptor. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecutedAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; CommandNonQueryExecutedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, int methodResult, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; CommandNonQueryExecutedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, int32 methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandNonQueryExecutedAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Int32,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandNonQueryExecutedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Integer, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Integer)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member CommandNonQueryExecutedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * int * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandNonQueryExecutedAsync (diagnostics, connection, command, context, commandId, connectionId, methodResult, startTime, duration, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;int&gt; CommandNonQueryExecutedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, int methodResult, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; CommandNonQueryExecutedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, int32 methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandNonQueryExecutedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Integer, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Integer)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member CommandNonQueryExecutedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * int * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandNonQueryExecutedAsync (diagnostics, connection, command, context, commandId, connectionId, methodResult, startTime, duration, cancellationToken)" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="methodResult" Type="System.Int32" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="9" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="methodResult"> The return value from the underlying method execution. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="duration"> The duration of the command execution, not including consuming results. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns> The result of execution, which may have been modified by an interceptor. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecuting">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt; CommandNonQueryExecuting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;int32&gt; CommandNonQueryExecuting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandNonQueryExecuting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandNonQueryExecuting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset) As InterceptionResult(Of Integer)" />
      <MemberSignature Language="F#" Value="static member CommandNonQueryExecuting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandNonQueryExecuting (diagnostics, connection, command, context, commandId, connectionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="startTime"> The time that execution began. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns> An intercepted result. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecutingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&gt; CommandNonQueryExecutingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;int32&gt;&gt; CommandNonQueryExecutingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandNonQueryExecutingAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandNonQueryExecutingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task(Of InterceptionResult(Of Integer))" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member CommandNonQueryExecutingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandNonQueryExecutingAsync (diagnostics, connection, command, context, commandId, connectionId, startTime, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&gt; CommandNonQueryExecutingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;int32&gt;&gt; CommandNonQueryExecutingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandNonQueryExecutingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult(Of Integer))" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member CommandNonQueryExecutingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandNonQueryExecutingAsync (diagnostics, connection, command, context, commandId, connectionId, startTime, cancellationToken)" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Int32&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns> An intercepted result. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecuted">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbDataReader CommandReaderExecuted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, System.Data.Common.DbDataReader methodResult, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbDataReader CommandReaderExecuted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Data.Common.DbDataReader methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandReaderExecuted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Data.Common.DbDataReader,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandReaderExecuted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As DbDataReader, startTime As DateTimeOffset, duration As TimeSpan) As DbDataReader" />
      <MemberSignature Language="F#" Value="static member CommandReaderExecuted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * System.Data.Common.DbDataReader * DateTimeOffset * TimeSpan -&gt; System.Data.Common.DbDataReader" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandReaderExecuted (diagnostics, connection, command, context, commandId, connectionId, methodResult, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="methodResult" Type="System.Data.Common.DbDataReader" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="methodResult"> The return value from the underlying method execution. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="duration"> The duration of the command execution, not including consuming results. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns> The result of execution, which may have been modified by an interceptor. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecutedAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt; CommandReaderExecutedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, System.Data.Common.DbDataReader methodResult, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Data.Common.DbDataReader&gt; CommandReaderExecutedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Data.Common.DbDataReader methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandReaderExecutedAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Data.Common.DbDataReader,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandReaderExecutedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As DbDataReader, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DbDataReader)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member CommandReaderExecutedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * System.Data.Common.DbDataReader * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandReaderExecutedAsync (diagnostics, connection, command, context, commandId, connectionId, methodResult, startTime, duration, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbDataReader&gt; CommandReaderExecutedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, System.Data.Common.DbDataReader methodResult, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;class System.Data.Common.DbDataReader&gt; CommandReaderExecutedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Data.Common.DbDataReader methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandReaderExecutedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As DbDataReader, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of DbDataReader)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member CommandReaderExecutedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * System.Data.Common.DbDataReader * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbDataReader&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandReaderExecutedAsync (diagnostics, connection, command, context, commandId, connectionId, methodResult, startTime, duration, cancellationToken)" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="methodResult" Type="System.Data.Common.DbDataReader" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="9" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="methodResult"> The return value from the underlying method execution. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="duration"> The duration of the command execution, not including consuming results. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns> The result of execution, which may have been modified by an interceptor. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecuting">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt; CommandReaderExecuting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbDataReader&gt; CommandReaderExecuting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandReaderExecuting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandReaderExecuting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset) As InterceptionResult(Of DbDataReader)" />
      <MemberSignature Language="F#" Value="static member CommandReaderExecuting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandReaderExecuting (diagnostics, connection, command, context, commandId, connectionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="startTime"> The time that execution began. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns> An intercepted result. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecutingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt; CommandReaderExecutingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbDataReader&gt;&gt; CommandReaderExecutingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandReaderExecutingAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandReaderExecutingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task(Of InterceptionResult(Of DbDataReader))" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member CommandReaderExecutingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandReaderExecutingAsync (diagnostics, connection, command, context, commandId, connectionId, startTime, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt; CommandReaderExecutingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbDataReader&gt;&gt; CommandReaderExecutingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandReaderExecutingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult(Of DbDataReader))" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member CommandReaderExecutingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandReaderExecutingAsync (diagnostics, connection, command, context, commandId, connectionId, startTime, cancellationToken)" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns> An intercepted result. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecuted">
      <MemberSignature Language="C#" Value="public static object CommandScalarExecuted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, object methodResult, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CommandScalarExecuted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, object methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandScalarExecuted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Object,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandScalarExecuted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Object, startTime As DateTimeOffset, duration As TimeSpan) As Object" />
      <MemberSignature Language="F#" Value="static member CommandScalarExecuted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * obj * DateTimeOffset * TimeSpan -&gt; obj" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandScalarExecuted (diagnostics, connection, command, context, commandId, connectionId, methodResult, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="methodResult" Type="System.Object" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="methodResult"> The return value from the underlying method execution. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="duration"> The duration of the command execution, not including consuming results. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns> The result of execution, which may have been modified by an interceptor. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecutedAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;object&gt; CommandScalarExecutedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, object methodResult, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;object&gt; CommandScalarExecutedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, object methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandScalarExecutedAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Object,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandScalarExecutedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Object, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Object)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member CommandScalarExecutedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * obj * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandScalarExecutedAsync (diagnostics, connection, command, context, commandId, connectionId, methodResult, startTime, duration, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;object&gt; CommandScalarExecutedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, object methodResult, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; CommandScalarExecutedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, object methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandScalarExecutedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Object, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member CommandScalarExecutedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * obj * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandScalarExecutedAsync (diagnostics, connection, command, context, commandId, connectionId, methodResult, startTime, duration, cancellationToken)" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="methodResult" Type="System.Object" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="9" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="methodResult"> The return value from the underlying method execution. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="duration"> The duration of the command execution, not including consuming results. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns> The result of execution, which may have been modified by an interceptor. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecuting">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;object&gt; CommandScalarExecuting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;object&gt; CommandScalarExecuting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandScalarExecuting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandScalarExecuting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset) As InterceptionResult(Of Object)" />
      <MemberSignature Language="F#" Value="static member CommandScalarExecuting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandScalarExecuting (diagnostics, connection, command, context, commandId, connectionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="startTime"> The time that execution began. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns> An intercepted result. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecutingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;object&gt;&gt; CommandScalarExecutingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;object&gt;&gt; CommandScalarExecutingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandScalarExecutingAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandScalarExecutingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task(Of InterceptionResult(Of Object))" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member CommandScalarExecutingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandScalarExecutingAsync (diagnostics, connection, command, context, commandId, connectionId, startTime, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;object&gt;&gt; CommandScalarExecutingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext context, Guid commandId, Guid connectionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;object&gt;&gt; CommandScalarExecutingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CommandScalarExecutingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult(Of Object))" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member CommandScalarExecutingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CommandScalarExecutingAsync (diagnostics, connection, command, context, commandId, connectionId, startTime, cancellationToken)" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Object&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="context"> The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="connectionId"> The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used. </param>
        <param name="startTime"> The time that execution began. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns> An intercepted result. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionClosed">
      <MemberSignature Language="C#" Value="public static void ConnectionClosed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConnectionClosed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionClosed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConnectionClosed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan)" />
      <MemberSignature Language="F#" Value="static member ConnectionClosed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionClosed (diagnostics, connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="startTime"> The time that the operation was started. </param>
        <param name="duration"> The amount of time before the connection was closed. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosed" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionClosedAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ConnectionClosedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ConnectionClosedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionClosedAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConnectionClosedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan) As Task" />
      <MemberSignature Language="F#" Value="static member ConnectionClosedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionClosedAsync (diagnostics, connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="startTime"> The time that the operation was started. </param>
        <param name="duration"> The amount of time before the connection was closed. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosed" /> event.
            </summary>
        <returns> A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionClosing">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionClosing (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionClosing(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionClosing(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConnectionClosing (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="static member ConnectionClosing : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionClosing (diagnostics, connection, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="startTime"> The time that the operation was started. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosing" /> event.
            </summary>
        <returns> The result of execution, which may have been modified by an interceptor. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionClosingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionClosingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionClosingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionClosingAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConnectionClosingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, startTime As DateTimeOffset) As Task(Of InterceptionResult)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member ConnectionClosingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionClosingAsync (diagnostics, connection, startTime)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionClosingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionClosingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConnectionClosingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, startTime As DateTimeOffset) As ValueTask(Of InterceptionResult)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member ConnectionClosingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionClosingAsync (diagnostics, connection, startTime)" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="startTime"> The time that the operation was started. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosing" /> event.
            </summary>
        <returns> A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionError">
      <MemberSignature Language="C#" Value="public static void ConnectionError (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Exception exception, DateTimeOffset startTime, TimeSpan duration, bool logErrorAsDebug);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConnectionError(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, bool logErrorAsDebug) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionError(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Exception,System.DateTimeOffset,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConnectionError (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, logErrorAsDebug As Boolean)" />
      <MemberSignature Language="F#" Value="static member ConnectionError : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Exception * DateTimeOffset * TimeSpan * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionError (diagnostics, connection, exception, startTime, duration, logErrorAsDebug)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="logErrorAsDebug" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="exception"> The exception representing the error. </param>
        <param name="startTime"> The time that the operation was started. </param>
        <param name="duration"> The elapsed time before the operation failed. </param>
        <param name="logErrorAsDebug"> A flag indicating the exception is being handled and so it should be logged at Debug level. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionError" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionErrorAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ConnectionErrorAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Exception exception, DateTimeOffset startTime, TimeSpan duration, bool logErrorAsDebug, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ConnectionErrorAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, bool logErrorAsDebug, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionErrorAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Exception,System.DateTimeOffset,System.TimeSpan,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConnectionErrorAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, logErrorAsDebug As Boolean, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member ConnectionErrorAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Exception * DateTimeOffset * TimeSpan * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionErrorAsync (diagnostics, connection, exception, startTime, duration, logErrorAsDebug, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="logErrorAsDebug" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="exception"> The exception representing the error. </param>
        <param name="startTime"> The time that the operation was started. </param>
        <param name="duration"> The elapsed time before the operation failed. </param>
        <param name="logErrorAsDebug"> A flag indicating the exception is being handled and so it should be logged at Debug level. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionError" /> event.
            </summary>
        <returns> A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpened">
      <MemberSignature Language="C#" Value="public static void ConnectionOpened (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConnectionOpened(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionOpened(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConnectionOpened (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan)" />
      <MemberSignature Language="F#" Value="static member ConnectionOpened : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionOpened (diagnostics, connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="startTime"> The time that the operation was started. </param>
        <param name="duration"> The amount of time before the connection was opened. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpened" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpenedAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ConnectionOpenedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ConnectionOpenedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionOpenedAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConnectionOpenedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member ConnectionOpenedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionOpenedAsync (diagnostics, connection, startTime, duration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="startTime"> The time that the operation was started. </param>
        <param name="duration"> The amount of time before the connection was opened. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpened" /> event.
            </summary>
        <returns> A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpening">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionOpening (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionOpening(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionOpening(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConnectionOpening (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="static member ConnectionOpening : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionOpening (diagnostics, connection, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="startTime"> The time that the operation was started. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpening" /> event.
            </summary>
        <returns> The result of execution, which may have been modified by an interceptor. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpeningAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionOpeningAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionOpeningAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionOpeningAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConnectionOpeningAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, startTime As DateTimeOffset, cancellationToken As CancellationToken) As Task(Of InterceptionResult)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member ConnectionOpeningAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionOpeningAsync (diagnostics, connection, startTime, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionOpeningAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionOpeningAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConnectionOpeningAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), connection As IRelationalConnection, startTime As DateTimeOffset, cancellationToken As CancellationToken) As ValueTask(Of InterceptionResult)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member ConnectionOpeningAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ConnectionOpeningAsync (diagnostics, connection, startTime, cancellationToken)" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="startTime"> The time that the operation was started. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpening" /> event.
            </summary>
        <returns> A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedTransactionSavepoint">
      <MemberSignature Language="C#" Value="public static void CreatedTransactionSavepoint (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreatedTransactionSavepoint(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CreatedTransactionSavepoint(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CreatedTransactionSavepoint (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset)" />
      <MemberSignature Language="F#" Value="static member CreatedTransactionSavepoint : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CreatedTransactionSavepoint (diagnostics, connection, transaction, transactionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CreatedTransactionSavepoint" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedTransactionSavepointAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task CreatedTransactionSavepointAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task CreatedTransactionSavepointAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CreatedTransactionSavepointAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreatedTransactionSavepointAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member CreatedTransactionSavepointAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CreatedTransactionSavepointAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CreatedTransactionSavepoint" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatingTransactionSavepoint">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult CreatingTransactionSavepoint (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult CreatingTransactionSavepoint(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CreatingTransactionSavepoint(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreatingTransactionSavepoint (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="static member CreatingTransactionSavepoint : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CreatingTransactionSavepoint (diagnostics, connection, transaction, transactionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CreatingTransactionSavepoint" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatingTransactionSavepointAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; CreatingTransactionSavepointAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; CreatingTransactionSavepointAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CreatingTransactionSavepointAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreatingTransactionSavepointAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult)" />
      <MemberSignature Language="F#" Value="static member CreatingTransactionSavepointAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.CreatingTransactionSavepointAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CreatingTransactionSavepoint" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataReaderDisposing">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult DataReaderDisposing (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, System.Data.Common.DbDataReader dataReader, Guid commandId, int recordsAffected, int readCount, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult DataReaderDisposing(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class System.Data.Common.DbDataReader dataReader, valuetype System.Guid commandId, int32 recordsAffected, int32 readCount, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.DataReaderDisposing(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Int32,System.Int32,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DataReaderDisposing (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), connection As IRelationalConnection, command As DbCommand, dataReader As DbDataReader, commandId As Guid, recordsAffected As Integer, readCount As Integer, startTime As DateTimeOffset, duration As TimeSpan) As InterceptionResult" />
      <MemberSignature Language="F#" Value="static member DataReaderDisposing : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * int * int * DateTimeOffset * TimeSpan -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.DataReaderDisposing (diagnostics, connection, command, dataReader, commandId, recordsAffected, readCount, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="dataReader" Type="System.Data.Common.DbDataReader" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="recordsAffected" Type="System.Int32" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="readCount" Type="System.Int32" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="connection"> The connection. </param>
        <param name="command"> The database command object. </param>
        <param name="dataReader"> The data reader. </param>
        <param name="commandId"> The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />. </param>
        <param name="recordsAffected"> The number of records in the database that were affected. </param>
        <param name="readCount"> The number of records that were read. </param>
        <param name="startTime"> The time that the operation was started. </param>
        <param name="duration"> The elapsed time from when the operation was started. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DataReaderDisposing" /> event.
            </summary>
        <returns> The result of execution, which may have been modified by an interceptor. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnOrders">
      <MemberSignature Language="C#" Value="public static void DuplicateColumnOrders (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject, System.Collections.Generic.IReadOnlyList&lt;string&gt; columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DuplicateColumnOrders(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.DuplicateColumnOrders(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier,System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DuplicateColumnOrders (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), storeObject As StoreObjectIdentifier, columns As IReadOnlyList(Of String))" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnOrders : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.DuplicateColumnOrders (diagnostics, storeObject, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columns" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="storeObject">The table.</param>
        <param name="columns">The columns.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DuplicateColumnOrders" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDeleteFailed">
      <MemberSignature Language="C#" Value="public static void ExecuteDeleteFailed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Type contextType, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExecuteDeleteFailed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Type contextType, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ExecuteDeleteFailed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Type,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExecuteDeleteFailed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), contextType As Type, exception As Exception)" />
      <MemberSignature Language="F#" Value="static member ExecuteDeleteFailed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Type * Exception -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ExecuteDeleteFailed (diagnostics, contextType, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="contextType" Type="System.Type" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="contextType">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type being used.</param>
        <param name="exception">The exception that caused this failure.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ExecuteDeleteFailed" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdateFailed">
      <MemberSignature Language="C#" Value="public static void ExecuteUpdateFailed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Type contextType, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExecuteUpdateFailed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Type contextType, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ExecuteUpdateFailed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Type,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExecuteUpdateFailed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), contextType As Type, exception As Exception)" />
      <MemberSignature Language="F#" Value="static member ExecuteUpdateFailed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Type * Exception -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ExecuteUpdateFailed (diagnostics, contextType, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="contextType" Type="System.Type" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="contextType">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type being used.</param>
        <param name="exception">The exception that caused this failure.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ExecuteUpdateFailed" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitTransactionEnlisted">
      <MemberSignature Language="C#" Value="public static void ExplicitTransactionEnlisted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExplicitTransactionEnlisted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ExplicitTransactionEnlisted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Transactions.Transaction)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExplicitTransactionEnlisted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As Transaction)" />
      <MemberSignature Language="F#" Value="static member ExplicitTransactionEnlisted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Transactions.Transaction -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ExplicitTransactionEnlisted (diagnostics, connection, transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ExplicitTransactionEnlisted" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyPropertiesMappedToUnrelatedTables">
      <MemberSignature Language="C#" Value="public static void ForeignKeyPropertiesMappedToUnrelatedTables (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyPropertiesMappedToUnrelatedTables(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ForeignKeyPropertiesMappedToUnrelatedTables(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyPropertiesMappedToUnrelatedTables (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), foreignKey As IForeignKey)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyPropertiesMappedToUnrelatedTables : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ForeignKeyPropertiesMappedToUnrelatedTables (diagnostics, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="foreignKey">The foreign key.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ForeignKeyPropertiesMappedToUnrelatedTables" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyTpcPrincipalWarning">
      <MemberSignature Language="C#" Value="public static void ForeignKeyTpcPrincipalWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyTpcPrincipalWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ForeignKeyTpcPrincipalWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyTpcPrincipalWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), foreignKey As IForeignKey)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyTpcPrincipalWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ForeignKeyTpcPrincipalWarning (diagnostics, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="foreignKey">The foreign key.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ForeignKeyTpcPrincipalWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexPropertiesBothMappedAndNotMappedToTable">
      <MemberSignature Language="C#" Value="public static void IndexPropertiesBothMappedAndNotMappedToTable (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IIndex index, string unmappedPropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IndexPropertiesBothMappedAndNotMappedToTable(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IIndex index, string unmappedPropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.IndexPropertiesBothMappedAndNotMappedToTable(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IIndex,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IndexPropertiesBothMappedAndNotMappedToTable (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), entityType As IEntityType, index As IIndex, unmappedPropertyName As String)" />
      <MemberSignature Language="F#" Value="static member IndexPropertiesBothMappedAndNotMappedToTable : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.IIndex * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.IndexPropertiesBothMappedAndNotMappedToTable (diagnostics, entityType, index, unmappedPropertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="unmappedPropertyName" Type="System.String" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="entityType">The entity type on which the index is defined.</param>
        <param name="index">The index on the entity type.</param>
        <param name="unmappedPropertyName">The name of the property which is not mapped.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.IndexPropertiesBothMappedAndNotMappedToTable" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexPropertiesMappedToNonOverlappingTables">
      <MemberSignature Language="C#" Value="public static void IndexPropertiesMappedToNonOverlappingTables (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IIndex index, string property1Name, System.Collections.Generic.List&lt;(string Table, string Schema)&gt; tablesMappedToProperty1, string property2Name, System.Collections.Generic.List&lt;(string Table, string Schema)&gt; tablesMappedToProperty2);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IndexPropertiesMappedToNonOverlappingTables(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IIndex index, string property1Name, class System.Collections.Generic.List`1&lt;valuetype System.ValueTuple`2&lt;string, string&gt;&gt; tablesMappedToProperty1, string property2Name, class System.Collections.Generic.List`1&lt;valuetype System.ValueTuple`2&lt;string, string&gt;&gt; tablesMappedToProperty2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.IndexPropertiesMappedToNonOverlappingTables(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IIndex,System.String,System.Collections.Generic.List{System.ValueTuple{System.String,System.String}},System.String,System.Collections.Generic.List{System.ValueTuple{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IndexPropertiesMappedToNonOverlappingTables (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), entityType As IEntityType, index As IIndex, property1Name As String, tablesMappedToProperty1 As List(Of ValueTuple(Of String, String)), property2Name As String, tablesMappedToProperty2 As List(Of ValueTuple(Of String, String)))" />
      <MemberSignature Language="F#" Value="static member IndexPropertiesMappedToNonOverlappingTables : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.IIndex * string * System.Collections.Generic.List&lt;ValueTuple&lt;string, string&gt;&gt; * string * System.Collections.Generic.List&lt;ValueTuple&lt;string, string&gt;&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.IndexPropertiesMappedToNonOverlappingTables (diagnostics, entityType, index, property1Name, tablesMappedToProperty1, property2Name, tablesMappedToProperty2)" />
      <MemberSignature Language="C#" Value="public static void IndexPropertiesMappedToNonOverlappingTables (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IIndex index, string property1Name, System.Collections.Generic.List&lt;(string Table, string? Schema)&gt; tablesMappedToProperty1, string property2Name, System.Collections.Generic.List&lt;(string Table, string? Schema)&gt; tablesMappedToProperty2);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property1Name" Type="System.String" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="tablesMappedToProperty1" Type="System.Collections.Generic.List&lt;System.ValueTuple&lt;System.String,System.String&gt;&gt;" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="property2Name" Type="System.String" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="tablesMappedToProperty2" Type="System.Collections.Generic.List&lt;System.ValueTuple&lt;System.String,System.String&gt;&gt;" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="entityType">The entity type on which the index is defined.</param>
        <param name="index">The index on the entity type.</param>
        <param name="property1Name">The first property name which is invalid.</param>
        <param name="tablesMappedToProperty1">The tables mapped to the first property.</param>
        <param name="property2Name">The second property name which is invalid.</param>
        <param name="tablesMappedToProperty2">The tables mapped to the second property.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.IndexPropertiesMappedToNonOverlappingTables" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPropertiesNotMappedToTable">
      <MemberSignature Language="C#" Value="public static void KeyPropertiesNotMappedToTable (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void KeyPropertiesNotMappedToTable(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.KeyPropertiesNotMappedToTable(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IKey)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub KeyPropertiesNotMappedToTable (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), key As IKey)" />
      <MemberSignature Language="F#" Value="static member KeyPropertiesNotMappedToTable : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IKey -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.KeyPropertiesNotMappedToTable (diagnostics, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="key">The foreign key.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.KeyPropertiesNotMappedToTable" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrateUsingConnection">
      <MemberSignature Language="C#" Value="public static void MigrateUsingConnection (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; diagnostics, Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MigrateUsingConnection(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Migrations&gt; diagnostics, class Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrateUsingConnection(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MigrateUsingConnection (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Migrations), migrator As IMigrator, connection As IRelationalConnection)" />
      <MemberSignature Language="F#" Value="static member MigrateUsingConnection : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; * Microsoft.EntityFrameworkCore.Migrations.IMigrator * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrateUsingConnection (diagnostics, migrator, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Migrations&gt;" RefType="this" />
        <Parameter Name="migrator" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrator" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="migrator">The migrator.</param>
        <param name="connection">The connection.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrateUsingConnection" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationApplying">
      <MemberSignature Language="C#" Value="public static void MigrationApplying (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; diagnostics, Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, Microsoft.EntityFrameworkCore.Migrations.Migration migration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MigrationApplying(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Migrations&gt; diagnostics, class Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, class Microsoft.EntityFrameworkCore.Migrations.Migration migration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationApplying(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.Migration)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MigrationApplying (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Migrations), migrator As IMigrator, migration As Migration)" />
      <MemberSignature Language="F#" Value="static member MigrationApplying : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; * Microsoft.EntityFrameworkCore.Migrations.IMigrator * Microsoft.EntityFrameworkCore.Migrations.Migration -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationApplying (diagnostics, migrator, migration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Migrations&gt;" RefType="this" />
        <Parameter Name="migrator" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrator" />
        <Parameter Name="migration" Type="Microsoft.EntityFrameworkCore.Migrations.Migration" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="migrator">The migrator.</param>
        <param name="migration">The migration.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationApplying" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationAttributeMissingWarning">
      <MemberSignature Language="C#" Value="public static void MigrationAttributeMissingWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; diagnostics, System.Reflection.TypeInfo migrationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MigrationAttributeMissingWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Migrations&gt; diagnostics, class System.Reflection.TypeInfo migrationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationAttributeMissingWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},System.Reflection.TypeInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MigrationAttributeMissingWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Migrations), migrationType As TypeInfo)" />
      <MemberSignature Language="F#" Value="static member MigrationAttributeMissingWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; * System.Reflection.TypeInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationAttributeMissingWarning (diagnostics, migrationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Migrations&gt;" RefType="this" />
        <Parameter Name="migrationType" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="migrationType">Info for the migration type.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationAttributeMissingWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationGeneratingDownScript">
      <MemberSignature Language="C#" Value="public static void MigrationGeneratingDownScript (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; diagnostics, Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, Microsoft.EntityFrameworkCore.Migrations.Migration migration, string fromMigration, string toMigration, bool idempotent);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MigrationGeneratingDownScript(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Migrations&gt; diagnostics, class Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, class Microsoft.EntityFrameworkCore.Migrations.Migration migration, string fromMigration, string toMigration, bool idempotent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationGeneratingDownScript(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.Migration,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MigrationGeneratingDownScript (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Migrations), migrator As IMigrator, migration As Migration, fromMigration As String, toMigration As String, idempotent As Boolean)" />
      <MemberSignature Language="F#" Value="static member MigrationGeneratingDownScript : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; * Microsoft.EntityFrameworkCore.Migrations.IMigrator * Microsoft.EntityFrameworkCore.Migrations.Migration * string * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationGeneratingDownScript (diagnostics, migrator, migration, fromMigration, toMigration, idempotent)" />
      <MemberSignature Language="C#" Value="public static void MigrationGeneratingDownScript (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; diagnostics, Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, Microsoft.EntityFrameworkCore.Migrations.Migration migration, string? fromMigration, string? toMigration, bool idempotent);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Migrations&gt;" RefType="this" />
        <Parameter Name="migrator" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrator" />
        <Parameter Name="migration" Type="Microsoft.EntityFrameworkCore.Migrations.Migration" />
        <Parameter Name="fromMigration" Type="System.String" />
        <Parameter Name="toMigration" Type="System.String" />
        <Parameter Name="idempotent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="migrator">The migrator.</param>
        <param name="migration">The migration.</param>
        <param name="fromMigration">The starting migration name.</param>
        <param name="toMigration">The ending migration name.</param>
        <param name="idempotent">Indicates whether or not an idempotent script is being generated.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationGeneratingDownScript" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationGeneratingUpScript">
      <MemberSignature Language="C#" Value="public static void MigrationGeneratingUpScript (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; diagnostics, Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, Microsoft.EntityFrameworkCore.Migrations.Migration migration, string fromMigration, string toMigration, bool idempotent);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MigrationGeneratingUpScript(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Migrations&gt; diagnostics, class Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, class Microsoft.EntityFrameworkCore.Migrations.Migration migration, string fromMigration, string toMigration, bool idempotent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationGeneratingUpScript(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.Migration,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MigrationGeneratingUpScript (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Migrations), migrator As IMigrator, migration As Migration, fromMigration As String, toMigration As String, idempotent As Boolean)" />
      <MemberSignature Language="F#" Value="static member MigrationGeneratingUpScript : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; * Microsoft.EntityFrameworkCore.Migrations.IMigrator * Microsoft.EntityFrameworkCore.Migrations.Migration * string * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationGeneratingUpScript (diagnostics, migrator, migration, fromMigration, toMigration, idempotent)" />
      <MemberSignature Language="C#" Value="public static void MigrationGeneratingUpScript (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; diagnostics, Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, Microsoft.EntityFrameworkCore.Migrations.Migration migration, string? fromMigration, string? toMigration, bool idempotent);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Migrations&gt;" RefType="this" />
        <Parameter Name="migrator" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrator" />
        <Parameter Name="migration" Type="Microsoft.EntityFrameworkCore.Migrations.Migration" />
        <Parameter Name="fromMigration" Type="System.String" />
        <Parameter Name="toMigration" Type="System.String" />
        <Parameter Name="idempotent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="migrator">The migrator.</param>
        <param name="migration">The migration.</param>
        <param name="fromMigration">The starting migration name.</param>
        <param name="toMigration">The ending migration name.</param>
        <param name="idempotent">Indicates whether or not an idempotent script is being generated.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationGeneratingUpScript" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationReverting">
      <MemberSignature Language="C#" Value="public static void MigrationReverting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; diagnostics, Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, Microsoft.EntityFrameworkCore.Migrations.Migration migration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MigrationReverting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Migrations&gt; diagnostics, class Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, class Microsoft.EntityFrameworkCore.Migrations.Migration migration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationReverting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.Migration)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MigrationReverting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Migrations), migrator As IMigrator, migration As Migration)" />
      <MemberSignature Language="F#" Value="static member MigrationReverting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; * Microsoft.EntityFrameworkCore.Migrations.IMigrator * Microsoft.EntityFrameworkCore.Migrations.Migration -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationReverting (diagnostics, migrator, migration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Migrations&gt;" RefType="this" />
        <Parameter Name="migrator" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrator" />
        <Parameter Name="migration" Type="Microsoft.EntityFrameworkCore.Migrations.Migration" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="migrator">The migrator.</param>
        <param name="migration">The migration.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationReverting" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationsNotApplied">
      <MemberSignature Language="C#" Value="public static void MigrationsNotApplied (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; diagnostics, Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MigrationsNotApplied(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Migrations&gt; diagnostics, class Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationsNotApplied(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MigrationsNotApplied (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Migrations), migrator As IMigrator)" />
      <MemberSignature Language="F#" Value="static member MigrationsNotApplied : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; * Microsoft.EntityFrameworkCore.Migrations.IMigrator -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationsNotApplied (diagnostics, migrator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Migrations&gt;" RefType="this" />
        <Parameter Name="migrator" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrator" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="migrator">The migrator.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationsNotApplied" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrationsNotFound">
      <MemberSignature Language="C#" Value="public static void MigrationsNotFound (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; diagnostics, Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly migrationsAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MigrationsNotFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Migrations&gt; diagnostics, class Microsoft.EntityFrameworkCore.Migrations.IMigrator migrator, class Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly migrationsAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationsNotFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations},Microsoft.EntityFrameworkCore.Migrations.IMigrator,Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MigrationsNotFound (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Migrations), migrator As IMigrator, migrationsAssembly As IMigrationsAssembly)" />
      <MemberSignature Language="F#" Value="static member MigrationsNotFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Migrations&gt; * Microsoft.EntityFrameworkCore.Migrations.IMigrator * Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MigrationsNotFound (diagnostics, migrator, migrationsAssembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Migrations&gt;" RefType="this" />
        <Parameter Name="migrator" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrator" />
        <Parameter Name="migrationsAssembly" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="migrator">The migrator.</param>
        <param name="migrationsAssembly">The assembly in which migrations are stored.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MigrationsNotFound" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelValidationKeyDefaultValueWarning">
      <MemberSignature Language="C#" Value="public static void ModelValidationKeyDefaultValueWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ModelValidationKeyDefaultValueWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ModelValidationKeyDefaultValueWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ModelValidationKeyDefaultValueWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), property As IProperty)" />
      <MemberSignature Language="F#" Value="static member ModelValidationKeyDefaultValueWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ModelValidationKeyDefaultValueWarning (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="property">The property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ModelValidationKeyDefaultValueWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleCollectionIncludeWarning">
      <MemberSignature Language="C#" Value="public static void MultipleCollectionIncludeWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultipleCollectionIncludeWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MultipleCollectionIncludeWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MultipleCollectionIncludeWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query))" />
      <MemberSignature Language="F#" Value="static member MultipleCollectionIncludeWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.MultipleCollectionIncludeWarning diagnostics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.MultipleCollectionIncludeWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonQueryOperationFailed">
      <MemberSignature Language="C#" Value="public static void NonQueryOperationFailed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Type contextType, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NonQueryOperationFailed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Type contextType, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.NonQueryOperationFailed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Type,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NonQueryOperationFailed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), contextType As Type, exception As Exception)" />
      <MemberSignature Language="F#" Value="static member NonQueryOperationFailed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Type * Exception -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.NonQueryOperationFailed (diagnostics, contextType, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="contextType" Type="System.Type" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="contextType">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type being used.</param>
        <param name="exception">The exception that caused this failure.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.NonQueryOperationFailed" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionalDependentWithAllNullPropertiesWarning">
      <MemberSignature Language="C#" Value="public static void OptionalDependentWithAllNullPropertiesWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OptionalDependentWithAllNullPropertiesWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.OptionalDependentWithAllNullPropertiesWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.Update.IUpdateEntry)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub OptionalDependentWithAllNullPropertiesWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), entry As IUpdateEntry)" />
      <MemberSignature Language="F#" Value="static member OptionalDependentWithAllNullPropertiesWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.OptionalDependentWithAllNullPropertiesWarning (diagnostics, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="entry">The entry.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.OptionalDependentWithAllNullPropertiesWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionalDependentWithAllNullPropertiesWarningSensitive">
      <MemberSignature Language="C#" Value="public static void OptionalDependentWithAllNullPropertiesWarningSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OptionalDependentWithAllNullPropertiesWarningSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.OptionalDependentWithAllNullPropertiesWarningSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.Update.IUpdateEntry)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub OptionalDependentWithAllNullPropertiesWarningSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), entry As IUpdateEntry)" />
      <MemberSignature Language="F#" Value="static member OptionalDependentWithAllNullPropertiesWarningSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.OptionalDependentWithAllNullPropertiesWarningSensitive (diagnostics, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="entry">The entry.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.OptionalDependentWithAllNullPropertiesWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionalDependentWithoutIdentifyingPropertyWarning">
      <MemberSignature Language="C#" Value="public static void OptionalDependentWithoutIdentifyingPropertyWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OptionalDependentWithoutIdentifyingPropertyWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.OptionalDependentWithoutIdentifyingPropertyWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub OptionalDependentWithoutIdentifyingPropertyWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="static member OptionalDependentWithoutIdentifyingPropertyWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.OptionalDependentWithoutIdentifyingPropertyWarning (diagnostics, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="entityType">The entity type.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.OptionalDependentWithoutIdentifyingPropertyWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryPossibleExceptionWithAggregateOperatorWarning">
      <MemberSignature Language="C#" Value="public static void QueryPossibleExceptionWithAggregateOperatorWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryPossibleExceptionWithAggregateOperatorWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.QueryPossibleExceptionWithAggregateOperatorWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryPossibleExceptionWithAggregateOperatorWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query))" />
      <MemberSignature Language="F#" Value="static member QueryPossibleExceptionWithAggregateOperatorWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.QueryPossibleExceptionWithAggregateOperatorWarning diagnostics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.QueryPossibleExceptionWithAggregateOperatorWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryPossibleUnintendedUseOfEqualsWarning">
      <MemberSignature Language="C#" Value="public static void QueryPossibleUnintendedUseOfEqualsWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, System.Linq.Expressions.MethodCallExpression methodCallExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryPossibleUnintendedUseOfEqualsWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Linq.Expressions.MethodCallExpression methodCallExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.QueryPossibleUnintendedUseOfEqualsWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Linq.Expressions.MethodCallExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryPossibleUnintendedUseOfEqualsWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), methodCallExpression As MethodCallExpression)" />
      <MemberSignature Language="F#" Value="static member QueryPossibleUnintendedUseOfEqualsWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * System.Linq.Expressions.MethodCallExpression -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.QueryPossibleUnintendedUseOfEqualsWarning (diagnostics, methodCallExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="methodCallExpression" Type="System.Linq.Expressions.MethodCallExpression" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="methodCallExpression"> The expression representing the problematic method call. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.QueryPossibleUnintendedUseOfEqualsWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryPossibleUnintendedUseOfEqualsWarning">
      <MemberSignature Language="C#" Value="public static void QueryPossibleUnintendedUseOfEqualsWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression left, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryPossibleUnintendedUseOfEqualsWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression left, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.QueryPossibleUnintendedUseOfEqualsWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryPossibleUnintendedUseOfEqualsWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), left As SqlExpression, right As SqlExpression)" />
      <MemberSignature Language="F#" Value="static member QueryPossibleUnintendedUseOfEqualsWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.QueryPossibleUnintendedUseOfEqualsWarning (diagnostics, left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="left">The left SQL expression of the Equals.</param>
        <param name="right">The right SQL expression of the Equals.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.QueryPossibleUnintendedUseOfEqualsWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleasedTransactionSavepoint">
      <MemberSignature Language="C#" Value="public static void ReleasedTransactionSavepoint (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleasedTransactionSavepoint(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ReleasedTransactionSavepoint(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ReleasedTransactionSavepoint (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset)" />
      <MemberSignature Language="F#" Value="static member ReleasedTransactionSavepoint : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ReleasedTransactionSavepoint (diagnostics, connection, transaction, transactionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ReleasedTransactionSavepoint" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleasedTransactionSavepointAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ReleasedTransactionSavepointAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ReleasedTransactionSavepointAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ReleasedTransactionSavepointAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReleasedTransactionSavepointAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member ReleasedTransactionSavepointAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ReleasedTransactionSavepointAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ReleasedTransactionSavepoint" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleasingTransactionSavepoint">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ReleasingTransactionSavepoint (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ReleasingTransactionSavepoint(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ReleasingTransactionSavepoint(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReleasingTransactionSavepoint (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="static member ReleasingTransactionSavepoint : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ReleasingTransactionSavepoint (diagnostics, connection, transaction, transactionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.RollingBackToTransactionSavepoint" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleasingTransactionSavepointAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ReleasingTransactionSavepointAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ReleasingTransactionSavepointAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ReleasingTransactionSavepointAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReleasingTransactionSavepointAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult)" />
      <MemberSignature Language="F#" Value="static member ReleasingTransactionSavepointAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.ReleasingTransactionSavepointAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ReleasingTransactionSavepoint" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="RolledBackToTransactionSavepoint">
      <MemberSignature Language="C#" Value="public static void RolledBackToTransactionSavepoint (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RolledBackToTransactionSavepoint(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.RolledBackToTransactionSavepoint(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RolledBackToTransactionSavepoint (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset)" />
      <MemberSignature Language="F#" Value="static member RolledBackToTransactionSavepoint : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.RolledBackToTransactionSavepoint (diagnostics, connection, transaction, transactionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.RolledBackToTransactionSavepoint" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RolledBackToTransactionSavepointAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task RolledBackToTransactionSavepointAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task RolledBackToTransactionSavepointAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.RolledBackToTransactionSavepointAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RolledBackToTransactionSavepointAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member RolledBackToTransactionSavepointAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.RolledBackToTransactionSavepointAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CreatedTransactionSavepoint" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="RollingBackToTransactionSavepoint">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult RollingBackToTransactionSavepoint (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult RollingBackToTransactionSavepoint(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.RollingBackToTransactionSavepoint(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RollingBackToTransactionSavepoint (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="static member RollingBackToTransactionSavepoint : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.RollingBackToTransactionSavepoint (diagnostics, connection, transaction, transactionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.RollingBackToTransactionSavepoint" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RollingBackToTransactionSavepointAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; RollingBackToTransactionSavepointAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; RollingBackToTransactionSavepointAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.RollingBackToTransactionSavepointAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RollingBackToTransactionSavepointAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult)" />
      <MemberSignature Language="F#" Value="static member RollingBackToTransactionSavepointAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.RollingBackToTransactionSavepointAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="transactionId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.RollingBackToTransactionSavepoint" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="StoredProcedureConcurrencyTokenNotMapped">
      <MemberSignature Language="C#" Value="public static void StoredProcedureConcurrencyTokenNotMapped (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IProperty concurrencyProperty, string storedProcedureName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StoredProcedureConcurrencyTokenNotMapped(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IProperty concurrencyProperty, string storedProcedureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.StoredProcedureConcurrencyTokenNotMapped(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StoredProcedureConcurrencyTokenNotMapped (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), entityType As IEntityType, concurrencyProperty As IProperty, storedProcedureName As String)" />
      <MemberSignature Language="F#" Value="static member StoredProcedureConcurrencyTokenNotMapped : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.IProperty * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.StoredProcedureConcurrencyTokenNotMapped (diagnostics, entityType, concurrencyProperty, storedProcedureName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="concurrencyProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="storedProcedureName" Type="System.String" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="entityType">The entity type that the stored procedure is mapped to.</param>
        <param name="concurrencyProperty">The property which represents the concurrency token.</param>
        <param name="storedProcedureName">The stored procedure name.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.StoredProcedureConcurrencyTokenNotMapped" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TpcStoreGeneratedIdentityWarning">
      <MemberSignature Language="C#" Value="public static void TpcStoreGeneratedIdentityWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TpcStoreGeneratedIdentityWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TpcStoreGeneratedIdentityWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TpcStoreGeneratedIdentityWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), property As IProperty)" />
      <MemberSignature Language="F#" Value="static member TpcStoreGeneratedIdentityWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TpcStoreGeneratedIdentityWarning (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="property">The entity type on which the index is defined.</param>
        <summary>
                Logs the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TpcStoreGeneratedIdentityWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionCommitted">
      <MemberSignature Language="C#" Value="public static void TransactionCommitted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransactionCommitted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionCommitted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TransactionCommitted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, duration As TimeSpan)" />
      <MemberSignature Language="F#" Value="static member TransactionCommitted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * TimeSpan -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionCommitted (diagnostics, connection, transaction, transactionId, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The elapsed time from when the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionCommitted" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionCommittedAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task TransactionCommittedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task TransactionCommittedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionCommittedAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionCommittedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member TransactionCommittedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionCommittedAsync (diagnostics, connection, transaction, transactionId, startTime, duration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The elapsed time from when the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionCommitted" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionCommitting">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult TransactionCommitting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult TransactionCommitting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionCommitting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionCommitting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="static member TransactionCommitting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionCommitting (diagnostics, connection, transaction, transactionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionCommitting" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionCommittingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; TransactionCommittingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; TransactionCommittingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionCommittingAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionCommittingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task(Of InterceptionResult)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member TransactionCommittingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionCommittingAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; TransactionCommittingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; TransactionCommittingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionCommittingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member TransactionCommittingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionCommittingAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionCommitting" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionDisposed">
      <MemberSignature Language="C#" Value="public static void TransactionDisposed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransactionDisposed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionDisposed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TransactionDisposed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset)" />
      <MemberSignature Language="F#" Value="static member TransactionDisposed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionDisposed (diagnostics, connection, transaction, transactionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionDisposed" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionError">
      <MemberSignature Language="C#" Value="public static void TransactionError (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, string action, Exception exception, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransactionError(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, string action, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionError(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.String,System.Exception,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TransactionError (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, action As String, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan)" />
      <MemberSignature Language="F#" Value="static member TransactionError : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * string * Exception * DateTimeOffset * TimeSpan -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionError (diagnostics, connection, transaction, transactionId, action, exception, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="action">The action being taken.</param>
        <param name="exception">The exception that represents the error.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The elapsed time from when the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionError" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionErrorAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task TransactionErrorAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, string action, Exception exception, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task TransactionErrorAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, string action, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionErrorAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.String,System.Exception,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionErrorAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, action As String, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member TransactionErrorAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * string * Exception * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionErrorAsync (diagnostics, connection, transaction, transactionId, action, exception, startTime, duration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="action">The action being taken.</param>
        <param name="exception">The exception that represents the error.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The elapsed time from when the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionError" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionRolledBack">
      <MemberSignature Language="C#" Value="public static void TransactionRolledBack (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransactionRolledBack(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionRolledBack(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TransactionRolledBack (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, duration As TimeSpan)" />
      <MemberSignature Language="F#" Value="static member TransactionRolledBack : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * TimeSpan -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionRolledBack (diagnostics, connection, transaction, transactionId, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The elapsed time from when the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionRolledBack" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionRolledBackAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task TransactionRolledBackAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task TransactionRolledBackAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionRolledBackAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionRolledBackAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member TransactionRolledBackAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionRolledBackAsync (diagnostics, connection, transaction, transactionId, startTime, duration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The elapsed time from when the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionRolledBack" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionRollingBack">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult TransactionRollingBack (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult TransactionRollingBack(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionRollingBack(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionRollingBack (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="static member TransactionRollingBack : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionRollingBack (diagnostics, connection, transaction, transactionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionRollingBack" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionRollingBackAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; TransactionRollingBackAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; TransactionRollingBackAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionRollingBackAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionRollingBackAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task(Of InterceptionResult)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member TransactionRollingBackAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionRollingBackAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; TransactionRollingBackAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; TransactionRollingBackAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionRollingBackAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member TransactionRollingBackAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionRollingBackAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionRollingBack" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionStarted">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbTransaction TransactionStarted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbTransaction TransactionStarted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionStarted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionStarted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, duration As TimeSpan) As DbTransaction" />
      <MemberSignature Language="F#" Value="static member TransactionStarted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * TimeSpan -&gt; System.Data.Common.DbTransaction" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionStarted (diagnostics, connection, transaction, transactionId, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The amount of time before the connection was opened.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionStarted" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionStartedAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Data.Common.DbTransaction&gt; TransactionStartedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Data.Common.DbTransaction&gt; TransactionStartedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionStartedAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionStartedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DbTransaction)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member TransactionStartedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Common.DbTransaction&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionStartedAsync (diagnostics, connection, transaction, transactionId, startTime, duration, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbTransaction&gt; TransactionStartedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;class System.Data.Common.DbTransaction&gt; TransactionStartedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionStartedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of DbTransaction)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member TransactionStartedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbTransaction&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionStartedAsync (diagnostics, connection, transaction, transactionId, startTime, duration, cancellationToken)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;System.Data.Common.DbTransaction&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbTransaction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The amount of time before the connection was opened.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionStarted" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionStarting">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbTransaction&gt; TransactionStarting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.IsolationLevel isolationLevel, Guid transactionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbTransaction&gt; TransactionStarting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.Data.IsolationLevel isolationLevel, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionStarting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.IsolationLevel,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionStarting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, isolationLevel As IsolationLevel, transactionId As Guid, startTime As DateTimeOffset) As InterceptionResult(Of DbTransaction)" />
      <MemberSignature Language="F#" Value="static member TransactionStarting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.IsolationLevel * Guid * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbTransaction&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionStarting (diagnostics, connection, isolationLevel, transactionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbTransaction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="isolationLevel">The transaction isolation level.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionStarting" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionStartingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbTransaction&gt;&gt; TransactionStartingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.IsolationLevel isolationLevel, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbTransaction&gt;&gt; TransactionStartingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.Data.IsolationLevel isolationLevel, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionStartingAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.IsolationLevel,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionStartingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, isolationLevel As IsolationLevel, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task(Of InterceptionResult(Of DbTransaction))" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member TransactionStartingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.IsolationLevel * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbTransaction&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionStartingAsync (diagnostics, connection, isolationLevel, transactionId, startTime, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbTransaction&gt;&gt; TransactionStartingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.IsolationLevel isolationLevel, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbTransaction&gt;&gt; TransactionStartingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.Data.IsolationLevel isolationLevel, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionStartingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, isolationLevel As IsolationLevel, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult(Of DbTransaction))" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member TransactionStartingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.IsolationLevel * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbTransaction&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionStartingAsync (diagnostics, connection, isolationLevel, transactionId, startTime, cancellationToken)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbTransaction&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbTransaction&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="isolationLevel">The transaction isolation level.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionStarting" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionUsed">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbTransaction TransactionUsed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbTransaction TransactionUsed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionUsed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionUsed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset) As DbTransaction" />
      <MemberSignature Language="F#" Value="static member TransactionUsed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset -&gt; System.Data.Common.DbTransaction" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionUsed (diagnostics, connection, transaction, transactionId, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionUsed" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionUsedAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Data.Common.DbTransaction&gt; TransactionUsedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Data.Common.DbTransaction&gt; TransactionUsedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionUsedAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,System.Guid,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionUsedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DbTransaction)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member TransactionUsedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Common.DbTransaction&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionUsedAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbTransaction&gt; TransactionUsedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; diagnostics, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbTransaction transaction, Guid transactionId, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;class System.Data.Common.DbTransaction&gt; TransactionUsedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Transaction&gt; diagnostics, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbTransaction transaction, valuetype System.Guid transactionId, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TransactionUsedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Database.Transaction), connection As IRelationalConnection, transaction As DbTransaction, transactionId As Guid, startTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of DbTransaction)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member TransactionUsedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Transaction&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbTransaction * Guid * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbTransaction&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TransactionUsedAsync (diagnostics, connection, transaction, transactionId, startTime, cancellationToken)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Threading.Tasks.Task&lt;System.Data.Common.DbTransaction&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbTransaction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Transaction&gt;" RefType="this" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
        <Parameter Name="transactionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="connection">The connection.</param>
        <param name="transaction">The transaction.</param>
        <param name="transactionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbTransaction" />.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionUsed" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerOnNonRootTphEntity">
      <MemberSignature Language="C#" Value="public static void TriggerOnNonRootTphEntity (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TriggerOnNonRootTphEntity(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TriggerOnNonRootTphEntity(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TriggerOnNonRootTphEntity (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="static member TriggerOnNonRootTphEntity : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.TriggerOnNonRootTphEntity (diagnostics, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="entityType">The entity type.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.TransactionError" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnexpectedTrailingResultSetWhenSaving">
      <MemberSignature Language="C#" Value="public static void UnexpectedTrailingResultSetWhenSaving (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnexpectedTrailingResultSetWhenSaving(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.UnexpectedTrailingResultSetWhenSaving(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub UnexpectedTrailingResultSetWhenSaving (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update))" />
      <MemberSignature Language="F#" Value="static member UnexpectedTrailingResultSetWhenSaving : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalLoggerExtensions.UnexpectedTrailingResultSetWhenSaving diagnostics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.UnexpectedTrailingResultSetWhenSaving" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
