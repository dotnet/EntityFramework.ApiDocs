<Type Name="DataReaderClosingEventData" FullName="Microsoft.EntityFrameworkCore.Diagnostics.DataReaderClosingEventData">
  <TypeSignature Language="C#" Value="public class DataReaderClosingEventData : Microsoft.EntityFrameworkCore.Diagnostics.DataReaderEventData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReaderClosingEventData extends Microsoft.EntityFrameworkCore.Diagnostics.DataReaderEventData" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderClosingEventData" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReaderClosingEventData&#xA;Inherits DataReaderEventData" />
  <TypeSignature Language="F#" Value="type DataReaderClosingEventData = class&#xA;    inherit DataReaderEventData" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.DataReaderEventData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DataReaderClosing" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-diagnostics">Logging, events, and diagnostics</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataReaderClosingEventData (Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase eventDefinition, Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,string&gt; messageGenerator, System.Data.Common.DbCommand command, System.Data.Common.DbDataReader dataReader, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, bool async, int recordsAffected, int readCount, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase eventDefinition, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase, class Microsoft.EntityFrameworkCore.Diagnostics.EventData, string&gt; messageGenerator, class System.Data.Common.DbCommand command, class System.Data.Common.DbDataReader dataReader, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, bool async, int32 recordsAffected, int32 readCount, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderClosingEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},System.Data.Common.DbCommand,System.Data.Common.DbDataReader,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Boolean,System.Int32,System.Int32,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventDefinition As EventDefinitionBase, messageGenerator As Func(Of EventDefinitionBase, EventData, String), command As DbCommand, dataReader As DbDataReader, context As DbContext, commandId As Guid, connectionId As Guid, async As Boolean, recordsAffected As Integer, readCount As Integer, startTime As DateTimeOffset)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.DataReaderClosingEventData : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase * Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase, Microsoft.EntityFrameworkCore.Diagnostics.EventData, string&gt; * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * bool * int * int * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.DataReaderClosingEventData" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.DataReaderClosingEventData (eventDefinition, messageGenerator, command, dataReader, context, commandId, connectionId, async, recordsAffected, readCount, startTime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventDefinition" Type="Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase" />
        <Parameter Name="messageGenerator" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String&gt;" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="dataReader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="async" Type="System.Boolean" />
        <Parameter Name="recordsAffected" Type="System.Int32" />
        <Parameter Name="readCount" Type="System.Int32" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="eventDefinition">The event definition.</param>
        <param name="messageGenerator">A delegate that generates a log message for this event.</param>
        <param name="command">The <see cref="T:System.Data.Common.DbCommand" /> that created the reader.</param>
        <param name="dataReader">The <see cref="T:System.Data.Common.DbDataReader" /> that is being disposed.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used.</param>
        <param name="connectionId">A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.</param>
        <param name="async">Indicates whether or not the command was executed asynchronously.</param>
        <param name="recordsAffected">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</param>
        <param name="readCount">Gets the number of read operations performed by this reader.</param>
        <param name="startTime">The time when the data reader was created.</param>
        <summary>
                Constructs a <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload for <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DataReaderClosing" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public virtual bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.DataReaderClosingEventData.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool" Usage="Microsoft.EntityFrameworkCore.Diagnostics.DataReaderClosingEventData.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether or not the operation is being executed asynchronously.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
