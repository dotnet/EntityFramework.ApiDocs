<Type Name="ConcurrencyExceptionEventData" FullName="Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData">
  <TypeSignature Language="C#" Value="public class ConcurrencyExceptionEventData : Microsoft.EntityFrameworkCore.Diagnostics.DbContextErrorEventData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConcurrencyExceptionEventData extends Microsoft.EntityFrameworkCore.Diagnostics.DbContextErrorEventData" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrencyExceptionEventData&#xA;Inherits DbContextErrorEventData" />
  <TypeSignature Language="F#" Value="type ConcurrencyExceptionEventData = class&#xA;    inherit DbContextErrorEventData" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.DbContextErrorEventData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                A <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload used when a <see cref="T:Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException" /> is being thrown.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-diagnostics">Logging, events, and diagnostics</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrencyExceptionEventData (Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase eventDefinition, Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,string&gt; messageGenerator, Microsoft.EntityFrameworkCore.DbContext context, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase eventDefinition, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase, class Microsoft.EntityFrameworkCore.Diagnostics.EventData, string&gt; messageGenerator, class Microsoft.EntityFrameworkCore.DbContext context, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, class Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventDefinition As EventDefinitionBase, messageGenerator As Func(Of EventDefinitionBase, EventData, String), context As DbContext, entries As IReadOnlyList(Of IUpdateEntry), exception As DbUpdateConcurrencyException)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase * Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase, Microsoft.EntityFrameworkCore.Diagnostics.EventData, string&gt; * Microsoft.EntityFrameworkCore.DbContext * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException -&gt; Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData (eventDefinition, messageGenerator, context, entries, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventDefinition" Type="Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase" />
        <Parameter Name="messageGenerator" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String&gt;" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" />
        <Parameter Name="exception" Type="Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException" />
      </Parameters>
      <Docs>
        <param name="eventDefinition">The event definition.</param>
        <param name="messageGenerator">A delegate that generates a log message for this event.</param>
        <param name="context">The current <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.</param>
        <param name="entries">The entries that were involved in the concurrency violation.</param>
        <param name="exception">The exception that will be thrown, unless throwing is suppressed.</param>
        <summary>
                Constructs the event payload.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData.Entries" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Entries As IReadOnlyList(Of EntityEntry)" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The entries that were involved in the concurrency violation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException Exception" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Exception As DbUpdateConcurrencyException" />
      <MemberSignature Language="F#" Value="member this.Exception : Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException" Usage="Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The exception that will be thrown, unless throwing is suppressed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
