<Type Name="IRelationalConnectionDiagnosticsLogger" FullName="Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger">
  <TypeSignature Language="C#" Value="public interface IRelationalConnectionDiagnosticsLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationalConnectionDiagnosticsLogger implements class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalConnectionDiagnosticsLogger&#xA;Implements IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection)" />
  <TypeSignature Language="F#" Value="type IRelationalConnectionDiagnosticsLogger = interface&#xA;    interface IDiagnosticsLogger&lt;DbLoggerCategory.Database.Connection&gt;&#xA;    interface IDiagnosticsLogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                An <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1" /> with some extra functionality suited for high-performance logging.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConnectionClosed">
      <MemberSignature Language="C#" Value="public void ConnectionClosed (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectionClosed(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionClosed(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConnectionClosed (connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionClosed : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; unit" Usage="iRelationalConnectionDiagnosticsLogger.ConnectionClosed (connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The amount of time before the connection was closed.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosed" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionClosedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectionClosedAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ConnectionClosedAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionClosedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectionClosedAsync (connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan) As Task" />
      <MemberSignature Language="F#" Value="abstract member ConnectionClosedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; System.Threading.Tasks.Task" Usage="iRelationalConnectionDiagnosticsLogger.ConnectionClosedAsync (connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The amount of time before the connection was closed.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosed" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionClosing">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionClosing (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionClosing(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionClosing(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectionClosing (connection As IRelationalConnection, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="abstract member ConnectionClosing : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="iRelationalConnectionDiagnosticsLogger.ConnectionClosing (connection, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosing" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionClosingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionClosingAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionClosingAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionClosingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectionClosingAsync (connection As IRelationalConnection, startTime As DateTimeOffset) As ValueTask(Of InterceptionResult)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionClosingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="iRelationalConnectionDiagnosticsLogger.ConnectionClosingAsync (connection, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosing" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionError">
      <MemberSignature Language="C#" Value="public void ConnectionError (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Exception exception, DateTimeOffset startTime, TimeSpan duration, bool logErrorAsDebug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectionError(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, bool logErrorAsDebug) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionError(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Exception,System.DateTimeOffset,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConnectionError (connection As IRelationalConnection, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, logErrorAsDebug As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionError : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Exception * DateTimeOffset * TimeSpan * bool -&gt; unit" Usage="iRelationalConnectionDiagnosticsLogger.ConnectionError (connection, exception, startTime, duration, logErrorAsDebug)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="logErrorAsDebug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="exception">The exception representing the error.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The elapsed time before the operation failed.</param>
        <param name="logErrorAsDebug">A flag indicating the exception is being handled and so it should be logged at Debug level.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionError" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionErrorAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectionErrorAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Exception exception, DateTimeOffset startTime, TimeSpan duration, bool logErrorAsDebug, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ConnectionErrorAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, bool logErrorAsDebug, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionErrorAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Exception,System.DateTimeOffset,System.TimeSpan,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectionErrorAsync (connection As IRelationalConnection, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, logErrorAsDebug As Boolean, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member ConnectionErrorAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Exception * DateTimeOffset * TimeSpan * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iRelationalConnectionDiagnosticsLogger.ConnectionErrorAsync (connection, exception, startTime, duration, logErrorAsDebug, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="logErrorAsDebug" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="exception">The exception representing the error.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The elapsed time before the operation failed.</param>
        <param name="logErrorAsDebug">A flag indicating the exception is being handled and so it should be logged at Debug level.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionError" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpened">
      <MemberSignature Language="C#" Value="public void ConnectionOpened (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectionOpened(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionOpened(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConnectionOpened (connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionOpened : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; unit" Usage="iRelationalConnectionDiagnosticsLogger.ConnectionOpened (connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The amount of time before the connection was opened.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpened" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpenedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectionOpenedAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ConnectionOpenedAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionOpenedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectionOpenedAsync (connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member ConnectionOpenedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iRelationalConnectionDiagnosticsLogger.ConnectionOpenedAsync (connection, startTime, duration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The amount of time before the connection was opened.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpened" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpening">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionOpening (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionOpening(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionOpening(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectionOpening (connection As IRelationalConnection, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="abstract member ConnectionOpening : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="iRelationalConnectionDiagnosticsLogger.ConnectionOpening (connection, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpening" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpeningAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionOpeningAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionOpeningAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionOpeningAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectionOpeningAsync (connection As IRelationalConnection, startTime As DateTimeOffset, cancellationToken As CancellationToken) As ValueTask(Of InterceptionResult)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionOpeningAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="iRelationalConnectionDiagnosticsLogger.ConnectionOpeningAsync (connection, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpening" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogConnectionClose">
      <MemberSignature Language="C#" Value="public bool ShouldLogConnectionClose (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogConnectionClose(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ShouldLogConnectionClose(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldLogConnectionClose (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogConnectionClose : DateTimeOffset -&gt; bool" Usage="iRelationalConnectionDiagnosticsLogger.ShouldLogConnectionClose now" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                Whether <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosing" /> or <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionClosed" /> need
                to be logged.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogConnectionOpen">
      <MemberSignature Language="C#" Value="public bool ShouldLogConnectionOpen (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogConnectionOpen(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ShouldLogConnectionOpen(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldLogConnectionOpen (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogConnectionOpen : DateTimeOffset -&gt; bool" Usage="iRelationalConnectionDiagnosticsLogger.ShouldLogConnectionOpen now" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                Whether <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpening" /> or <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.ConnectionOpened" /> need
                to be logged.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
