<Type Name="RelationalConcurrencyExceptionEventData" FullName="Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData">
  <TypeSignature Language="C#" Value="public class RelationalConcurrencyExceptionEventData : Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalConcurrencyExceptionEventData extends Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalConcurrencyExceptionEventData&#xA;Inherits ConcurrencyExceptionEventData" />
  <TypeSignature Language="F#" Value="type RelationalConcurrencyExceptionEventData = class&#xA;    inherit ConcurrencyExceptionEventData" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                A <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload used when a <see cref="T:Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException" /> is being thrown
                from a relational database provider.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-diagnostics">Logging, events, and diagnostics</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalConcurrencyExceptionEventData (Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase eventDefinition, Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,string&gt; messageGenerator, Microsoft.EntityFrameworkCore.DbContext context, System.Data.Common.DbConnection connection, System.Data.Common.DbCommand command, System.Data.Common.DbDataReader dataReader, Guid commandId, Guid connectionId, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase eventDefinition, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase, class Microsoft.EntityFrameworkCore.Diagnostics.EventData, string&gt; messageGenerator, class Microsoft.EntityFrameworkCore.DbContext context, class System.Data.Common.DbConnection connection, class System.Data.Common.DbCommand command, class System.Data.Common.DbDataReader dataReader, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, class Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},Microsoft.EntityFrameworkCore.DbContext,System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Guid,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventDefinition As EventDefinitionBase, messageGenerator As Func(Of EventDefinitionBase, EventData, String), context As DbContext, connection As DbConnection, command As DbCommand, dataReader As DbDataReader, commandId As Guid, connectionId As Guid, entries As IReadOnlyList(Of IUpdateEntry), exception As DbUpdateConcurrencyException)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase * Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase, Microsoft.EntityFrameworkCore.Diagnostics.EventData, string&gt; * Microsoft.EntityFrameworkCore.DbContext * System.Data.Common.DbConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * Guid * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException -&gt; Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData (eventDefinition, messageGenerator, context, connection, command, dataReader, commandId, connectionId, entries, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventDefinition" Type="Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase" />
        <Parameter Name="messageGenerator" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String&gt;" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="dataReader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" />
        <Parameter Name="exception" Type="Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException" />
      </Parameters>
      <Docs>
        <param name="eventDefinition">The event definition.</param>
        <param name="messageGenerator">A delegate that generates a log message for this event.</param>
        <param name="context">The current <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.</param>
        <param name="connection">The <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="command">The <see cref="T:System.Data.Common.DbCommand" /> being used.</param>
        <param name="dataReader">The <see cref="T:System.Data.Common.DbDataReader" /> being used.</param>
        <param name="commandId">A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used.</param>
        <param name="connectionId">A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.</param>
        <param name="entries">The entries that were involved in the concurrency violation.</param>
        <param name="exception">The exception that will be thrown, unless throwing is suppressed.</param>
        <summary>
                Constructs the event payload.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData.Command" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The <see cref="T:System.Data.Common.DbCommand" /> being used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandId">
      <MemberSignature Language="C#" Value="public virtual Guid CommandId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid CommandId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData.CommandId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CommandId As Guid" />
      <MemberSignature Language="F#" Value="member this.CommandId : Guid" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData.CommandId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbCommand" /> instance being used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.Common.DbConnection" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The <see cref="T:System.Data.Common.DbConnection" /> being used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionId">
      <MemberSignature Language="C#" Value="public virtual Guid ConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ConnectionId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData.ConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConnectionId As Guid" />
      <MemberSignature Language="F#" Value="member this.ConnectionId : Guid" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData.ConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A correlation ID that identifies the <see cref="T:System.Data.Common.DbConnection" /> instance being used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataReader">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbDataReader DataReader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbDataReader DataReader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData.DataReader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataReader As DbDataReader" />
      <MemberSignature Language="F#" Value="member this.DataReader : System.Data.Common.DbDataReader" Usage="Microsoft.EntityFrameworkCore.Diagnostics.RelationalConcurrencyExceptionEventData.DataReader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The <see cref="T:System.Data.Common.DbDataReader" /> being used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
