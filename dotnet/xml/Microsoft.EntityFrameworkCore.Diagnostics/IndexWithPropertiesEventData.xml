<Type Name="IndexWithPropertiesEventData" FullName="Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData">
  <TypeSignature Language="C#" Value="public class IndexWithPropertiesEventData : Microsoft.EntityFrameworkCore.Diagnostics.EventData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IndexWithPropertiesEventData extends Microsoft.EntityFrameworkCore.Diagnostics.EventData" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData" />
  <TypeSignature Language="VB.NET" Value="Public Class IndexWithPropertiesEventData&#xA;Inherits EventData" />
  <TypeSignature Language="F#" Value="type IndexWithPropertiesEventData = class&#xA;    inherit EventData" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.EventData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                A <see cref="T:System.Diagnostics.DiagnosticSource" /> event payload class for the
                <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.IndexPropertiesMappedToNonOverlappingTables" /> event.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-diagnostics">Logging, events, and diagnostics</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexWithPropertiesEventData (Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase eventDefinition, Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,string&gt; messageGenerator, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string indexName, System.Collections.Generic.List&lt;string&gt; indexPropertyNames, string property1Name, System.Collections.Generic.List&lt;(string Table, string Schema)&gt; tablesMappedToProperty1, string property2Name, System.Collections.Generic.List&lt;(string Table, string Schema)&gt; tablesMappedToProperty2);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase eventDefinition, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase, class Microsoft.EntityFrameworkCore.Diagnostics.EventData, string&gt; messageGenerator, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string indexName, class System.Collections.Generic.List`1&lt;string&gt; indexPropertyNames, string property1Name, class System.Collections.Generic.List`1&lt;valuetype System.ValueTuple`2&lt;string, string&gt;&gt; tablesMappedToProperty1, string property2Name, class System.Collections.Generic.List`1&lt;valuetype System.ValueTuple`2&lt;string, string&gt;&gt; tablesMappedToProperty2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,System.Func{Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String},Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String,System.Collections.Generic.List{System.String},System.String,System.Collections.Generic.List{System.ValueTuple{System.String,System.String}},System.String,System.Collections.Generic.List{System.ValueTuple{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventDefinition As EventDefinitionBase, messageGenerator As Func(Of EventDefinitionBase, EventData, String), entityType As IEntityType, indexName As String, indexPropertyNames As List(Of String), property1Name As String, tablesMappedToProperty1 As List(Of ValueTuple(Of String, String)), property2Name As String, tablesMappedToProperty2 As List(Of ValueTuple(Of String, String)))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase * Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase, Microsoft.EntityFrameworkCore.Diagnostics.EventData, string&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType * string * System.Collections.Generic.List&lt;string&gt; * string * System.Collections.Generic.List&lt;ValueTuple&lt;string, string&gt;&gt; * string * System.Collections.Generic.List&lt;ValueTuple&lt;string, string&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData (eventDefinition, messageGenerator, entityType, indexName, indexPropertyNames, property1Name, tablesMappedToProperty1, property2Name, tablesMappedToProperty2)" />
      <MemberSignature Language="C#" Value="public IndexWithPropertiesEventData (Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase eventDefinition, Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,string&gt; messageGenerator, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string? indexName, System.Collections.Generic.List&lt;string&gt; indexPropertyNames, string property1Name, System.Collections.Generic.List&lt;(string Table, string? Schema)&gt; tablesMappedToProperty1, string property2Name, System.Collections.Generic.List&lt;(string Table, string? Schema)&gt; tablesMappedToProperty2);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventDefinition" Type="Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase" />
        <Parameter Name="messageGenerator" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase,Microsoft.EntityFrameworkCore.Diagnostics.EventData,System.String&gt;" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="indexPropertyNames" Type="System.Collections.Generic.List&lt;System.String&gt;" />
        <Parameter Name="property1Name" Type="System.String" />
        <Parameter Name="tablesMappedToProperty1" Type="System.Collections.Generic.List&lt;System.ValueTuple&lt;System.String,System.String&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="property2Name" Type="System.String" />
        <Parameter Name="tablesMappedToProperty2" Type="System.Collections.Generic.List&lt;System.ValueTuple&lt;System.String,System.String&gt;&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventDefinition">The event definition.</param>
        <param name="messageGenerator">A delegate that generates a log message for this event.</param>
        <param name="entityType">The entity type on which the index is defined.</param>
        <param name="indexName">The name of the index.</param>
        <param name="indexPropertyNames">The names of the properties which define the index.</param>
        <param name="property1Name">The name of the first property name which causes this event.</param>
        <param name="tablesMappedToProperty1">The tables mapped to the first property.</param>
        <param name="property2Name">The name of the second property name which causes this event.</param>
        <param name="tablesMappedToProperty2">The tables mapped to the second property.</param>
        <summary>
                Constructs the event payload for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.IndexPropertiesMappedToNonOverlappingTables" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntityType As IEntityType" />
      <MemberSignature Language="F#" Value="member this.EntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.EntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The entity type on which the index is defined.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.Name" />
      <MemberSignature Language="C#" Value="public virtual string? Name { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The name of the index.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property1Name">
      <MemberSignature Language="C#" Value="public virtual string Property1Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Property1Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.Property1Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Property1Name As String" />
      <MemberSignature Language="F#" Value="member this.Property1Name : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.Property1Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The name of the first property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property2Name">
      <MemberSignature Language="C#" Value="public virtual string Property2Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Property2Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.Property2Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Property2Name As String" />
      <MemberSignature Language="F#" Value="member this.Property2Name : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.Property2Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The name of the second property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNames">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.List&lt;string&gt; PropertyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; PropertyNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.PropertyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PropertyNames As List(Of String)" />
      <MemberSignature Language="F#" Value="member this.PropertyNames : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.PropertyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The list of properties which define the index.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TablesMappedToProperty1">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.List&lt;(string Table, string Schema)&gt; TablesMappedToProperty1 { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;valuetype System.ValueTuple`2&lt;string, string&gt;&gt; TablesMappedToProperty1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.TablesMappedToProperty1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TablesMappedToProperty1 As List(Of ValueTuple(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.TablesMappedToProperty1 : System.Collections.Generic.List&lt;ValueTuple&lt;string, string&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.TablesMappedToProperty1" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.List&lt;(string Table, string? Schema)&gt; TablesMappedToProperty1 { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.ValueTuple&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The tables mapped to the first property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TablesMappedToProperty2">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.List&lt;(string Table, string Schema)&gt; TablesMappedToProperty2 { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;valuetype System.ValueTuple`2&lt;string, string&gt;&gt; TablesMappedToProperty2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.TablesMappedToProperty2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TablesMappedToProperty2 As List(Of ValueTuple(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.TablesMappedToProperty2 : System.Collections.Generic.List&lt;ValueTuple&lt;string, string&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.IndexWithPropertiesEventData.TablesMappedToProperty2" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.List&lt;(string Table, string? Schema)&gt; TablesMappedToProperty2 { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Table", "Schema" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.ValueTuple&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The tables mapped to the second property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
