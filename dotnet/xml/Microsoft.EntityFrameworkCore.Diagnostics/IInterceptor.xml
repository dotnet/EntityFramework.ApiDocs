<Type Name="IInterceptor" FullName="Microsoft.EntityFrameworkCore.Diagnostics.IInterceptor">
  <TypeSignature Language="C#" Value="public interface IInterceptor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInterceptor" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.IInterceptor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInterceptor" />
  <TypeSignature Language="F#" Value="type IInterceptor = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IInterceptor" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                The base interface for all Entity Framework interceptors.
            </summary>
    <remarks>
      <para>
                    Interceptors can be used to view, change, or suppress operations taken by Entity Framework.
                    See the specific implementations of this interface for details. For example, 'IDbCommandInterceptor'.
                </para>
      <para>
                    Use <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.AddInterceptors(Microsoft.EntityFrameworkCore.Diagnostics.IInterceptor[])" />
                    to register application interceptors.
                </para>
      <para>
                    Extensions can also register multiple <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.IInterceptor" />s in the internal service provider.
                    If both injected and application interceptors are found, then the injected interceptors are run in the
                    order that they are resolved from the service provider, and then the application interceptors are run
                    in the order that they were added to the context.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-interceptors">EF Core interceptors</see> for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members />
</Type>
