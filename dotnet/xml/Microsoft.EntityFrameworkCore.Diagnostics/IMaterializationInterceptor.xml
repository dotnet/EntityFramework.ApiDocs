<Type Name="IMaterializationInterceptor" FullName="Microsoft.EntityFrameworkCore.Diagnostics.IMaterializationInterceptor">
  <TypeSignature Language="C#" Value="public interface IMaterializationInterceptor : Microsoft.EntityFrameworkCore.Diagnostics.ISingletonInterceptor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMaterializationInterceptor implements class Microsoft.EntityFrameworkCore.Diagnostics.IInterceptor, class Microsoft.EntityFrameworkCore.Diagnostics.ISingletonInterceptor" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.IMaterializationInterceptor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMaterializationInterceptor&#xA;Implements ISingletonInterceptor" />
  <TypeSignature Language="F#" Value="type IMaterializationInterceptor = interface&#xA;    interface ISingletonInterceptor&#xA;    interface IInterceptor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IMaterializationInterceptor implements class Microsoft.EntityFrameworkCore.Diagnostics.IInterceptor, class Microsoft.EntityFrameworkCore.Diagnostics.ISingletonInterceptor" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IInterceptor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.ISingletonInterceptor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.ISingletonInterceptor" /> used to intercept the various parts of object creation and initialization when
                Entity Framework is creating an object, typically from data returned by a query.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-interceptors">EF Core interceptors</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreatedInstance">
      <MemberSignature Language="C#" Value="public virtual object CreatedInstance (Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData materializationData, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreatedInstance(valuetype Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData materializationData, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IMaterializationInterceptor.CreatedInstance(Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatedInstance (materializationData As MaterializationInterceptionData, entity As Object) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreatedInstance : Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData * obj -&gt; obj&#xA;override this.CreatedInstance : Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData * obj -&gt; obj" Usage="iMaterializationInterceptor.CreatedInstance (materializationData, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="materializationData" Type="Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="materializationData">Contextual information about the materialization happening.</param>
        <param name="entity">
                The entity instance that has been created.
                This value is typically used as the return value for the implementation of this method.
            </param>
        <summary>
                Called immediately after EF has created an instance of an entity. That is, after the constructor has been called, but before
                any properties values not set by the constructor have been set.
            </summary>
        <returns>
                The entity instance that EF will use.
                An implementation of this method for any interceptor that is not attempting to change the instance used
                must return the <paramref name="entity" /> value passed in.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatingInstance">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;object&gt; CreatingInstance (Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData materializationData, Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;object&gt; result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;object&gt; CreatingInstance(valuetype Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData materializationData, valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;object&gt; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IMaterializationInterceptor.CreatingInstance(Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData,Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatingInstance (materializationData As MaterializationInterceptionData, result As InterceptionResult(Of Object)) As InterceptionResult(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member CreatingInstance : Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData * Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt; -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt;&#xA;override this.CreatingInstance : Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData * Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt; -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt;" Usage="iMaterializationInterceptor.CreatingInstance (materializationData, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="materializationData" Type="Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData" />
        <Parameter Name="result" Type="Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="materializationData">Contextual information about the materialization happening.</param>
        <param name="result">
                Represents the current result if one exists.
                This value will have <see cref="P:Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1.HasResult" /> set to <see langword="true" /> if some previous
                interceptor suppressed execution by calling <see cref="M:Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1.SuppressWithResult(`0)" />.
                This value is typically used as the return value for the implementation of this method.
            </param>
        <summary>
                Called immediately before EF is going to create an instance of an entity. That is, before the constructor has been called.
            </summary>
        <returns>
                If <see cref="P:Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1.HasResult" /> is <see langword="false" />, then EF will continue as normal.
                If <see cref="P:Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1.HasResult" /> is <see langword="true" />, then EF will suppress creation of
                the entity instance and use <see cref="P:Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1.Result" /> instead.
                An implementation of this method for any interceptor that is not attempting to change the result
                should return the <paramref name="result" /> value passed in.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializedInstance">
      <MemberSignature Language="C#" Value="public virtual object InitializedInstance (Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData materializationData, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InitializedInstance(valuetype Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData materializationData, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IMaterializationInterceptor.InitializedInstance(Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializedInstance (materializationData As MaterializationInterceptionData, entity As Object) As Object" />
      <MemberSignature Language="F#" Value="abstract member InitializedInstance : Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData * obj -&gt; obj&#xA;override this.InitializedInstance : Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData * obj -&gt; obj" Usage="iMaterializationInterceptor.InitializedInstance (materializationData, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="materializationData" Type="Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="materializationData">Contextual information about the materialization happening.</param>
        <param name="entity">
                The entity instance that has been created.
                This value is typically used as the return value for the implementation of this method.
            </param>
        <summary>
                Called immediately after EF has set property values of an entity that has just been created.
            </summary>
        <returns>
                The entity instance that EF will use.
                An implementation of this method for any interceptor that is not attempting to change the instance used
                must return the <paramref name="entity" /> value passed in.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializingInstance">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult InitializingInstance (Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData materializationData, object entity, Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult InitializingInstance(valuetype Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData materializationData, object entity, valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IMaterializationInterceptor.InitializingInstance(Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData,System.Object,Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializingInstance (materializationData As MaterializationInterceptionData, entity As Object, result As InterceptionResult) As InterceptionResult" />
      <MemberSignature Language="F#" Value="abstract member InitializingInstance : Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData * obj * Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&#xA;override this.InitializingInstance : Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData * obj * Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="iMaterializationInterceptor.InitializingInstance (materializationData, entity, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="materializationData" Type="Microsoft.EntityFrameworkCore.Diagnostics.MaterializationInterceptionData" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="result" Type="Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" />
      </Parameters>
      <Docs>
        <param name="materializationData">Contextual information about the materialization happening.</param>
        <param name="entity">The entity instance for which property values will be set.</param>
        <param name="result">
                Represents the current result if one exists.
                This value will have <see cref="P:Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult.IsSuppressed" /> set to <see langword="true" /> if some previous
                interceptor suppressed execution by calling <see cref="M:Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult.Suppress" />.
                This value is typically used as the return value for the implementation of this method.
            </param>
        <summary>
                Called immediately before EF is going to set property values of an entity that has just been created. Note that property values
                set by the constructor will already have been set.
            </summary>
        <returns>
                If <see cref="P:Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult.IsSuppressed" /> is <see langword="false" />, then EF will continue as normal.
                If <see cref="P:Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult.IsSuppressed" /> is <see langword="true" />, then EF will not set any property values.
                An implementation of this method for any interceptor that is not attempting to suppress
                setting property values must return the <paramref name="result" /> value passed in.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
