<Type Name="EventDefinition&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6&gt;" FullName="Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6&gt;">
  <TypeSignature Language="C#" Value="public class EventDefinition&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6&gt; : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventDefinition`6&lt;TParam1, TParam2, TParam3, TParam4, TParam5, TParam6&gt; extends Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6" />
  <TypeSignature Language="VB.NET" Value="Public Class EventDefinition(Of TParam1, TParam2, TParam3, TParam4, TParam5, TParam6)&#xA;Inherits EventDefinitionBase" />
  <TypeSignature Language="F#" Value="type EventDefinition&lt;'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6&gt; = class&#xA;    inherit EventDefinitionBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TParam1" />
    <TypeParameter Name="TParam2" />
    <TypeParameter Name="TParam3" />
    <TypeParameter Name="TParam4" />
    <TypeParameter Name="TParam5" />
    <TypeParameter Name="TParam6" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinitionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TParam1">To be added.</typeparam>
    <typeparam name="TParam2">To be added.</typeparam>
    <typeparam name="TParam3">To be added.</typeparam>
    <typeparam name="TParam4">To be added.</typeparam>
    <typeparam name="TParam5">To be added.</typeparam>
    <typeparam name="TParam6">To be added.</typeparam>
    <summary>
                Defines metadata for an event with three parameters and a cached delegate to log the
                event with reduced allocations.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventDefinition (Microsoft.Extensions.Logging.EventId eventId, Microsoft.Extensions.Logging.LogLevel level, Action&lt;Microsoft.Extensions.Logging.ILogger,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,Exception&gt; logAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Extensions.Logging.EventId eventId, valuetype Microsoft.Extensions.Logging.LogLevel level, class System.Action`8&lt;class Microsoft.Extensions.Logging.ILogger, !TParam1, !TParam2, !TParam3, !TParam4, !TParam5, !TParam6, class System.Exception&gt; logAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.#ctor(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel,System.Action{Microsoft.Extensions.Logging.ILogger,`0,`1,`2,`3,`4,`5,System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventId As EventId, level As LogLevel, logAction As Action(Of ILogger, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, Exception))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6&gt; : Microsoft.Extensions.Logging.EventId * Microsoft.Extensions.Logging.LogLevel * Action&lt;Microsoft.Extensions.Logging.ILogger, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, Exception&gt; -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6&gt;" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6&gt; (eventId, level, logAction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="logAction" Type="System.Action&lt;Microsoft.Extensions.Logging.ILogger,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Exception&gt;" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="eventId"> The <see cref="T:Microsoft.Extensions.Logging.EventId" />. </param>
        <param name="level"> The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> at which the event will be logged. </param>
        <param name="logAction"> A cached delegate for logging the event. </param>
        <summary>
                Creates an event definition instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventDefinition (Microsoft.Extensions.Logging.EventId eventId, Microsoft.Extensions.Logging.LogLevel level, string eventIdCode, Action&lt;Microsoft.Extensions.Logging.ILogger,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,Exception&gt; logAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Extensions.Logging.EventId eventId, valuetype Microsoft.Extensions.Logging.LogLevel level, string eventIdCode, class System.Action`8&lt;class Microsoft.Extensions.Logging.ILogger, !TParam1, !TParam2, !TParam3, !TParam4, !TParam5, !TParam6, class System.Exception&gt; logAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.#ctor(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel,System.String,System.Action{Microsoft.Extensions.Logging.ILogger,`0,`1,`2,`3,`4,`5,System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventId As EventId, level As LogLevel, eventIdCode As String, logAction As Action(Of ILogger, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, Exception))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6&gt; : Microsoft.Extensions.Logging.EventId * Microsoft.Extensions.Logging.LogLevel * string * Action&lt;Microsoft.Extensions.Logging.ILogger, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, Exception&gt; -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6&gt;" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6&gt; (eventId, level, eventIdCode, logAction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="eventIdCode" Type="System.String" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="logAction" Type="System.Action&lt;Microsoft.Extensions.Logging.ILogger,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Exception&gt;" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="eventId"> The <see cref="T:Microsoft.Extensions.Logging.EventId" />. </param>
        <param name="level"> The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> at which the event will be logged. </param>
        <param name="eventIdCode"> A string representing the code that should be passed to ConfigureWanings. </param>
        <param name="logAction"> A cached delegate for logging the event. </param>
        <summary>
                Creates an event definition instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventDefinition (Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, Microsoft.Extensions.Logging.EventId eventId, Microsoft.Extensions.Logging.LogLevel level, string eventIdCode, Func&lt;Microsoft.Extensions.Logging.LogLevel,Action&lt;Microsoft.Extensions.Logging.ILogger,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,Exception&gt;&gt; logActionFunc);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, valuetype Microsoft.Extensions.Logging.EventId eventId, valuetype Microsoft.Extensions.Logging.LogLevel level, string eventIdCode, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, class System.Action`8&lt;class Microsoft.Extensions.Logging.ILogger, !TParam1, !TParam2, !TParam3, !TParam4, !TParam5, !TParam6, class System.Exception&gt;&gt; logActionFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions,Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Action{Microsoft.Extensions.Logging.ILogger,`0,`1,`2,`3,`4,`5,System.Exception}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loggingOptions As ILoggingOptions, eventId As EventId, level As LogLevel, eventIdCode As String, logActionFunc As Func(Of LogLevel, Action(Of ILogger, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, Exception)))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6&gt; : Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions * Microsoft.Extensions.Logging.EventId * Microsoft.Extensions.Logging.LogLevel * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, Action&lt;Microsoft.Extensions.Logging.ILogger, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, Exception&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6&gt;" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6&gt; (loggingOptions, eventId, level, eventIdCode, logActionFunc)" />
      <MemberSignature Language="C#" Value="public EventDefinition (Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, Microsoft.Extensions.Logging.EventId eventId, Microsoft.Extensions.Logging.LogLevel level, string eventIdCode, Func&lt;Microsoft.Extensions.Logging.LogLevel,Action&lt;Microsoft.Extensions.Logging.ILogger,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,Exception?&gt;&gt; logActionFunc);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="eventIdCode" Type="System.String" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="logActionFunc" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Action&lt;Microsoft.Extensions.Logging.ILogger,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Exception&gt;&gt;" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="loggingOptions">Logging options.</param>
        <param name="eventId">The <see cref="T:Microsoft.Extensions.Logging.EventId" />.</param>
        <param name="level">The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> at which the event will be logged.</param>
        <param name="eventIdCode">
                A string representing the code that should be passed to <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.ConfigureWarnings(System.Action{Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder})" />.
            </param>
        <param name="logActionFunc">Function to create a cached delegate for logging the event.</param>
        <summary>
                Creates an event definition instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMessage">
      <MemberSignature Language="C#" Value="public virtual string GenerateMessage (TParam1 arg1, TParam2 arg2, TParam3 arg3, TParam4 arg4, TParam5 arg5, TParam6 arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateMessage(!TParam1 arg1, !TParam2 arg2, !TParam3 arg3, !TParam4 arg4, !TParam5 arg5, !TParam6 arg6) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.GenerateMessage(`0,`1,`2,`3,`4,`5)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateMessage (arg1 As TParam1, arg2 As TParam2, arg3 As TParam3, arg4 As TParam4, arg5 As TParam5, arg6 As TParam6) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateMessage : 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 -&gt; string&#xA;override this.GenerateMessage : 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 -&gt; string" Usage="eventDefinition.GenerateMessage (arg1, arg2, arg3, arg4, arg5, arg6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="TParam1" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arg2" Type="TParam2" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arg3" Type="TParam3" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arg4" Type="TParam4" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arg5" Type="TParam5" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arg6" Type="TParam6" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="arg1">The first message argument.</param>
        <param name="arg2">The second message argument.</param>
        <param name="arg3">The third message argument.</param>
        <param name="arg4">The fourth message argument.</param>
        <param name="arg5">The fifth message argument.</param>
        <param name="arg6">The sixth message argument.</param>
        <summary>
                Generates the message that would be logged without logging it.
                Typically used for throwing an exception in warning-as-error cases.
            </summary>
        <returns>The message string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMessage">
      <MemberSignature Language="C#" Value="public virtual string GenerateMessage (TParam1 arg1, TParam2 arg2, TParam3 arg3, TParam4 arg4, TParam5 arg5, TParam6 arg6, Exception exception = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateMessage(!TParam1 arg1, !TParam2 arg2, !TParam3 arg3, !TParam4 arg4, !TParam5 arg5, !TParam6 arg6, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.GenerateMessage(`0,`1,`2,`3,`4,`5,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateMessage (arg1 As TParam1, arg2 As TParam2, arg3 As TParam3, arg4 As TParam4, arg5 As TParam5, arg6 As TParam6, Optional exception As Exception = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateMessage : 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * Exception -&gt; string&#xA;override this.GenerateMessage : 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * Exception -&gt; string" Usage="eventDefinition.GenerateMessage (arg1, arg2, arg3, arg4, arg5, arg6, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="TParam1" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="arg2" Type="TParam2" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="arg3" Type="TParam3" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="arg4" Type="TParam4" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="arg5" Type="TParam5" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="arg6" Type="TParam6" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="exception" Type="System.Exception" Index="6" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="arg1"> The first message argument. </param>
        <param name="arg2"> The second message argument. </param>
        <param name="arg3"> The third message argument. </param>
        <param name="arg4"> The fourth message argument. </param>
        <param name="arg5"> The fifth message argument. </param>
        <param name="arg6"> The sixth message argument. </param>
        <param name="exception"> Optional exception associated with this event. </param>
        <summary>
                Generates the message that would be logged without logging it.
                Typically used for throwing an exception in warning-as-error cases.
            </summary>
        <returns> The message string. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log&lt;TLoggerCategory&gt;">
      <MemberSignature Language="C#" Value="public virtual void Log&lt;TLoggerCategory&gt; (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt; logger, TParam1 arg1, TParam2 arg2, TParam3 arg3, TParam4 arg4, TParam5 arg5, TParam6 arg6) where TLoggerCategory : Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log&lt;.ctor (class Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory`1&lt;!!TLoggerCategory&gt;) TLoggerCategory&gt;(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;!!TLoggerCategory&gt; logger, !TParam1 arg1, !TParam2 arg2, !TParam3 arg3, !TParam4 arg4, !TParam5 arg5, !TParam6 arg6) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log``1(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{``0},`0,`1,`2,`3,`4,`5)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Log(Of TLoggerCategory As {LoggerCategory(Of TLoggerCategory)New}) (logger As IDiagnosticsLogger(Of TLoggerCategory), arg1 As TParam1, arg2 As TParam2, arg3 As TParam3, arg4 As TParam4, arg5 As TParam5, arg6 As TParam6)" />
      <MemberSignature Language="F#" Value="abstract member Log : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 -&gt; unit (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&#xA;override this.Log : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 -&gt; unit (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))" Usage="eventDefinition.Log (logger, arg1, arg2, arg3, arg4, arg5, arg6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLoggerCategory">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arg1" Type="TParam1" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arg2" Type="TParam2" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arg3" Type="TParam3" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arg4" Type="TParam4" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arg5" Type="TParam5" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arg6" Type="TParam6" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TLoggerCategory">The <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory" />.</typeparam>
        <param name="logger">The logger to which the event should be logged.</param>
        <param name="arg1">The first message argument.</param>
        <param name="arg2">The second message argument.</param>
        <param name="arg3">The third message argument.</param>
        <param name="arg4">The fourth message argument.</param>
        <param name="arg5">The fifth message argument.</param>
        <param name="arg6">The sixth message argument.</param>
        <summary>
                Logs the event, or throws if the event has been configured to be treated as an error.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log&lt;TLoggerCategory&gt;">
      <MemberSignature Language="C#" Value="public virtual void Log&lt;TLoggerCategory&gt; (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt; logger, Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior, TParam1 arg1, TParam2 arg2, TParam3 arg3, TParam4 arg4, TParam5 arg5, TParam6 arg6) where TLoggerCategory : Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log&lt;.ctor (class Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory`1&lt;!!TLoggerCategory&gt;) TLoggerCategory&gt;(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;!!TLoggerCategory&gt; logger, valuetype Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior, !TParam1 arg1, !TParam2 arg2, !TParam3 arg3, !TParam4 arg4, !TParam5 arg5, !TParam6 arg6) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log``1(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{``0},Microsoft.EntityFrameworkCore.WarningBehavior,`0,`1,`2,`3,`4,`5)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Log(Of TLoggerCategory As {LoggerCategory(Of TLoggerCategory)New}) (logger As IDiagnosticsLogger(Of TLoggerCategory), warningBehavior As WarningBehavior, arg1 As TParam1, arg2 As TParam2, arg3 As TParam3, arg4 As TParam4, arg5 As TParam5, arg6 As TParam6)" />
      <MemberSignature Language="F#" Value="abstract member Log : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; * Microsoft.EntityFrameworkCore.WarningBehavior * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 -&gt; unit (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&#xA;override this.Log : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; * Microsoft.EntityFrameworkCore.WarningBehavior * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 -&gt; unit (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))" Usage="eventDefinition.Log (logger, warningBehavior, arg1, arg2, arg3, arg4, arg5, arg6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLoggerCategory">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt;" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="warningBehavior" Type="Microsoft.EntityFrameworkCore.WarningBehavior" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="arg1" Type="TParam1" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="arg2" Type="TParam2" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="arg3" Type="TParam3" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="arg4" Type="TParam4" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="arg5" Type="TParam5" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="arg6" Type="TParam6" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="TLoggerCategory"> The <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory" />. </typeparam>
        <param name="logger"> The logger to which the event should be logged. </param>
        <param name="warningBehavior"> Whether the event should be logged, thrown as an exception or ignored. </param>
        <param name="arg1"> The first message argument. </param>
        <param name="arg2"> The second message argument. </param>
        <param name="arg3"> The third message argument. </param>
        <param name="arg4"> The fourth message argument. </param>
        <param name="arg5"> The fifth message argument. </param>
        <param name="arg6"> The sixth message argument. </param>
        <summary>
                Logs the event, or throws if the event has been configured to be treated as an error.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log&lt;TLoggerCategory&gt;">
      <MemberSignature Language="C#" Value="public virtual void Log&lt;TLoggerCategory&gt; (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt; logger, TParam1 arg1, TParam2 arg2, TParam3 arg3, TParam4 arg4, TParam5 arg5, TParam6 arg6, Exception exception = default) where TLoggerCategory : Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log&lt;.ctor (class Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory`1&lt;!!TLoggerCategory&gt;) TLoggerCategory&gt;(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;!!TLoggerCategory&gt; logger, !TParam1 arg1, !TParam2 arg2, !TParam3 arg3, !TParam4 arg4, !TParam5 arg5, !TParam6 arg6, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log``1(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{``0},`0,`1,`2,`3,`4,`5,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Log(Of TLoggerCategory As {LoggerCategory(Of TLoggerCategory)New}) (logger As IDiagnosticsLogger(Of TLoggerCategory), arg1 As TParam1, arg2 As TParam2, arg3 As TParam3, arg4 As TParam4, arg5 As TParam5, arg6 As TParam6, Optional exception As Exception = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member Log : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * Exception -&gt; unit (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&#xA;override this.Log : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * Exception -&gt; unit (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))" Usage="eventDefinition.Log (logger, arg1, arg2, arg3, arg4, arg5, arg6, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("Use the other overload")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the other overload")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLoggerCategory">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="arg1" Type="TParam1" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="arg2" Type="TParam2" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="arg3" Type="TParam3" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="arg4" Type="TParam4" Index="4" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="arg5" Type="TParam5" Index="5" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="arg6" Type="TParam6" Index="6" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="exception" Type="System.Exception" Index="7" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="TLoggerCategory"> The <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory" />. </typeparam>
        <param name="logger"> The logger to which the event should be logged. </param>
        <param name="arg1"> The first message argument. </param>
        <param name="arg2"> The second message argument. </param>
        <param name="arg3"> The third message argument. </param>
        <param name="arg4"> The fourth message argument. </param>
        <param name="arg5"> The fifth message argument. </param>
        <param name="arg6"> The sixth message argument. </param>
        <param name="exception"> Optional exception associated with the event. </param>
        <summary>
                Logs the event, or throws if the event has been configured to be treated as an error.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log&lt;TLoggerCategory&gt;">
      <MemberSignature Language="C#" Value="public virtual void Log&lt;TLoggerCategory&gt; (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt; logger, Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior, TParam1 arg1, TParam2 arg2, TParam3 arg3, TParam4 arg4, TParam5 arg5, TParam6 arg6, Exception exception = default) where TLoggerCategory : Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log&lt;.ctor (class Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory`1&lt;!!TLoggerCategory&gt;) TLoggerCategory&gt;(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;!!TLoggerCategory&gt; logger, valuetype Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior, !TParam1 arg1, !TParam2 arg2, !TParam3 arg3, !TParam4 arg4, !TParam5 arg5, !TParam6 arg6, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6.Log``1(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{``0},Microsoft.EntityFrameworkCore.WarningBehavior,`0,`1,`2,`3,`4,`5,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Log(Of TLoggerCategory As {LoggerCategory(Of TLoggerCategory)New}) (logger As IDiagnosticsLogger(Of TLoggerCategory), warningBehavior As WarningBehavior, arg1 As TParam1, arg2 As TParam2, arg3 As TParam3, arg4 As TParam4, arg5 As TParam5, arg6 As TParam6, Optional exception As Exception = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member Log : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; * Microsoft.EntityFrameworkCore.WarningBehavior * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * Exception -&gt; unit (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&#xA;override this.Log : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; * Microsoft.EntityFrameworkCore.WarningBehavior * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * Exception -&gt; unit (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))" Usage="eventDefinition.Log (logger, warningBehavior, arg1, arg2, arg3, arg4, arg5, arg6, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLoggerCategory">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt;" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="warningBehavior" Type="Microsoft.EntityFrameworkCore.WarningBehavior" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="arg1" Type="TParam1" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="arg2" Type="TParam2" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="arg3" Type="TParam3" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="arg4" Type="TParam4" Index="5" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="arg5" Type="TParam5" Index="6" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="arg6" Type="TParam6" Index="7" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="exception" Type="System.Exception" Index="8" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="TLoggerCategory"> The <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory" />. </typeparam>
        <param name="logger"> The logger to which the event should be logged. </param>
        <param name="warningBehavior"> Whether the event should be logged, thrown as an exception or ignored. </param>
        <param name="arg1"> The first message argument. </param>
        <param name="arg2"> The second message argument. </param>
        <param name="arg3"> The third message argument. </param>
        <param name="arg4"> The fourth message argument. </param>
        <param name="arg5"> The fifth message argument. </param>
        <param name="arg6"> The sixth message argument. </param>
        <param name="exception"> Optional exception associated with the event. </param>
        <summary>
                Logs the event, or throws if the event has been configured to be treated as an error.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
