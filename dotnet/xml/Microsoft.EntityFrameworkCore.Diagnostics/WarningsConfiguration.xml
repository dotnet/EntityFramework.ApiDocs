<Type Name="WarningsConfiguration" FullName="Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration">
  <TypeSignature Language="C#" Value="public class WarningsConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WarningsConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class WarningsConfiguration" />
  <TypeSignature Language="F#" Value="type WarningsConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Represents configuration for which warnings should be thrown, logged, or ignored.
                by database providers or extensions. These options are set using <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" />.
            </summary>
    <remarks>
      <para>
                    Instances of this class are designed to be immutable. To change an option, call one of the 'With...'
                    methods to obtain a new instance with the option changed.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-warning-configuration">Configuration for specific messages</see> for more information and
                    examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WarningsConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
                Creates a new, empty configuration, with all options set to their defaults.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WarningsConfiguration (Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration copyFrom);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration copyFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (copyFrom As WarningsConfiguration)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration : Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration copyFrom" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="copyFrom" Type="Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration" />
      </Parameters>
      <Docs>
        <param name="copyFrom">The instance that is being cloned.</param>
        <summary>
                Called by a derived class constructor when implementing the <see cref="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.Clone" /> method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As WarningsConfiguration" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration&#xA;override this.Clone : unit -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration" Usage="warningsConfiguration.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Override this method in a derived class to ensure that any clone created is also of that class.
            </summary>
        <returns>A clone of this instance, which can be modified before being returned as immutable.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBehavior">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.WarningBehavior DefaultBehavior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.EntityFrameworkCore.WarningBehavior DefaultBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.DefaultBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultBehavior As WarningBehavior" />
      <MemberSignature Language="F#" Value="member this.DefaultBehavior : Microsoft.EntityFrameworkCore.WarningBehavior" Usage="Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.DefaultBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.WarningBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The option set from the <see cref="P:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.DefaultBehavior" /> method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBehavior">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.WarningBehavior? GetBehavior (Microsoft.Extensions.Logging.EventId eventId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.WarningBehavior&gt; GetBehavior(valuetype Microsoft.Extensions.Logging.EventId eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.GetBehavior(Microsoft.Extensions.Logging.EventId)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBehavior (eventId As EventId) As Nullable(Of WarningBehavior)" />
      <MemberSignature Language="F#" Value="abstract member GetBehavior : Microsoft.Extensions.Logging.EventId -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.WarningBehavior&gt;&#xA;override this.GetBehavior : Microsoft.Extensions.Logging.EventId -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.WarningBehavior&gt;" Usage="warningsConfiguration.GetBehavior eventId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.WarningBehavior&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
      </Parameters>
      <Docs>
        <param name="eventId">To be added.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.WarningBehavior" /> set for the given event ID, or <see langword="null" />
                if no explicit behavior has been set.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLevel">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.Logging.LogLevel? GetLevel (Microsoft.Extensions.Logging.EventId eventId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype Microsoft.Extensions.Logging.LogLevel&gt; GetLevel(valuetype Microsoft.Extensions.Logging.EventId eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.GetLevel(Microsoft.Extensions.Logging.EventId)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLevel (eventId As EventId) As Nullable(Of LogLevel)" />
      <MemberSignature Language="F#" Value="abstract member GetLevel : Microsoft.Extensions.Logging.EventId -&gt; Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt;&#xA;override this.GetLevel : Microsoft.Extensions.Logging.EventId -&gt; Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt;" Usage="warningsConfiguration.GetLevel eventId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Extensions.Logging.LogLevel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="eventId">To be added.</param>
        <summary>
                Gets the <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> set for the given event ID, or <see langword="null" />
                if no explicit behavior has been set.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> set for the given event ID.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceProviderHashCode">
      <MemberSignature Language="C#" Value="public virtual long GetServiceProviderHashCode ();" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetServiceProviderHashCode() cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.GetServiceProviderHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceProviderHashCode () As Long" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="abstract member GetServiceProviderHashCode : unit -&gt; int64&#xA;override this.GetServiceProviderHashCode : unit -&gt; int64" Usage="warningsConfiguration.GetServiceProviderHashCode " FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public virtual int GetServiceProviderHashCode ();" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetServiceProviderHashCode() cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceProviderHashCode () As Integer" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member GetServiceProviderHashCode : unit -&gt; int&#xA;override this.GetServiceProviderHashCode : unit -&gt; int" Usage="warningsConfiguration.GetServiceProviderHashCode " FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">System.Int64</ReturnType>
        <ReturnType FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns a hash code created from any options that would cause a new <see cref="T:System.IServiceProvider" />
                to be needed.
            </summary>
        <returns>A hash over options that require a new service provider when changed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldUseSameServiceProvider">
      <MemberSignature Language="C#" Value="public virtual bool ShouldUseSameServiceProvider (Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldUseSameServiceProvider(class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.ShouldUseSameServiceProvider(Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldUseSameServiceProvider (other As WarningsConfiguration) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldUseSameServiceProvider : Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration -&gt; bool&#xA;override this.ShouldUseSameServiceProvider : Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration -&gt; bool" Usage="warningsConfiguration.ShouldUseSameServiceProvider other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="other">The other configuration object.</param>
        <summary>
                Returns a value indicating whether all of the options used in <see cref="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.GetServiceProviderHashCode" />
                are the same as in the given extension.
            </summary>
        <returns>A value indicating whether all of the options that require a new service provider are the same.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWithExplicit">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration TryWithExplicit (Microsoft.Extensions.Logging.EventId eventId, Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration TryWithExplicit(valuetype Microsoft.Extensions.Logging.EventId eventId, valuetype Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.TryWithExplicit(Microsoft.Extensions.Logging.EventId,Microsoft.EntityFrameworkCore.WarningBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryWithExplicit (eventId As EventId, warningBehavior As WarningBehavior) As WarningsConfiguration" />
      <MemberSignature Language="F#" Value="abstract member TryWithExplicit : Microsoft.Extensions.Logging.EventId * Microsoft.EntityFrameworkCore.WarningBehavior -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration&#xA;override this.TryWithExplicit : Microsoft.Extensions.Logging.EventId * Microsoft.EntityFrameworkCore.WarningBehavior -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration" Usage="warningsConfiguration.TryWithExplicit (eventId, warningBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="warningBehavior" Type="Microsoft.EntityFrameworkCore.WarningBehavior" />
      </Parameters>
      <Docs>
        <param name="eventId">The event ID for which the behavior should be set.</param>
        <param name="warningBehavior">The behavior to set.</param>
        <summary>
                Creates a new instance with the given explicit <see cref="T:Microsoft.EntityFrameworkCore.WarningBehavior" /> set for
                the given event ID, but only if no explicit behavior has already been set.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" />.
            </summary>
        <returns>A new instance with the behavior set, or this instance if a behavior was already set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDefaultBehavior">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration WithDefaultBehavior (Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration WithDefaultBehavior(valuetype Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.WithDefaultBehavior(Microsoft.EntityFrameworkCore.WarningBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithDefaultBehavior (warningBehavior As WarningBehavior) As WarningsConfiguration" />
      <MemberSignature Language="F#" Value="abstract member WithDefaultBehavior : Microsoft.EntityFrameworkCore.WarningBehavior -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration&#xA;override this.WithDefaultBehavior : Microsoft.EntityFrameworkCore.WarningBehavior -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration" Usage="warningsConfiguration.WithDefaultBehavior warningBehavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningBehavior" Type="Microsoft.EntityFrameworkCore.WarningBehavior" />
      </Parameters>
      <Docs>
        <param name="warningBehavior">The option to change.</param>
        <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" />.
            </summary>
        <returns>A new instance with the option changed.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-warning-configuration">Configuration for specific messages</see> for more information and
                examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExplicit">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration WithExplicit (System.Collections.Generic.IEnumerable&lt;(Microsoft.Extensions.Logging.EventId Id, Microsoft.Extensions.Logging.LogLevel Level)&gt; eventsAndLevels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration WithExplicit(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.ValueTuple`2&lt;valuetype Microsoft.Extensions.Logging.EventId, valuetype Microsoft.Extensions.Logging.LogLevel&gt;&gt; eventsAndLevels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.WithExplicit(System.Collections.Generic.IEnumerable{System.ValueTuple{Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithExplicit (eventsAndLevels As IEnumerable(Of ValueTuple(Of EventId, LogLevel))) As WarningsConfiguration" />
      <MemberSignature Language="F#" Value="abstract member WithExplicit : seq&lt;ValueTuple&lt;Microsoft.Extensions.Logging.EventId, Microsoft.Extensions.Logging.LogLevel&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration&#xA;override this.WithExplicit : seq&lt;ValueTuple&lt;Microsoft.Extensions.Logging.EventId, Microsoft.Extensions.Logging.LogLevel&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration" Usage="warningsConfiguration.WithExplicit eventsAndLevels" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventsAndLevels" Type="System.Collections.Generic.IEnumerable&lt;System.ValueTuple&lt;Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel&gt;&gt;" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Id", "Level" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Id", "Level" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventsAndLevels">The event IDs and corresponding log levels to set.</param>
        <summary>
                Creates a new instance with the given log level set for all given event IDs.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" />.
            </summary>
        <returns>A new instance with the behaviors set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExplicit">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration WithExplicit (System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Logging.EventId&gt; eventIds, Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration WithExplicit(class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Extensions.Logging.EventId&gt; eventIds, valuetype Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration.WithExplicit(System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.EventId},Microsoft.EntityFrameworkCore.WarningBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithExplicit (eventIds As IEnumerable(Of EventId), warningBehavior As WarningBehavior) As WarningsConfiguration" />
      <MemberSignature Language="F#" Value="abstract member WithExplicit : seq&lt;Microsoft.Extensions.Logging.EventId&gt; * Microsoft.EntityFrameworkCore.WarningBehavior -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration&#xA;override this.WithExplicit : seq&lt;Microsoft.Extensions.Logging.EventId&gt; * Microsoft.EntityFrameworkCore.WarningBehavior -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration" Usage="warningsConfiguration.WithExplicit (eventIds, warningBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventIds" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Logging.EventId&gt;" />
        <Parameter Name="warningBehavior" Type="Microsoft.EntityFrameworkCore.WarningBehavior" />
      </Parameters>
      <Docs>
        <param name="eventIds">The event IDs for which the behavior should be set.</param>
        <param name="warningBehavior">The behavior to set.</param>
        <summary>
                Creates a new instance with the given explicit <see cref="T:Microsoft.EntityFrameworkCore.WarningBehavior" /> set for
                all given event IDs.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" />.
            </summary>
        <returns>A new instance with the behaviors set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
