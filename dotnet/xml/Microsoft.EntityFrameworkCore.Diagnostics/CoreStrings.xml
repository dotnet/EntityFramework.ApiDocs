<Type Name="CoreStrings" FullName="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings">
  <TypeSignature Language="C#" Value="public static class CoreStrings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CoreStrings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings" />
  <TypeSignature Language="VB.NET" Value="Public Class CoreStrings" />
  <TypeSignature Language="F#" Value="type CoreStrings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    String resources used in EF exceptions, etc.
                </para>
      <para>
                    These strings are exposed publicly for use by database providers and extensions.
                    It is unusual for application code to need these strings.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AbstractLeafEntityType">
      <MemberSignature Language="C#" Value="public static string AbstractLeafEntityType (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AbstractLeafEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AbstractLeafEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbstractLeafEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member AbstractLeafEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AbstractLeafEntityType entityType" />
      <MemberSignature Language="C#" Value="public static string AbstractLeafEntityType (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The corresponding CLR type for entity type '{entityType}' cannot be instantiated, and there is no derived entity type in the model that corresponds to a concrete CLR type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddingProxyTypeAsEntityType">
      <MemberSignature Language="C#" Value="public static string AddingProxyTypeAsEntityType (object typeName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AddingProxyTypeAsEntityType(object typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AddingProxyTypeAsEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddingProxyTypeAsEntityType (typeName As Object) As String" />
      <MemberSignature Language="F#" Value="static member AddingProxyTypeAsEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AddingProxyTypeAsEntityType typeName" />
      <MemberSignature Language="C#" Value="public static string AddingProxyTypeAsEntityType (object? typeName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <summary>
                Cannot add type '{typeName}' to the model as it is a dynamically-generated proxy type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousDependentEntity">
      <MemberSignature Language="C#" Value="public static string AmbiguousDependentEntity (object entityType, object targetEntryCall);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousDependentEntity(object entityType, object targetEntryCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousDependentEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousDependentEntity (entityType As Object, targetEntryCall As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousDependentEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousDependentEntity (entityType, targetEntryCall)" />
      <MemberSignature Language="C#" Value="public static string AmbiguousDependentEntity (object? entityType, object? targetEntryCall);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="targetEntryCall" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="targetEntryCall">To be added.</param>
        <summary>
                The entity type '{entityType}' uses a shared type and the supplied entity is currently referenced from several owner entities. To access the entry for a particular reference, call '{targetEntryCall}' on the owner entry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousEndRequiredDependent">
      <MemberSignature Language="C#" Value="public static string AmbiguousEndRequiredDependent (object foreignKeyProperties, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousEndRequiredDependent(object foreignKeyProperties, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousEndRequiredDependent(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousEndRequiredDependent (foreignKeyProperties As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousEndRequiredDependent : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousEndRequiredDependent (foreignKeyProperties, entityType)" />
      <MemberSignature Language="C#" Value="public static string AmbiguousEndRequiredDependent (object? foreignKeyProperties, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The foreign key {foreignKeyProperties} on entity type '{entityType}' cannot be configured as having a required dependent since the dependent side cannot be determined. To identify the dependent side of the relationship, configure the foreign key property in 'OnModelCreating'. See https://go.microsoft.com/fwlink/?LinkId=724062 for more details.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousEndRequiredDependentNavigation">
      <MemberSignature Language="C#" Value="public static string AmbiguousEndRequiredDependentNavigation (object entityType, object navigation, object foreignKeyProperties);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousEndRequiredDependentNavigation(object entityType, object navigation, object foreignKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousEndRequiredDependentNavigation(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousEndRequiredDependentNavigation (entityType As Object, navigation As Object, foreignKeyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousEndRequiredDependentNavigation : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousEndRequiredDependentNavigation (entityType, navigation, foreignKeyProperties)" />
      <MemberSignature Language="C#" Value="public static string AmbiguousEndRequiredDependentNavigation (object? entityType, object? navigation, object? foreignKeyProperties);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <summary>
                The navigation '{entityType}.{navigation}' cannot be configured as required since the dependent side of the underlying foreign key {foreignKeyProperties} cannot be determined. To identify the dependent side of the relationship, configure the foreign key property in 'OnModelCreating'. See https://go.microsoft.com/fwlink/?LinkId=724062 for more details.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousEndRequiredInverted">
      <MemberSignature Language="C#" Value="public static string AmbiguousEndRequiredInverted (object foreignKeyProperties, object entityType, object principalEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousEndRequiredInverted(object foreignKeyProperties, object entityType, object principalEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousEndRequiredInverted(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousEndRequiredInverted (foreignKeyProperties As Object, entityType As Object, principalEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousEndRequiredInverted : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousEndRequiredInverted (foreignKeyProperties, entityType, principalEntityType)" />
      <MemberSignature Language="C#" Value="public static string AmbiguousEndRequiredInverted (object? foreignKeyProperties, object? entityType, object? principalEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <summary>
                The foreign key {foreignKeyProperties} on entity type '{entityType}' cannot be inverted to entity type '{principalEntityType}' since it was configured as required before the dependent side was configured. Configure the foreign key property or the principal key before configuring the foreign key as required. See https://go.microsoft.com/fwlink/?LinkId=724062 for more details.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousForeignKeyPropertyCandidates">
      <MemberSignature Language="C#" Value="public static string AmbiguousForeignKeyPropertyCandidates (object firstDependentToPrincipalNavigationSpecification, object firstPrincipalToDependentNavigationSpecification, object secondDependentToPrincipalNavigationSpecification, object secondPrincipalToDependentNavigationSpecification, object foreignKeyProperties);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousForeignKeyPropertyCandidates(object firstDependentToPrincipalNavigationSpecification, object firstPrincipalToDependentNavigationSpecification, object secondDependentToPrincipalNavigationSpecification, object secondPrincipalToDependentNavigationSpecification, object foreignKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousForeignKeyPropertyCandidates(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousForeignKeyPropertyCandidates (firstDependentToPrincipalNavigationSpecification As Object, firstPrincipalToDependentNavigationSpecification As Object, secondDependentToPrincipalNavigationSpecification As Object, secondPrincipalToDependentNavigationSpecification As Object, foreignKeyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousForeignKeyPropertyCandidates : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousForeignKeyPropertyCandidates (firstDependentToPrincipalNavigationSpecification, firstPrincipalToDependentNavigationSpecification, secondDependentToPrincipalNavigationSpecification, secondPrincipalToDependentNavigationSpecification, foreignKeyProperties)" />
      <MemberSignature Language="C#" Value="public static string AmbiguousForeignKeyPropertyCandidates (object? firstDependentToPrincipalNavigationSpecification, object? firstPrincipalToDependentNavigationSpecification, object? secondDependentToPrincipalNavigationSpecification, object? secondPrincipalToDependentNavigationSpecification, object? foreignKeyProperties);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstDependentToPrincipalNavigationSpecification" Type="System.Object" />
        <Parameter Name="firstPrincipalToDependentNavigationSpecification" Type="System.Object" />
        <Parameter Name="secondDependentToPrincipalNavigationSpecification" Type="System.Object" />
        <Parameter Name="secondPrincipalToDependentNavigationSpecification" Type="System.Object" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="firstDependentToPrincipalNavigationSpecification">To be added.</param>
        <param name="firstPrincipalToDependentNavigationSpecification">To be added.</param>
        <param name="secondDependentToPrincipalNavigationSpecification">To be added.</param>
        <param name="secondPrincipalToDependentNavigationSpecification">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <summary>
                Both relationships between '{firstDependentToPrincipalNavigationSpecification}' and '{firstPrincipalToDependentNavigationSpecification}' and between '{secondDependentToPrincipalNavigationSpecification}' and '{secondPrincipalToDependentNavigationSpecification}' could use {foreignKeyProperties} as the foreign key. To resolve this, configure the foreign key properties explicitly in 'OnModelCreating' on at least one of the relationships.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousOneToOneRelationship">
      <MemberSignature Language="C#" Value="public static string AmbiguousOneToOneRelationship (object dependentToPrincipalNavigationSpecification, object principalToDependentNavigationSpecification);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousOneToOneRelationship(object dependentToPrincipalNavigationSpecification, object principalToDependentNavigationSpecification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousOneToOneRelationship(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousOneToOneRelationship (dependentToPrincipalNavigationSpecification As Object, principalToDependentNavigationSpecification As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousOneToOneRelationship : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousOneToOneRelationship (dependentToPrincipalNavigationSpecification, principalToDependentNavigationSpecification)" />
      <MemberSignature Language="C#" Value="public static string AmbiguousOneToOneRelationship (object? dependentToPrincipalNavigationSpecification, object? principalToDependentNavigationSpecification);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentToPrincipalNavigationSpecification" Type="System.Object" />
        <Parameter Name="principalToDependentNavigationSpecification" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentToPrincipalNavigationSpecification">To be added.</param>
        <param name="principalToDependentNavigationSpecification">To be added.</param>
        <summary>
                The dependent side could not be determined for the one-to-one relationship between '{dependentToPrincipalNavigationSpecification}' and '{principalToDependentNavigationSpecification}'. To identify the dependent side of the relationship, configure the foreign key property. If these navigations should not be part of the same relationship, configure them independently via separate method chains in 'OnModelCreating'. See https://go.microsoft.com/fwlink/?LinkId=724062 for more details.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousOwnedNavigation">
      <MemberSignature Language="C#" Value="public static string AmbiguousOwnedNavigation (object entityType, object otherEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousOwnedNavigation(object entityType, object otherEntityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousOwnedNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousOwnedNavigation (entityType As Object, otherEntityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member AmbiguousOwnedNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousOwnedNavigation (entityType, otherEntityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string AmbiguousOwnedNavigation (object entityTypeNavigationSpecification, object otherEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousOwnedNavigation(object entityTypeNavigationSpecification, object otherEntityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousOwnedNavigation (entityTypeNavigationSpecification As Object, otherEntityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member AmbiguousOwnedNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousOwnedNavigation (entityTypeNavigationSpecification, otherEntityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string AmbiguousOwnedNavigation (object? entityTypeNavigationSpecification, object? otherEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityTypeNavigationSpecification" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="1" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="entityTypeNavigationSpecification">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <summary>
                Unable to determine the owner for the relationship between '{entityTypeNavigationSpecification}' and '{otherEntityType}' as both types have been marked as owned. Either manually configure the ownership, or ignore the corresponding navigations using the [NotMapped] attribute or by using 'EntityTypeBuilder.Ignore' in 'OnModelCreating'. See https://aka.ms/efcore-docs-owned for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousServiceProperty">
      <MemberSignature Language="C#" Value="public static string AmbiguousServiceProperty (object property, object serviceType, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousServiceProperty(object property, object serviceType, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousServiceProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousServiceProperty (property As Object, serviceType As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousServiceProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousServiceProperty (property, serviceType, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="serviceType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="serviceType">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The service property '{property}' of type '{serviceType}' cannot be added to the entity type '{entityType}' because there is another property of the same type. Ignore one of the properties using the [NotMapped] attribute or 'EntityTypeBuilder.Ignore' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousSharedTypeEntityTypeName">
      <MemberSignature Language="C#" Value="public static string AmbiguousSharedTypeEntityTypeName (object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousSharedTypeEntityTypeName(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousSharedTypeEntityTypeName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousSharedTypeEntityTypeName (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousSharedTypeEntityTypeName : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AmbiguousSharedTypeEntityTypeName entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The shared type entity type '{entityType}' cannot be added to the model because its name is the same as the CLR type name. This usually indicates an error, either add it as a non-shared entity type or choose a different name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationNotFound">
      <MemberSignature Language="C#" Value="public static string AnnotationNotFound (object annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AnnotationNotFound(object annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AnnotationNotFound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnnotationNotFound (annotation As Object) As String" />
      <MemberSignature Language="F#" Value="static member AnnotationNotFound : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AnnotationNotFound annotation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotation" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="annotation">To be added.</param>
        <summary>
                The annotation '{annotation}' was not found. Ensure that the annotation has been added.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationNotFound">
      <MemberSignature Language="C#" Value="public static string AnnotationNotFound (object annotation, object annotatable);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AnnotationNotFound(object annotation, object annotatable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AnnotationNotFound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnnotationNotFound (annotation As Object, annotatable As Object) As String" />
      <MemberSignature Language="F#" Value="static member AnnotationNotFound : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AnnotationNotFound (annotation, annotatable)" />
      <MemberSignature Language="C#" Value="public static string AnnotationNotFound (object? annotation, object? annotatable);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotation" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="annotatable" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="annotation">To be added.</param>
        <param name="annotatable">To be added.</param>
        <summary>
                The annotation '{annotation}' was not found. Ensure that the annotation has been added to the object {annotatable}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgumentPropertyNull">
      <MemberSignature Language="C#" Value="public static string ArgumentPropertyNull (object property, object argument);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ArgumentPropertyNull(object property, object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ArgumentPropertyNull(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArgumentPropertyNull (property As Object, argument As Object) As String" />
      <MemberSignature Language="F#" Value="static member ArgumentPropertyNull : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ArgumentPropertyNull (property, argument)" />
      <MemberSignature Language="C#" Value="public static string ArgumentPropertyNull (object? property, object? argument);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>
                The property '{property}' of the argument '{argument}' cannot be null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeNotOnEntityTypeProperty">
      <MemberSignature Language="C#" Value="public static string AttributeNotOnEntityTypeProperty (object? attribute, object? type, object? propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AttributeNotOnEntityTypeProperty(object attribute, object type, object propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AttributeNotOnEntityTypeProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AttributeNotOnEntityTypeProperty (attribute As Object, type As Object, propertyName As Object) As String" />
      <MemberSignature Language="F#" Value="static member AttributeNotOnEntityTypeProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AttributeNotOnEntityTypeProperty (attribute, type, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="attribute">To be added.</param>
        <param name="type">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                The [{attribute}] attribute may only be specified on entity type properties. Remove the attribute from '{type}.{propertyName}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoIncludeNavigationCycle">
      <MemberSignature Language="C#" Value="public static string AutoIncludeNavigationCycle (object cycleNavigations);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AutoIncludeNavigationCycle(object cycleNavigations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AutoIncludeNavigationCycle(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AutoIncludeNavigationCycle (cycleNavigations As Object) As String" />
      <MemberSignature Language="F#" Value="static member AutoIncludeNavigationCycle : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.AutoIncludeNavigationCycle cycleNavigations" />
      <MemberSignature Language="C#" Value="public static string AutoIncludeNavigationCycle (object? cycleNavigations);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cycleNavigations" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="cycleNavigations">To be added.</param>
        <summary>
                Cycle detected while auto-including navigations: {cycleNavigations}. To fix this issue, either don't configure at least one navigation in the cycle as auto included in `OnModelCreating` or call 'IgnoreAutoInclude' method on the query.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackingFieldOnIndexer">
      <MemberSignature Language="C#" Value="public static string BackingFieldOnIndexer (object field, object entityType, object property);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BackingFieldOnIndexer(object field, object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BackingFieldOnIndexer(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BackingFieldOnIndexer (field As Object, entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member BackingFieldOnIndexer : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BackingFieldOnIndexer (field, entityType, property)" />
      <MemberSignature Language="C#" Value="public static string BackingFieldOnIndexer (object? field, object? entityType, object? property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="field">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                Cannot set backing field '{field}' for the indexer property '{entityType}.{property}'. Ensure no backing fields are specified for indexer properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadBackingFieldType">
      <MemberSignature Language="C#" Value="public static string BadBackingFieldType (object field, object fieldType, object entityType, object property, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadBackingFieldType(object field, object fieldType, object entityType, object property, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadBackingFieldType(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadBackingFieldType (field As Object, fieldType As Object, entityType As Object, property As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadBackingFieldType : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadBackingFieldType (field, fieldType, entityType, property, propertyType)" />
      <MemberSignature Language="C#" Value="public static string BadBackingFieldType (object? field, object? fieldType, object? entityType, object? property, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Object" />
        <Parameter Name="fieldType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="field">To be added.</param>
        <param name="fieldType">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The specified field '{field}' of type '{fieldType}' cannot be used for the property '{entityType}.{property}' of type '{propertyType}'. Only backing fields of types that are compatible with the property type can be used.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadDependencyRegistration">
      <MemberSignature Language="C#" Value="public static string BadDependencyRegistration (object dependenciesType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadDependencyRegistration(object dependenciesType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadDependencyRegistration(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadDependencyRegistration (dependenciesType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadDependencyRegistration : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadDependencyRegistration dependenciesType" />
      <MemberSignature Language="C#" Value="public static string BadDependencyRegistration (object? dependenciesType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependenciesType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependenciesType">To be added.</param>
        <summary>
                The service dependencies type '{dependenciesType}' has been registered incorrectly in the service collection. Service dependencies types must only be registered by Entity Framework or database providers.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadEnumValue">
      <MemberSignature Language="C#" Value="public static string BadEnumValue (object? enumValue, object? enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadEnumValue(object enumValue, object enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadEnumValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadEnumValue (enumValue As Object, enumType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadEnumValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadEnumValue (enumValue, enumType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumValue" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="enumType" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="enumValue">To be added.</param>
        <param name="enumType">To be added.</param>
        <summary>
                The value '{enumValue}' could not be parsed as a value of enum {enumType}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadFilterDerivedType">
      <MemberSignature Language="C#" Value="public static string BadFilterDerivedType (object filter, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadFilterDerivedType(object filter, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadFilterDerivedType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadFilterDerivedType (filter As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadFilterDerivedType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadFilterDerivedType (filter, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The filter expression '{filter}' cannot be specified for entity type '{entityType}'. A filter may only be applied to the root entity type in a hierarchy.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadFilterDerivedType">
      <MemberSignature Language="C#" Value="public static string BadFilterDerivedType (object filter, object entityType, object rootType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadFilterDerivedType(object filter, object entityType, object rootType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadFilterDerivedType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadFilterDerivedType (filter As Object, entityType As Object, rootType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadFilterDerivedType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadFilterDerivedType (filter, entityType, rootType)" />
      <MemberSignature Language="C#" Value="public static string BadFilterDerivedType (object? filter, object? entityType, object? rootType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="rootType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="rootType">To be added.</param>
        <summary>
                The filter expression '{filter}' cannot be specified for entity type '{entityType}'. A filter may only be applied to the root entity type '{rootType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadFilterExpression">
      <MemberSignature Language="C#" Value="public static string BadFilterExpression (object filter, object entityType, object clrType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadFilterExpression(object filter, object entityType, object clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadFilterExpression(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadFilterExpression (filter As Object, entityType As Object, clrType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadFilterExpression : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadFilterExpression (filter, entityType, clrType)" />
      <MemberSignature Language="C#" Value="public static string BadFilterExpression (object? filter, object? entityType, object? clrType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="clrType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="clrType">To be added.</param>
        <summary>
                The filter expression '{filter}' specified for entity type '{entityType}' is invalid. The expression must accept a single parameter of type '{clrType}' and return bool.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadFilterOwnedType">
      <MemberSignature Language="C#" Value="public static string BadFilterOwnedType (object filter, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadFilterOwnedType(object filter, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadFilterOwnedType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadFilterOwnedType (filter As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadFilterOwnedType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadFilterOwnedType (filter, entityType)" />
      <MemberSignature Language="C#" Value="public static string BadFilterOwnedType (object? filter, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The filter expression '{filter}' cannot be specified for owned entity type '{entityType}'. A filter may only be applied to an entity type that is not owned. See https://aka.ms/efcore-docs-owned for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadJsonValueReaderWriterType">
      <MemberSignature Language="C#" Value="public static string BadJsonValueReaderWriterType (object? givenType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadJsonValueReaderWriterType(object givenType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadJsonValueReaderWriterType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadJsonValueReaderWriterType (givenType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadJsonValueReaderWriterType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadJsonValueReaderWriterType givenType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="givenType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="givenType">To be added.</param>
        <summary>
                The type '{givenType}' cannot be used as a 'JsonValueReaderWriter' because it does not inherit from the generic 'JsonValueReaderWriter&lt;TValue&gt;'. Make sure to inherit json reader/writers from 'JsonValueReaderWriter&lt;TValue&gt;'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadListType">
      <MemberSignature Language="C#" Value="public static string BadListType (object? givenType, object? listType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadListType(object givenType, object listType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadListType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadListType (givenType As Object, listType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadListType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadListType (givenType, listType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="givenType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="listType" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="givenType">To be added.</param>
        <param name="listType">To be added.</param>
        <summary>
                The type '{givenType}' cannot be used as a primitive collection because it is not an array and does not implement '{listType}'. Collections of primitive types must be arrays or ordered lists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadValueComparerType">
      <MemberSignature Language="C#" Value="public static string BadValueComparerType (object? givenType, object? expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadValueComparerType(object givenType, object expectedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadValueComparerType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadValueComparerType (givenType As Object, expectedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadValueComparerType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadValueComparerType (givenType, expectedType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="givenType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="expectedType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="givenType">To be added.</param>
        <param name="expectedType">To be added.</param>
        <summary>
                The type '{givenType}' cannot be used as a value comparer because it does not inherit from '{expectedType}'. Make sure to inherit value comparers from '{expectedType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadValueConverterType">
      <MemberSignature Language="C#" Value="public static string BadValueConverterType (object? givenType, object? expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadValueConverterType(object givenType, object expectedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadValueConverterType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadValueConverterType (givenType As Object, expectedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadValueConverterType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadValueConverterType (givenType, expectedType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="givenType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="expectedType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="givenType">To be added.</param>
        <param name="expectedType">To be added.</param>
        <summary>
                The type '{givenType}' cannot be used as a value converter because it does not inherit from '{expectedType}'. Make sure to inherit value converters from '{expectedType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadValueGeneratorType">
      <MemberSignature Language="C#" Value="public static string BadValueGeneratorType (object givenType, object expectedType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadValueGeneratorType(object givenType, object expectedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadValueGeneratorType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadValueGeneratorType (givenType As Object, expectedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadValueGeneratorType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.BadValueGeneratorType (givenType, expectedType)" />
      <MemberSignature Language="C#" Value="public static string BadValueGeneratorType (object? givenType, object? expectedType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="givenType" Type="System.Object" />
        <Parameter Name="expectedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="givenType">To be added.</param>
        <param name="expectedType">To be added.</param>
        <summary>
                The type '{givenType}' cannot be used as a value generator because it does not inherit from '{expectedType}'. Make sure to inherit value generators from '{expectedType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConnectNotImplemented">
      <MemberSignature Language="C#" Value="public static string CanConnectNotImplemented { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CanConnectNotImplemented" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CanConnectNotImplemented" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CanConnectNotImplemented As String" />
      <MemberSignature Language="F#" Value="static member CanConnectNotImplemented : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CanConnectNotImplemented" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The current database provider has not implemented the 'CanConnect' method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotBeNullable">
      <MemberSignature Language="C#" Value="public static string CannotBeNullable (object property, object entityType, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotBeNullable(object property, object entityType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotBeNullable(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotBeNullable (property As Object, entityType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotBeNullable : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotBeNullable (property, entityType, propertyType)" />
      <MemberSignature Language="C#" Value="public static string CannotBeNullable (object? property, object? entityType, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' cannot be marked as nullable/optional because the type of the property is '{propertyType}' which is not a nullable type. Any property can be marked as non-nullable/required, but only properties of nullable types can be marked as nullable/optional.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotBeNullableElement">
      <MemberSignature Language="C#" Value="public static string CannotBeNullableElement (object? entityType, object? property, object? elementType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotBeNullableElement(object entityType, object property, object elementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotBeNullableElement(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotBeNullableElement (entityType As Object, property As Object, elementType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotBeNullableElement : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotBeNullableElement (entityType, property, elementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="elementType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="elementType">To be added.</param>
        <summary>
                The element type of property '{entityType}.{property}' cannot be marked as nullable/optional because the type of the element is '{elementType}' which is not a nullable type. Any element type can be marked as non-nullable/required, but only elements of nullable types can be marked as nullable/optional.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotBeNullablePK">
      <MemberSignature Language="C#" Value="public static string CannotBeNullablePK (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotBeNullablePK(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotBeNullablePK(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotBeNullablePK (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotBeNullablePK : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotBeNullablePK (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string CannotBeNullablePK (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' cannot be marked as nullable/optional because the property is a part of a key. Any property can be marked as non-nullable/required, but only properties of nullable types and which are not part of a key can be marked as nullable/optional.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotConvertEnumValue">
      <MemberSignature Language="C#" Value="public static string CannotConvertEnumValue (object? value, object? enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotConvertEnumValue(object value, object enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotConvertEnumValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotConvertEnumValue (value As Object, enumType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotConvertEnumValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotConvertEnumValue (value, enumType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="enumType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="enumType">To be added.</param>
        <summary>
                Cannot convert string value '{value}' from the database to any value in the mapped '{enumType}' enum.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotConvertQueryableToEnumerableMethod">
      <MemberSignature Language="C#" Value="public static string CannotConvertQueryableToEnumerableMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CannotConvertQueryableToEnumerableMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotConvertQueryableToEnumerableMethod" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CannotConvertQueryableToEnumerableMethod As String" />
      <MemberSignature Language="F#" Value="static member CannotConvertQueryableToEnumerableMethod : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotConvertQueryableToEnumerableMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unable to convert a queryable method to an enumerable method. This is likely an issue in Entity Framework, please file an issue at https://go.microsoft.com/fwlink/?linkid=2142044.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotCreateJsonValueReaderWriter">
      <MemberSignature Language="C#" Value="public static string CannotCreateJsonValueReaderWriter (object? readerWriterType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotCreateJsonValueReaderWriter(object readerWriterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotCreateJsonValueReaderWriter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotCreateJsonValueReaderWriter (readerWriterType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotCreateJsonValueReaderWriter : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotCreateJsonValueReaderWriter readerWriterType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readerWriterType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="readerWriterType">To be added.</param>
        <summary>
                Cannot create an instance of reade/writer type '{readerWriterType}'. Ensure that the type can be instantiated and has a public parameterless constructor, or has a public static 'Instance' field returning the singleton instance to use.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotCreateValueComparer">
      <MemberSignature Language="C#" Value="public static string CannotCreateValueComparer (object? generatorType, object? method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotCreateValueComparer(object generatorType, object method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotCreateValueComparer(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotCreateValueComparer (generatorType As Object, method As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotCreateValueComparer : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotCreateValueComparer (generatorType, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="method" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="generatorType">To be added.</param>
        <param name="method">To be added.</param>
        <summary>
                Cannot create an instance of value comparer type '{generatorType}'. Ensure that the type can be instantiated and has a parameterless constructor, or use the overload of '{method}' that accepts a delegate.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotCreateValueConverter">
      <MemberSignature Language="C#" Value="public static string CannotCreateValueConverter (object? generatorType, object? method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotCreateValueConverter(object generatorType, object method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotCreateValueConverter(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotCreateValueConverter (generatorType As Object, method As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotCreateValueConverter : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotCreateValueConverter (generatorType, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="method" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="generatorType">To be added.</param>
        <param name="method">To be added.</param>
        <summary>
                Cannot create an instance of value converter type '{generatorType}'. Ensure that the type can be instantiated and has a parameterless constructor, or use the overload of '{method}' that accepts a delegate.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotCreateValueGenerator">
      <MemberSignature Language="C#" Value="public static string CannotCreateValueGenerator (object generatorType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotCreateValueGenerator(object generatorType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotCreateValueGenerator(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotCreateValueGenerator (generatorType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotCreateValueGenerator : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotCreateValueGenerator generatorType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="generatorType">To be added.</param>
        <summary>
                Cannot create an instance of value generator type '{generatorType}'. Ensure that the type can be instantiated and has a parameterless constructor, or use the overload of 'HasValueGenerator' that accepts a delegate.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotCreateValueGenerator">
      <MemberSignature Language="C#" Value="public static string CannotCreateValueGenerator (object? generatorType, object? method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotCreateValueGenerator(object generatorType, object method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotCreateValueGenerator(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotCreateValueGenerator (generatorType As Object, method As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotCreateValueGenerator : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotCreateValueGenerator (generatorType, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="method" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="generatorType">To be added.</param>
        <param name="method">To be added.</param>
        <summary>
                Cannot create an instance of value generator type '{generatorType}'. Ensure that the type can be instantiated and has a parameterless constructor, or use the overload of '{method}' that accepts a delegate.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotLoadDetached">
      <MemberSignature Language="C#" Value="public static string CannotLoadDetached (object navigation, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotLoadDetached(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotLoadDetached(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotLoadDetached (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotLoadDetached : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotLoadDetached (navigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string CannotLoadDetached (object? navigation, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The navigation '{1_entityType}.{0_navigation}' cannot be loaded because the entity is not being tracked. Navigations can only be loaded for tracked entities.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotLoadDetachedShadow">
      <MemberSignature Language="C#" Value="public static string CannotLoadDetachedShadow (object? navigation, object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotLoadDetachedShadow(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotLoadDetachedShadow(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotLoadDetachedShadow (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotLoadDetachedShadow : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotLoadDetachedShadow (navigation, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The navigation '{1_entityType}.{0_navigation}' cannot be loaded because one or more of the key or foreign key properties are shadow properties and the entity is not being tracked. Relationships using shadow values can only be loaded for tracked entities.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotMarkNonShared">
      <MemberSignature Language="C#" Value="public static string CannotMarkNonShared (object? type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotMarkNonShared(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotMarkNonShared(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotMarkNonShared (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotMarkNonShared : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotMarkNonShared type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                The type '{type}' cannot be marked as a non-shared type since a shared type entity type with this CLR type exists in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotMarkShared">
      <MemberSignature Language="C#" Value="public static string CannotMarkShared (object type);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotMarkShared(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotMarkShared(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotMarkShared (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotMarkShared : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotMarkShared type" />
      <MemberSignature Language="C#" Value="public static string CannotMarkShared (object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                The type '{type}' cannot be marked as a shared type since an entity type with the same CLR type already exists in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotMaterializeAbstractType">
      <MemberSignature Language="C#" Value="public static string CannotMaterializeAbstractType (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotMaterializeAbstractType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotMaterializeAbstractType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotMaterializeAbstractType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotMaterializeAbstractType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CannotMaterializeAbstractType entityType" />
      <MemberSignature Language="C#" Value="public static string CannotMaterializeAbstractType (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Unable to create an instance of entity type '{entityType}' because it is abstract. Consider making make it non-abstract or mapping at least one derived type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanOnlyConfigureExistingNavigations">
      <MemberSignature Language="C#" Value="public static string CanOnlyConfigureExistingNavigations (object navigationName, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CanOnlyConfigureExistingNavigations(object navigationName, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CanOnlyConfigureExistingNavigations(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanOnlyConfigureExistingNavigations (navigationName As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CanOnlyConfigureExistingNavigations : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CanOnlyConfigureExistingNavigations (navigationName, entityType)" />
      <MemberSignature Language="C#" Value="public static string CanOnlyConfigureExistingNavigations (object? navigationName, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigationName">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Navigation '{1_entityType}.{0_navigationName}' was not found. Please add the navigation to the entity type before configuring it.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeTrackingInterfaceMissing">
      <MemberSignature Language="C#" Value="public static string ChangeTrackingInterfaceMissing (object entityType, object changeTrackingStrategy, object notificationInterface);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ChangeTrackingInterfaceMissing(object entityType, object changeTrackingStrategy, object notificationInterface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ChangeTrackingInterfaceMissing(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeTrackingInterfaceMissing (entityType As Object, changeTrackingStrategy As Object, notificationInterface As Object) As String" />
      <MemberSignature Language="F#" Value="static member ChangeTrackingInterfaceMissing : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ChangeTrackingInterfaceMissing (entityType, changeTrackingStrategy, notificationInterface)" />
      <MemberSignature Language="C#" Value="public static string ChangeTrackingInterfaceMissing (object? entityType, object? changeTrackingStrategy, object? notificationInterface);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="changeTrackingStrategy" Type="System.Object" />
        <Parameter Name="notificationInterface" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="changeTrackingStrategy">To be added.</param>
        <param name="notificationInterface">To be added.</param>
        <summary>
                The entity type '{entityType}' is configured to use the '{changeTrackingStrategy}' change tracking strategy, but does not implement the required '{notificationInterface}' interface. Implement '{notificationInterface}' on '{entityType}' or use a different change tracking strategy.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularDependency">
      <MemberSignature Language="C#" Value="public static string CircularDependency (object cycle);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CircularDependency(object cycle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CircularDependency(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CircularDependency (cycle As Object) As String" />
      <MemberSignature Language="F#" Value="static member CircularDependency : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CircularDependency cycle" />
      <MemberSignature Language="C#" Value="public static string CircularDependency (object? cycle);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cycle" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="cycle">To be added.</param>
        <summary>
                Unable to save changes because a circular dependency was detected in the data to be saved: '{cycle}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularInheritance">
      <MemberSignature Language="C#" Value="public static string CircularInheritance (object entityType, object baseEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CircularInheritance(object entityType, object baseEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CircularInheritance(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CircularInheritance (entityType As Object, baseEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CircularInheritance : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CircularInheritance (entityType, baseEntityType)" />
      <MemberSignature Language="C#" Value="public static string CircularInheritance (object? entityType, object? baseEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{baseEntityType}' is a descendant of '{entityType}'. Review your model configuration.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingMismatchedSharedType">
      <MemberSignature Language="C#" Value="public static string ClashingMismatchedSharedType (object entityType, object otherClrType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingMismatchedSharedType(object entityType, object otherClrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingMismatchedSharedType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingMismatchedSharedType (entityType As Object, otherClrType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingMismatchedSharedType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingMismatchedSharedType (entityType, otherClrType)" />
      <MemberSignature Language="C#" Value="public static string ClashingMismatchedSharedType (object? entityType, object? otherClrType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="otherClrType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="otherClrType">To be added.</param>
        <summary>
                The shared-type entity type '{entityType}' cannot be added because the model already contains an entity type with the same name, but with a different CLR type '{otherClrType}'. Ensure all entity type names are unique.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingNamedOwnedType">
      <MemberSignature Language="C#" Value="public static string ClashingNamedOwnedType (object ownedTypeName, object ownerEntityType, object navigation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingNamedOwnedType(object ownedTypeName, object ownerEntityType, object navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingNamedOwnedType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingNamedOwnedType (ownedTypeName As Object, ownerEntityType As Object, navigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingNamedOwnedType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingNamedOwnedType (ownedTypeName, ownerEntityType, navigation)" />
      <MemberSignature Language="C#" Value="public static string ClashingNamedOwnedType (object? ownedTypeName, object? ownerEntityType, object? navigation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedTypeName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="ownerEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="ownedTypeName">To be added.</param>
        <param name="ownerEntityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                An entity type named '{ownedTypeName}' has already been added to the model. Use a different name when configuring the ownership '{ownerEntityType}.{navigation}' in 'OnModelCreating'. See https://aka.ms/efcore-docs-owned for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingNonOwnedDerivedEntityType">
      <MemberSignature Language="C#" Value="public static string ClashingNonOwnedDerivedEntityType (object entityType, object derivedType);" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingNonOwnedDerivedEntityType(object entityType, object derivedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingNonOwnedDerivedEntityType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingNonOwnedDerivedEntityType (entityType As Object, derivedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingNonOwnedDerivedEntityType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingNonOwnedDerivedEntityType (entityType, derivedType)" />
      <MemberSignature Language="C#" Value="public static string ClashingNonOwnedDerivedEntityType (object? entityType, object? derivedType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="derivedType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="derivedType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be marked as owned because the derived entity type '{derivedType}' has been configured as non-owned. Either don't configure '{derivedType}' as non-owned, or call 'HasBaseType(null)' for it in 'OnModelCreating'. See https://aka.ms/efcore-docs-owned for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingNonOwnedEntityType">
      <MemberSignature Language="C#" Value="public static string ClashingNonOwnedEntityType (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingNonOwnedEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingNonOwnedEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingNonOwnedEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingNonOwnedEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingNonOwnedEntityType entityType" />
      <MemberSignature Language="C#" Value="public static string ClashingNonOwnedEntityType (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be configured as owned because it has already been configured as a non-owned. If you want to override previous configuration first remove the entity type from the model by calling 'Ignore'.  See https://aka.ms/efcore-docs-owned for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingNonSharedType">
      <MemberSignature Language="C#" Value="public static string ClashingNonSharedType (object entityType, object type);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingNonSharedType(object entityType, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingNonSharedType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingNonSharedType (entityType As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingNonSharedType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingNonSharedType (entityType, type)" />
      <MemberSignature Language="C#" Value="public static string ClashingNonSharedType (object? entityType, object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                The shared-type entity type '{entityType}' with CLR type '{type}' cannot be added to the model because a non-shared entity type with the same CLR type already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingNonWeakEntityType">
      <MemberSignature Language="C#" Value="public static string ClashingNonWeakEntityType (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingNonWeakEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingNonWeakEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingNonWeakEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingNonWeakEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingNonWeakEntityType entityType" />
      <MemberSignature Language="C#" Value="public static string ClashingNonWeakEntityType (object? entityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' with a defining navigation cannot be added to the model because an entity type with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingOwnedDerivedEntityType">
      <MemberSignature Language="C#" Value="public static string ClashingOwnedDerivedEntityType (object? entityType, object? derivedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingOwnedDerivedEntityType(object entityType, object derivedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingOwnedDerivedEntityType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingOwnedDerivedEntityType (entityType As Object, derivedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingOwnedDerivedEntityType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingOwnedDerivedEntityType (entityType, derivedType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="derivedType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="derivedType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be marked as non-owned because the derived entity type '{derivedType}' has been configured as owned. Either don't configure '{derivedType}' as owned, or call 'HasBaseType(null)' for it in 'OnModelCreating'. See https://aka.ms/efcore-docs-owned for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingOwnedEntityType">
      <MemberSignature Language="C#" Value="public static string ClashingOwnedEntityType (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingOwnedEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingOwnedEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingOwnedEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingOwnedEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingOwnedEntityType entityType" />
      <MemberSignature Language="C#" Value="public static string ClashingOwnedEntityType (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be configured as non-owned because it has already been configured as a owned. Use the nested builder in `OwnsOne` or `OwnsMany` on the owner entity type builder to further configure this type. If you want to override previous configuration first remove the entity type from the model by calling 'Ignore'. See https://aka.ms/efcore-docs-owned for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingSharedType">
      <MemberSignature Language="C#" Value="public static string ClashingSharedType (object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingSharedType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingSharedType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingSharedType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingSharedType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingSharedType entityType" />
      <MemberSignature Language="C#" Value="public static string ClashingSharedType (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be added to the model because its CLR type has been configured as a shared type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingWeakEntityType">
      <MemberSignature Language="C#" Value="public static string ClashingWeakEntityType (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingWeakEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingWeakEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingWeakEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingWeakEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClashingWeakEntityType entityType" />
      <MemberSignature Language="C#" Value="public static string ClashingWeakEntityType (object? entityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be added to the model because an entity type with a defining navigation with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientProjectionCapturingConstantInMethodArgument">
      <MemberSignature Language="C#" Value="public static string ClientProjectionCapturingConstantInMethodArgument (object constantType, object methodName);" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClientProjectionCapturingConstantInMethodArgument(object constantType, object methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClientProjectionCapturingConstantInMethodArgument(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClientProjectionCapturingConstantInMethodArgument (constantType As Object, methodName As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClientProjectionCapturingConstantInMethodArgument : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClientProjectionCapturingConstantInMethodArgument (constantType, methodName)" />
      <MemberSignature Language="C#" Value="public static string ClientProjectionCapturingConstantInMethodArgument (object? constantType, object? methodName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="methodName" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="constantType">To be added.</param>
        <param name="methodName">To be added.</param>
        <summary>
                The client projection contains a reference to a constant expression of '{constantType}' which is being passed as an argument to the method '{methodName}'. This could potentially cause a memory leak; consider assigning this constant to a local variable and using the variable in the query instead. See https://go.microsoft.com/fwlink/?linkid=2103067 for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientProjectionCapturingConstantInMethodInstance">
      <MemberSignature Language="C#" Value="public static string ClientProjectionCapturingConstantInMethodInstance (object constantType, object methodName);" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClientProjectionCapturingConstantInMethodInstance(object constantType, object methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClientProjectionCapturingConstantInMethodInstance(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClientProjectionCapturingConstantInMethodInstance (constantType As Object, methodName As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClientProjectionCapturingConstantInMethodInstance : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClientProjectionCapturingConstantInMethodInstance (constantType, methodName)" />
      <MemberSignature Language="C#" Value="public static string ClientProjectionCapturingConstantInMethodInstance (object? constantType, object? methodName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="methodName" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="constantType">To be added.</param>
        <param name="methodName">To be added.</param>
        <summary>
                The client projection contains a reference to a constant expression of '{constantType}' through the instance method '{methodName}'. This could potentially cause a memory leak; consider making the method static so that it does not capture constant in the instance. See https://go.microsoft.com/fwlink/?linkid=2103067 for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientProjectionCapturingConstantInTree">
      <MemberSignature Language="C#" Value="public static string ClientProjectionCapturingConstantInTree (object constantType);" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClientProjectionCapturingConstantInTree(object constantType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClientProjectionCapturingConstantInTree(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClientProjectionCapturingConstantInTree (constantType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClientProjectionCapturingConstantInTree : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClientProjectionCapturingConstantInTree constantType" />
      <MemberSignature Language="C#" Value="public static string ClientProjectionCapturingConstantInTree (object? constantType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="constantType">To be added.</param>
        <summary>
                The client projection contains a reference to a constant expression of '{constantType}'. This could potentially cause a memory leak; consider assigning this constant to a local variable and using the variable in the query instead. See https://go.microsoft.com/fwlink/?linkid=2103067 for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrPropertyOnShadowEntity">
      <MemberSignature Language="C#" Value="public static string ClrPropertyOnShadowEntity (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClrPropertyOnShadowEntity(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClrPropertyOnShadowEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClrPropertyOnShadowEntity (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClrPropertyOnShadowEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ClrPropertyOnShadowEntity (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string ClrPropertyOnShadowEntity (object? property, object? entityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' cannot exist on type '{entityType}' because the type is marked as shadow state while the property is not. Shadow state types can only contain shadow state properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionIsReference">
      <MemberSignature Language="C#" Value="public static string CollectionIsReference (object property, object entityType, object CollectionMethod, object ReferenceMethod);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CollectionIsReference(object property, object entityType, object CollectionMethod, object ReferenceMethod) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CollectionIsReference(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CollectionIsReference (property As Object, entityType As Object, CollectionMethod As Object, ReferenceMethod As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member CollectionIsReference : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CollectionIsReference (property, entityType, CollectionMethod, ReferenceMethod)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string CollectionIsReference (object property, object entityType, object collectionMethod, object referenceMethod);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CollectionIsReference(object property, object entityType, object collectionMethod, object referenceMethod) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CollectionIsReference (property As Object, entityType As Object, collectionMethod As Object, referenceMethod As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member CollectionIsReference : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CollectionIsReference (property, entityType, collectionMethod, referenceMethod)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string CollectionIsReference (object? property, object? entityType, object? collectionMethod, object? referenceMethod);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
        <Parameter Name="CollectionMethod" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="collectionMethod" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="ReferenceMethod" Type="System.Object" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="referenceMethod" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="CollectionMethod">To be added.</param>
        <param name="collectionMethod">To be added.</param>
        <param name="ReferenceMethod">To be added.</param>
        <param name="referenceMethod">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' is being accessed using '{collectionMethod}', but is defined in the model as a non-collection, reference navigation. Use '{referenceMethod}' to access reference navigations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparerPropertyMismatch">
      <MemberSignature Language="C#" Value="public static string ComparerPropertyMismatch (object type, object entityType, object propertyName, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ComparerPropertyMismatch(object type, object entityType, object propertyName, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComparerPropertyMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparerPropertyMismatch (type As Object, entityType As Object, propertyName As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ComparerPropertyMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComparerPropertyMismatch (type, entityType, propertyName, propertyType)" />
      <MemberSignature Language="C#" Value="public static string ComparerPropertyMismatch (object? type, object? entityType, object? propertyName, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The comparer for type '{type}' cannot be used for '{entityType}.{propertyName}' because its type is '{propertyType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparerPropertyMismatchElement">
      <MemberSignature Language="C#" Value="public static string ComparerPropertyMismatchElement (object? type, object? entityType, object? propertyName, object? elementType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ComparerPropertyMismatchElement(object type, object entityType, object propertyName, object elementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComparerPropertyMismatchElement(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparerPropertyMismatchElement (type As Object, entityType As Object, propertyName As Object, elementType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ComparerPropertyMismatchElement : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComparerPropertyMismatchElement (type, entityType, propertyName, elementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="elementType" Type="System.Object" Index="3" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="elementType">To be added.</param>
        <summary>
                The comparer for element type '{type}' cannot be used for '{entityType}.{propertyName}' because its element type is '{elementType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompiledModelIncompatibleTypeMapping">
      <MemberSignature Language="C#" Value="public static string CompiledModelIncompatibleTypeMapping (object? typeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CompiledModelIncompatibleTypeMapping(object typeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CompiledModelIncompatibleTypeMapping(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompiledModelIncompatibleTypeMapping (typeMapping As Object) As String" />
      <MemberSignature Language="F#" Value="static member CompiledModelIncompatibleTypeMapping : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CompiledModelIncompatibleTypeMapping typeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapping" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="typeMapping">To be added.</param>
        <summary>
                The type mapping used is incompatible with a compiled model. The mapping type must have a 'public static readonly {typeMapping} {typeMapping}.Default' property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompiledQueryDifferentModel">
      <MemberSignature Language="C#" Value="public static string CompiledQueryDifferentModel (object? queryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CompiledQueryDifferentModel(object queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CompiledQueryDifferentModel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompiledQueryDifferentModel (queryExpression As Object) As String" />
      <MemberSignature Language="F#" Value="static member CompiledQueryDifferentModel : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CompiledQueryDifferentModel queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="queryExpression">To be added.</param>
        <summary>
                The compiled query '{queryExpression}' was executed with a different model than it was compiled against. Compiled queries can only be used with a single model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexCollectionWrongClrType">
      <MemberSignature Language="C#" Value="public static string ComplexCollectionWrongClrType (object? property, object? type, object? clrType, object? targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ComplexCollectionWrongClrType(object property, object type, object clrType, object targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexCollectionWrongClrType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComplexCollectionWrongClrType (property As Object, type As Object, clrType As Object, targetType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ComplexCollectionWrongClrType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexCollectionWrongClrType (property, type, clrType, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="clrType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="targetType" Type="System.Object" Index="3" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="type">To be added.</param>
        <param name="clrType">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                The collection complex property '{property}' cannot be added to the type '{type}' because its CLR type '{clrType}' does not implement 'IEnumerable&lt;{targetType}&gt;'. Collection complex property must implement IEnumerable&lt;&gt; of the complex type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexPropertyCollection">
      <MemberSignature Language="C#" Value="public static string ComplexPropertyCollection (object? type, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ComplexPropertyCollection(object type, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComplexPropertyCollection (type As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member ComplexPropertyCollection : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyCollection (type, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                Adding the collection complex property '{type}.{property}' isn't supported. See https://github.com/dotnet/efcore/issues/31237 for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexPropertyIndexer">
      <MemberSignature Language="C#" Value="public static string ComplexPropertyIndexer (object? type, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ComplexPropertyIndexer(object type, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyIndexer(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComplexPropertyIndexer (type As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member ComplexPropertyIndexer : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyIndexer (type, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                Adding the complex property '{type}.{property}' as an indexer property isn't supported. See https://github.com/dotnet/efcore/issues/31244 for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexPropertyNotFound">
      <MemberSignature Language="C#" Value="public static string ComplexPropertyNotFound (object? type, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ComplexPropertyNotFound(object type, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyNotFound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComplexPropertyNotFound (type As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member ComplexPropertyNotFound : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyNotFound (type, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The complex property '{type}.{property}' could not be found. Ensure that the property exists and has been included in the model as a complex property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexPropertyOptional">
      <MemberSignature Language="C#" Value="public static string ComplexPropertyOptional (object? type, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ComplexPropertyOptional(object type, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyOptional(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComplexPropertyOptional (type As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member ComplexPropertyOptional : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyOptional (type, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                Configuring the complex property '{type}.{property}' as optional is not supported, call 'IsRequired()'. See https://github.com/dotnet/efcore/issues/31376 for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexPropertyShadow">
      <MemberSignature Language="C#" Value="public static string ComplexPropertyShadow (object? type, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ComplexPropertyShadow(object type, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyShadow(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComplexPropertyShadow (type As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member ComplexPropertyShadow : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyShadow (type, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                Configuring the complex property '{type}.{property}' in shadow state isn't supported.  See https://github.com/dotnet/efcore/issues/31243 for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexPropertyWrongClrType">
      <MemberSignature Language="C#" Value="public static string ComplexPropertyWrongClrType (object? property, object? type, object? clrType, object? targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ComplexPropertyWrongClrType(object property, object type, object clrType, object targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyWrongClrType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComplexPropertyWrongClrType (property As Object, type As Object, clrType As Object, targetType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ComplexPropertyWrongClrType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexPropertyWrongClrType (property, type, clrType, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="clrType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="targetType" Type="System.Object" Index="3" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="type">To be added.</param>
        <param name="clrType">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                The complex property '{property}' cannot be added to the type '{type}' because its CLR type '{clrType}' does not match the expected CLR type '{targetType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexTypesNotSupported">
      <MemberSignature Language="C#" Value="public static string ComplexTypesNotSupported (object? service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ComplexTypesNotSupported(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexTypesNotSupported(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComplexTypesNotSupported (service As Object) As String" />
      <MemberSignature Language="F#" Value="static member ComplexTypesNotSupported : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ComplexTypesNotSupported service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>
                '{service}' doesn't currently support complex types.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeFkOnProperty">
      <MemberSignature Language="C#" Value="public static string CompositeFkOnProperty (object navigation, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CompositeFkOnProperty(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CompositeFkOnProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompositeFkOnProperty (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CompositeFkOnProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CompositeFkOnProperty (navigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string CompositeFkOnProperty (object? navigation, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                There are multiple properties with the [ForeignKey] attribute pointing to navigation '{1_entityType}.{0_navigation}'. To define a composite foreign key using data annotations, use the [ForeignKey] attribute on the navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositePKWithDataAnnotation">
      <MemberSignature Language="C#" Value="public static string CompositePKWithDataAnnotation (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CompositePKWithDataAnnotation(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CompositePKWithDataAnnotation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompositePKWithDataAnnotation (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CompositePKWithDataAnnotation : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CompositePKWithDataAnnotation entityType" />
      <MemberSignature Language="C#" Value="public static string CompositePKWithDataAnnotation (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' has multiple properties with the [Key] attribute. Composite primary keys configured by placing the [PrimaryKey] attribute on the entity type class, or by using 'HasKey' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrentMethodInvocation">
      <MemberSignature Language="C#" Value="public static string ConcurrentMethodInvocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ConcurrentMethodInvocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConcurrentMethodInvocation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConcurrentMethodInvocation As String" />
      <MemberSignature Language="F#" Value="static member ConcurrentMethodInvocation : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConcurrentMethodInvocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingBackingFields">
      <MemberSignature Language="C#" Value="public static string ConflictingBackingFields (object property, object entityType, object field1, object field2);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingBackingFields(object property, object entityType, object field1, object field2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingBackingFields(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingBackingFields (property As Object, entityType As Object, field1 As Object, field2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingBackingFields : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingBackingFields (property, entityType, field1, field2)" />
      <MemberSignature Language="C#" Value="public static string ConflictingBackingFields (object? property, object? entityType, object? field1, object? field2);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="field1" Type="System.Object" />
        <Parameter Name="field2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="field1">To be added.</param>
        <param name="field2">To be added.</param>
        <summary>
                Property '{1_entityType}.{0_property}' matches both '{field1}' and '{field2}' by convention. Explicitly specify the backing field to use with 'HasField' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingFieldProperty">
      <MemberSignature Language="C#" Value="public static string ConflictingFieldProperty (object? type, object? property, object? field, object? conflictingType, object? conflictingProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingFieldProperty(object type, object property, object field, object conflictingType, object conflictingProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingFieldProperty(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingFieldProperty (type As Object, property As Object, field As Object, conflictingType As Object, conflictingProperty As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingFieldProperty : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingFieldProperty (type, property, field, conflictingType, conflictingProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="field" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="conflictingType" Type="System.Object" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="conflictingProperty" Type="System.Object" Index="4" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="property">To be added.</param>
        <param name="field">To be added.</param>
        <param name="conflictingType">To be added.</param>
        <param name="conflictingProperty">To be added.</param>
        <summary>
                The member '{type}.{property}' cannot use field '{field}' because it is already used by '{conflictingType}.{conflictingProperty}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingForeignKeyAttributes">
      <MemberSignature Language="C#" Value="public static string ConflictingForeignKeyAttributes (object propertyList, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingForeignKeyAttributes(object propertyList, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingForeignKeyAttributes(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingForeignKeyAttributes (propertyList As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingForeignKeyAttributes : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingForeignKeyAttributes (propertyList, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyList" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="propertyList">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                There are multiple ForeignKeyAttributes which are pointing to same set of properties - '{propertyList}' on entity type '{entityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingForeignKeyAttributes">
      <MemberSignature Language="C#" Value="public static string ConflictingForeignKeyAttributes (object propertyList, object entityType, object principalEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingForeignKeyAttributes(object propertyList, object entityType, object principalEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingForeignKeyAttributes(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingForeignKeyAttributes (propertyList As Object, entityType As Object, principalEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingForeignKeyAttributes : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingForeignKeyAttributes (propertyList, entityType, principalEntityType)" />
      <MemberSignature Language="C#" Value="public static string ConflictingForeignKeyAttributes (object? propertyList, object? entityType, object? principalEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyList" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyList">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <summary>
                There are multiple [ForeignKey] attributes which are pointing to same set of properties '{propertyList}' on entity type '{entityType}' and targeting the principal entity type '{principalEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingKeylessAndPrimaryKeyAttributes">
      <MemberSignature Language="C#" Value="public static string ConflictingKeylessAndPrimaryKeyAttributes (object? entity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingKeylessAndPrimaryKeyAttributes(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingKeylessAndPrimaryKeyAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingKeylessAndPrimaryKeyAttributes (entity As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingKeylessAndPrimaryKeyAttributes : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingKeylessAndPrimaryKeyAttributes entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>
                The entity type '{entity}' has both [Keyless] and [PrimaryKey] attributes; one must be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingPropertyOrNavigation">
      <MemberSignature Language="C#" Value="public static string ConflictingPropertyOrNavigation (object member, object entityType, object conflictingEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingPropertyOrNavigation(object member, object entityType, object conflictingEntityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingPropertyOrNavigation(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingPropertyOrNavigation (member As Object, entityType As Object, conflictingEntityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member ConflictingPropertyOrNavigation : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingPropertyOrNavigation (member, entityType, conflictingEntityType)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string ConflictingPropertyOrNavigation (object? member, object? entityType, object? conflictingEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string ConflictingPropertyOrNavigation (object? member, object? type, object? conflictingType);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingPropertyOrNavigation(object member, object type, object conflictingType) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingPropertyOrNavigation (member As Object, type As Object, conflictingType As Object) As String" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member ConflictingPropertyOrNavigation : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingPropertyOrNavigation (member, type, conflictingType)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="conflictingEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="conflictingType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="member">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="type">To be added.</param>
        <param name="conflictingEntityType">To be added.</param>
        <param name="conflictingType">To be added.</param>
        <summary>
                The property or navigation '{member}' cannot be added to the '{type}' type because a property or navigation with the same name already exists on the '{conflictingType}' type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingRelationshipNavigation">
      <MemberSignature Language="C#" Value="public static string ConflictingRelationshipNavigation (object newPrincipalNavigationSpecification, object newDependentNavigationSpecification, object existingPrincipalNavigationSpecification, object existingDependentNavigationSpecification);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingRelationshipNavigation(object newPrincipalNavigationSpecification, object newDependentNavigationSpecification, object existingPrincipalNavigationSpecification, object existingDependentNavigationSpecification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingRelationshipNavigation(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingRelationshipNavigation (newPrincipalNavigationSpecification As Object, newDependentNavigationSpecification As Object, existingPrincipalNavigationSpecification As Object, existingDependentNavigationSpecification As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingRelationshipNavigation : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingRelationshipNavigation (newPrincipalNavigationSpecification, newDependentNavigationSpecification, existingPrincipalNavigationSpecification, existingDependentNavigationSpecification)" />
      <MemberSignature Language="C#" Value="public static string ConflictingRelationshipNavigation (object? newPrincipalNavigationSpecification, object? newDependentNavigationSpecification, object? existingPrincipalNavigationSpecification, object? existingDependentNavigationSpecification);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPrincipalNavigationSpecification" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="newDependentNavigationSpecification" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="existingPrincipalNavigationSpecification" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="existingDependentNavigationSpecification" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="newPrincipalNavigationSpecification">To be added.</param>
        <param name="newDependentNavigationSpecification">To be added.</param>
        <param name="existingPrincipalNavigationSpecification">To be added.</param>
        <param name="existingDependentNavigationSpecification">To be added.</param>
        <summary>
                Cannot create a relationship between '{newPrincipalNavigationSpecification}' and '{newDependentNavigationSpecification}' because a relationship already exists between '{existingPrincipalNavigationSpecification}' and '{existingDependentNavigationSpecification}'. Navigations can only participate in a single relationship. If you want to override an existing relationship call 'Ignore' on the navigation '{newDependentNavigationSpecification}' first in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingRelationshipNavigation">
      <MemberSignature Language="C#" Value="public static string ConflictingRelationshipNavigation (object newPrincipalEntityType, object newPrincipalNavigation, object newDependentEntityType, object newDependentNavigation, object existingPrincipalEntityType, object existingPrincipalNavigation, object existingDependentEntityType, object existingDependentNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingRelationshipNavigation(object newPrincipalEntityType, object newPrincipalNavigation, object newDependentEntityType, object newDependentNavigation, object existingPrincipalEntityType, object existingPrincipalNavigation, object existingDependentEntityType, object existingDependentNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingRelationshipNavigation(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingRelationshipNavigation (newPrincipalEntityType As Object, newPrincipalNavigation As Object, newDependentEntityType As Object, newDependentNavigation As Object, existingPrincipalEntityType As Object, existingPrincipalNavigation As Object, existingDependentEntityType As Object, existingDependentNavigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingRelationshipNavigation : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConflictingRelationshipNavigation (newPrincipalEntityType, newPrincipalNavigation, newDependentEntityType, newDependentNavigation, existingPrincipalEntityType, existingPrincipalNavigation, existingDependentEntityType, existingDependentNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPrincipalEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="newPrincipalNavigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="newDependentEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="newDependentNavigation" Type="System.Object" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="existingPrincipalEntityType" Type="System.Object" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="existingPrincipalNavigation" Type="System.Object" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="existingDependentEntityType" Type="System.Object" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="existingDependentNavigation" Type="System.Object" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="newPrincipalEntityType">To be added.</param>
        <param name="newPrincipalNavigation">To be added.</param>
        <param name="newDependentEntityType">To be added.</param>
        <param name="newDependentNavigation">To be added.</param>
        <param name="existingPrincipalEntityType">To be added.</param>
        <param name="existingPrincipalNavigation">To be added.</param>
        <param name="existingDependentEntityType">To be added.</param>
        <param name="existingDependentNavigation">To be added.</param>
        <summary>
                Cannot create a relationship between '{newPrincipalEntityType}.{newPrincipalNavigation}' and '{newDependentEntityType}.{newDependentNavigation}', because there already is a relationship between '{existingPrincipalEntityType}.{existingPrincipalNavigation}' and '{existingDependentEntityType}.{existingDependentNavigation}'. Navigation properties can only participate in a single relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructorBindingFailed">
      <MemberSignature Language="C#" Value="public static string ConstructorBindingFailed (object failedBinds, object parameters);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConstructorBindingFailed(object failedBinds, object parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConstructorBindingFailed(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConstructorBindingFailed (failedBinds As Object, parameters As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConstructorBindingFailed : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConstructorBindingFailed (failedBinds, parameters)" />
      <MemberSignature Language="C#" Value="public static string ConstructorBindingFailed (object? failedBinds, object? parameters);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failedBinds" Type="System.Object" />
        <Parameter Name="parameters" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="failedBinds">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>
                Cannot bind '{failedBinds}' in '{parameters}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructorConflict">
      <MemberSignature Language="C#" Value="public static string ConstructorConflict (object firstConstructor, object secondConstructor);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConstructorConflict(object firstConstructor, object secondConstructor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConstructorConflict(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConstructorConflict (firstConstructor As Object, secondConstructor As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConstructorConflict : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConstructorConflict (firstConstructor, secondConstructor)" />
      <MemberSignature Language="C#" Value="public static string ConstructorConflict (object? firstConstructor, object? secondConstructor);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstConstructor" Type="System.Object" />
        <Parameter Name="secondConstructor" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="firstConstructor">To be added.</param>
        <param name="secondConstructor">To be added.</param>
        <summary>
                The constructors '{firstConstructor}' and '{secondConstructor}' have the same number of parameters, and can both be used by Entity Framework. The constructor to be used must be configured in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructorNotFound">
      <MemberSignature Language="C#" Value="public static string ConstructorNotFound (object entityType, object constructors);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConstructorNotFound(object entityType, object constructors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConstructorNotFound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConstructorNotFound (entityType As Object, constructors As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConstructorNotFound : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConstructorNotFound (entityType, constructors)" />
      <MemberSignature Language="C#" Value="public static string ConstructorNotFound (object? entityType, object? constructors);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="constructors" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="constructors">To be added.</param>
        <summary>
                No suitable constructor was found for entity type '{entityType}'. The following constructors had parameters that could not be bound to properties of the entity type: {constructors}Note that only mapped properties can be bound to constructor parameters. Navigations to related entities, including references to owned types, cannot be bound.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposed">
      <MemberSignature Language="C#" Value="public static string ContextDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ContextDisposed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ContextDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextDisposed As String" />
      <MemberSignature Language="F#" Value="static member ContextDisposed : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ContextDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Cannot access a disposed context instance. A common cause of this error is disposing a context instance that was resolved from dependency injection and then later trying to use the same context instance elsewhere in your application. This may occur if you are calling 'Dispose' on the context instance, or wrapping it in a using statement. If you are using dependency injection, you should let the dependency injection container take care of disposing context instances.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConventionsInfiniteLoop">
      <MemberSignature Language="C#" Value="public static string ConventionsInfiniteLoop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ConventionsInfiniteLoop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConventionsInfiniteLoop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConventionsInfiniteLoop As String" />
      <MemberSignature Language="F#" Value="static member ConventionsInfiniteLoop : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConventionsInfiniteLoop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The convention invocations have reached the recursion limit. This is likely an issue in Entity Framework, please file an issue at https://go.microsoft.com/fwlink/?linkid=2142044.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterBadType">
      <MemberSignature Language="C#" Value="public static string ConverterBadType (object converter, object type, object allowed);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConverterBadType(object converter, object type, object allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConverterBadType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConverterBadType (converter As Object, type As Object, allowed As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConverterBadType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConverterBadType (converter, type, allowed)" />
      <MemberSignature Language="C#" Value="public static string ConverterBadType (object? converter, object? type, object? allowed);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="System.Object" />
        <Parameter Name="type" Type="System.Object" />
        <Parameter Name="allowed" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="converter">To be added.</param>
        <param name="type">To be added.</param>
        <param name="allowed">To be added.</param>
        <summary>
                The value converter '{converter}' cannot be used with type '{type}'. This converter can only be used with {allowed}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterPropertyMismatch">
      <MemberSignature Language="C#" Value="public static string ConverterPropertyMismatch (object converterType, object entityType, object propertyName, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConverterPropertyMismatch(object converterType, object entityType, object propertyName, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConverterPropertyMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConverterPropertyMismatch (converterType As Object, entityType As Object, propertyName As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConverterPropertyMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConverterPropertyMismatch (converterType, entityType, propertyName, propertyType)" />
      <MemberSignature Language="C#" Value="public static string ConverterPropertyMismatch (object? converterType, object? entityType, object? propertyName, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converterType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="converterType">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                Converter for model type '{converterType}' cannot be used for '{entityType}.{propertyName}' because its type is '{propertyType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterPropertyMismatchElement">
      <MemberSignature Language="C#" Value="public static string ConverterPropertyMismatchElement (object? converterType, object? entityType, object? propertyName, object? elementType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConverterPropertyMismatchElement(object converterType, object entityType, object propertyName, object elementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConverterPropertyMismatchElement(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConverterPropertyMismatchElement (converterType As Object, entityType As Object, propertyName As Object, elementType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConverterPropertyMismatchElement : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConverterPropertyMismatchElement (converterType, entityType, propertyName, elementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converterType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="elementType" Type="System.Object" Index="3" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="converterType">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="elementType">To be added.</param>
        <summary>
                Converter for element type '{converterType}' cannot be used for '{entityType}.{propertyName}' because its element type is '{elementType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertersCannotBeComposed">
      <MemberSignature Language="C#" Value="public static string ConvertersCannotBeComposed (object typeOneIn, object typeOneOut, object typeTwoIn, object typeTwoOut);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertersCannotBeComposed(object typeOneIn, object typeOneOut, object typeTwoIn, object typeTwoOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConvertersCannotBeComposed(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertersCannotBeComposed (typeOneIn As Object, typeOneOut As Object, typeTwoIn As Object, typeTwoOut As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConvertersCannotBeComposed : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ConvertersCannotBeComposed (typeOneIn, typeOneOut, typeTwoIn, typeTwoOut)" />
      <MemberSignature Language="C#" Value="public static string ConvertersCannotBeComposed (object? typeOneIn, object? typeOneOut, object? typeTwoIn, object? typeTwoOut);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeOneIn" Type="System.Object" />
        <Parameter Name="typeOneOut" Type="System.Object" />
        <Parameter Name="typeTwoIn" Type="System.Object" />
        <Parameter Name="typeTwoOut" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeOneIn">To be added.</param>
        <param name="typeOneOut">To be added.</param>
        <param name="typeTwoIn">To be added.</param>
        <param name="typeTwoOut">To be added.</param>
        <summary>
                Cannot compose converter from '{typeOneIn}' to '{typeOneOut}' with converter from '{typeTwoIn}' to '{typeTwoOut}' because the output type of the first converter doesn't match the input type of the second converter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomMetadata">
      <MemberSignature Language="C#" Value="public static string CustomMetadata (object method, object interfaceType, object concreteType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CustomMetadata(object method, object interfaceType, object concreteType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CustomMetadata(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomMetadata (method As Object, interfaceType As Object, concreteType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CustomMetadata : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.CustomMetadata (method, interfaceType, concreteType)" />
      <MemberSignature Language="C#" Value="public static string CustomMetadata (object? method, object? interfaceType, object? concreteType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="interfaceType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="concreteType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <param name="interfaceType">To be added.</param>
        <param name="concreteType">To be added.</param>
        <summary>
                The extension method '{method}' is being used with a custom implementation of '{interfaceType}'. Use of custom implementations of the Entity Framework metadata interfaces is not supported, consider deriving from '{concreteType}' instead. Please contact the Entity Framework team if you have a compelling case for a custom implementation of the metadata interfaces so that we can consider ways to achieve this.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindingToLocalWithIListSource">
      <MemberSignature Language="C#" Value="public static string DataBindingToLocalWithIListSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DataBindingToLocalWithIListSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DataBindingToLocalWithIListSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DataBindingToLocalWithIListSource As String" />
      <MemberSignature Language="F#" Value="static member DataBindingToLocalWithIListSource : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DataBindingToLocalWithIListSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Data binding directly to 'DbSet.Local' is not supported since it does not provide a stable ordering. For WPF, bind to 'DbSet.Local.ToObservableCollection'. For WinForms, bind to 'DbSet.Local.ToBindingList'. For ASP.NET WebForms, bind to 'DbSet.ToList' or use Model Binding.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindingWithIListSource">
      <MemberSignature Language="C#" Value="public static string DataBindingWithIListSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DataBindingWithIListSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DataBindingWithIListSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DataBindingWithIListSource As String" />
      <MemberSignature Language="F#" Value="static member DataBindingWithIListSource : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DataBindingWithIListSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Data binding directly to a store query is not supported. Instead populate a DbSet with data, for example by calling 'Load' on the DbSet, and then bind to local data to avoid sending a query to the database each time the databound control iterates the data. For WPF, bind to 'DbSet.Local.ToObservableCollection'. For WinForms, bind to 'DbSet.Local.ToBindingList'. For ASP.NET WebForms, bind to 'DbSet.ToList' or use Model Binding.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbContextMissingConstructor">
      <MemberSignature Language="C#" Value="public static string DbContextMissingConstructor (object contextType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DbContextMissingConstructor(object contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DbContextMissingConstructor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DbContextMissingConstructor (contextType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DbContextMissingConstructor : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DbContextMissingConstructor contextType" />
      <MemberSignature Language="C#" Value="public static string DbContextMissingConstructor (object? contextType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contextType">To be added.</param>
        <summary>
                'AddDbContext' was called with configuration, but the context type '{contextType}' only declares a parameterless constructor. This means that the configuration passed to 'AddDbContext' will never be used. If configuration is passed to 'AddDbContext', then '{contextType}' should declare a constructor that accepts a DbContextOptions&lt;{contextType}&gt; and must pass it to the base constructor for DbContext.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbSetIncorrectGenericType">
      <MemberSignature Language="C#" Value="public static string DbSetIncorrectGenericType (object entityType, object entityClrType, object genericType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DbSetIncorrectGenericType(object entityType, object entityClrType, object genericType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DbSetIncorrectGenericType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DbSetIncorrectGenericType (entityType As Object, entityClrType As Object, genericType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DbSetIncorrectGenericType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DbSetIncorrectGenericType (entityType, entityClrType, genericType)" />
      <MemberSignature Language="C#" Value="public static string DbSetIncorrectGenericType (object? entityType, object? entityClrType, object? genericType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityClrType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="genericType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="entityClrType">To be added.</param>
        <param name="genericType">To be added.</param>
        <summary>
                Cannot create DbSet for entity type '{entityType}' since it is of type '{entityClrType}' but the generic type provided is of type '{genericType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugViewError">
      <MemberSignature Language="C#" Value="public static string DebugViewError (object? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DebugViewError(object message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DebugViewError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DebugViewError (message As Object) As String" />
      <MemberSignature Language="F#" Value="static member DebugViewError : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DebugViewError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>
                Debug view threw {message}. Please report this at https://github.com/dotnet/efcore
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugViewQueryExpressionError">
      <MemberSignature Language="C#" Value="public static string DebugViewQueryExpressionError (object? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DebugViewQueryExpressionError(object message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DebugViewQueryExpressionError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DebugViewQueryExpressionError (message As Object) As String" />
      <MemberSignature Language="F#" Value="static member DebugViewQueryExpressionError : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DebugViewQueryExpressionError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>
                Error creating query expression: {message}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugViewQueryStringError">
      <MemberSignature Language="C#" Value="public static string DebugViewQueryStringError (object? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DebugViewQueryStringError(object message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DebugViewQueryStringError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DebugViewQueryStringError (message As Object) As String" />
      <MemberSignature Language="F#" Value="static member DebugViewQueryStringError : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DebugViewQueryStringError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>
                Error creating query string: {message}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMethodInvoked">
      <MemberSignature Language="C#" Value="public static string DefaultMethodInvoked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultMethodInvoked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DefaultMethodInvoked" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMethodInvoked As String" />
      <MemberSignature Language="F#" Value="static member DefaultMethodInvoked : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DefaultMethodInvoked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The EF.Default&lt;T&gt; property may only be used within Entity Framework ExecuteUpdate method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefiningQueryWithKey">
      <MemberSignature Language="C#" Value="public static string DefiningQueryWithKey (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DefiningQueryWithKey(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DefiningQueryWithKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefiningQueryWithKey (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DefiningQueryWithKey : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DefiningQueryWithKey entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot use 'ToQuery' to create a defining query because it also defines a primary key. Defining queries can only be used to back entity types without keys.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBehaviorAttributeNotOnNavigationProperty">
      <MemberSignature Language="C#" Value="public static string DeleteBehaviorAttributeNotOnNavigationProperty (object? type, object? propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DeleteBehaviorAttributeNotOnNavigationProperty(object type, object propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DeleteBehaviorAttributeNotOnNavigationProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteBehaviorAttributeNotOnNavigationProperty (type As Object, propertyName As Object) As String" />
      <MemberSignature Language="F#" Value="static member DeleteBehaviorAttributeNotOnNavigationProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DeleteBehaviorAttributeNotOnNavigationProperty (type, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                The [DeleteBehavior] attribute may only be specified on navigation properties, and is not supported on properties making up the foreign key. Remove the attribute from '{type}.{propertyName}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBehaviorAttributeNotOnNavigationProperty">
      <MemberSignature Language="C#" Value="public static string DeleteBehaviorAttributeNotOnNavigationProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DeleteBehaviorAttributeNotOnNavigationProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DeleteBehaviorAttributeNotOnNavigationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteBehaviorAttributeNotOnNavigationProperty As String" />
      <MemberSignature Language="F#" Value="static member DeleteBehaviorAttributeNotOnNavigationProperty : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DeleteBehaviorAttributeNotOnNavigationProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The [DeleteBehavior] attribute may only be specified on navigation properties, and is not supported not on properties making up the foreign key.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBehaviorAttributeOnPrincipalProperty">
      <MemberSignature Language="C#" Value="public static string DeleteBehaviorAttributeOnPrincipalProperty (object? entityType, object? navigationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DeleteBehaviorAttributeOnPrincipalProperty(object entityType, object navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DeleteBehaviorAttributeOnPrincipalProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteBehaviorAttributeOnPrincipalProperty (entityType As Object, navigationName As Object) As String" />
      <MemberSignature Language="F#" Value="static member DeleteBehaviorAttributeOnPrincipalProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DeleteBehaviorAttributeOnPrincipalProperty (entityType, navigationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="navigationName" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigationName">To be added.</param>
        <summary>
                The [DeleteBehavior] attribute may only be specified on the dependent side of the relationship. Remove the attribute from '{entityType}.{navigationName}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBehaviorAttributeOnPrincipalProperty">
      <MemberSignature Language="C#" Value="public static string DeleteBehaviorAttributeOnPrincipalProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DeleteBehaviorAttributeOnPrincipalProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DeleteBehaviorAttributeOnPrincipalProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteBehaviorAttributeOnPrincipalProperty As String" />
      <MemberSignature Language="F#" Value="static member DeleteBehaviorAttributeOnPrincipalProperty : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DeleteBehaviorAttributeOnPrincipalProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The [DeleteBehavior] attribute may only be specified on dependent side of the relationship.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentEntityTypeNotInRelationship">
      <MemberSignature Language="C#" Value="public static string DependentEntityTypeNotInRelationship (object dependentEntityType, object principalEntityType, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DependentEntityTypeNotInRelationship(object dependentEntityType, object principalEntityType, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DependentEntityTypeNotInRelationship(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DependentEntityTypeNotInRelationship (dependentEntityType As Object, principalEntityType As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DependentEntityTypeNotInRelationship : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DependentEntityTypeNotInRelationship (dependentEntityType, principalEntityType, entityType)" />
      <MemberSignature Language="C#" Value="public static string DependentEntityTypeNotInRelationship (object? dependentEntityType, object? principalEntityType, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityType" Type="System.Object" />
        <Parameter Name="principalEntityType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentEntityType">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                You are configuring a relationship between '{dependentEntityType}' and '{principalEntityType}' but have specified a foreign key on '{entityType}'. The foreign key must be defined on a type that is part of the relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedEntityCannotBeKeyless">
      <MemberSignature Language="C#" Value="public static string DerivedEntityCannotBeKeyless (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DerivedEntityCannotBeKeyless(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedEntityCannotBeKeyless(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DerivedEntityCannotBeKeyless (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DerivedEntityCannotBeKeyless : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedEntityCannotBeKeyless entityType" />
      <MemberSignature Language="C#" Value="public static string DerivedEntityCannotBeKeyless (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Unable to set a base type for entity type '{entityType}' because it has been configured as keyless. For more information on keyless entity types, see https://go.microsoft.com/fwlink/?linkid=2141943.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedEntityCannotHaveKeys">
      <MemberSignature Language="C#" Value="public static string DerivedEntityCannotHaveKeys (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DerivedEntityCannotHaveKeys(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedEntityCannotHaveKeys(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DerivedEntityCannotHaveKeys (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DerivedEntityCannotHaveKeys : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedEntityCannotHaveKeys entityType" />
      <MemberSignature Language="C#" Value="public static string DerivedEntityCannotHaveKeys (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Unable to set a base type for entity type '{entityType}' because it has one or more keys defined. Only root types can have keys.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedEntityOwnershipMismatch">
      <MemberSignature Language="C#" Value="public static string DerivedEntityOwnershipMismatch (object? baseEntityType, object? derivedEntityType, object? ownedEntityType, object? nonOwnedEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DerivedEntityOwnershipMismatch(object baseEntityType, object derivedEntityType, object ownedEntityType, object nonOwnedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedEntityOwnershipMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DerivedEntityOwnershipMismatch (baseEntityType As Object, derivedEntityType As Object, ownedEntityType As Object, nonOwnedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DerivedEntityOwnershipMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedEntityOwnershipMismatch (baseEntityType, derivedEntityType, ownedEntityType, nonOwnedEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="derivedEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="ownedEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="nonOwnedEntityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="baseEntityType">To be added.</param>
        <param name="derivedEntityType">To be added.</param>
        <param name="ownedEntityType">To be added.</param>
        <param name="nonOwnedEntityType">To be added.</param>
        <summary>
                Unable to set '{baseEntityType}' as the base type for entity type '{derivedEntityType}' because '{ownedEntityType}' is configured as owned, while '{nonOwnedEntityType}' is non-owned. All entity types in a hierarchy need to have the same ownership status. See https://aka.ms/efcore-docs-owned for more information and examples.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedEntityTypeHasNoKey">
      <MemberSignature Language="C#" Value="public static string DerivedEntityTypeHasNoKey (object derivedType, object rootType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DerivedEntityTypeHasNoKey(object derivedType, object rootType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedEntityTypeHasNoKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DerivedEntityTypeHasNoKey (derivedType As Object, rootType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DerivedEntityTypeHasNoKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedEntityTypeHasNoKey (derivedType, rootType)" />
      <MemberSignature Language="C#" Value="public static string DerivedEntityTypeHasNoKey (object? derivedType, object? rootType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="derivedType" Type="System.Object" />
        <Parameter Name="rootType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="derivedType">To be added.</param>
        <param name="rootType">To be added.</param>
        <summary>
                '{derivedType}' cannot be configured as keyless because it is a derived type; the root type '{rootType}' must be configured as keyless instead. If you did not intend for '{rootType}' to be included in the model, ensure that it is not referenced by a DbSet property on your context, referenced in a configuration call to ModelBuilder in 'OnModelCreating', or referenced from a navigation on a type that is included in the model. For more information on keyless entity types, see https://go.microsoft.com/fwlink/?linkid=2141943.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedEntityTypeKey">
      <MemberSignature Language="C#" Value="public static string DerivedEntityTypeKey (object derivedType, object rootType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DerivedEntityTypeKey(object derivedType, object rootType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedEntityTypeKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DerivedEntityTypeKey (derivedType As Object, rootType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DerivedEntityTypeKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedEntityTypeKey (derivedType, rootType)" />
      <MemberSignature Language="C#" Value="public static string DerivedEntityTypeKey (object? derivedType, object? rootType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="derivedType" Type="System.Object" />
        <Parameter Name="rootType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="derivedType">To be added.</param>
        <param name="rootType">To be added.</param>
        <summary>
                A key cannot be configured on '{derivedType}' because it is a derived type. The key must be configured on the root type '{rootType}'. If you did not intend for '{rootType}' to be included in the model, ensure that it is not referenced by a DbSet property on your context, referenced in a configuration call to ModelBuilder, or referenced from a navigation on a type that is included in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedTypeDefiningQuery">
      <MemberSignature Language="C#" Value="public static string DerivedTypeDefiningQuery (object entityType, object baseType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DerivedTypeDefiningQuery(object entityType, object baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedTypeDefiningQuery(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DerivedTypeDefiningQuery (entityType As Object, baseType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DerivedTypeDefiningQuery : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DerivedTypeDefiningQuery (entityType, baseType)" />
      <MemberSignature Language="C#" Value="public static string DerivedTypeDefiningQuery (object? entityType, object? baseType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot have a defining query because it is derived from '{baseType}'. Only base entity types can have a defining query.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscriminatorEntityTypeNotDerived">
      <MemberSignature Language="C#" Value="public static string DiscriminatorEntityTypeNotDerived (object entityType, object rootEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DiscriminatorEntityTypeNotDerived(object entityType, object rootEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DiscriminatorEntityTypeNotDerived(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DiscriminatorEntityTypeNotDerived (entityType As Object, rootEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DiscriminatorEntityTypeNotDerived : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DiscriminatorEntityTypeNotDerived (entityType, rootEntityType)" />
      <MemberSignature Language="C#" Value="public static string DiscriminatorEntityTypeNotDerived (object? entityType, object? rootEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="rootEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="rootEntityType">To be added.</param>
        <summary>
                Cannot configure the discriminator value for entity type '{entityType}' because it doesn't derive from '{rootEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscriminatorPropertyMustBeOnRoot">
      <MemberSignature Language="C#" Value="public static string DiscriminatorPropertyMustBeOnRoot (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DiscriminatorPropertyMustBeOnRoot(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DiscriminatorPropertyMustBeOnRoot(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DiscriminatorPropertyMustBeOnRoot (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DiscriminatorPropertyMustBeOnRoot : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DiscriminatorPropertyMustBeOnRoot entityType" />
      <MemberSignature Language="C#" Value="public static string DiscriminatorPropertyMustBeOnRoot (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                A discriminator property cannot be set for the entity type '{entityType}' because it is not the root of an inheritance hierarchy.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscriminatorPropertyNotFound">
      <MemberSignature Language="C#" Value="public static string DiscriminatorPropertyNotFound (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DiscriminatorPropertyNotFound(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DiscriminatorPropertyNotFound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DiscriminatorPropertyNotFound (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DiscriminatorPropertyNotFound : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DiscriminatorPropertyNotFound (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string DiscriminatorPropertyNotFound (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Unable to set property '{property}' as a discriminator for entity type '{entityType}' because it is not a property of '{entityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscriminatorValueIncompatible">
      <MemberSignature Language="C#" Value="public static string DiscriminatorValueIncompatible (object value, object discriminator, object discriminatorType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DiscriminatorValueIncompatible(object value, object discriminator, object discriminatorType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DiscriminatorValueIncompatible(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DiscriminatorValueIncompatible (value As Object, discriminator As Object, discriminatorType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="static member DiscriminatorValueIncompatible : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DiscriminatorValueIncompatible (value, discriminator, discriminatorType)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public static string DiscriminatorValueIncompatible (object? value, object? discriminator, object? discriminatorType);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public static string DiscriminatorValueIncompatible (object? value, object? entityType, object? discriminatorType);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DiscriminatorValueIncompatible(object value, object entityType, object discriminatorType) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DiscriminatorValueIncompatible (value As Object, entityType As Object, discriminatorType As Object) As String" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member DiscriminatorValueIncompatible : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DiscriminatorValueIncompatible (value, entityType, discriminatorType)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" />
        <Parameter Name="discriminator" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="discriminatorType" Type="System.Object" Index="2" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="discriminator">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="discriminatorType">To be added.</param>
        <summary>
                The discriminator value '{value}' for the entity type '{entityType}' cannot be set because it is not assignable to the discriminator property of type '{discriminatorType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateAnnotation">
      <MemberSignature Language="C#" Value="public static string DuplicateAnnotation (object annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateAnnotation(object annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateAnnotation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateAnnotation (annotation As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateAnnotation : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateAnnotation annotation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotation" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="annotation">To be added.</param>
        <summary>
                The annotation '{annotation}' cannot be added because an annotation with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateAnnotation">
      <MemberSignature Language="C#" Value="public static string DuplicateAnnotation (object annotation, object annotatable);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateAnnotation(object annotation, object annotatable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateAnnotation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateAnnotation (annotation As Object, annotatable As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateAnnotation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateAnnotation (annotation, annotatable)" />
      <MemberSignature Language="C#" Value="public static string DuplicateAnnotation (object? annotation, object? annotatable);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotation" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="annotatable" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="annotation">To be added.</param>
        <param name="annotatable">To be added.</param>
        <summary>
                The annotation '{annotation}' cannot be added because an annotation with the same name already exists on the object {annotatable}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateComplexType">
      <MemberSignature Language="C#" Value="public static string DuplicateComplexType (object? complexType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateComplexType(object complexType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateComplexType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateComplexType (complexType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateComplexType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateComplexType complexType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complexType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="complexType">To be added.</param>
        <summary>
                The complex type '{complexType}' cannot be added to the model because a complex type with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateDiscriminatorValue">
      <MemberSignature Language="C#" Value="public static string DuplicateDiscriminatorValue (object entityType1, object discriminatorValue, object entityType2);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateDiscriminatorValue(object entityType1, object discriminatorValue, object entityType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateDiscriminatorValue(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateDiscriminatorValue (entityType1 As Object, discriminatorValue As Object, entityType2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateDiscriminatorValue : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateDiscriminatorValue (entityType1, discriminatorValue, entityType2)" />
      <MemberSignature Language="C#" Value="public static string DuplicateDiscriminatorValue (object? entityType1, object? discriminatorValue, object? entityType2);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" />
        <Parameter Name="discriminatorValue" Type="System.Object" />
        <Parameter Name="entityType2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="discriminatorValue">To be added.</param>
        <param name="entityType2">To be added.</param>
        <summary>
                The discriminator value for '{entityType1}' is '{discriminatorValue}' which is the same for '{entityType2}'. Every concrete entity type in the hierarchy must have a unique discriminator value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateEntityType">
      <MemberSignature Language="C#" Value="public static string DuplicateEntityType (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateEntityType entityType" />
      <MemberSignature Language="C#" Value="public static string DuplicateEntityType (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be added to the model because an entity type with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateForeignKey">
      <MemberSignature Language="C#" Value="public static string DuplicateForeignKey (object foreignKey, object entityType, object duplicateEntityType, object key, object principalType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateForeignKey(object foreignKey, object entityType, object duplicateEntityType, object key, object principalType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateForeignKey(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateForeignKey (foreignKey As Object, entityType As Object, duplicateEntityType As Object, key As Object, principalType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member DuplicateForeignKey : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateForeignKey (foreignKey, entityType, duplicateEntityType, key, principalType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string DuplicateForeignKey (object foreignKeyProperties, object entityType, object duplicateEntityType, object keyProperties, object principalType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateForeignKey(object foreignKeyProperties, object entityType, object duplicateEntityType, object keyProperties, object principalType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateForeignKey (foreignKeyProperties As Object, entityType As Object, duplicateEntityType As Object, keyProperties As Object, principalType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member DuplicateForeignKey : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateForeignKey (foreignKeyProperties, entityType, duplicateEntityType, keyProperties, principalType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string DuplicateForeignKey (object? foreignKeyProperties, object? entityType, object? duplicateEntityType, object? keyProperties, object? principalType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
        <Parameter Name="duplicateEntityType" Type="System.Object" Index="2" />
        <Parameter Name="key" Type="System.Object" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="keyProperties" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalType" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <param name="key">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The foreign key {foreignKeyProperties} cannot be added to the entity type '{entityType}' because a foreign key on the same properties already exists on entity type '{duplicateEntityType}' and also targets the key {keyProperties} on '{principalType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateIndex">
      <MemberSignature Language="C#" Value="public static string DuplicateIndex (object index, object entityType, object duplicateEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateIndex(object index, object entityType, object duplicateEntityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateIndex(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateIndex (index As Object, entityType As Object, duplicateEntityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member DuplicateIndex : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateIndex (index, entityType, duplicateEntityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string DuplicateIndex (object indexProperties, object entityType, object duplicateEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateIndex(object indexProperties, object entityType, object duplicateEntityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateIndex (indexProperties As Object, entityType As Object, duplicateEntityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member DuplicateIndex : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateIndex (indexProperties, entityType, duplicateEntityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string DuplicateIndex (object? indexProperties, object? entityType, object? duplicateEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="indexProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
        <Parameter Name="duplicateEntityType" Type="System.Object" Index="2" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="indexProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <summary>
                The index {indexProperties} cannot be added to the entity type '{entityType}' because an unnamed index on the same properties already exists on entity type '{duplicateEntityType}'. Consider adding a name for one of the indexes in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateKey">
      <MemberSignature Language="C#" Value="public static string DuplicateKey (object key, object entityType, object duplicateEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateKey(object key, object entityType, object duplicateEntityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateKey(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateKey (key As Object, entityType As Object, duplicateEntityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member DuplicateKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateKey (key, entityType, duplicateEntityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string DuplicateKey (object keyProperties, object entityType, object duplicateEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateKey(object keyProperties, object entityType, object duplicateEntityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateKey (keyProperties As Object, entityType As Object, duplicateEntityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member DuplicateKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateKey (keyProperties, entityType, duplicateEntityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string DuplicateKey (object? keyProperties, object? entityType, object? duplicateEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="keyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
        <Parameter Name="duplicateEntityType" Type="System.Object" Index="2" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <summary>
                The key {keyProperties} cannot be added to the entity type '{entityType}' because a key on the same properties already exists on entity type '{duplicateEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateNamedIndex">
      <MemberSignature Language="C#" Value="public static string DuplicateNamedIndex (object indexName, object indexProperties, object entityType, object duplicateEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateNamedIndex(object indexName, object indexProperties, object entityType, object duplicateEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateNamedIndex(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateNamedIndex (indexName As Object, indexProperties As Object, entityType As Object, duplicateEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateNamedIndex : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateNamedIndex (indexName, indexProperties, entityType, duplicateEntityType)" />
      <MemberSignature Language="C#" Value="public static string DuplicateNamedIndex (object? indexName, object? indexProperties, object? entityType, object? duplicateEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="indexProperties" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="duplicateEntityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="indexName">To be added.</param>
        <param name="indexProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <summary>
                The index named '{indexName}' defined on properties {indexProperties} cannot be added to the entity type '{entityType}' because an index with the same name already exists on entity type '{duplicateEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateNavigationsOnBase">
      <MemberSignature Language="C#" Value="public static string DuplicateNavigationsOnBase (object entityType, object baseType, object navigations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateNavigationsOnBase(object entityType, object baseType, object navigations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateNavigationsOnBase(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateNavigationsOnBase (entityType As Object, baseType As Object, navigations As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateNavigationsOnBase : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateNavigationsOnBase (entityType, baseType, navigations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="baseType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="navigations" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseType">To be added.</param>
        <param name="navigations">To be added.</param>
        <summary>
                The type '{entityType}' cannot have base type '{baseType}' because both types include the navigations: {navigations}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicatePropertiesOnBase">
      <MemberSignature Language="C#" Value="public static string DuplicatePropertiesOnBase (object entityType, object baseType, object derivedPropertyType, object derivedProperty, object basePropertyType, object baseProperty);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicatePropertiesOnBase(object entityType, object baseType, object derivedPropertyType, object derivedProperty, object basePropertyType, object baseProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicatePropertiesOnBase(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicatePropertiesOnBase (entityType As Object, baseType As Object, derivedPropertyType As Object, derivedProperty As Object, basePropertyType As Object, baseProperty As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicatePropertiesOnBase : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicatePropertiesOnBase (entityType, baseType, derivedPropertyType, derivedProperty, basePropertyType, baseProperty)" />
      <MemberSignature Language="C#" Value="public static string DuplicatePropertiesOnBase (object? entityType, object? baseType, object? derivedPropertyType, object? derivedProperty, object? basePropertyType, object? baseProperty);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseType" Type="System.Object" />
        <Parameter Name="derivedPropertyType" Type="System.Object" />
        <Parameter Name="derivedProperty" Type="System.Object" />
        <Parameter Name="basePropertyType" Type="System.Object" />
        <Parameter Name="baseProperty" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseType">To be added.</param>
        <param name="derivedPropertyType">To be added.</param>
        <param name="derivedProperty">To be added.</param>
        <param name="basePropertyType">To be added.</param>
        <param name="baseProperty">To be added.</param>
        <summary>
                The type '{entityType}' cannot have base type '{baseType}' because the properties '{derivedPropertyType}.{derivedProperty}' and '{basePropertyType}.{baseProperty}' are in conflict.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicatePropertyInForeignKey">
      <MemberSignature Language="C#" Value="public static string DuplicatePropertyInForeignKey (object propertyList, object property);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicatePropertyInForeignKey(object propertyList, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicatePropertyInForeignKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicatePropertyInForeignKey (propertyList As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicatePropertyInForeignKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicatePropertyInForeignKey (propertyList, property)" />
      <MemberSignature Language="C#" Value="public static string DuplicatePropertyInForeignKey (object? propertyList, object? property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyList" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyList">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The properties {propertyList} cannot be used for a foreign key, because they contain a duplicate: '{property}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicatePropertyInIndex">
      <MemberSignature Language="C#" Value="public static string DuplicatePropertyInIndex (object propertyList, object property);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicatePropertyInIndex(object propertyList, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicatePropertyInIndex(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicatePropertyInIndex (propertyList As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicatePropertyInIndex : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicatePropertyInIndex (propertyList, property)" />
      <MemberSignature Language="C#" Value="public static string DuplicatePropertyInIndex (object? propertyList, object? property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyList" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyList">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The properties {propertyList} cannot be used for an index, because they contain a duplicate: '{property}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicatePropertyInKey">
      <MemberSignature Language="C#" Value="public static string DuplicatePropertyInKey (object propertyList, object property);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicatePropertyInKey(object propertyList, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicatePropertyInKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicatePropertyInKey (propertyList As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicatePropertyInKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicatePropertyInKey (propertyList, property)" />
      <MemberSignature Language="C#" Value="public static string DuplicatePropertyInKey (object? propertyList, object? property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyList" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyList">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The properties {propertyList} cannot be used for a key, because they contain a duplicate: '{property}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicatePropertyInList">
      <MemberSignature Language="C#" Value="public static string DuplicatePropertyInList (object propertyList, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicatePropertyInList(object propertyList, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicatePropertyInList(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicatePropertyInList (propertyList As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicatePropertyInList : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicatePropertyInList (propertyList, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyList" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="propertyList">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The property list {propertyList} cannot be used, because it contains a duplicate - '{property}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateServicePropertyType">
      <MemberSignature Language="C#" Value="public static string DuplicateServicePropertyType (object property, object serviceType, object entityType, object duplicateName, object duplicateEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateServicePropertyType(object property, object serviceType, object entityType, object duplicateName, object duplicateEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateServicePropertyType(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateServicePropertyType (property As Object, serviceType As Object, entityType As Object, duplicateName As Object, duplicateEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateServicePropertyType : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateServicePropertyType (property, serviceType, entityType, duplicateName, duplicateEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="serviceType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duplicateName" Type="System.Object" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="duplicateEntityType" Type="System.Object" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="serviceType">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateName">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <summary>
                The service property '{property}' of type '{serviceType}' cannot be added to the entity type '{entityType}' because service property '{duplicateName}' of the same type already exists on entity type '{duplicateEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateTrigger">
      <MemberSignature Language="C#" Value="public static string DuplicateTrigger (object? trigger, object? entityType, object? conflictingEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateTrigger(object trigger, object entityType, object conflictingEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateTrigger(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateTrigger (trigger As Object, entityType As Object, conflictingEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateTrigger : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.DuplicateTrigger (trigger, entityType, conflictingEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="conflictingEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="trigger">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="conflictingEntityType">To be added.</param>
        <summary>
                The trigger '{trigger}' cannot be added to the entity type '{entityType}' because another trigger with the same name already exists on entity type '{conflictingEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyComplexType">
      <MemberSignature Language="C#" Value="public static string EmptyComplexType (object? complexType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EmptyComplexType(object complexType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EmptyComplexType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EmptyComplexType (complexType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EmptyComplexType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EmptyComplexType complexType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complexType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="complexType">To be added.</param>
        <summary>
                Complex type '{complexType}' has no properties defines. Configure at least one property or don't include this type in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityEqualityContainsWithCompositeKeyNotSupported">
      <MemberSignature Language="C#" Value="public static string EntityEqualityContainsWithCompositeKeyNotSupported (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityEqualityContainsWithCompositeKeyNotSupported(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityEqualityContainsWithCompositeKeyNotSupported(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityEqualityContainsWithCompositeKeyNotSupported (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityEqualityContainsWithCompositeKeyNotSupported : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityEqualityContainsWithCompositeKeyNotSupported entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Cannot translate a Contains() operator on entity '{entityType}' because it has a composite key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityEqualityOnCompositeKeyEntitySubqueryNotSupported">
      <MemberSignature Language="C#" Value="public static string EntityEqualityOnCompositeKeyEntitySubqueryNotSupported (object comparisonOperator, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityEqualityOnCompositeKeyEntitySubqueryNotSupported(object comparisonOperator, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityEqualityOnCompositeKeyEntitySubqueryNotSupported(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityEqualityOnCompositeKeyEntitySubqueryNotSupported (comparisonOperator As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityEqualityOnCompositeKeyEntitySubqueryNotSupported : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityEqualityOnCompositeKeyEntitySubqueryNotSupported (comparisonOperator, entityType)" />
      <MemberSignature Language="C#" Value="public static string EntityEqualityOnCompositeKeyEntitySubqueryNotSupported (object? comparisonOperator, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparisonOperator" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="comparisonOperator">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Cannot translate '{comparisonOperator}' on a subquery expression of entity type '{entityType}' because it has a composite primary key. See https://go.microsoft.com/fwlink/?linkid=2141942 for information on how to rewrite your query.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityEqualityOnKeylessEntityNotSupported">
      <MemberSignature Language="C#" Value="public static string EntityEqualityOnKeylessEntityNotSupported (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityEqualityOnKeylessEntityNotSupported(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityEqualityOnKeylessEntityNotSupported(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityEqualityOnKeylessEntityNotSupported (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityEqualityOnKeylessEntityNotSupported : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityEqualityOnKeylessEntityNotSupported entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Comparison on entity type '{entityType}' is not supported because it is a keyless entity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityEqualityOnKeylessEntityNotSupported">
      <MemberSignature Language="C#" Value="public static string EntityEqualityOnKeylessEntityNotSupported (object comparisonOperator, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityEqualityOnKeylessEntityNotSupported(object comparisonOperator, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityEqualityOnKeylessEntityNotSupported(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityEqualityOnKeylessEntityNotSupported (comparisonOperator As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityEqualityOnKeylessEntityNotSupported : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityEqualityOnKeylessEntityNotSupported (comparisonOperator, entityType)" />
      <MemberSignature Language="C#" Value="public static string EntityEqualityOnKeylessEntityNotSupported (object? comparisonOperator, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparisonOperator" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="comparisonOperator">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Cannot translate the '{comparisonOperator}' on an expression of entity type '{entityType}' because it is a keyless entity. Consider using entity properties instead. For more information on keyless entity types, see https://go.microsoft.com/fwlink/?linkid=2141943.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityEqualitySubqueryWithCompositeKeyNotSupported">
      <MemberSignature Language="C#" Value="public static string EntityEqualitySubqueryWithCompositeKeyNotSupported (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityEqualitySubqueryWithCompositeKeyNotSupported(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityEqualitySubqueryWithCompositeKeyNotSupported(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityEqualitySubqueryWithCompositeKeyNotSupported (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityEqualitySubqueryWithCompositeKeyNotSupported : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityEqualitySubqueryWithCompositeKeyNotSupported entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This query would cause multiple evaluation of a subquery because entity '{entityType}' has a composite key. Rewrite your query avoiding the subquery.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityRequiresKey">
      <MemberSignature Language="C#" Value="public static string EntityRequiresKey (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityRequiresKey(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityRequiresKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityRequiresKey (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityRequiresKey : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityRequiresKey entityType" />
      <MemberSignature Language="C#" Value="public static string EntityRequiresKey (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' requires a primary key to be defined. If you intended to use a keyless entity type, call 'HasNoKey' in 'OnModelCreating'. For more information on keyless entity types, see https://go.microsoft.com/fwlink/?linkid=2141943.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeInUseByDerived">
      <MemberSignature Language="C#" Value="public static string EntityTypeInUseByDerived (object entityType, object derivedEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeInUseByDerived(object entityType, object derivedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeInUseByDerived(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeInUseByDerived (entityType As Object, derivedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeInUseByDerived : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeInUseByDerived (entityType, derivedEntityType)" />
      <MemberSignature Language="C#" Value="public static string EntityTypeInUseByDerived (object? entityType, object? derivedEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="derivedEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="derivedEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be removed because '{derivedEntityType}' is derived from it. Before the entity type can be removed, all derived entity types must be removed or configured to use a different base entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeInUseByForeignKey">
      <MemberSignature Language="C#" Value="public static string EntityTypeInUseByForeignKey (object entityType, object referencedEntityType, object foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeInUseByForeignKey(object entityType, object referencedEntityType, object foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeInUseByForeignKey(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeInUseByForeignKey (entityType As Object, referencedEntityType As Object, foreignKey As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeInUseByForeignKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeInUseByForeignKey (entityType, referencedEntityType, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="referencedEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKey" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="referencedEntityType">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be removed because it is referencing '{referencedEntityType}' by foreign key {foreignKey}. All foreign keys must be removed before the entity type can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeInUseByReferencingForeignKey">
      <MemberSignature Language="C#" Value="public static string EntityTypeInUseByReferencingForeignKey (object entityType, object foreignKey, object referencingEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeInUseByReferencingForeignKey(object entityType, object foreignKey, object referencingEntityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeInUseByReferencingForeignKey(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeInUseByReferencingForeignKey (entityType As Object, foreignKey As Object, referencingEntityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member EntityTypeInUseByReferencingForeignKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeInUseByReferencingForeignKey (entityType, foreignKey, referencingEntityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string EntityTypeInUseByReferencingForeignKey (object entityType, object foreignKeyProperties, object referencingEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeInUseByReferencingForeignKey(object entityType, object foreignKeyProperties, object referencingEntityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeInUseByReferencingForeignKey (entityType As Object, foreignKeyProperties As Object, referencingEntityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member EntityTypeInUseByReferencingForeignKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeInUseByReferencingForeignKey (entityType, foreignKeyProperties, referencingEntityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string EntityTypeInUseByReferencingForeignKey (object? entityType, object? foreignKeyProperties, object? referencingEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" />
        <Parameter Name="foreignKey" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="referencingEntityType" Type="System.Object" Index="2" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="referencingEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be removed because it is being referenced by foreign key {foreignKeyProperties} on '{referencingEntityType}'. Before the entity type can be removed, all referencing foreign keys must be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeInUseByReferencingSkipNavigation">
      <MemberSignature Language="C#" Value="public static string EntityTypeInUseByReferencingSkipNavigation (object entityType, object skipNavigation, object referencingEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeInUseByReferencingSkipNavigation(object entityType, object skipNavigation, object referencingEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeInUseByReferencingSkipNavigation(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeInUseByReferencingSkipNavigation (entityType As Object, skipNavigation As Object, referencingEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeInUseByReferencingSkipNavigation : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeInUseByReferencingSkipNavigation (entityType, skipNavigation, referencingEntityType)" />
      <MemberSignature Language="C#" Value="public static string EntityTypeInUseByReferencingSkipNavigation (object? entityType, object? skipNavigation, object? referencingEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="skipNavigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="referencingEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="skipNavigation">To be added.</param>
        <param name="referencingEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be removed because it is being referenced by the skip navigation '{skipNavigation}' on '{referencingEntityType}'. Before the entity type can be removed, all referencing skip navigations must be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeModelMismatch">
      <MemberSignature Language="C#" Value="public static string EntityTypeModelMismatch (object firstEntityType, object secondEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeModelMismatch(object firstEntityType, object secondEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeModelMismatch(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeModelMismatch (firstEntityType As Object, secondEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeModelMismatch : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeModelMismatch (firstEntityType, secondEntityType)" />
      <MemberSignature Language="C#" Value="public static string EntityTypeModelMismatch (object? firstEntityType, object? secondEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstEntityType" Type="System.Object" />
        <Parameter Name="secondEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="firstEntityType">To be added.</param>
        <param name="secondEntityType">To be added.</param>
        <summary>
                The entity types '{firstEntityType}' and '{secondEntityType}' do not belong to the same model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeNotFound">
      <MemberSignature Language="C#" Value="public static string EntityTypeNotFound (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeNotFound(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeNotFound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeNotFound (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeNotFound : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeNotFound entityType" />
      <MemberSignature Language="C#" Value="public static string EntityTypeNotFound (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' was not found. Ensure that the entity type has been added to the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeNotInRelationship">
      <MemberSignature Language="C#" Value="public static string EntityTypeNotInRelationship (object entityType, object dependentType, object principalType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeNotInRelationship(object entityType, object dependentType, object principalType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeNotInRelationship(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeNotInRelationship (entityType As Object, dependentType As Object, principalType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeNotInRelationship : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeNotInRelationship (entityType, dependentType, principalType)" />
      <MemberSignature Language="C#" Value="public static string EntityTypeNotInRelationship (object? entityType, object? dependentType, object? principalType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="dependentType" Type="System.Object" />
        <Parameter Name="principalType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="dependentType">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The specified entity type '{entityType}' is invalid. It must be the dependent entity type '{dependentType}', the principal entity type '{principalType}' or an entity type derived from one of them.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeNotInRelationshipStrict">
      <MemberSignature Language="C#" Value="public static string EntityTypeNotInRelationshipStrict (object entityType, object dependentType, object principalType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeNotInRelationshipStrict(object entityType, object dependentType, object principalType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeNotInRelationshipStrict(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeNotInRelationshipStrict (entityType As Object, dependentType As Object, principalType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeNotInRelationshipStrict : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypeNotInRelationshipStrict (entityType, dependentType, principalType)" />
      <MemberSignature Language="C#" Value="public static string EntityTypeNotInRelationshipStrict (object? entityType, object? dependentType, object? principalType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="dependentType" Type="System.Object" />
        <Parameter Name="principalType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="dependentType">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The specified entity type '{entityType}' is invalid. It must be either the dependent entity type '{dependentType}' or the principal entity type '{principalType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypesNotInRelationship">
      <MemberSignature Language="C#" Value="public static string EntityTypesNotInRelationship (object invalidDependentType, object invalidPrincipalType, object dependentType, object principalType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypesNotInRelationship(object invalidDependentType, object invalidPrincipalType, object dependentType, object principalType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypesNotInRelationship(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypesNotInRelationship (invalidDependentType As Object, invalidPrincipalType As Object, dependentType As Object, principalType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypesNotInRelationship : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EntityTypesNotInRelationship (invalidDependentType, invalidPrincipalType, dependentType, principalType)" />
      <MemberSignature Language="C#" Value="public static string EntityTypesNotInRelationship (object? invalidDependentType, object? invalidPrincipalType, object? dependentType, object? principalType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invalidDependentType" Type="System.Object" />
        <Parameter Name="invalidPrincipalType" Type="System.Object" />
        <Parameter Name="dependentType" Type="System.Object" />
        <Parameter Name="principalType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="invalidDependentType">To be added.</param>
        <param name="invalidPrincipalType">To be added.</param>
        <param name="dependentType">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The provided entity types '{invalidDependentType}' and '{invalidPrincipalType}' are invalid. Specify '{dependentType}' and '{principalType}', or entity types in the same hierarchy.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerableResetNotSupported">
      <MemberSignature Language="C#" Value="public static string EnumerableResetNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string EnumerableResetNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EnumerableResetNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnumerableResetNotSupported As String" />
      <MemberSignature Language="F#" Value="static member EnumerableResetNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.EnumerableResetNotSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This enumerator cannot be reset.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorInvalidQueryable">
      <MemberSignature Language="C#" Value="public static string ErrorInvalidQueryable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ErrorInvalidQueryable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorInvalidQueryable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ErrorInvalidQueryable As String" />
      <MemberSignature Language="F#" Value="static member ErrorInvalidQueryable : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorInvalidQueryable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Cannot use multiple context instances within a single query execution. Ensure the query uses a single context instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingProperty">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingProperty (object entityType, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorMaterializingProperty(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorMaterializingProperty (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorMaterializingProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingProperty (entityType, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                An exception occurred while reading a database value for property '{entityType}.{property}'. See the inner exception for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingPropertyInvalidCast">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingPropertyInvalidCast (object entityType, object property, object expectedType, object actualType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorMaterializingPropertyInvalidCast(object entityType, object property, object expectedType, object actualType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingPropertyInvalidCast(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorMaterializingPropertyInvalidCast (entityType As Object, property As Object, expectedType As Object, actualType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorMaterializingPropertyInvalidCast : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingPropertyInvalidCast (entityType, property, expectedType, actualType)" />
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingPropertyInvalidCast (object? entityType, object? property, object? expectedType, object? actualType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="expectedType" Type="System.Object" />
        <Parameter Name="actualType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="expectedType">To be added.</param>
        <param name="actualType">To be added.</param>
        <summary>
                An error occurred while reading a database value for property '{entityType}.{property}'. The expected type was '{expectedType}' but the actual value was of type '{actualType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingPropertyNullReference">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingPropertyNullReference (object entityType, object property, object expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorMaterializingPropertyNullReference(object entityType, object property, object expectedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingPropertyNullReference(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorMaterializingPropertyNullReference (entityType As Object, property As Object, expectedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorMaterializingPropertyNullReference : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingPropertyNullReference (entityType, property, expectedType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="expectedType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="expectedType">To be added.</param>
        <summary>
                An exception occurred while reading a database value for property '{entityType}.{property}'. The expected type was '{expectedType}' but the actual value was null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingValue">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ErrorMaterializingValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ErrorMaterializingValue As String" />
      <MemberSignature Language="F#" Value="static member ErrorMaterializingValue : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An exception occurred while reading a database value. See the inner exception for more information.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingValueInvalidCast">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingValueInvalidCast (object expectedType, object actualType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorMaterializingValueInvalidCast(object expectedType, object actualType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingValueInvalidCast(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorMaterializingValueInvalidCast (expectedType As Object, actualType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorMaterializingValueInvalidCast : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingValueInvalidCast (expectedType, actualType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="actualType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="expectedType">To be added.</param>
        <param name="actualType">To be added.</param>
        <summary>
                An exception occurred while reading a database value. The expected type was '{expectedType}' but the actual value was of type '{actualType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingValueNullReference">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingValueNullReference (object expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorMaterializingValueNullReference(object expectedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingValueNullReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorMaterializingValueNullReference (expectedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorMaterializingValueNullReference : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ErrorMaterializingValueNullReference expectedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="expectedType">To be added.</param>
        <summary>
                An exception occurred while reading a database value. The expected type was '{expectedType}' but the actual value was null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStrategyExistingTransaction">
      <MemberSignature Language="C#" Value="public static string ExecutionStrategyExistingTransaction (object strategy, object getExecutionStrategyMethod);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ExecutionStrategyExistingTransaction(object strategy, object getExecutionStrategyMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ExecutionStrategyExistingTransaction(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecutionStrategyExistingTransaction (strategy As Object, getExecutionStrategyMethod As Object) As String" />
      <MemberSignature Language="F#" Value="static member ExecutionStrategyExistingTransaction : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ExecutionStrategyExistingTransaction (strategy, getExecutionStrategyMethod)" />
      <MemberSignature Language="C#" Value="public static string ExecutionStrategyExistingTransaction (object? strategy, object? getExecutionStrategyMethod);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strategy" Type="System.Object" />
        <Parameter Name="getExecutionStrategyMethod" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="strategy">To be added.</param>
        <param name="getExecutionStrategyMethod">To be added.</param>
        <summary>
                The configured execution strategy '{strategy}' does not support user-initiated transactions. Use the execution strategy returned by '{getExecutionStrategyMethod}' to execute all the operations in the transaction as a retriable unit.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionParameterizationException">
      <MemberSignature Language="C#" Value="public static string ExpressionParameterizationException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ExpressionParameterizationException" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ExpressionParameterizationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExpressionParameterizationException As String" />
      <MemberSignature Language="F#" Value="static member ExpressionParameterizationException : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ExpressionParameterizationException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An exception was thrown while attempting to evaluate a LINQ query parameter expression. See the inner exception for more information. To show additional information call 'DbContextOptionsBuilder.EnableSensitiveDataLogging'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionParameterizationExceptionSensitive">
      <MemberSignature Language="C#" Value="public static string ExpressionParameterizationExceptionSensitive (object expression);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ExpressionParameterizationExceptionSensitive(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ExpressionParameterizationExceptionSensitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExpressionParameterizationExceptionSensitive (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member ExpressionParameterizationExceptionSensitive : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ExpressionParameterizationExceptionSensitive expression" />
      <MemberSignature Language="C#" Value="public static string ExpressionParameterizationExceptionSensitive (object? expression);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                An exception was thrown while attempting to evaluate the LINQ query parameter expression '{expression}'. See the inner exception for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldNameMismatch">
      <MemberSignature Language="C#" Value="public static string FieldNameMismatch (object field, object entityType, object property);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FieldNameMismatch(object field, object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FieldNameMismatch(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FieldNameMismatch (field As Object, entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member FieldNameMismatch : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FieldNameMismatch (field, entityType, property)" />
      <MemberSignature Language="C#" Value="public static string FieldNameMismatch (object? field, object? entityType, object? property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="field">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The specified field '{field}' cannot be used for the property '{entityType}.{property}' because it does not match the property name. Entity type properties that aren't associated with a CLR property must match the field name exactly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNotCompositeKey">
      <MemberSignature Language="C#" Value="public static string FindNotCompositeKey (object entityType, object valuesCount);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FindNotCompositeKey(object entityType, object valuesCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FindNotCompositeKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindNotCompositeKey (entityType As Object, valuesCount As Object) As String" />
      <MemberSignature Language="F#" Value="static member FindNotCompositeKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FindNotCompositeKey (entityType, valuesCount)" />
      <MemberSignature Language="C#" Value="public static string FindNotCompositeKey (object? entityType, object? valuesCount);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="valuesCount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="valuesCount">To be added.</param>
        <summary>
                Entity type '{entityType}' is defined with a single key property, but {valuesCount} values were passed to the 'Find' method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindValueCountMismatch">
      <MemberSignature Language="C#" Value="public static string FindValueCountMismatch (object entityType, object propertiesCount, object valuesCount);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FindValueCountMismatch(object entityType, object propertiesCount, object valuesCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FindValueCountMismatch(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindValueCountMismatch (entityType As Object, propertiesCount As Object, valuesCount As Object) As String" />
      <MemberSignature Language="F#" Value="static member FindValueCountMismatch : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FindValueCountMismatch (entityType, propertiesCount, valuesCount)" />
      <MemberSignature Language="C#" Value="public static string FindValueCountMismatch (object? entityType, object? propertiesCount, object? valuesCount);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertiesCount" Type="System.Object" />
        <Parameter Name="valuesCount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertiesCount">To be added.</param>
        <param name="valuesCount">To be added.</param>
        <summary>
                Entity type '{entityType}' is defined with a {propertiesCount}-part composite key, but {valuesCount} values were passed to the 'Find' method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindValueTypeMismatch">
      <MemberSignature Language="C#" Value="public static string FindValueTypeMismatch (object index, object entityType, object valueType, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FindValueTypeMismatch(object index, object entityType, object valueType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FindValueTypeMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindValueTypeMismatch (index As Object, entityType As Object, valueType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member FindValueTypeMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FindValueTypeMismatch (index, entityType, valueType, propertyType)" />
      <MemberSignature Language="C#" Value="public static string FindValueTypeMismatch (object? index, object? entityType, object? valueType, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="valueType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="valueType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The key value at position {index} of the call to 'DbSet&lt;{entityType}&gt;.Find' was of type '{valueType}', which does not match the property type of '{propertyType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindWrongCount">
      <MemberSignature Language="C#" Value="public static string FindWrongCount (object? values, object? properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FindWrongCount(object values, object properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FindWrongCount(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindWrongCount (values As Object, properties As Object) As String" />
      <MemberSignature Language="F#" Value="static member FindWrongCount : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FindWrongCount (values, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="properties" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <param name="properties">To be added.</param>
        <summary>
                {values} value(s) were passed to the 'FindEntry' or 'GetEntries' method for {properties} properties. The number of values must match the number of properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindWrongType">
      <MemberSignature Language="C#" Value="public static string FindWrongType (object? valueType, object? propertyName, object? propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FindWrongType(object valueType, object propertyName, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FindWrongType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindWrongType (valueType As Object, propertyName As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member FindWrongType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FindWrongType (valueType, propertyName, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="propertyType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="valueType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The 'FindEntry' or 'GetEntries' method was passed a '{valueType}' value for the '{propertyName}' property, when a '{propertyType}' value was expected.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FkAttributeOnNonUniquePrincipal">
      <MemberSignature Language="C#" Value="public static string FkAttributeOnNonUniquePrincipal (object navigation, object principalType, object dependentType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FkAttributeOnNonUniquePrincipal(object navigation, object principalType, object dependentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FkAttributeOnNonUniquePrincipal(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FkAttributeOnNonUniquePrincipal (navigation As Object, principalType As Object, dependentType As Object) As String" />
      <MemberSignature Language="F#" Value="static member FkAttributeOnNonUniquePrincipal : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FkAttributeOnNonUniquePrincipal (navigation, principalType, dependentType)" />
      <MemberSignature Language="C#" Value="public static string FkAttributeOnNonUniquePrincipal (object? navigation, object? principalType, object? dependentType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="principalType" Type="System.Object" />
        <Parameter Name="dependentType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="principalType">To be added.</param>
        <param name="dependentType">To be added.</param>
        <summary>
                The [ForeignKey] attribute for the navigation '{navigation}' cannot be specified on the entity type '{principalType}' since it represents a one-to-many relationship. Move the [ForeignKey] attribute to a property on '{dependentType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FkAttributeOnPropertyNavigationMismatch">
      <MemberSignature Language="C#" Value="public static string FkAttributeOnPropertyNavigationMismatch (object property, object navigation, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FkAttributeOnPropertyNavigationMismatch(object property, object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FkAttributeOnPropertyNavigationMismatch(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FkAttributeOnPropertyNavigationMismatch (property As Object, navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member FkAttributeOnPropertyNavigationMismatch : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FkAttributeOnPropertyNavigationMismatch (property, navigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string FkAttributeOnPropertyNavigationMismatch (object? property, object? navigation, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The [ForeignKey] attributes on property '{property}' and navigation '{navigation}' in entity type '{entityType}' do not point at each other. Make sure the value of the [ForeignKey] attribute on the property matches the navigation name, and the value of the [ForeignKey] attribute on the navigation matches the foreign key property name or remove one of them.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FkAttributeOnSkipNavigation">
      <MemberSignature Language="C#" Value="public static string FkAttributeOnSkipNavigation (object entityType, object navigation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FkAttributeOnSkipNavigation(object entityType, object navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FkAttributeOnSkipNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FkAttributeOnSkipNavigation (entityType As Object, navigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member FkAttributeOnSkipNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FkAttributeOnSkipNavigation (entityType, navigation)" />
      <MemberSignature Language="C#" Value="public static string FkAttributeOnSkipNavigation (object? entityType, object? navigation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                The [ForeignKey] attribute cannot be specified on the skip navigation '{entityType}'.'{navigation}'. Configure the foreign key properties in 'OnModelCreating' instead.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyCountMismatch">
      <MemberSignature Language="C#" Value="public static string ForeignKeyCountMismatch (object foreignKey, object dependentType, object principalKey, object principalType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyCountMismatch(object foreignKey, object dependentType, object principalKey, object principalType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyCountMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyCountMismatch (foreignKey As Object, dependentType As Object, principalKey As Object, principalType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member ForeignKeyCountMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyCountMismatch (foreignKey, dependentType, principalKey, principalType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyCountMismatch (object foreignKeyProperties, object dependentType, object principalKey, object principalType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyCountMismatch(object foreignKeyProperties, object dependentType, object principalKey, object principalType) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyCountMismatch (foreignKeyProperties As Object, dependentType As Object, principalKey As Object, principalType As Object) As String" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member ForeignKeyCountMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyCountMismatch (foreignKeyProperties, dependentType, principalKey, principalType)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyCountMismatch (object? foreignKeyProperties, object? dependentType, object? principalKeyProperties, object? principalType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyCountMismatch(object foreignKeyProperties, object dependentType, object principalKeyProperties, object principalType) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyCountMismatch (foreignKeyProperties As Object, dependentType As Object, principalKeyProperties As Object, principalType As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member ForeignKeyCountMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyCountMismatch (foreignKeyProperties, dependentType, principalKeyProperties, principalType)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dependentType" Type="System.Object" Index="1" />
        <Parameter Name="principalKey" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="principalKeyProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalType" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="dependentType">To be added.</param>
        <param name="principalKey">To be added.</param>
        <param name="principalKeyProperties">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The number of properties specified for the foreign key {foreignKeyProperties} on entity type '{dependentType}' does not match the number of properties in the principal key {principalKeyProperties} on entity type '{principalType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyInUseSkipNavigation">
      <MemberSignature Language="C#" Value="public static string ForeignKeyInUseSkipNavigation (object foreigKey, object entityType, object navigation, object navigationEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyInUseSkipNavigation(object foreigKey, object entityType, object navigation, object navigationEntityType) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyInUseSkipNavigation(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyInUseSkipNavigation (foreigKey As Object, entityType As Object, navigation As Object, navigationEntityType As Object) As String" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member ForeignKeyInUseSkipNavigation : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyInUseSkipNavigation (foreigKey, entityType, navigation, navigationEntityType)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyInUseSkipNavigation (object? foreignKeyProperties, object? entityType, object? navigation, object? navigationEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyInUseSkipNavigation(object foreignKeyProperties, object entityType, object navigation, object navigationEntityType) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyInUseSkipNavigation (foreignKeyProperties As Object, entityType As Object, navigation As Object, navigationEntityType As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member ForeignKeyInUseSkipNavigation : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyInUseSkipNavigation (foreignKeyProperties, entityType, navigation, navigationEntityType)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreigKey" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationEntityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreigKey">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="navigationEntityType">To be added.</param>
        <summary>
                Cannot remove the foreign key {foreignKeyProperties} from entity type '{entityType}' because it is referenced by a skip navigation '{navigation}' on entity type '{navigationEntityType}'. All referencing skip navigations must be removed before the referenced foreign key can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyPropertiesWrongEntity">
      <MemberSignature Language="C#" Value="public static string ForeignKeyPropertiesWrongEntity (object foreignKey, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyPropertiesWrongEntity(object foreignKey, object entityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyPropertiesWrongEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyPropertiesWrongEntity (foreignKey As Object, entityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member ForeignKeyPropertiesWrongEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyPropertiesWrongEntity (foreignKey, entityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyPropertiesWrongEntity (object foreignKeyProperties, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyPropertiesWrongEntity(object foreignKeyProperties, object entityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyPropertiesWrongEntity (foreignKeyProperties As Object, entityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member ForeignKeyPropertiesWrongEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyPropertiesWrongEntity (foreignKeyProperties, entityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyPropertiesWrongEntity (object? foreignKeyProperties, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The specified foreign key properties {foreignKeyProperties} are not declared on the entity type '{entityType}'. Ensure that foreign key properties are declared on the target entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyPropertyInKey">
      <MemberSignature Language="C#" Value="public static string ForeignKeyPropertyInKey (object property, object entityType, object key, object baseEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyPropertyInKey(object property, object entityType, object key, object baseEntityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyPropertyInKey(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyPropertyInKey (property As Object, entityType As Object, key As Object, baseEntityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member ForeignKeyPropertyInKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyPropertyInKey (property, entityType, key, baseEntityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyPropertyInKey (object property, object entityType, object keyProperties, object baseEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyPropertyInKey(object property, object entityType, object keyProperties, object baseEntityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyPropertyInKey (property As Object, entityType As Object, keyProperties As Object, baseEntityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member ForeignKeyPropertyInKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyPropertyInKey (property, entityType, keyProperties, baseEntityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyPropertyInKey (object? property, object? entityType, object? keyProperties, object? baseEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
        <Parameter Name="key" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="keyProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="baseEntityType" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="key">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <summary>
                The property '{property}' cannot be part of a foreign key on '{entityType}' because it has a store-generated value and is contained in the key {keyProperties} defined on a base entity type '{baseEntityType}'. Configure '{property}' with 'ValueGeneratedNever' or define the foreign key on '{entityType}' instead.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyReferencedEntityKeyMismatch">
      <MemberSignature Language="C#" Value="public static string ForeignKeyReferencedEntityKeyMismatch (object principalKey, object principalEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyReferencedEntityKeyMismatch(object principalKey, object principalEntityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyReferencedEntityKeyMismatch(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyReferencedEntityKeyMismatch (principalKey As Object, principalEntityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="static member ForeignKeyReferencedEntityKeyMismatch : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyReferencedEntityKeyMismatch (principalKey, principalEntityType)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyReferencedEntityKeyMismatch (object? principalKeyProperties, object? principalEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyReferencedEntityKeyMismatch(object principalKeyProperties, object principalEntityType) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyReferencedEntityKeyMismatch (principalKeyProperties As Object, principalEntityType As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member ForeignKeyReferencedEntityKeyMismatch : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyReferencedEntityKeyMismatch (principalKeyProperties, principalEntityType)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalKey" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="principalKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalEntityType" Type="System.Object" Index="1" />
      </Parameters>
      <Docs>
        <param name="principalKey">To be added.</param>
        <param name="principalKeyProperties">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <summary>
                The provided principal key {principalKeyProperties} is not a key on the entity type '{principalEntityType}'. Provide a key that's defined on the principal entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeySelfReferencingDependentEntityType">
      <MemberSignature Language="C#" Value="public static string ForeignKeySelfReferencingDependentEntityType (object dependentType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeySelfReferencingDependentEntityType(object dependentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeySelfReferencingDependentEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeySelfReferencingDependentEntityType (dependentType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ForeignKeySelfReferencingDependentEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeySelfReferencingDependentEntityType dependentType" />
      <MemberSignature Language="C#" Value="public static string ForeignKeySelfReferencingDependentEntityType (object? dependentType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="dependentType">To be added.</param>
        <summary>
                The foreign keys on entity type '{dependentType}' cannot target the same entity type because it has a defining navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyTypeMismatch">
      <MemberSignature Language="C#" Value="public static string ForeignKeyTypeMismatch (object foreignKey, object dependentType, object principalKey, object principalType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyTypeMismatch(object foreignKey, object dependentType, object principalKey, object principalType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyTypeMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyTypeMismatch (foreignKey As Object, dependentType As Object, principalKey As Object, principalType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member ForeignKeyTypeMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyTypeMismatch (foreignKey, dependentType, principalKey, principalType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyTypeMismatch (object foreignKeyProperties, object dependentType, object principalKey, object principalType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyTypeMismatch(object foreignKeyProperties, object dependentType, object principalKey, object principalType) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyTypeMismatch (foreignKeyProperties As Object, dependentType As Object, principalKey As Object, principalType As Object) As String" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member ForeignKeyTypeMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyTypeMismatch (foreignKeyProperties, dependentType, principalKey, principalType)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyTypeMismatch (object? foreignKeyProperties, object? dependentType, object? principalKeyProperties, object? principalType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyTypeMismatch(object foreignKeyProperties, object dependentType, object principalKeyProperties, object principalType) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyTypeMismatch (foreignKeyProperties As Object, dependentType As Object, principalKeyProperties As Object, principalType As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member ForeignKeyTypeMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyTypeMismatch (foreignKeyProperties, dependentType, principalKeyProperties, principalType)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dependentType" Type="System.Object" Index="1" />
        <Parameter Name="principalKey" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="principalKeyProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalType" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="dependentType">To be added.</param>
        <param name="principalKey">To be added.</param>
        <param name="principalKeyProperties">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The types of the properties specified for the foreign key {foreignKeyProperties} on entity type '{dependentType}' do not match the types of the properties in the principal key {principalKeyProperties} on entity type '{principalType}'. Provide properties that use the same types in the same order.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyWrongType">
      <MemberSignature Language="C#" Value="public static string ForeignKeyWrongType (object foreignKey, object key, object principalType, object otherEntityType, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyWrongType(object foreignKey, object key, object principalType, object otherEntityType, object entityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyWrongType(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyWrongType (foreignKey As Object, key As Object, principalType As Object, otherEntityType As Object, entityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member ForeignKeyWrongType : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyWrongType (foreignKey, key, principalType, otherEntityType, entityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyWrongType (object foreignKeyProperties, object keyProperties, object principalType, object entityType, object otherEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyWrongType(object foreignKeyProperties, object keyProperties, object principalType, object entityType, object otherEntityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyWrongType (foreignKeyProperties As Object, keyProperties As Object, principalType As Object, entityType As Object, otherEntityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member ForeignKeyWrongType : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ForeignKeyWrongType (foreignKeyProperties, keyProperties, principalType, entityType, otherEntityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string ForeignKeyWrongType (object? foreignKeyProperties, object? keyProperties, object? principalType, object? entityType, object? otherEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="key" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="keyProperties" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalType" Type="System.Object" Index="2" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="key">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <param name="principalType">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <summary>
                The foreign key {foreignKeyProperties} targeting the key {keyProperties} on '{principalType}' cannot be removed from the entity type '{entityType}' because it is defined on the entity type '{otherEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullChangeTrackingRequired">
      <MemberSignature Language="C#" Value="public static string FullChangeTrackingRequired (object entityType, object changeTrackingStrategy, object fullStrategy, object fullPlusStrategy);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FullChangeTrackingRequired(object entityType, object changeTrackingStrategy, object fullStrategy, object fullPlusStrategy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FullChangeTrackingRequired(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FullChangeTrackingRequired (entityType As Object, changeTrackingStrategy As Object, fullStrategy As Object, fullPlusStrategy As Object) As String" />
      <MemberSignature Language="F#" Value="static member FullChangeTrackingRequired : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FullChangeTrackingRequired (entityType, changeTrackingStrategy, fullStrategy, fullPlusStrategy)" />
      <MemberSignature Language="C#" Value="public static string FullChangeTrackingRequired (object? entityType, object? changeTrackingStrategy, object? fullStrategy, object? fullPlusStrategy);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="changeTrackingStrategy" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fullStrategy" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fullPlusStrategy" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="changeTrackingStrategy">To be added.</param>
        <param name="fullStrategy">To be added.</param>
        <param name="fullPlusStrategy">To be added.</param>
        <summary>
                The entity type '{entityType}' is configured to use the '{changeTrackingStrategy}' change tracking strategy when full change tracking notifications are required. Use 'ModelBuilder.HasChangeTrackingStrategy' in 'OnModelCreating' to configure all entity types in the model to use the '{fullStrategy}' or '{fullPlusStrategy}' strategy.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionOnClient">
      <MemberSignature Language="C#" Value="public static string FunctionOnClient (object methodName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FunctionOnClient(object methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FunctionOnClient(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FunctionOnClient (methodName As Object) As String" />
      <MemberSignature Language="F#" Value="static member FunctionOnClient : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.FunctionOnClient methodName" />
      <MemberSignature Language="C#" Value="public static string FunctionOnClient (object? methodName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <summary>
                The '{methodName}' method is not supported because the query has switched to client-evaluation. This usually happens when the arguments to the method cannot be translated to server. Rewrite the query to avoid client evaluation of arguments so that method can be translated to server.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GraphDoesNotContainVertex">
      <MemberSignature Language="C#" Value="public static string GraphDoesNotContainVertex (object vertex);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GraphDoesNotContainVertex(object vertex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.GraphDoesNotContainVertex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GraphDoesNotContainVertex (vertex As Object) As String" />
      <MemberSignature Language="F#" Value="static member GraphDoesNotContainVertex : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.GraphDoesNotContainVertex vertex" />
      <MemberSignature Language="C#" Value="public static string GraphDoesNotContainVertex (object? vertex);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vertex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vertex">To be added.</param>
        <summary>
                The provided edge cannot be added because the graph does not contain the vertex '{vertex}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HiLoBadBlockSize">
      <MemberSignature Language="C#" Value="public static string HiLoBadBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HiLoBadBlockSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.HiLoBadBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HiLoBadBlockSize As String" />
      <MemberSignature Language="F#" Value="static member HiLoBadBlockSize : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.HiLoBadBlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The block size used for Hi-Lo value generation is not positive. The Hi-Lo generator is usually backed by a SQL sequence and this means that the sequence increment must be positive.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyingRelationshipCycle">
      <MemberSignature Language="C#" Value="public static string IdentifyingRelationshipCycle (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentifyingRelationshipCycle(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IdentifyingRelationshipCycle(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentifyingRelationshipCycle (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentifyingRelationshipCycle : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IdentifyingRelationshipCycle entityType" />
      <MemberSignature Language="C#" Value="public static string IdentifyingRelationshipCycle (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                A relationship cycle involving the primary keys of the following entity types was detected: '{entityType}'. This would prevent any entity to be inserted without violating the store constraints. Review the foreign keys defined on the primary keys and either remove or use other properties for at least one of them.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConflict">
      <MemberSignature Language="C#" Value="public static string IdentityConflict (object entityType, object keyProperties);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentityConflict(object entityType, object keyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IdentityConflict(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentityConflict (entityType As Object, keyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentityConflict : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IdentityConflict (entityType, keyProperties)" />
      <MemberSignature Language="C#" Value="public static string IdentityConflict (object? entityType, object? keyProperties);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <summary>
                The instance of entity type '{entityType}' cannot be tracked because another instance with the same key value for {keyProperties} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConflictOwned">
      <MemberSignature Language="C#" Value="public static string IdentityConflictOwned (object entityType, object keyProperties);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentityConflictOwned(object entityType, object keyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IdentityConflictOwned(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentityConflictOwned (entityType As Object, keyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentityConflictOwned : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IdentityConflictOwned (entityType, keyProperties)" />
      <MemberSignature Language="C#" Value="public static string IdentityConflictOwned (object? entityType, object? keyProperties);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <summary>
                The instance of entity type '{entityType}' cannot be tracked because another instance with the same key value for {keyProperties} is already being tracked. When replacing owned entities, modify the properties without changing the instance or detach the previous owned entity entry first. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConflictOwnedSensitive">
      <MemberSignature Language="C#" Value="public static string IdentityConflictOwnedSensitive (object entityType, object keyValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentityConflictOwnedSensitive(object entityType, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IdentityConflictOwnedSensitive(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentityConflictOwnedSensitive (entityType As Object, keyValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentityConflictOwnedSensitive : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IdentityConflictOwnedSensitive (entityType, keyValue)" />
      <MemberSignature Language="C#" Value="public static string IdentityConflictOwnedSensitive (object? entityType, object? keyValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <summary>
                The instance of entity type '{entityType}' cannot be tracked because another instance with the key value '{keyValue}' is already being tracked. When replacing owned entities, modify the properties without changing the instance or detach the previous owned entity entry first.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConflictSensitive">
      <MemberSignature Language="C#" Value="public static string IdentityConflictSensitive (object entityType, object keyValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentityConflictSensitive(object entityType, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IdentityConflictSensitive(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentityConflictSensitive (entityType As Object, keyValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentityConflictSensitive : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IdentityConflictSensitive (entityType, keyValue)" />
      <MemberSignature Language="C#" Value="public static string IdentityConflictSensitive (object? entityType, object? keyValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <summary>
                The instance of entity type '{entityType}' cannot be tracked because another instance with the key value '{keyValue}' is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImmediateConventionScopeCannotBeRunAgain">
      <MemberSignature Language="C#" Value="public static string ImmediateConventionScopeCannotBeRunAgain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ImmediateConventionScopeCannotBeRunAgain" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ImmediateConventionScopeCannotBeRunAgain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ImmediateConventionScopeCannotBeRunAgain As String" />
      <MemberSignature Language="F#" Value="static member ImmediateConventionScopeCannotBeRunAgain : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ImmediateConventionScopeCannotBeRunAgain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Immediate convention scope cannot be run again.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationTypeRequired">
      <MemberSignature Language="C#" Value="public static string ImplementationTypeRequired (object service);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ImplementationTypeRequired(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ImplementationTypeRequired(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImplementationTypeRequired (service As Object) As String" />
      <MemberSignature Language="F#" Value="static member ImplementationTypeRequired : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ImplementationTypeRequired service" />
      <MemberSignature Language="C#" Value="public static string ImplementationTypeRequired (object? service);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>
                The implementation type for the registration of the '{service}' service could not be determined. Specific implementation types must be used for services that expect multiple registrations so as to avoid duplicates.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeBadNavigation">
      <MemberSignature Language="C#" Value="public static string IncludeBadNavigation (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludeBadNavigation(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeBadNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludeBadNavigation (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludeBadNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeBadNavigation (property, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' is not a navigation property of entity type '{entityType}'. The 'Include(string)' method can only be used with a '.' separated list of navigation property names.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeNotSpecifiedDirectlyOnEntityType">
      <MemberSignature Language="C#" Value="public static string IncludeNotSpecifiedDirectlyOnEntityType (object include, object invalidNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludeNotSpecifiedDirectlyOnEntityType(object include, object invalidNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeNotSpecifiedDirectlyOnEntityType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludeNotSpecifiedDirectlyOnEntityType (include As Object, invalidNavigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludeNotSpecifiedDirectlyOnEntityType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeNotSpecifiedDirectlyOnEntityType (include, invalidNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="include" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="invalidNavigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="include">To be added.</param>
        <param name="invalidNavigation">To be added.</param>
        <summary>
                The Include operation '{include}' is not supported. '{invalidNavigation}' must be a navigation property defined on an entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeOnEntityWithDefiningQueryNotSupported">
      <MemberSignature Language="C#" Value="public static string IncludeOnEntityWithDefiningQueryNotSupported (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludeOnEntityWithDefiningQueryNotSupported(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeOnEntityWithDefiningQueryNotSupported(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludeOnEntityWithDefiningQueryNotSupported (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludeOnEntityWithDefiningQueryNotSupported : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeOnEntityWithDefiningQueryNotSupported entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Include is not supported for entities with defining query. Entity type: '{entityType}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeOnEntityWithDefiningQueryNotSupported">
      <MemberSignature Language="C#" Value="public static string IncludeOnEntityWithDefiningQueryNotSupported (object expression, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludeOnEntityWithDefiningQueryNotSupported(object expression, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeOnEntityWithDefiningQueryNotSupported(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludeOnEntityWithDefiningQueryNotSupported (expression As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludeOnEntityWithDefiningQueryNotSupported : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeOnEntityWithDefiningQueryNotSupported (expression, entityType)" />
      <MemberSignature Language="C#" Value="public static string IncludeOnEntityWithDefiningQueryNotSupported (object? expression, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The 'Include' operation with argument '{expression}' is not supported on entity type '{entityType}' because it has a defining query.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeOnNonEntity">
      <MemberSignature Language="C#" Value="public static string IncludeOnNonEntity (object expression);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludeOnNonEntity(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeOnNonEntity(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludeOnNonEntity (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludeOnNonEntity : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeOnNonEntity expression" />
      <MemberSignature Language="C#" Value="public static string IncludeOnNonEntity (object? expression);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                Cannot apply the 'Include' operation with argument '{expression}'. Either the source is not a queryable of a known entity type or 'Include' has been applied after 'Select' method which projects a different entity type through navigation. Consider applying 'Include' before 'Select' method call.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeWithCycle">
      <MemberSignature Language="C#" Value="public static string IncludeWithCycle (object navigationName, object inverseNavigationName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludeWithCycle(object navigationName, object inverseNavigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeWithCycle(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludeWithCycle (navigationName As Object, inverseNavigationName As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludeWithCycle : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncludeWithCycle (navigationName, inverseNavigationName)" />
      <MemberSignature Language="C#" Value="public static string IncludeWithCycle (object? navigationName, object? inverseNavigationName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="inverseNavigationName" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigationName">To be added.</param>
        <param name="inverseNavigationName">To be added.</param>
        <summary>
                The Include path '{navigationName}-&gt;{inverseNavigationName}' results in a cycle. Cycles are not allowed in no-tracking queries; either use a tracking query or remove the cycle.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleSourcesForSetOperation">
      <MemberSignature Language="C#" Value="public static string IncompatibleSourcesForSetOperation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string IncompatibleSourcesForSetOperation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncompatibleSourcesForSetOperation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncompatibleSourcesForSetOperation As String" />
      <MemberSignature Language="F#" Value="static member IncompatibleSourcesForSetOperation : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncompatibleSourcesForSetOperation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Incompatible sources used for set operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InconsistentInheritance">
      <MemberSignature Language="C#" Value="public static string InconsistentInheritance (object entityType, object baseEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InconsistentInheritance(object entityType, object baseEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InconsistentInheritance(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InconsistentInheritance (entityType As Object, baseEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InconsistentInheritance : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InconsistentInheritance (entityType, baseEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="baseEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' should derive from '{baseEntityType}' to reflect the hierarchy of the corresponding CLR types.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InconsistentInheritance">
      <MemberSignature Language="C#" Value="public static string InconsistentInheritance (object? entityType, object? baseEntityType, object? clrBaseEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InconsistentInheritance(object entityType, object baseEntityType, object clrBaseEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InconsistentInheritance(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InconsistentInheritance (entityType As Object, baseEntityType As Object, clrBaseEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InconsistentInheritance : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InconsistentInheritance (entityType, baseEntityType, clrBaseEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="baseEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="clrBaseEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <param name="clrBaseEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' is configured as derived from '{baseEntityType}', however according to the hierarchy of the corresponding CLR types it should derive from '{clrBaseEntityType}'. Configure '{entityType}' having either '{baseEntityType}' or 'null' as the base type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InconsistentOwnership">
      <MemberSignature Language="C#" Value="public static string InconsistentOwnership (object ownedEntityType, object nonOwnedEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InconsistentOwnership(object ownedEntityType, object nonOwnedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InconsistentOwnership(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InconsistentOwnership (ownedEntityType As Object, nonOwnedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InconsistentOwnership : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InconsistentOwnership (ownedEntityType, nonOwnedEntityType)" />
      <MemberSignature Language="C#" Value="public static string InconsistentOwnership (object? ownedEntityType, object? nonOwnedEntityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="nonOwnedEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="ownedEntityType">To be added.</param>
        <param name="nonOwnedEntityType">To be added.</param>
        <summary>
                The entity type '{ownedEntityType}' is configured as owned, but the entity type '{nonOwnedEntityType}' is not. Configure all entity types with defining navigations sharing a CLR type as owned in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncorrectNumberOfArguments">
      <MemberSignature Language="C#" Value="public static string IncorrectNumberOfArguments (object? method, object? argumentCount, object? parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncorrectNumberOfArguments(object method, object argumentCount, object parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncorrectNumberOfArguments(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncorrectNumberOfArguments (method As Object, argumentCount As Object, parameterCount As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncorrectNumberOfArguments : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IncorrectNumberOfArguments (method, argumentCount, parameterCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="argumentCount" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="parameterCount" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <param name="argumentCount">To be added.</param>
        <param name="parameterCount">To be added.</param>
        <summary>
                '{method}' was invoked with {argumentCount} arguments, but has {parameterCount} parameters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexPropertiesWrongEntity">
      <MemberSignature Language="C#" Value="public static string IndexPropertiesWrongEntity (object index, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IndexPropertiesWrongEntity(object index, object entityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IndexPropertiesWrongEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexPropertiesWrongEntity (index As Object, entityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="static member IndexPropertiesWrongEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IndexPropertiesWrongEntity (index, entityType)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string IndexPropertiesWrongEntity (object? indexProperties, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IndexPropertiesWrongEntity(object indexProperties, object entityType) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexPropertiesWrongEntity (indexProperties As Object, entityType As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member IndexPropertiesWrongEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IndexPropertiesWrongEntity (indexProperties, entityType)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="indexProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="indexProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The specified index properties {indexProperties} are not declared on the entity type '{entityType}'. Ensure that index properties are declared on the target entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexWrongType">
      <MemberSignature Language="C#" Value="public static string IndexWrongType (object index, object otherEntityType, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IndexWrongType(object index, object otherEntityType, object entityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IndexWrongType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexWrongType (index As Object, otherEntityType As Object, entityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member IndexWrongType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IndexWrongType (index, otherEntityType, entityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string IndexWrongType (object indexProperties, object entityType, object otherEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IndexWrongType(object indexProperties, object entityType, object otherEntityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexWrongType (indexProperties As Object, entityType As Object, otherEntityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="static member IndexWrongType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IndexWrongType (indexProperties, entityType, otherEntityType)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public static string IndexWrongType (object? indexProperties, object? entityType, object? otherEntityType);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public static string IndexWrongType (object? index, object? entityType, object? otherEntityType);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IndexWrongType(object index, object entityType, object otherEntityType) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexWrongType (index As Object, entityType As Object, otherEntityType As Object) As String" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member IndexWrongType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IndexWrongType (index, entityType, otherEntityType)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-7.0;efcore-8.0" />
        <Parameter Name="indexProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="indexProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <summary>
                The index {index} cannot be removed from the entity type '{entityType}' because it is defined on the entity type '{otherEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritedPropertyCannotBeIgnored">
      <MemberSignature Language="C#" Value="public static string InheritedPropertyCannotBeIgnored (object property, object entityType, object baseEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InheritedPropertyCannotBeIgnored(object property, object entityType, object baseEntityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InheritedPropertyCannotBeIgnored(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InheritedPropertyCannotBeIgnored (property As Object, entityType As Object, baseEntityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member InheritedPropertyCannotBeIgnored : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InheritedPropertyCannotBeIgnored (property, entityType, baseEntityType)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string InheritedPropertyCannotBeIgnored (object? property, object? entityType, object? baseEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string InheritedPropertyCannotBeIgnored (object? property, object? type, object? baseType);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InheritedPropertyCannotBeIgnored(object property, object type, object baseType) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InheritedPropertyCannotBeIgnored (property As Object, type As Object, baseType As Object) As String" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member InheritedPropertyCannotBeIgnored : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InheritedPropertyCannotBeIgnored (property, type, baseType)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="baseEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="baseType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="type">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <param name="baseType">To be added.</param>
        <summary>
                The property '{property}' cannot be ignored on type '{type}' because it's declared on the base type '{baseType}'. To exclude this property from your model, use the [NotMapped] attribute or 'Ignore' on the base type in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfacePropertyNotAdded">
      <MemberSignature Language="C#" Value="public static string InterfacePropertyNotAdded (object entityType, object navigation, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InterfacePropertyNotAdded(object entityType, object navigation, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InterfacePropertyNotAdded(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InterfacePropertyNotAdded (entityType As Object, navigation As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InterfacePropertyNotAdded : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InterfacePropertyNotAdded (entityType, navigation, propertyType)" />
      <MemberSignature Language="C#" Value="public static string InterfacePropertyNotAdded (object? entityType, object? navigation, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{entityType}.{navigation}' is of an interface type ('{propertyType}'). If it is a navigation, manually configure the relationship for this property by casting it to a mapped entity type. Otherwise, ignore the property using the [NotMapped] attribute or 'Ignore' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntraHierarchicalAmbiguousTargetEntityType">
      <MemberSignature Language="C#" Value="public static string IntraHierarchicalAmbiguousTargetEntityType (object entityType, object foreignKey, object principalEntityType, object dependentEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IntraHierarchicalAmbiguousTargetEntityType(object entityType, object foreignKey, object principalEntityType, object dependentEntityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IntraHierarchicalAmbiguousTargetEntityType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntraHierarchicalAmbiguousTargetEntityType (entityType As Object, foreignKey As Object, principalEntityType As Object, dependentEntityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member IntraHierarchicalAmbiguousTargetEntityType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IntraHierarchicalAmbiguousTargetEntityType (entityType, foreignKey, principalEntityType, dependentEntityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string IntraHierarchicalAmbiguousTargetEntityType (object entityType, object foreignKeyProperties, object principalEntityType, object dependentEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IntraHierarchicalAmbiguousTargetEntityType(object entityType, object foreignKeyProperties, object principalEntityType, object dependentEntityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntraHierarchicalAmbiguousTargetEntityType (entityType As Object, foreignKeyProperties As Object, principalEntityType As Object, dependentEntityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="static member IntraHierarchicalAmbiguousTargetEntityType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IntraHierarchicalAmbiguousTargetEntityType (entityType, foreignKeyProperties, principalEntityType, dependentEntityType)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public static string IntraHierarchicalAmbiguousTargetEntityType (object? entityType, object? foreignKeyProperties, object? principalEntityType, object? dependentEntityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="foreignKey" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="principalEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="dependentEntityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <summary>
                The entity type related to '{entityType}' cannot be determined because the specified foreign key {foreignKeyProperties} references entity type '{principalEntityType}', which is in the same hierarchy as the entity type which is declared on '{dependentEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidAlternateKeyValue">
      <MemberSignature Language="C#" Value="public static string InvalidAlternateKeyValue (object entityType, object keyProperty);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidAlternateKeyValue(object entityType, object keyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidAlternateKeyValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidAlternateKeyValue (entityType As Object, keyProperty As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidAlternateKeyValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidAlternateKeyValue (entityType, keyProperty)" />
      <MemberSignature Language="C#" Value="public static string InvalidAlternateKeyValue (object? entityType, object? keyProperty);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyProperty" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyProperty">To be added.</param>
        <summary>
                Unable to track an entity of type '{entityType}' because alternate key property '{keyProperty}' is null. If the alternate key is not used in a relationship, then consider using a unique index instead. Unique indexes may contain nulls, while alternate keys may not.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidComplexType">
      <MemberSignature Language="C#" Value="public static string InvalidComplexType (object? type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidComplexType(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidComplexType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidComplexType (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidComplexType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidComplexType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                The specified type '{type}' must be a non-interface type with a public constructor to be used as a complex type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidDbContext">
      <MemberSignature Language="C#" Value="public static string InvalidDbContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string InvalidDbContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidDbContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidDbContext As String" />
      <MemberSignature Language="F#" Value="static member InvalidDbContext : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidDbContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A previous error has left the DbContext in an invalid state. Applications should not continue to use a DbContext instance after an InvalidOperationException has been thrown.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidEntityType">
      <MemberSignature Language="C#" Value="public static string InvalidEntityType (object type);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidEntityType(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidEntityType (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidEntityType type" />
      <MemberSignature Language="C#" Value="public static string InvalidEntityType (object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                The specified type '{type}' must be a non-interface reference type to be used as an entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidEntityTypeConfigurationAttribute">
      <MemberSignature Language="C#" Value="public static string InvalidEntityTypeConfigurationAttribute (object? entityTypeConfigurationType, object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidEntityTypeConfigurationAttribute(object entityTypeConfigurationType, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidEntityTypeConfigurationAttribute(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidEntityTypeConfigurationAttribute (entityTypeConfigurationType As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidEntityTypeConfigurationAttribute : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidEntityTypeConfigurationAttribute (entityTypeConfigurationType, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeConfigurationType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeConfigurationType">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type configuration of type '{entityTypeConfigurationType}' is invalid. The configuration specified using EntityTypeConfigurationAttribute has to implement 'IEntityTypeConfiguration&lt;{entityType}&gt;'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidEnumValue">
      <MemberSignature Language="C#" Value="public static string InvalidEnumValue (object argumentName, object enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidEnumValue(object argumentName, object enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidEnumValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidEnumValue (argumentName As Object, enumType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidEnumValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidEnumValue (argumentName, enumType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argumentName" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="enumType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="argumentName">To be added.</param>
        <param name="enumType">To be added.</param>
        <summary>
                The value provided for argument '{argumentName}' must be a valid value of enum type '{enumType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidEnumValue">
      <MemberSignature Language="C#" Value="public static string InvalidEnumValue (object? value, object? argumentName, object? enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidEnumValue(object value, object argumentName, object enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidEnumValue(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidEnumValue (value As Object, argumentName As Object, enumType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidEnumValue : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidEnumValue (value, argumentName, enumType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="argumentName" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="enumType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="argumentName">To be added.</param>
        <param name="enumType">To be added.</param>
        <summary>
                The value '{value}' provided for argument '{argumentName}' must be a valid value of enum type '{enumType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidIncludeExpression">
      <MemberSignature Language="C#" Value="public static string InvalidIncludeExpression (object expression);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidIncludeExpression(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidIncludeExpression(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidIncludeExpression (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidIncludeExpression : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidIncludeExpression expression" />
      <MemberSignature Language="C#" Value="public static string InvalidIncludeExpression (object? expression);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                The expression '{expression}' is invalid inside an 'Include' operation, since it does not represent a property access: 't =&gt; t.MyProperty'. To target navigations declared on derived types, use casting ('t =&gt; ((Derived)t).MyProperty') or the 'as' operator ('t =&gt; (t as Derived).MyProperty'). Collection navigation access can be filtered by composing Where, OrderBy(Descending), ThenBy(Descending), Skip or Take operations. For more information on including related data, see https://go.microsoft.com/fwlink/?LinkID=746393.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidIncludeLambdaExpression">
      <MemberSignature Language="C#" Value="public static string InvalidIncludeLambdaExpression (object methodName, object includeLambdaExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidIncludeLambdaExpression(object methodName, object includeLambdaExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidIncludeLambdaExpression(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidIncludeLambdaExpression (methodName As Object, includeLambdaExpression As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidIncludeLambdaExpression : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidIncludeLambdaExpression (methodName, includeLambdaExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="includeLambdaExpression" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <param name="includeLambdaExpression">To be added.</param>
        <summary>
                The {methodName} property lambda expression '{includeLambdaExpression}' is invalid. The expression should represent a property access: 't =&gt; t.MyProperty'. To target navigations declared on derived types, specify an explicitly typed lambda parameter of the target type, E.g. '(Derived d) =&gt; d.MyProperty'. For more information on including related data, see http://go.microsoft.com/fwlink/?LinkID=746393.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidKeyValue">
      <MemberSignature Language="C#" Value="public static string InvalidKeyValue (object entityType, object keyProperty);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidKeyValue(object entityType, object keyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidKeyValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidKeyValue (entityType As Object, keyProperty As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidKeyValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidKeyValue (entityType, keyProperty)" />
      <MemberSignature Language="C#" Value="public static string InvalidKeyValue (object? entityType, object? keyProperty);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyProperty" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyProperty">To be added.</param>
        <summary>
                Unable to track an entity of type '{entityType}' because its primary key property '{keyProperty}' is null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidMemberExpression">
      <MemberSignature Language="C#" Value="public static string InvalidMemberExpression (object expression);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidMemberExpression(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidMemberExpression(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidMemberExpression (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidMemberExpression : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidMemberExpression expression" />
      <MemberSignature Language="C#" Value="public static string InvalidMemberExpression (object? expression);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                The expression '{expression}' is not a valid member access expression. The expression should represent a simple property or field access: 't =&gt; t.MyProperty'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidMemberInitBinding">
      <MemberSignature Language="C#" Value="public static string InvalidMemberInitBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string InvalidMemberInitBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidMemberInitBinding" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidMemberInitBinding As String" />
      <MemberSignature Language="F#" Value="static member InvalidMemberInitBinding : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidMemberInitBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unhandled operation: MemberInitExpression binding is not a MemberAssignment
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidMembersExpression">
      <MemberSignature Language="C#" Value="public static string InvalidMembersExpression (object expression);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidMembersExpression(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidMembersExpression(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidMembersExpression (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidMembersExpression : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidMembersExpression expression" />
      <MemberSignature Language="C#" Value="public static string InvalidMembersExpression (object? expression);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                The expression '{expression}' is not a valid member access expression. The expression should represent a simple property or field access: 't =&gt; t.MyProperty'. When specifying multiple properties or fields, use an anonymous type: 't =&gt; new {{ t.MyProperty, t.MyField }}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidNavigationWithInverseProperty">
      <MemberSignature Language="C#" Value="public static string InvalidNavigationWithInverseProperty (object property, object entityType, object referencedProperty, object referencedEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidNavigationWithInverseProperty(object property, object entityType, object referencedProperty, object referencedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidNavigationWithInverseProperty(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidNavigationWithInverseProperty (property As Object, entityType As Object, referencedProperty As Object, referencedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidNavigationWithInverseProperty : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidNavigationWithInverseProperty (property, entityType, referencedProperty, referencedEntityType)" />
      <MemberSignature Language="C#" Value="public static string InvalidNavigationWithInverseProperty (object? property, object? entityType, object? referencedProperty, object? referencedEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="referencedProperty" Type="System.Object" />
        <Parameter Name="referencedEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="referencedProperty">To be added.</param>
        <param name="referencedEntityType">To be added.</param>
        <summary>
                The [InverseProperty] attribute on property '{1_entityType}.{0_property}' is not valid. The property '{referencedProperty}' is not a valid navigation on the related type '{referencedEntityType}'. Ensure that the property exists and is a valid reference or collection navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidNumberOfIndexSortOrderValues">
      <MemberSignature Language="C#" Value="public static string InvalidNumberOfIndexSortOrderValues (object? indexProperties, object? numValues, object? numProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidNumberOfIndexSortOrderValues(object indexProperties, object numValues, object numProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidNumberOfIndexSortOrderValues(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidNumberOfIndexSortOrderValues (indexProperties As Object, numValues As Object, numProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidNumberOfIndexSortOrderValues : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidNumberOfIndexSortOrderValues (indexProperties, numValues, numProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="numValues" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="numProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="indexProperties">To be added.</param>
        <param name="numValues">To be added.</param>
        <param name="numProperties">To be added.</param>
        <summary>
                Invalid number of index sort order values provided for {indexProperties}: {numValues} values were provided, but the index has {numProperties} properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPoolSize">
      <MemberSignature Language="C#" Value="public static string InvalidPoolSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string InvalidPoolSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidPoolSize As String" />
      <MemberSignature Language="F#" Value="static member InvalidPoolSize : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The specified poolSize must be greater than 0.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPropertiesExpression">
      <MemberSignature Language="C#" Value="public static string InvalidPropertiesExpression (object expression);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidPropertiesExpression(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidPropertiesExpression(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidPropertiesExpression (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidPropertiesExpression : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidPropertiesExpression expression" />
      <MemberSignature Language="C#" Value="public static string InvalidPropertiesExpression (object? expression);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                The properties expression '{expression}' is invalid. The expression should represent a simple property access: 't =&gt; t.MyProperty'. When specifying multiple properties, use an anonymous type: 't =&gt; new {{ t.MyProperty1, t.MyProperty2 }}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPropertyExpression">
      <MemberSignature Language="C#" Value="public static string InvalidPropertyExpression (object expression);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidPropertyExpression(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidPropertyExpression(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidPropertyExpression (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidPropertyExpression : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidPropertyExpression expression" />
      <MemberSignature Language="C#" Value="public static string InvalidPropertyExpression (object? expression);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                The expression '{expression}' is not a valid property expression. The expression should represent a simple property access: 't =&gt; t.MyProperty'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPropertyListOnNavigation">
      <MemberSignature Language="C#" Value="public static string InvalidPropertyListOnNavigation (object navigation, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidPropertyListOnNavigation(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidPropertyListOnNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidPropertyListOnNavigation (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidPropertyListOnNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidPropertyListOnNavigation (navigation, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property list specified using [ForeignKey] attribute on navigation '{1_entityType}.{0_navigation}' is incorrect. The attribute value should be comma-separated list of property names.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPropertyListOnNavigation">
      <MemberSignature Language="C#" Value="public static string InvalidPropertyListOnNavigation (object? navigation, object? entityType, object? properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidPropertyListOnNavigation(object navigation, object entityType, object properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidPropertyListOnNavigation(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidPropertyListOnNavigation (navigation As Object, entityType As Object, properties As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidPropertyListOnNavigation : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidPropertyListOnNavigation (navigation, entityType, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="properties" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="properties">To be added.</param>
        <summary>
                The property list specified using [ForeignKey("{2_properties}")] attribute on navigation '{1_entityType}.{0_navigation}' is incorrect. Provide a comma-separated list of property names.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidRelationshipUsingDataAnnotations">
      <MemberSignature Language="C#" Value="public static string InvalidRelationshipUsingDataAnnotations (object navigation, object entityType, object referencedNavigation, object referencedEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidRelationshipUsingDataAnnotations(object navigation, object entityType, object referencedNavigation, object referencedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidRelationshipUsingDataAnnotations(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidRelationshipUsingDataAnnotations (navigation As Object, entityType As Object, referencedNavigation As Object, referencedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidRelationshipUsingDataAnnotations : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidRelationshipUsingDataAnnotations (navigation, entityType, referencedNavigation, referencedEntityType)" />
      <MemberSignature Language="C#" Value="public static string InvalidRelationshipUsingDataAnnotations (object? navigation, object? entityType, object? referencedNavigation, object? referencedEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="referencedNavigation" Type="System.Object" />
        <Parameter Name="referencedEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="referencedNavigation">To be added.</param>
        <param name="referencedEntityType">To be added.</param>
        <summary>
                An invalid relationship has been specified using the [InverseProperty] and [ForeignKey] attributes. The navigations '{1_entityType}.{0_navigation}' and '{3_referencedEntityType}.{2_referencedNavigation}' are related by the [InverseProperty] attribute, but the [ForeignKey] attributes specified for both navigations have different values. Either specify the same properties or remove one of the attributes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidReplaceService">
      <MemberSignature Language="C#" Value="public static string InvalidReplaceService (object replaceService, object useInternalServiceProvider);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidReplaceService(object replaceService, object useInternalServiceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidReplaceService(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidReplaceService (replaceService As Object, useInternalServiceProvider As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidReplaceService : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidReplaceService (replaceService, useInternalServiceProvider)" />
      <MemberSignature Language="C#" Value="public static string InvalidReplaceService (object? replaceService, object? useInternalServiceProvider);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replaceService" Type="System.Object" />
        <Parameter Name="useInternalServiceProvider" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="replaceService">To be added.</param>
        <param name="useInternalServiceProvider">To be added.</param>
        <summary>
                A call was made to '{replaceService}', but Entity Framework is not building its own internal service provider. Either allow Entity Framework to build the service provider by removing the call to '{useInternalServiceProvider}', or build replacement services into the service provider before passing it to '{useInternalServiceProvider}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSetKeylessOperation">
      <MemberSignature Language="C#" Value="public static string InvalidSetKeylessOperation (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSetKeylessOperation(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetKeylessOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSetKeylessOperation (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSetKeylessOperation : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetKeylessOperation entityType" />
      <MemberSignature Language="C#" Value="public static string InvalidSetKeylessOperation (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The invoked method cannot be used for the entity type '{entityType}' because it does not have a primary key. For more information on keyless entity types, see https://go.microsoft.com/fwlink/?linkid=2141943.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSetSameTypeWithDifferentNamespace">
      <MemberSignature Language="C#" Value="public static string InvalidSetSameTypeWithDifferentNamespace (object? typeName, object? entityTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSetSameTypeWithDifferentNamespace(object typeName, object entityTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetSameTypeWithDifferentNamespace(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSetSameTypeWithDifferentNamespace (typeName As Object, entityTypeName As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSetSameTypeWithDifferentNamespace : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetSameTypeWithDifferentNamespace (typeName, entityTypeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityTypeName" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <param name="entityTypeName">To be added.</param>
        <summary>
                Cannot create a DbSet for '{typeName}' because this type is not included in the model for the context. However the model contains an entity type with the same name in a different namespace: '{entityTypeName}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSetSharedType">
      <MemberSignature Language="C#" Value="public static string InvalidSetSharedType (object typeName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSetSharedType(object typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetSharedType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSetSharedType (typeName As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSetSharedType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetSharedType typeName" />
      <MemberSignature Language="C#" Value="public static string InvalidSetSharedType (object? typeName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <summary>
                Cannot create a DbSet for '{typeName}' because it is configured as an shared-type entity type. Access the entity type via the 'Set' method overload that accepts an entity type name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSetType">
      <MemberSignature Language="C#" Value="public static string InvalidSetType (object typeName);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSetType(object typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSetType (typeName As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSetType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetType typeName" />
      <MemberSignature Language="C#" Value="public static string InvalidSetType (object? typeName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <summary>
                Cannot create a DbSet for '{typeName}' because this type is not included in the model for the context.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSetTypeOwned">
      <MemberSignature Language="C#" Value="public static string InvalidSetTypeOwned (object typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSetTypeOwned(object typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetTypeOwned(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSetTypeOwned (typeName As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSetTypeOwned : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetTypeOwned typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <summary>
                Cannot create a DbSet for '{typeName}' because it is configured as an owned entity type and must be accessed through its owning entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSetTypeOwned">
      <MemberSignature Language="C#" Value="public static string InvalidSetTypeOwned (object? typeName, object? ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSetTypeOwned(object typeName, object ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetTypeOwned(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSetTypeOwned (typeName As Object, ownerType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSetTypeOwned : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetTypeOwned (typeName, ownerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="ownerType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <param name="ownerType">To be added.</param>
        <summary>
                Cannot create a DbSet for '{typeName}' because it is configured as an owned entity type and must be accessed through its owning entity type '{ownerType}'. See https://aka.ms/efcore-docs-owned for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSetTypeWeak">
      <MemberSignature Language="C#" Value="public static string InvalidSetTypeWeak (object typeName);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSetTypeWeak(object typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetTypeWeak(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSetTypeWeak (typeName As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSetTypeWeak : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSetTypeWeak typeName" />
      <MemberSignature Language="C#" Value="public static string InvalidSetTypeWeak (object? typeName);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <summary>
                Cannot create a DbSet for '{typeName}' because it is mapped to multiple entity types with defining navigations and should be accessed through the owning entities.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSwitch">
      <MemberSignature Language="C#" Value="public static string InvalidSwitch (object name, object value);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSwitch(object name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSwitch(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSwitch (name As Object, value As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSwitch : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidSwitch (name, value)" />
      <MemberSignature Language="C#" Value="public static string InvalidSwitch (object? name, object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                Invalid {name}: {value}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidType">
      <MemberSignature Language="C#" Value="public static string InvalidType (object property, object entityType, object valueType, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidType(object property, object entityType, object valueType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidType (property As Object, entityType As Object, valueType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidType (property, entityType, valueType, propertyType)" />
      <MemberSignature Language="C#" Value="public static string InvalidType (object? property, object? entityType, object? valueType, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="valueType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="valueType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The value for property '{1_entityType}.{0_property}' cannot be set to a value of type '{valueType}' because its type is '{propertyType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidTypeConversationWithInclude">
      <MemberSignature Language="C#" Value="public static string InvalidTypeConversationWithInclude (object includeExpression, object type);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidTypeConversationWithInclude(object includeExpression, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidTypeConversationWithInclude(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidTypeConversationWithInclude (includeExpression As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidTypeConversationWithInclude : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidTypeConversationWithInclude (includeExpression, type)" />
      <MemberSignature Language="C#" Value="public static string InvalidTypeConversationWithInclude (object? includeExpression, object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeExpression" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="includeExpression">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                Unable to include navigation chain '{includeExpression}' specified by 'Include' operation as the converted type '{type}' is not part of model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidUseService">
      <MemberSignature Language="C#" Value="public static string InvalidUseService (object useService, object useInternalServiceProvider, object service);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidUseService(object useService, object useInternalServiceProvider, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidUseService(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidUseService (useService As Object, useInternalServiceProvider As Object, service As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidUseService : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidUseService (useService, useInternalServiceProvider, service)" />
      <MemberSignature Language="C#" Value="public static string InvalidUseService (object? useService, object? useInternalServiceProvider, object? service);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useService" Type="System.Object" />
        <Parameter Name="useInternalServiceProvider" Type="System.Object" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="useService">To be added.</param>
        <param name="useInternalServiceProvider">To be added.</param>
        <param name="service">To be added.</param>
        <summary>
                A call was made to '{useService}', but Entity Framework is not building its own internal service provider. Either allow Entity Framework to build the service provider by removing the call to '{useInternalServiceProvider}', or build the '{service}' services to use into the service provider before passing it to '{useInternalServiceProvider}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidValueGeneratorFactoryProperty">
      <MemberSignature Language="C#" Value="public static string InvalidValueGeneratorFactoryProperty (object factory, object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidValueGeneratorFactoryProperty(object factory, object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidValueGeneratorFactoryProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidValueGeneratorFactoryProperty (factory As Object, property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidValueGeneratorFactoryProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InvalidValueGeneratorFactoryProperty (factory, property, entityType)" />
      <MemberSignature Language="C#" Value="public static string InvalidValueGeneratorFactoryProperty (object? factory, object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The '{factory}' cannot create a value generator for property '{2_entityType}.{1_property}'. Only integer properties are supported.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InversePropertyMismatch">
      <MemberSignature Language="C#" Value="public static string InversePropertyMismatch (object navigation, object entityType, object referencedNavigation, object referencedEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InversePropertyMismatch(object navigation, object entityType, object referencedNavigation, object referencedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InversePropertyMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InversePropertyMismatch (navigation As Object, entityType As Object, referencedNavigation As Object, referencedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InversePropertyMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InversePropertyMismatch (navigation, entityType, referencedNavigation, referencedEntityType)" />
      <MemberSignature Language="C#" Value="public static string InversePropertyMismatch (object? navigation, object? entityType, object? referencedNavigation, object? referencedEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="referencedNavigation" Type="System.Object" />
        <Parameter Name="referencedEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="referencedNavigation">To be added.</param>
        <param name="referencedEntityType">To be added.</param>
        <summary>
                [InverseProperty] attributes on navigation '{1_entityType}.{0_navigation}' and on navigation '{3_referencedEntityType}.{2_referencedNavigation}' are not pointing to each other. Change the attributes to use the corresponding names or remove one of them.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseToOwnedType">
      <MemberSignature Language="C#" Value="public static string InverseToOwnedType (object principalEntityType, object navigation, object ownedType, object ownerType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InverseToOwnedType(object principalEntityType, object navigation, object ownedType, object ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InverseToOwnedType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InverseToOwnedType (principalEntityType As Object, navigation As Object, ownedType As Object, ownerType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InverseToOwnedType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.InverseToOwnedType (principalEntityType, navigation, ownedType, ownerType)" />
      <MemberSignature Language="C#" Value="public static string InverseToOwnedType (object? principalEntityType, object? navigation, object? ownedType, object? ownerType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="ownedType" Type="System.Object" />
        <Parameter Name="ownerType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="ownedType">To be added.</param>
        <param name="ownerType">To be added.</param>
        <summary>
                The navigation '{principalEntityType}.{navigation}' is not supported because it is pointing to an owned entity type '{ownedType}'. Only the ownership navigation from the entity type '{ownerType}' can point to the owned entity type. See https://aka.ms/efcore-docs-owned for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IQueryableNotAsync">
      <MemberSignature Language="C#" Value="public static string IQueryableNotAsync (object genericParameter);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IQueryableNotAsync(object genericParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IQueryableNotAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IQueryableNotAsync (genericParameter As Object) As String" />
      <MemberSignature Language="F#" Value="static member IQueryableNotAsync : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IQueryableNotAsync genericParameter" />
      <MemberSignature Language="C#" Value="public static string IQueryableNotAsync (object? genericParameter);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericParameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericParameter">To be added.</param>
        <summary>
                The source 'IQueryable' doesn't implement 'IAsyncEnumerable&lt;{genericParameter}&gt;'. Only sources that implement 'IAsyncEnumerable' can be used for Entity Framework asynchronous operations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IQueryableProviderNotAsync">
      <MemberSignature Language="C#" Value="public static string IQueryableProviderNotAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string IQueryableProviderNotAsync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IQueryableProviderNotAsync" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IQueryableProviderNotAsync As String" />
      <MemberSignature Language="F#" Value="static member IQueryableProviderNotAsync : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.IQueryableProviderNotAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The provider for the source 'IQueryable' doesn't implement 'IAsyncQueryProvider'. Only providers that implement 'IAsyncQueryProvider' can be used for Entity Framework asynchronous operations.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyAttributeOnDerivedEntity">
      <MemberSignature Language="C#" Value="public static string KeyAttributeOnDerivedEntity (object derivedType, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyAttributeOnDerivedEntity(object derivedType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyAttributeOnDerivedEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyAttributeOnDerivedEntity (derivedType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyAttributeOnDerivedEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyAttributeOnDerivedEntity (derivedType, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="derivedType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="derivedType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The derived type '{derivedType}' cannot have the [Key] attribute on property '{property}' since primary keys may only be declared on the root type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyAttributeOnDerivedEntity">
      <MemberSignature Language="C#" Value="public static string KeyAttributeOnDerivedEntity (object? derivedType, object? property, object? rootType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyAttributeOnDerivedEntity(object derivedType, object property, object rootType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyAttributeOnDerivedEntity(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyAttributeOnDerivedEntity (derivedType As Object, property As Object, rootType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyAttributeOnDerivedEntity : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyAttributeOnDerivedEntity (derivedType, property, rootType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="derivedType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="rootType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="derivedType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="rootType">To be added.</param>
        <summary>
                The derived type '{derivedType}' cannot have the [Key] attribute on property '{property}' since primary keys may only be declared on the root type. Move the property '{property}' to '{rootType}' or remove '{rootType}' from the model by using [NotMapped] attribute or calling 'EntityTypeBuilder.Ignore' on the base type in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInUse">
      <MemberSignature Language="C#" Value="public static string KeyInUse (object key, object entityType, object dependentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyInUse(object key, object entityType, object dependentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyInUse(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyInUse (key As Object, entityType As Object, dependentType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyInUse : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyInUse (key, entityType, dependentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="dependentType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="dependentType">To be added.</param>
        <summary>
                Cannot remove key {key} from entity type '{entityType}' because it is referenced by a foreign key in entity type '{dependentType}'. All foreign keys must be removed or redefined before the referenced key can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInUse">
      <MemberSignature Language="C#" Value="public static string KeyInUse (object keyProperties, object entityType, object foreignKeyProperties, object dependentType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyInUse(object keyProperties, object entityType, object foreignKeyProperties, object dependentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyInUse(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyInUse (keyProperties As Object, entityType As Object, foreignKeyProperties As Object, dependentType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyInUse : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyInUse (keyProperties, entityType, foreignKeyProperties, dependentType)" />
      <MemberSignature Language="C#" Value="public static string KeyInUse (object? keyProperties, object? entityType, object? foreignKeyProperties, object? dependentType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dependentType" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="keyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="dependentType">To be added.</param>
        <summary>
                Cannot remove key {keyProperties} from entity type '{entityType}' because it is referenced by a foreign key {foreignKeyProperties} defined on entity type '{dependentType}'. Remove or change the principal key for all referencing foreign keys before removing the key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeylessTypeExistingKey">
      <MemberSignature Language="C#" Value="public static string KeylessTypeExistingKey (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeylessTypeExistingKey(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeylessTypeExistingKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeylessTypeExistingKey (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeylessTypeExistingKey : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeylessTypeExistingKey entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be marked as keyless because it contains a key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeylessTypeExistingKey">
      <MemberSignature Language="C#" Value="public static string KeylessTypeExistingKey (object? entityType, object? keyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeylessTypeExistingKey(object entityType, object keyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeylessTypeExistingKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeylessTypeExistingKey (entityType As Object, keyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeylessTypeExistingKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeylessTypeExistingKey (entityType, keyProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyProperties" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be marked as keyless because it contains a key {keyProperties}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeylessTypeTracked">
      <MemberSignature Language="C#" Value="public static string KeylessTypeTracked (object type);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeylessTypeTracked(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeylessTypeTracked(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeylessTypeTracked (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeylessTypeTracked : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeylessTypeTracked type" />
      <MemberSignature Language="C#" Value="public static string KeylessTypeTracked (object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                Unable to track an instance of type '{type}' because it does not have a primary key. Only entity types with a primary key may be tracked.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeylessTypeWithKey">
      <MemberSignature Language="C#" Value="public static string KeylessTypeWithKey (object key, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeylessTypeWithKey(object key, object entityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeylessTypeWithKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeylessTypeWithKey (key As Object, entityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member KeylessTypeWithKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeylessTypeWithKey (key, entityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string KeylessTypeWithKey (object keyProperties, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeylessTypeWithKey(object keyProperties, object entityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeylessTypeWithKey (keyProperties As Object, entityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member KeylessTypeWithKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeylessTypeWithKey (keyProperties, entityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string KeylessTypeWithKey (object? keyProperties, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="keyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The key {keyProperties} cannot be added to keyless type '{entityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPropertiesWrongEntity">
      <MemberSignature Language="C#" Value="public static string KeyPropertiesWrongEntity (object key, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyPropertiesWrongEntity(object key, object entityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyPropertiesWrongEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPropertiesWrongEntity (key As Object, entityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member KeyPropertiesWrongEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyPropertiesWrongEntity (key, entityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string KeyPropertiesWrongEntity (object keyProperties, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyPropertiesWrongEntity(object keyProperties, object entityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPropertiesWrongEntity (keyProperties As Object, entityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member KeyPropertiesWrongEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyPropertiesWrongEntity (keyProperties, entityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string KeyPropertiesWrongEntity (object? keyProperties, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="keyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The specified key properties {keyProperties} are not declared on the entity type '{entityType}'. Ensure key properties are declared on the target entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPropertyCannotBeNullable">
      <MemberSignature Language="C#" Value="public static string KeyPropertyCannotBeNullable (object property, object entityType, object key);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyPropertyCannotBeNullable(object property, object entityType, object key) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyPropertyCannotBeNullable(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPropertyCannotBeNullable (property As Object, entityType As Object, key As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member KeyPropertyCannotBeNullable : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyPropertyCannotBeNullable (property, entityType, key)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string KeyPropertyCannotBeNullable (object property, object entityType, object keyProperties);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyPropertyCannotBeNullable(object property, object entityType, object keyProperties) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPropertyCannotBeNullable (property As Object, entityType As Object, keyProperties As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member KeyPropertyCannotBeNullable : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyPropertyCannotBeNullable (property, entityType, keyProperties)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string KeyPropertyCannotBeNullable (object? property, object? entityType, object? keyProperties);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
        <Parameter Name="key" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="keyProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="key">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' cannot be marked as nullable/optional because it has been included in the key {keyProperties}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPropertyInForeignKey">
      <MemberSignature Language="C#" Value="public static string KeyPropertyInForeignKey (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyPropertyInForeignKey(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyPropertyInForeignKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPropertyInForeignKey (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyPropertyInForeignKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyPropertyInForeignKey (property, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' cannot be part of a key on '{entityType}' because it has value generation enabled and is contained in a foreign key defined on a derived entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPropertyMustBeReadOnly">
      <MemberSignature Language="C#" Value="public static string KeyPropertyMustBeReadOnly (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyPropertyMustBeReadOnly(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyPropertyMustBeReadOnly(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPropertyMustBeReadOnly (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyPropertyMustBeReadOnly : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyPropertyMustBeReadOnly (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string KeyPropertyMustBeReadOnly (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' must be marked as read-only after it has been saved because it is part of a key. Key properties are always read-only once an entity has been saved for the first time.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyReadOnly">
      <MemberSignature Language="C#" Value="public static string KeyReadOnly (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyReadOnly(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyReadOnly(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyReadOnly (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyReadOnly : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyReadOnly (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string KeyReadOnly (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' is part of a key and so cannot be modified or marked as modified. To change the principal of an existing entity with an identifying foreign key, first delete the dependent and invoke 'SaveChanges', and then associate the dependent with the new principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyWrongType">
      <MemberSignature Language="C#" Value="public static string KeyWrongType (object key, object otherEntityType, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyWrongType(object key, object otherEntityType, object entityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyWrongType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyWrongType (key As Object, otherEntityType As Object, entityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member KeyWrongType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyWrongType (key, otherEntityType, entityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string KeyWrongType (object keyProperties, object entityType, object otherEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyWrongType(object keyProperties, object entityType, object otherEntityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyWrongType (keyProperties As Object, entityType As Object, otherEntityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member KeyWrongType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.KeyWrongType (keyProperties, entityType, otherEntityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string KeyWrongType (object? keyProperties, object? entityType, object? otherEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="keyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <summary>
                The key {keyProperties} cannot be removed from the entity type '{entityType}' because it is defined on the entity type '{otherEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiteralGenerationNotSupported">
      <MemberSignature Language="C#" Value="public static string LiteralGenerationNotSupported (object type);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LiteralGenerationNotSupported(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.LiteralGenerationNotSupported(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LiteralGenerationNotSupported (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member LiteralGenerationNotSupported : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.LiteralGenerationNotSupported type" />
      <MemberSignature Language="C#" Value="public static string LiteralGenerationNotSupported (object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                The type mapping for '{type}' has not implemented code literal generation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManyToManyOneNav">
      <MemberSignature Language="C#" Value="public static string ManyToManyOneNav (object? entityType, object? navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ManyToManyOneNav(object entityType, object navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ManyToManyOneNav(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManyToManyOneNav (entityType As Object, navigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member ManyToManyOneNav : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ManyToManyOneNav (entityType, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                The navigation '{entityType}.{navigation}' cannot be used for both sides of a many-to-many relationship. Many-to-many relationships must use two distinct navigation properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingBackingField">
      <MemberSignature Language="C#" Value="public static string MissingBackingField (object field, object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MissingBackingField(object field, object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MissingBackingField(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MissingBackingField (field As Object, property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member MissingBackingField : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MissingBackingField (field, property, entityType)" />
      <MemberSignature Language="C#" Value="public static string MissingBackingField (object? field, object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="field">To be added.</param>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The specified field '{field}' could not be found for property '{2_entityType}.{1_property}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingInverseManyToManyNavigation">
      <MemberSignature Language="C#" Value="public static string MissingInverseManyToManyNavigation (object principalEntityType, object declaringEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MissingInverseManyToManyNavigation(object principalEntityType, object declaringEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MissingInverseManyToManyNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MissingInverseManyToManyNavigation (principalEntityType As Object, declaringEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member MissingInverseManyToManyNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MissingInverseManyToManyNavigation (principalEntityType, declaringEntityType)" />
      <MemberSignature Language="C#" Value="public static string MissingInverseManyToManyNavigation (object? principalEntityType, object? declaringEntityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="declaringEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="declaringEntityType">To be added.</param>
        <summary>
                Unable to set up a many-to-many relationship between the entity types '{principalEntityType}' and '{declaringEntityType}' because one of the navigations was not specified. Provide a navigation in the 'HasMany' call in 'OnModelCreating'. Consider adding a private property for this.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelMutable">
      <MemberSignature Language="C#" Value="public static string ModelMutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ModelMutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ModelMutable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ModelMutable As String" />
      <MemberSignature Language="F#" Value="static member ModelMutable : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ModelMutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Runtime metadata changes are not allowed when the model hasn't been marked as read-only.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelNotFinalized">
      <MemberSignature Language="C#" Value="public static string ModelNotFinalized (object method);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ModelNotFinalized(object method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ModelNotFinalized(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModelNotFinalized (method As Object) As String" />
      <MemberSignature Language="F#" Value="static member ModelNotFinalized : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ModelNotFinalized method" />
      <MemberSignature Language="C#" Value="public static string ModelNotFinalized (object? method);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <summary>
                The model must be finalized and its runtime dependencies must be initialized before '{method}' can be used. Ensure that either 'OnModelCreating' has completed or, if using a stand-alone 'ModelBuilder', that 'IModelRuntimeInitializer.Initialize(model.FinalizeModel())' was called.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelReadOnly">
      <MemberSignature Language="C#" Value="public static string ModelReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ModelReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ModelReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ModelReadOnly As String" />
      <MemberSignature Language="F#" Value="static member ModelReadOnly : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ModelReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Metadata changes are not allowed when the model has been marked as read-only.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleEntries">
      <MemberSignature Language="C#" Value="public static string MultipleEntries (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleEntries(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleEntries(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleEntries (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleEntries : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleEntries entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Cannot start tracking InternalEntityEntry for entity type '{entityType}' because another InternalEntityEntry is already tracking the same entity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleFilteredIncludesOnSameNavigation">
      <MemberSignature Language="C#" Value="public static string MultipleFilteredIncludesOnSameNavigation (object filter1, object filter2);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleFilteredIncludesOnSameNavigation(object filter1, object filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleFilteredIncludesOnSameNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleFilteredIncludesOnSameNavigation (filter1 As Object, filter2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleFilteredIncludesOnSameNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleFilteredIncludesOnSameNavigation (filter1, filter2)" />
      <MemberSignature Language="C#" Value="public static string MultipleFilteredIncludesOnSameNavigation (object? filter1, object? filter2);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter1" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="filter2" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="filter1">To be added.</param>
        <param name="filter2">To be added.</param>
        <summary>
                The filters '{filter1}' and '{filter2}' have both been configured on the same included navigation. Only one unique filter per navigation is allowed. For more information on including related data, see https://go.microsoft.com/fwlink/?LinkID=746393.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleNavigationsSameFk">
      <MemberSignature Language="C#" Value="public static string MultipleNavigationsSameFk (object entityType, object propertyList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleNavigationsSameFk(object entityType, object propertyList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleNavigationsSameFk(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleNavigationsSameFk (entityType As Object, propertyList As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleNavigationsSameFk : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleNavigationsSameFk (entityType, propertyList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="propertyList" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyList">To be added.</param>
        <summary>
                There are multiple navigations in entity type '{entityType}' which are pointing to same set of properties using a [ForeignKey] attribute: '{propertyList}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleNavigationsSameFk">
      <MemberSignature Language="C#" Value="public static string MultipleNavigationsSameFk (object? entityType, object? properties, object? navigations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleNavigationsSameFk(object entityType, object properties, object navigations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleNavigationsSameFk(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleNavigationsSameFk (entityType As Object, properties As Object, navigations As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleNavigationsSameFk : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleNavigationsSameFk (entityType, properties, navigations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="properties" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigations" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="properties">To be added.</param>
        <param name="navigations">To be added.</param>
        <summary>
                There are multiple navigations in entity type '{entityType}' which are pointing to same set of properties '{properties}' using a [ForeignKey] attribute: {navigations}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleOwnerships">
      <MemberSignature Language="C#" Value="public static string MultipleOwnerships (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleOwnerships(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleOwnerships(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleOwnerships (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleOwnerships : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleOwnerships entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' is the target of multiple ownership relationships.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleOwnerships">
      <MemberSignature Language="C#" Value="public static string MultipleOwnerships (object? entityType, object? navigations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleOwnerships(object entityType, object navigations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleOwnerships(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleOwnerships (entityType As Object, navigations As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleOwnerships : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleOwnerships (entityType, navigations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigations" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigations">To be added.</param>
        <summary>
                The entity type '{entityType}' is the target of multiple ownership relationships: {navigations}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleProvidersConfigured">
      <MemberSignature Language="C#" Value="public static string MultipleProvidersConfigured (object storeNames);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleProvidersConfigured(object storeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleProvidersConfigured(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleProvidersConfigured (storeNames As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleProvidersConfigured : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MultipleProvidersConfigured storeNames" />
      <MemberSignature Language="C#" Value="public static string MultipleProvidersConfigured (object? storeNames);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeNames" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeNames">To be added.</param>
        <summary>
                Services for database providers {storeNames} have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MustRewriteToSameNode">
      <MemberSignature Language="C#" Value="public static string MustRewriteToSameNode (object? caller, object? type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MustRewriteToSameNode(object caller, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MustRewriteToSameNode(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MustRewriteToSameNode (caller As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member MustRewriteToSameNode : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MustRewriteToSameNode (caller, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caller" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="caller">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                When called from '{caller}', rewriting a node of type '{type}' must return a non-null value of the same type. Alternatively, override '{caller}' and change it to not visit children of this type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MutableKeyProperty">
      <MemberSignature Language="C#" Value="public static string MutableKeyProperty (object keyProperty);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MutableKeyProperty(object keyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MutableKeyProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MutableKeyProperty (keyProperty As Object) As String" />
      <MemberSignature Language="F#" Value="static member MutableKeyProperty : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.MutableKeyProperty keyProperty" />
      <MemberSignature Language="C#" Value="public static string MutableKeyProperty (object? keyProperty);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyProperty" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyProperty">To be added.</param>
        <summary>
                The property '{keyProperty}' cannot be configured as 'ValueGeneratedOnUpdate' or 'ValueGeneratedOnAddOrUpdate' because it's part of a key and its value cannot be changed after the entity has been added to the store.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamedIndexDefinedOnIgnoredProperty">
      <MemberSignature Language="C#" Value="public static string NamedIndexDefinedOnIgnoredProperty (object indexName, object entityType, object indexPropertyList, object propertyName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NamedIndexDefinedOnIgnoredProperty(object indexName, object entityType, object indexPropertyList, object propertyName) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NamedIndexDefinedOnIgnoredProperty(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NamedIndexDefinedOnIgnoredProperty (indexName As Object, entityType As Object, indexPropertyList As Object, propertyName As Object) As String" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member NamedIndexDefinedOnIgnoredProperty : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NamedIndexDefinedOnIgnoredProperty (indexName, entityType, indexPropertyList, propertyName)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string NamedIndexDefinedOnIgnoredProperty (object? indexName, object? entityType, object? indexProperties, object? propertyName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NamedIndexDefinedOnIgnoredProperty(object indexName, object entityType, object indexProperties, object propertyName) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NamedIndexDefinedOnIgnoredProperty (indexName As Object, entityType As Object, indexProperties As Object, propertyName As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NamedIndexDefinedOnIgnoredProperty : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NamedIndexDefinedOnIgnoredProperty (indexName, entityType, indexProperties, propertyName)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="indexPropertyList" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="indexProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="indexName">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="indexPropertyList">To be added.</param>
        <param name="indexProperties">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                The index '{indexName}' specified via [Index] attribute on the entity type '{entityType}' with properties {indexProperties} is invalid. The property '{propertyName}' has been marked as unmapped via the [NotMapped] attribute or the 'EntityTypeBuilder.Ignore' fluent API. An index cannot use unmapped properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamedIndexDefinedOnNonExistentProperty">
      <MemberSignature Language="C#" Value="public static string NamedIndexDefinedOnNonExistentProperty (object indexName, object entityType, object indexPropertyList, object propertyName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NamedIndexDefinedOnNonExistentProperty(object indexName, object entityType, object indexPropertyList, object propertyName) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NamedIndexDefinedOnNonExistentProperty(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NamedIndexDefinedOnNonExistentProperty (indexName As Object, entityType As Object, indexPropertyList As Object, propertyName As Object) As String" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member NamedIndexDefinedOnNonExistentProperty : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NamedIndexDefinedOnNonExistentProperty (indexName, entityType, indexPropertyList, propertyName)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string NamedIndexDefinedOnNonExistentProperty (object? indexName, object? entityType, object? indexProperties, object? propertyName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NamedIndexDefinedOnNonExistentProperty(object indexName, object entityType, object indexProperties, object propertyName) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NamedIndexDefinedOnNonExistentProperty (indexName As Object, entityType As Object, indexProperties As Object, propertyName As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NamedIndexDefinedOnNonExistentProperty : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NamedIndexDefinedOnNonExistentProperty (indexName, entityType, indexProperties, propertyName)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="indexPropertyList" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="indexProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="indexName">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="indexPropertyList">To be added.</param>
        <param name="indexProperties">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                An index '{indexName}' specified via [Index] attribute on the entity type '{entityType}' references properties {indexProperties}, but no property with name '{propertyName}' exists on that entity type or any of its base types.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamedIndexWrongType">
      <MemberSignature Language="C#" Value="public static string NamedIndexWrongType (object indexName, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NamedIndexWrongType(object indexName, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NamedIndexWrongType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NamedIndexWrongType (indexName As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NamedIndexWrongType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NamedIndexWrongType (indexName, entityType)" />
      <MemberSignature Language="C#" Value="public static string NamedIndexWrongType (object? indexName, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="indexName">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The index with name {indexName} cannot be removed from the entity type '{entityType}' because no such index exists on that entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeAotNoCompiledModel">
      <MemberSignature Language="C#" Value="public static string NativeAotNoCompiledModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NativeAotNoCompiledModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NativeAotNoCompiledModel" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NativeAotNoCompiledModel As String" />
      <MemberSignature Language="F#" Value="static member NativeAotNoCompiledModel : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NativeAotNoCompiledModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Model building is not supported when publishing with NativeAOT. Use a compiled model.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationArray">
      <MemberSignature Language="C#" Value="public static string NavigationArray (object navigation, object entityType, object foundType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationArray(object navigation, object entityType, object foundType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationArray(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationArray (navigation As Object, entityType As Object, foundType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationArray : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationArray (navigation, entityType, foundType)" />
      <MemberSignature Language="C#" Value="public static string NavigationArray (object? navigation, object? entityType, object? foundType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="foundType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="foundType">To be added.</param>
        <summary>
                The type of navigation '{1_entityType}.{0_navigation}' is '{foundType}' which is an array type. Collection navigations cannot be arrays.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationBadType">
      <MemberSignature Language="C#" Value="public static string NavigationBadType (object navigation, object entityType, object foundType, object targetType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationBadType(object navigation, object entityType, object foundType, object targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationBadType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationBadType (navigation As Object, entityType As Object, foundType As Object, targetType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationBadType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationBadType (navigation, entityType, foundType, targetType)" />
      <MemberSignature Language="C#" Value="public static string NavigationBadType (object? navigation, object? entityType, object? foundType, object? targetType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="foundType" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="foundType">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                The type of navigation '{1_entityType}.{0_navigation}' is '{foundType}' which does not implement 'ICollection&lt;{targetType}&gt;'. Collection navigations must implement 'ICollection&lt;&gt;' of the target type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationCannotCreateType">
      <MemberSignature Language="C#" Value="public static string NavigationCannotCreateType (object navigation, object entityType, object foundType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationCannotCreateType(object navigation, object entityType, object foundType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationCannotCreateType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationCannotCreateType (navigation As Object, entityType As Object, foundType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationCannotCreateType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationCannotCreateType (navigation, entityType, foundType)" />
      <MemberSignature Language="C#" Value="public static string NavigationCannotCreateType (object? navigation, object? entityType, object? foundType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="foundType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="foundType">To be added.</param>
        <summary>
                The type of navigation '{1_entityType}.{0_navigation}' is '{foundType}' for which it was not possible to create a concrete instance. Either initialize the property before use, add a public parameterless constructor to the type, or use a type which can be assigned a 'HashSet&lt;&gt;' or 'List&lt;&gt;'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationCollectionWrongClrType">
      <MemberSignature Language="C#" Value="public static string NavigationCollectionWrongClrType (object navigation, object entityType, object clrType, object targetType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationCollectionWrongClrType(object navigation, object entityType, object clrType, object targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationCollectionWrongClrType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationCollectionWrongClrType (navigation As Object, entityType As Object, clrType As Object, targetType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationCollectionWrongClrType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationCollectionWrongClrType (navigation, entityType, clrType, targetType)" />
      <MemberSignature Language="C#" Value="public static string NavigationCollectionWrongClrType (object? navigation, object? entityType, object? clrType, object? targetType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="clrType" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="clrType">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                The collection navigation '{navigation}' cannot be added to the entity type '{entityType}' because its CLR type '{clrType}' does not implement 'IEnumerable&lt;{targetType}&gt;'. Collection navigations must implement IEnumerable&lt;&gt; of the related entity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationForWrongForeignKey">
      <MemberSignature Language="C#" Value="public static string NavigationForWrongForeignKey (object navigation, object entityType, object targetFk, object actualFk);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationForWrongForeignKey(object navigation, object entityType, object targetFk, object actualFk) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationForWrongForeignKey(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationForWrongForeignKey (navigation As Object, entityType As Object, targetFk As Object, actualFk As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="static member NavigationForWrongForeignKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationForWrongForeignKey (navigation, entityType, targetFk, actualFk)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string NavigationForWrongForeignKey (object? navigation, object? entityType, object? targetForeignKeyProperties, object? actualForeignKeyProperties);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationForWrongForeignKey(object navigation, object entityType, object targetForeignKeyProperties, object actualForeignKeyProperties) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationForWrongForeignKey (navigation As Object, entityType As Object, targetForeignKeyProperties As Object, actualForeignKeyProperties As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NavigationForWrongForeignKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationForWrongForeignKey (navigation, entityType, targetForeignKeyProperties, actualForeignKeyProperties)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
        <Parameter Name="targetFk" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="targetForeignKeyProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="actualFk" Type="System.Object" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="actualForeignKeyProperties" Type="System.Object" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="targetFk">To be added.</param>
        <param name="targetForeignKeyProperties">To be added.</param>
        <param name="actualFk">To be added.</param>
        <param name="actualForeignKeyProperties">To be added.</param>
        <summary>
                The navigation '{1_entityType}.{0_navigation}' cannot be associated with foreign key {targetForeignKeyProperties} because it was created for foreign key {actualForeignKeyProperties}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationFromShadowEntity">
      <MemberSignature Language="C#" Value="public static string NavigationFromShadowEntity (object? navigation, object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationFromShadowEntity(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationFromShadowEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationFromShadowEntity (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationFromShadowEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationFromShadowEntity (navigation, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The navigation '{navigation}' cannot be added to the entity type '{entityType}' because it is defined in shadow state, and navigations properties cannot originate from shadow state entities.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationIsProperty">
      <MemberSignature Language="C#" Value="public static string NavigationIsProperty (object property, object entityType, object ReferenceMethod, object CollectionMethod, object PropertyMethod);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationIsProperty(object property, object entityType, object ReferenceMethod, object CollectionMethod, object PropertyMethod) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationIsProperty(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationIsProperty (property As Object, entityType As Object, ReferenceMethod As Object, CollectionMethod As Object, PropertyMethod As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member NavigationIsProperty : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationIsProperty (property, entityType, ReferenceMethod, CollectionMethod, PropertyMethod)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string NavigationIsProperty (object property, object entityType, object referenceMethod, object collectionMethod, object propertyMethod);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationIsProperty(object property, object entityType, object referenceMethod, object collectionMethod, object propertyMethod) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationIsProperty (property As Object, entityType As Object, referenceMethod As Object, collectionMethod As Object, propertyMethod As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NavigationIsProperty : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationIsProperty (property, entityType, referenceMethod, collectionMethod, propertyMethod)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string NavigationIsProperty (object? property, object? entityType, object? referenceMethod, object? collectionMethod, object? propertyMethod);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
        <Parameter Name="ReferenceMethod" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="referenceMethod" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="CollectionMethod" Type="System.Object" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="collectionMethod" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="PropertyMethod" Type="System.Object" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="propertyMethod" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="ReferenceMethod">To be added.</param>
        <param name="referenceMethod">To be added.</param>
        <param name="CollectionMethod">To be added.</param>
        <param name="collectionMethod">To be added.</param>
        <param name="PropertyMethod">To be added.</param>
        <param name="propertyMethod">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' is being accessed using the '{referenceMethod}' or '{collectionMethod}' method, but is defined in the model as a non-navigation. Use the '{propertyMethod}' method to access non-navigation properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationlessOwnership">
      <MemberSignature Language="C#" Value="public static string NavigationlessOwnership (object? principalEntityType, object? dependentEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationlessOwnership(object principalEntityType, object dependentEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationlessOwnership(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationlessOwnership (principalEntityType As Object, dependentEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationlessOwnership : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationlessOwnership (principalEntityType, dependentEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dependentEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <summary>
                The relationship between '{principalEntityType}' and '{dependentEntityType}' cannot be configured as an ownership as there is no associated navigation to the owned type. An ownership must always have an associated navigation. See https://aka.ms/efcore-docs-owned for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationNoSetter">
      <MemberSignature Language="C#" Value="public static string NavigationNoSetter (object navigation, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationNoSetter(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationNoSetter(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationNoSetter (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationNoSetter : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationNoSetter (navigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string NavigationNoSetter (object? navigation, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The navigation '{1_entityType}.{0_navigation}' does not have a setter and no writable backing field was found or specified. Read-only collection navigations must be initialized before use.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationNotAdded">
      <MemberSignature Language="C#" Value="public static string NavigationNotAdded (object entityType, object navigation, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationNotAdded(object entityType, object navigation, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationNotAdded(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationNotAdded (entityType As Object, navigation As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationNotAdded : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationNotAdded (entityType, navigation, propertyType)" />
      <MemberSignature Language="C#" Value="public static string NavigationNotAdded (object? entityType, object? navigation, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                Unable to determine the relationship represented by navigation '{entityType}.{navigation}' of type '{propertyType}'. Either manually configure the relationship, or ignore this property using the '[NotMapped]' attribute or by using 'EntityTypeBuilder.Ignore' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationNotAddedAdHoc">
      <MemberSignature Language="C#" Value="public static string NavigationNotAddedAdHoc (object? entityType, object? navigation, object? propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationNotAddedAdHoc(object entityType, object navigation, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationNotAddedAdHoc(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationNotAddedAdHoc (entityType As Object, navigation As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationNotAddedAdHoc : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationNotAddedAdHoc (entityType, navigation, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="propertyType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{entityType}.{navigation}' of type '{propertyType}' appears to be a navigation to another entity type. Navigations are not supported when using 'SqlQuery". Either include this type in the model and use 'FromSql' for the query, or ignore this property using the '[NotMapped]' attribute.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationNotAddedComplexType">
      <MemberSignature Language="C#" Value="public static string NavigationNotAddedComplexType (object? complexType, object? navigation, object? propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationNotAddedComplexType(object complexType, object navigation, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationNotAddedComplexType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationNotAddedComplexType (complexType As Object, navigation As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationNotAddedComplexType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationNotAddedComplexType (complexType, navigation, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complexType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="propertyType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="complexType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                Unable to configure navigation '{complexType}.{navigation}' of type '{propertyType}' as complex types don't support navigations. Ignore this property using the '[NotMapped]' attribute or by using 'EntityTypeBuilder.Ignore' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationSingleWrongClrType">
      <MemberSignature Language="C#" Value="public static string NavigationSingleWrongClrType (object navigation, object entityType, object clrType, object targetType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationSingleWrongClrType(object navigation, object entityType, object clrType, object targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationSingleWrongClrType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationSingleWrongClrType (navigation As Object, entityType As Object, clrType As Object, targetType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationSingleWrongClrType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationSingleWrongClrType (navigation, entityType, clrType, targetType)" />
      <MemberSignature Language="C#" Value="public static string NavigationSingleWrongClrType (object? navigation, object? entityType, object? clrType, object? targetType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="clrType" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="clrType">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                The navigation '{navigation}' cannot be added to the entity type '{entityType}' because its CLR type '{clrType}' does not match the expected CLR type '{targetType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationToKeylessType">
      <MemberSignature Language="C#" Value="public static string NavigationToKeylessType (object navigation, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationToKeylessType(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationToKeylessType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationToKeylessType (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationToKeylessType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationToKeylessType (navigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string NavigationToKeylessType (object? navigation, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The navigation '{navigation}' cannot be added because it targets the keyless entity type '{entityType}'. Navigations can only target entity types with keys. For more information on keyless entity types, see https://go.microsoft.com/fwlink/?linkid=2141943.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationToShadowEntity">
      <MemberSignature Language="C#" Value="public static string NavigationToShadowEntity (object navigation, object entityType, object targetType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationToShadowEntity(object navigation, object entityType, object targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationToShadowEntity(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationToShadowEntity (navigation As Object, entityType As Object, targetType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationToShadowEntity : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NavigationToShadowEntity (navigation, entityType, targetType)" />
      <MemberSignature Language="C#" Value="public static string NavigationToShadowEntity (object? navigation, object? entityType, object? targetType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="targetType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                The navigation '{navigation}' cannot be added to the entity type '{entityType}' because the target entity type '{targetType}' is defined in shadow state, and navigations properties cannot point to shadow state entities.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoBackingField">
      <MemberSignature Language="C#" Value="public static string NoBackingField (object property, object entity, object pam);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoBackingField(object property, object entity, object pam) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoBackingField(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoBackingField (property As Object, entity As Object, pam As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member NoBackingField : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoBackingField (property, entity, pam)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string NoBackingField (object property, object entityType, object propertyAccessMode);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoBackingField(object property, object entityType, object propertyAccessMode) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoBackingField (property As Object, entityType As Object, propertyAccessMode As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NoBackingField : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoBackingField (property, entityType, propertyAccessMode)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string NoBackingField (object? property, object? entityType, object? propertyAccessMode);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entity" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="pam" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="propertyAccessMode" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="pam">To be added.</param>
        <param name="propertyAccessMode">To be added.</param>
        <summary>
                No backing field was found for property '{1_entityType}.{0_property}'. Name the backing field so that it is discovered by convention, configure the backing field to use, or use a different '{propertyAccessMode}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoBackingFieldLazyLoading">
      <MemberSignature Language="C#" Value="public static string NoBackingFieldLazyLoading (object property, object entity);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoBackingFieldLazyLoading(object property, object entity) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoBackingFieldLazyLoading(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoBackingFieldLazyLoading (property As Object, entity As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member NoBackingFieldLazyLoading : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoBackingFieldLazyLoading (property, entity)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string NoBackingFieldLazyLoading (object property, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoBackingFieldLazyLoading(object property, object entityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoBackingFieldLazyLoading (property As Object, entityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NoBackingFieldLazyLoading : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoBackingFieldLazyLoading (property, entityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string NoBackingFieldLazyLoading (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entity" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                No backing field was found for property '{1_entityType}.{0_property}'. Lazy-loaded navigations must have backing fields. Either name the backing field so that it is discovered by convention or configure the backing field to use.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoClrNavigation">
      <MemberSignature Language="C#" Value="public static string NoClrNavigation (object navigation, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoClrNavigation(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoClrNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoClrNavigation (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoClrNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoClrNavigation (navigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string NoClrNavigation (object? navigation, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The navigation '{navigation}' cannot be added to the entity type '{entityType}' because there is no corresponding CLR property on the underlying type and navigations properties cannot be added in shadow state.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoClrType">
      <MemberSignature Language="C#" Value="public static string NoClrType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoClrType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoClrType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoClrType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoClrType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoClrType entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The CLR entity materializer cannot be used for entity type '{entityType}' because it is a shadow state entity type. Materialization to a CLR type is only possible for entity types that have a corresponding CLR type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDefiningNavigation">
      <MemberSignature Language="C#" Value="public static string NoDefiningNavigation (object navigation, object entityType, object definingEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoDefiningNavigation(object navigation, object entityType, object definingEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoDefiningNavigation(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoDefiningNavigation (navigation As Object, entityType As Object, definingEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoDefiningNavigation : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoDefiningNavigation (navigation, entityType, definingEntityType)" />
      <MemberSignature Language="C#" Value="public static string NoDefiningNavigation (object? navigation, object? entityType, object? definingEntityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="definingEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="definingEntityType">To be added.</param>
        <summary>
                The navigation '{navigation}' used to define the entity type '{entityType}' is not present on '{definingEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDiscriminatorForValue">
      <MemberSignature Language="C#" Value="public static string NoDiscriminatorForValue (object entityType, object rootEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoDiscriminatorForValue(object entityType, object rootEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoDiscriminatorForValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoDiscriminatorForValue (entityType As Object, rootEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoDiscriminatorForValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoDiscriminatorForValue (entityType, rootEntityType)" />
      <MemberSignature Language="C#" Value="public static string NoDiscriminatorForValue (object? entityType, object? rootEntityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="rootEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="rootEntityType">To be added.</param>
        <summary>
                Cannot set the discriminator value for entity type '{entityType}' because the root entity type '{rootEntityType}' doesn't have a discriminator property configured.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDiscriminatorProperty">
      <MemberSignature Language="C#" Value="public static string NoDiscriminatorProperty (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoDiscriminatorProperty(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoDiscriminatorProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoDiscriminatorProperty (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoDiscriminatorProperty : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoDiscriminatorProperty entityType" />
      <MemberSignature Language="C#" Value="public static string NoDiscriminatorProperty (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' is part of a hierarchy, but does not have a discriminator property configured.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDiscriminatorValue">
      <MemberSignature Language="C#" Value="public static string NoDiscriminatorValue (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoDiscriminatorValue(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoDiscriminatorValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoDiscriminatorValue (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoDiscriminatorValue : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoDiscriminatorValue entityType" />
      <MemberSignature Language="C#" Value="public static string NoDiscriminatorValue (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' has a discriminator property, but does not have a discriminator value configured.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEfServices">
      <MemberSignature Language="C#" Value="public static string NoEfServices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoEfServices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoEfServices" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoEfServices As String" />
      <MemberSignature Language="F#" Value="static member NoEfServices : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoEfServices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Entity Framework services have not been added to the internal service provider. Either remove the call to 'UseInternalServiceProvider' so that Entity Framework will manage its own internal services, or use the method from your database provider to add the required services to the service provider (e.g. 'AddEntityFrameworkSqlServer').
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoElements">
      <MemberSignature Language="C#" Value="public static string NoElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoElements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoElements" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoElements As String" />
      <MemberSignature Language="F#" Value="static member NoElements : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Sequence contains no elements.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoFieldOrGetter">
      <MemberSignature Language="C#" Value="public static string NoFieldOrGetter (object property, object entity);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoFieldOrGetter(object property, object entity) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoFieldOrGetter(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoFieldOrGetter (property As Object, entity As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member NoFieldOrGetter : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoFieldOrGetter (property, entity)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string NoFieldOrGetter (object property, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoFieldOrGetter(object property, object entityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoFieldOrGetter (property As Object, entityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NoFieldOrGetter : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoFieldOrGetter (property, entityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string NoFieldOrGetter (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entity" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                No backing field could be found for property '{1_entityType}.{0_property}' and the property does not have a getter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoFieldOrSetter">
      <MemberSignature Language="C#" Value="public static string NoFieldOrSetter (object property, object entity);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoFieldOrSetter(object property, object entity) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoFieldOrSetter(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoFieldOrSetter (property As Object, entity As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member NoFieldOrSetter : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoFieldOrSetter (property, entity)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string NoFieldOrSetter (object property, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoFieldOrSetter(object property, object entityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoFieldOrSetter (property As Object, entityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NoFieldOrSetter : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoFieldOrSetter (property, entityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string NoFieldOrSetter (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entity" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                No backing field could be found for property '{1_entityType}.{0_property}' and the property does not have a setter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoGetter">
      <MemberSignature Language="C#" Value="public static string NoGetter (object property, object entity, object pam);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoGetter(object property, object entity, object pam) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoGetter(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoGetter (property As Object, entity As Object, pam As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member NoGetter : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoGetter (property, entity, pam)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string NoGetter (object property, object entityType, object propertyAccessMode);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoGetter(object property, object entityType, object propertyAccessMode) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoGetter (property As Object, entityType As Object, propertyAccessMode As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NoGetter : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoGetter (property, entityType, propertyAccessMode)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string NoGetter (object? property, object? entityType, object? propertyAccessMode);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entity" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="pam" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="propertyAccessMode" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="pam">To be added.</param>
        <param name="propertyAccessMode">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' does not have a getter. Either make the property readable or use a different '{propertyAccessMode}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoIndexer">
      <MemberSignature Language="C#" Value="public static string NoIndexer (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoIndexer(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoIndexer(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoIndexer (entity As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoIndexer : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoIndexer entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>
                An indexed property was added to entity type '{entity}'. But there is no public indexer on '{entity}' taking a single argument of type 'string' and returning type 'object'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoInterceptionResult">
      <MemberSignature Language="C#" Value="public static string NoInterceptionResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoInterceptionResult" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoInterceptionResult" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoInterceptionResult As String" />
      <MemberSignature Language="F#" Value="static member NoInterceptionResult : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoInterceptionResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                'InterceptionResult.Result' was called when 'InterceptionResult.HasResult' is false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoNavigation">
      <MemberSignature Language="C#" Value="public static string NoNavigation (object entityType, object foreignKey);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoNavigation(object entityType, object foreignKey) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoNavigation (entityType As Object, foreignKey As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member NoNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoNavigation (entityType, foreignKey)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string NoNavigation (object entityType, object foreignKeyProperties);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoNavigation(object entityType, object foreignKeyProperties) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoNavigation (entityType As Object, foreignKeyProperties As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="static member NoNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoNavigation (entityType, foreignKeyProperties)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public static string NoNavigation (object? entityType, object? foreignKeyProperties);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="foreignKey" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <summary>
                There is no navigation on entity type '{entityType}' associated with the foreign key {foreignKeyProperties}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonClrBaseType">
      <MemberSignature Language="C#" Value="public static string NonClrBaseType (object entityType, object baseEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonClrBaseType(object entityType, object baseEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonClrBaseType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonClrBaseType (entityType As Object, baseEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonClrBaseType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonClrBaseType (entityType, baseEntityType)" />
      <MemberSignature Language="C#" Value="public static string NonClrBaseType (object? entityType, object? baseEntityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="baseEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{baseEntityType}' is a shadow state entity type while '{entityType}' is not.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonComparableKeyType">
      <MemberSignature Language="C#" Value="public static string NonComparableKeyType (object entityType, object property, object providerType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonComparableKeyType(object entityType, object property, object providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonComparableKeyType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonComparableKeyType (entityType As Object, property As Object, providerType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonComparableKeyType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonComparableKeyType (entityType, property, providerType)" />
      <MemberSignature Language="C#" Value="public static string NonComparableKeyType (object? entityType, object? property, object? providerType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="providerType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="providerType">To be added.</param>
        <summary>
                Property '{entityType}.{property}' cannot be used as a key because it has type '{providerType}' which does not implement 'IComparable&lt;T&gt;', 'IComparable' or 'IStructuralComparable'. Use 'HasConversion' in 'OnModelCreating' to wrap '{providerType}' with a type that can be compared.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonComparableKeyTypes">
      <MemberSignature Language="C#" Value="public static string NonComparableKeyTypes (object entityType, object property, object modelType, object providerType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonComparableKeyTypes(object entityType, object property, object modelType, object providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonComparableKeyTypes(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonComparableKeyTypes (entityType As Object, property As Object, modelType As Object, providerType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonComparableKeyTypes : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonComparableKeyTypes (entityType, property, modelType, providerType)" />
      <MemberSignature Language="C#" Value="public static string NonComparableKeyTypes (object? entityType, object? property, object? modelType, object? providerType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="modelType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="providerType" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="modelType">To be added.</param>
        <param name="providerType">To be added.</param>
        <summary>
                Property '{entityType}.{property}' cannot be used as a key because it has type '{modelType}' and provider type '{providerType}', neither of which implement 'IComparable&lt;T&gt;', 'IComparable' or 'IStructuralComparable'. Make '{modelType}' implement one of these interfaces to use it as a key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonConfiguredNavigationToSharedType">
      <MemberSignature Language="C#" Value="public static string NonConfiguredNavigationToSharedType (object navigation, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonConfiguredNavigationToSharedType(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonConfiguredNavigationToSharedType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonConfiguredNavigationToSharedType (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonConfiguredNavigationToSharedType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonConfiguredNavigationToSharedType (navigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string NonConfiguredNavigationToSharedType (object? navigation, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The navigation '{1_entityType}.{0_navigation}' must be configured in 'OnModelCreating' with an explicit name for the target shared-type entity type, or excluded by calling 'EntityTypeBuilder.Ignore'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonDefiningOwnership">
      <MemberSignature Language="C#" Value="public static string NonDefiningOwnership (object ownershipNavigation, object definingNavigation, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonDefiningOwnership(object ownershipNavigation, object definingNavigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonDefiningOwnership(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonDefiningOwnership (ownershipNavigation As Object, definingNavigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonDefiningOwnership : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonDefiningOwnership (ownershipNavigation, definingNavigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string NonDefiningOwnership (object? ownershipNavigation, object? definingNavigation, object? entityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownershipNavigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="definingNavigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="ownershipNavigation">To be added.</param>
        <param name="definingNavigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{2_entityType}' owned by '{0_ownershipNavigation}' should use defining navigation '{1_definingNavigation}' for .
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonGenericOptions">
      <MemberSignature Language="C#" Value="public static string NonGenericOptions (object contextType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonGenericOptions(object contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonGenericOptions(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonGenericOptions (contextType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonGenericOptions : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonGenericOptions contextType" />
      <MemberSignature Language="C#" Value="public static string NonGenericOptions (object? contextType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contextType">To be added.</param>
        <summary>
                The DbContextOptions passed to the {contextType} constructor must be a DbContextOptions&lt;{contextType}&gt;. When registering multiple DbContext types, make sure that the constructor for each context type has a DbContextOptions&lt;TContext&gt; parameter rather than a non-generic DbContextOptions parameter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonIndexerEntityType">
      <MemberSignature Language="C#" Value="public static string NonIndexerEntityType (object property, object entityType, object type);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonIndexerEntityType(object property, object entityType, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonIndexerEntityType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonIndexerEntityType (property As Object, entityType As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonIndexerEntityType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonIndexerEntityType (property, entityType, type)" />
      <MemberSignature Language="C#" Value="public static string NonIndexerEntityType (object? property, object? entityType, object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="type" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                Cannot add indexer property '{property}' since there is no indexer on '{entityType}' taking a single argument of type assignable from '{type}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonNotifyingCollection">
      <MemberSignature Language="C#" Value="public static string NonNotifyingCollection (object navigation, object entityType, object changeTrackingStrategy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonNotifyingCollection(object navigation, object entityType, object changeTrackingStrategy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonNotifyingCollection(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonNotifyingCollection (navigation As Object, entityType As Object, changeTrackingStrategy As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonNotifyingCollection : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonNotifyingCollection (navigation, entityType, changeTrackingStrategy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="changeTrackingStrategy" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="changeTrackingStrategy">To be added.</param>
        <summary>
                The collection type being used for navigation '{1_entityType}.{0_navigation}' does not implement 'INotifyCollectionChanged'. Any entity type configured to use the '{changeTrackingStrategy}' change tracking strategy must use collections that implement 'INotifyCollectionChanged'. Consider using 'ObservableCollection&lt;T&gt;' for this.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonNotifyingCollection">
      <MemberSignature Language="C#" Value="public static string NonNotifyingCollection (object? navigation, object? entityType, object? collectionType, object? changeTrackingStrategy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonNotifyingCollection(object navigation, object entityType, object collectionType, object changeTrackingStrategy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonNotifyingCollection(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonNotifyingCollection (navigation As Object, entityType As Object, collectionType As Object, changeTrackingStrategy As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonNotifyingCollection : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonNotifyingCollection (navigation, entityType, collectionType, changeTrackingStrategy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="collectionType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="changeTrackingStrategy" Type="System.Object" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="collectionType">To be added.</param>
        <param name="changeTrackingStrategy">To be added.</param>
        <summary>
                The collection type '{2_collectionType}' being used for navigation '{1_entityType}.{0_navigation}' does not implement 'INotifyCollectionChanged'. Any entity type configured to use the '{changeTrackingStrategy}' change tracking strategy must use collections that implement 'INotifyCollectionChanged'. Consider using 'ObservableCollection&lt;T&gt;' for this.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonShadowBaseType">
      <MemberSignature Language="C#" Value="public static string NonShadowBaseType (object entityType, object baseEntityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonShadowBaseType(object entityType, object baseEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonShadowBaseType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonShadowBaseType (entityType As Object, baseEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonShadowBaseType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonShadowBaseType (entityType, baseEntityType)" />
      <MemberSignature Language="C#" Value="public static string NonShadowBaseType (object? entityType, object? baseEntityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="baseEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{entityType}' is a shadow state entity type while '{baseEntityType}' is not.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonUniqueRequiredDependentForeignKey">
      <MemberSignature Language="C#" Value="public static string NonUniqueRequiredDependentForeignKey (object foreignKeyProperties, object declaringEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonUniqueRequiredDependentForeignKey(object foreignKeyProperties, object declaringEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonUniqueRequiredDependentForeignKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonUniqueRequiredDependentForeignKey (foreignKeyProperties As Object, declaringEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonUniqueRequiredDependentForeignKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonUniqueRequiredDependentForeignKey (foreignKeyProperties, declaringEntityType)" />
      <MemberSignature Language="C#" Value="public static string NonUniqueRequiredDependentForeignKey (object? foreignKeyProperties, object? declaringEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="declaringEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="declaringEntityType">To be added.</param>
        <summary>
                The foreign key {foreignKeyProperties} on the entity type '{declaringEntityType}' cannot have a required dependent end since it is not unique.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonUniqueRequiredDependentNavigation">
      <MemberSignature Language="C#" Value="public static string NonUniqueRequiredDependentNavigation (object principalEntityType, object principalNavigation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonUniqueRequiredDependentNavigation(object principalEntityType, object principalNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonUniqueRequiredDependentNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonUniqueRequiredDependentNavigation (principalEntityType As Object, principalNavigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonUniqueRequiredDependentNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NonUniqueRequiredDependentNavigation (principalEntityType, principalNavigation)" />
      <MemberSignature Language="C#" Value="public static string NonUniqueRequiredDependentNavigation (object? principalEntityType, object? principalNavigation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalNavigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="principalNavigation">To be added.</param>
        <summary>
                '{principalEntityType}.{principalNavigation}' cannot be configured as required since it was configured as a collection.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoParameterlessConstructor">
      <MemberSignature Language="C#" Value="public static string NoParameterlessConstructor (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoParameterlessConstructor(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoParameterlessConstructor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoParameterlessConstructor (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoParameterlessConstructor : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoParameterlessConstructor entityType" />
      <MemberSignature Language="C#" Value="public static string NoParameterlessConstructor (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                A parameterless constructor was not found on entity type '{entityType}'. In order to create an instance of '{entityType}', Entity Framework requires that a parameterless constructor be declared.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProperty">
      <MemberSignature Language="C#" Value="public static string NoProperty (object field, object entity, object pam);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoProperty(object field, object entity, object pam) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoProperty (field As Object, entity As Object, pam As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member NoProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoProperty (field, entity, pam)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string NoProperty (object field, object entity, object propertyAccessMode);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoProperty(object field, object entity, object propertyAccessMode) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoProperty (field As Object, entity As Object, propertyAccessMode As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NoProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoProperty (field, entity, propertyAccessMode)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string NoProperty (object? field, object? entity, object? propertyAccessMode);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Object" Index="0" />
        <Parameter Name="entity" Type="System.Object" Index="1" />
        <Parameter Name="pam" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="propertyAccessMode" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="field">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="pam">To be added.</param>
        <param name="propertyAccessMode">To be added.</param>
        <summary>
                No property was associated with field '{field}' of entity type '{entity}'. Either configure a property or use a different '{propertyAccessMode}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoPropertyType">
      <MemberSignature Language="C#" Value="public static string NoPropertyType (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoPropertyType(object property, object entityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoPropertyType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoPropertyType (property As Object, entityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member NoPropertyType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoPropertyType (property, entityType)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string NoPropertyType (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string NoPropertyType (object? property, object? type);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoPropertyType(object property, object type) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoPropertyType (property As Object, type As Object) As String" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NoPropertyType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoPropertyType (property, type)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                The property '{property}' cannot be added to the type '{type}' because no property type was specified and there is no corresponding CLR property or field. To add a shadow state property, the property type must be specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProviderConfigured">
      <MemberSignature Language="C#" Value="public static string NoProviderConfigured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoProviderConfigured" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoProviderConfigured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoProviderConfigured As String" />
      <MemberSignature Language="F#" Value="static member NoProviderConfigured : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoProviderConfigured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                No database provider has been configured for this DbContext. A provider can be configured by overriding the 'DbContext.OnConfiguring' method or by using 'AddDbContext' on the application service provider. If 'AddDbContext' is used, then also ensure that your DbContext type accepts a DbContextOptions&lt;TContext&gt; object in its constructor and passes it to the base constructor for DbContext.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProviderConfiguredFailedToResolveService">
      <MemberSignature Language="C#" Value="public static string NoProviderConfiguredFailedToResolveService (object service);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoProviderConfiguredFailedToResolveService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoProviderConfiguredFailedToResolveService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoProviderConfiguredFailedToResolveService (service As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoProviderConfiguredFailedToResolveService : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoProviderConfiguredFailedToResolveService service" />
      <MemberSignature Language="C#" Value="public static string NoProviderConfiguredFailedToResolveService (object? service);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>
                Unable to resolve service for type '{service}'. This is often because no database provider has been configured for this DbContext. A provider can be configured by overriding the 'DbContext.OnConfiguring' method or by using 'AddDbContext' on the application service provider. If 'AddDbContext' is used, then also ensure that your DbContext type accepts a DbContextOptions&lt;TContext&gt; object in its constructor and passes it to the base constructor for DbContext.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSetter">
      <MemberSignature Language="C#" Value="public static string NoSetter (object property, object entity, object pam);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoSetter(object property, object entity, object pam) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoSetter(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoSetter (property As Object, entity As Object, pam As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member NoSetter : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoSetter (property, entity, pam)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string NoSetter (object property, object entityType, object propertyAccessMode);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoSetter(object property, object entityType, object propertyAccessMode) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoSetter (property As Object, entityType As Object, propertyAccessMode As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member NoSetter : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoSetter (property, entityType, propertyAccessMode)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string NoSetter (object? property, object? entityType, object? propertyAccessMode);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entity" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="pam" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="propertyAccessMode" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="pam">To be added.</param>
        <param name="propertyAccessMode">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' does not have a setter. Either make the property writable or use a different '{propertyAccessMode}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotAnEFService">
      <MemberSignature Language="C#" Value="public static string NotAnEFService (object service);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NotAnEFService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NotAnEFService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotAnEFService (service As Object) As String" />
      <MemberSignature Language="F#" Value="static member NotAnEFService : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NotAnEFService service" />
      <MemberSignature Language="C#" Value="public static string NotAnEFService (object? service);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>
                The database provider attempted to register an implementation of the '{service}' service. This is not a service defined by Entity Framework and as such must be registered as a provider-specific service using the 'TryAddProviderSpecificServices' method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotAProviderService">
      <MemberSignature Language="C#" Value="public static string NotAProviderService (object? service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NotAProviderService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NotAProviderService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotAProviderService (service As Object) As String" />
      <MemberSignature Language="F#" Value="static member NotAProviderService : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NotAProviderService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>
                The database provider attempted to register an implementation of the '{service}' service. This is a service defined by Entity Framework and as such must not be registered using the 'TryAddProviderSpecificServices' method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotAssignableClrBaseType">
      <MemberSignature Language="C#" Value="public static string NotAssignableClrBaseType (object entityType, object baseEntityType, object clrType, object baseClrType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NotAssignableClrBaseType(object entityType, object baseEntityType, object clrType, object baseClrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NotAssignableClrBaseType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotAssignableClrBaseType (entityType As Object, baseEntityType As Object, clrType As Object, baseClrType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NotAssignableClrBaseType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NotAssignableClrBaseType (entityType, baseEntityType, clrType, baseClrType)" />
      <MemberSignature Language="C#" Value="public static string NotAssignableClrBaseType (object? entityType, object? baseEntityType, object? clrType, object? baseClrType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseEntityType" Type="System.Object" />
        <Parameter Name="clrType" Type="System.Object" />
        <Parameter Name="baseClrType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <param name="clrType">To be added.</param>
        <param name="baseClrType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{clrType}' is not a descendant of '{baseClrType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotCollection">
      <MemberSignature Language="C#" Value="public static string NotCollection (object? entityType, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NotCollection(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NotCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotCollection (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member NotCollection : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NotCollection (entityType, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The property '{entityType}.{property}' cannot be mapped as a collection since it does not implement 'IEnumerable&lt;T&gt;'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotQueryingEnumerable">
      <MemberSignature Language="C#" Value="public static string NotQueryingEnumerable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NotQueryingEnumerable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NotQueryingEnumerable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NotQueryingEnumerable As String" />
      <MemberSignature Language="F#" Value="static member NotQueryingEnumerable : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NotQueryingEnumerable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The given 'IQueryable' does not support generation of query strings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoValueGenerator">
      <MemberSignature Language="C#" Value="public static string NoValueGenerator (object property, object entityType, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoValueGenerator(object property, object entityType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoValueGenerator(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoValueGenerator (property As Object, entityType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoValueGenerator : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NoValueGenerator (property, entityType, propertyType)" />
      <MemberSignature Language="C#" Value="public static string NoValueGenerator (object? property, object? entityType, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' does not have a value set and no value generator is available for properties of type '{propertyType}'. Either set a value for the property before adding the entity or configure a value generator for properties of type '{propertyType}' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullableKey">
      <MemberSignature Language="C#" Value="public static string NullableKey (object entityType, object property);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NullableKey(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NullableKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NullableKey (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member NullableKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NullableKey (entityType, property)" />
      <MemberSignature Language="C#" Value="public static string NullableKey (object? entityType, object? property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                A key on entity type '{entityType}' cannot contain the property '{property}' because it is nullable/optional. All properties on which a key is declared must be marked as non-nullable/required.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullRequiredComplexProperty">
      <MemberSignature Language="C#" Value="public static string NullRequiredComplexProperty (object? type, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NullRequiredComplexProperty(object type, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NullRequiredComplexProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NullRequiredComplexProperty (type As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member NullRequiredComplexProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NullRequiredComplexProperty (type, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The complex type property '{type}.{property}' is configured as required (non-nullable) but has a null value when saving changes. Only non-null complex properties are supported by EF Core 8.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullRequiredPrimitiveCollection">
      <MemberSignature Language="C#" Value="public static string NullRequiredPrimitiveCollection (object? type, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NullRequiredPrimitiveCollection(object type, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NullRequiredPrimitiveCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NullRequiredPrimitiveCollection (type As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member NullRequiredPrimitiveCollection : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.NullRequiredPrimitiveCollection (type, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The primitive collection property '{type}.{property}' is configured as required (non-nullable) but has a null value when saving changes. Either mark the property as optional (nullable) or set a non-null value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectRemovedFromModel">
      <MemberSignature Language="C#" Value="public static string ObjectRemovedFromModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ObjectRemovedFromModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ObjectRemovedFromModel" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ObjectRemovedFromModel As String" />
      <MemberSignature Language="F#" Value="static member ObjectRemovedFromModel : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ObjectRemovedFromModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The object has been removed from the model.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionsExtensionNotFound">
      <MemberSignature Language="C#" Value="public static string OptionsExtensionNotFound (object optionsExtension);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string OptionsExtensionNotFound(object optionsExtension) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OptionsExtensionNotFound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OptionsExtensionNotFound (optionsExtension As Object) As String" />
      <MemberSignature Language="F#" Value="static member OptionsExtensionNotFound : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OptionsExtensionNotFound optionsExtension" />
      <MemberSignature Language="C#" Value="public static string OptionsExtensionNotFound (object? optionsExtension);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionsExtension" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="optionsExtension">To be added.</param>
        <summary>
                Options extension of type '{optionsExtension}' not found.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValueNotTracked">
      <MemberSignature Language="C#" Value="public static string OriginalValueNotTracked (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string OriginalValueNotTracked(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OriginalValueNotTracked(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OriginalValueNotTracked (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member OriginalValueNotTracked : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OriginalValueNotTracked (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string OriginalValueNotTracked (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The original value for property '{1_entityType}.{0_property}' cannot be accessed because it is not being tracked. Original values are not recorded for most properties of entities when the 'ChangingAndChangedNotifications' strategy is used. To access all original values, use a different change tracking strategy such as 'ChangingAndChangedNotificationsWithOriginalValues'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnedDerivedType">
      <MemberSignature Language="C#" Value="public static string OwnedDerivedType (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string OwnedDerivedType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OwnedDerivedType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OwnedDerivedType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member OwnedDerivedType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OwnedDerivedType entityType" />
      <MemberSignature Language="C#" Value="public static string OwnedDerivedType (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The owned entity type '{entityType}' cannot have a base type. See https://aka.ms/efcore-docs-owned for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnedEntitiesCannotBeTrackedWithoutTheirOwner">
      <MemberSignature Language="C#" Value="public static string OwnedEntitiesCannotBeTrackedWithoutTheirOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string OwnedEntitiesCannotBeTrackedWithoutTheirOwner" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OwnedEntitiesCannotBeTrackedWithoutTheirOwner" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OwnedEntitiesCannotBeTrackedWithoutTheirOwner As String" />
      <MemberSignature Language="F#" Value="static member OwnedEntitiesCannotBeTrackedWithoutTheirOwner : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OwnedEntitiesCannotBeTrackedWithoutTheirOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A tracking query is attempting to project an owned entity without a corresponding owner in its result, but owned entities cannot be tracked without their owner. Either include the owner entity in the result or make the query non-tracking using 'AsNoTracking'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerlessOwnedType">
      <MemberSignature Language="C#" Value="public static string OwnerlessOwnedType (object ownedType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string OwnerlessOwnedType(object ownedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OwnerlessOwnedType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OwnerlessOwnedType (ownedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member OwnerlessOwnedType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OwnerlessOwnedType ownedType" />
      <MemberSignature Language="C#" Value="public static string OwnerlessOwnedType (object? ownedType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ownedType">To be added.</param>
        <summary>
                The entity type '{ownedType}' has been marked as owned and must be referenced from another entity type via a navigation. Add a navigation to an entity type that points at '{ownedType}' or don't configure it as owned.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnershipToDependent">
      <MemberSignature Language="C#" Value="public static string OwnershipToDependent (object? navigation, object? principalEntityType, object? dependentEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string OwnershipToDependent(object navigation, object principalEntityType, object dependentEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OwnershipToDependent(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OwnershipToDependent (navigation As Object, principalEntityType As Object, dependentEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member OwnershipToDependent : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.OwnershipToDependent (navigation, principalEntityType, dependentEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dependentEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <summary>
                The navigation '{navigation}' cannot be changed, because the foreign key between '{principalEntityType}' and '{dependentEntityType}' is an ownership. To change the navigation to the owned entity type remove the ownership.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PoolingContextCtorError">
      <MemberSignature Language="C#" Value="public static string PoolingContextCtorError (object contextType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PoolingContextCtorError(object contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PoolingContextCtorError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PoolingContextCtorError (contextType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PoolingContextCtorError : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PoolingContextCtorError contextType" />
      <MemberSignature Language="C#" Value="public static string PoolingContextCtorError (object? contextType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contextType">To be added.</param>
        <summary>
                The DbContext of type '{contextType}' cannot be pooled because it does not have a public constructor accepting a single parameter of type DbContextOptions or has more than one constructor.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PoolingOptionsModified">
      <MemberSignature Language="C#" Value="public static string PoolingOptionsModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PoolingOptionsModified" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PoolingOptionsModified" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PoolingOptionsModified As String" />
      <MemberSignature Language="F#" Value="static member PoolingOptionsModified : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PoolingOptionsModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                'OnConfiguring' cannot be used to modify DbContextOptions when DbContext pooling is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyAttributeOnDerivedEntity">
      <MemberSignature Language="C#" Value="public static string PrimaryKeyAttributeOnDerivedEntity (object? derivedType, object? rootType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PrimaryKeyAttributeOnDerivedEntity(object derivedType, object rootType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrimaryKeyAttributeOnDerivedEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrimaryKeyAttributeOnDerivedEntity (derivedType As Object, rootType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PrimaryKeyAttributeOnDerivedEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrimaryKeyAttributeOnDerivedEntity (derivedType, rootType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="derivedType" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="rootType" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="derivedType">To be added.</param>
        <param name="rootType">To be added.</param>
        <summary>
                The derived type '{derivedType}' cannot have the [PrimaryKey] attribute since primary keys may only be declared on the root type. Move the attribute to '{rootType}', or remove '{rootType}' from the model by using [NotMapped] attribute or calling 'EntityTypeBuilder.Ignore' on the base type in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyDefinedOnIgnoredProperty">
      <MemberSignature Language="C#" Value="public static string PrimaryKeyDefinedOnIgnoredProperty (object? entityType, object? propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PrimaryKeyDefinedOnIgnoredProperty(object entityType, object propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrimaryKeyDefinedOnIgnoredProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrimaryKeyDefinedOnIgnoredProperty (entityType As Object, propertyName As Object) As String" />
      <MemberSignature Language="F#" Value="static member PrimaryKeyDefinedOnIgnoredProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrimaryKeyDefinedOnIgnoredProperty (entityType, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                The [PrimaryKey] attribute on the entity type '{entityType}' is invalid because the property '{propertyName}' was marked as unmapped by [NotMapped] attribute or 'Ignore()' in 'OnModelCreating'. A primary key cannot use unmapped properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyDefinedOnNonExistentProperty">
      <MemberSignature Language="C#" Value="public static string PrimaryKeyDefinedOnNonExistentProperty (object? entityType, object? properties, object? propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PrimaryKeyDefinedOnNonExistentProperty(object entityType, object properties, object propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrimaryKeyDefinedOnNonExistentProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrimaryKeyDefinedOnNonExistentProperty (entityType As Object, properties As Object, propertyName As Object) As String" />
      <MemberSignature Language="F#" Value="static member PrimaryKeyDefinedOnNonExistentProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrimaryKeyDefinedOnNonExistentProperty (entityType, properties, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="properties" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="properties">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                The [PrimaryKey] attribute on the entity type '{entityType}' references properties {properties}, but no property with name '{propertyName}' exists on that entity type or any of its base types.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalEndIncompatibleNavigations">
      <MemberSignature Language="C#" Value="public static string PrincipalEndIncompatibleNavigations (object? navigationSpecification1, object? navigationSpecification2, object? targetEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PrincipalEndIncompatibleNavigations(object navigationSpecification1, object navigationSpecification2, object targetEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrincipalEndIncompatibleNavigations(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrincipalEndIncompatibleNavigations (navigationSpecification1 As Object, navigationSpecification2 As Object, targetEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PrincipalEndIncompatibleNavigations : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrincipalEndIncompatibleNavigations (navigationSpecification1, navigationSpecification2, targetEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationSpecification1" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationSpecification2" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="targetEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigationSpecification1">To be added.</param>
        <param name="navigationSpecification2">To be added.</param>
        <param name="targetEntityType">To be added.</param>
        <summary>
                When creating the relationship between '{navigationSpecification1}' and '{navigationSpecification2}' the entity type '{targetEntityType}' cannot be set as principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalEntityTypeNotInRelationship">
      <MemberSignature Language="C#" Value="public static string PrincipalEntityTypeNotInRelationship (object dependentEntityType, object principalEntityType, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PrincipalEntityTypeNotInRelationship(object dependentEntityType, object principalEntityType, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrincipalEntityTypeNotInRelationship(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrincipalEntityTypeNotInRelationship (dependentEntityType As Object, principalEntityType As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PrincipalEntityTypeNotInRelationship : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrincipalEntityTypeNotInRelationship (dependentEntityType, principalEntityType, entityType)" />
      <MemberSignature Language="C#" Value="public static string PrincipalEntityTypeNotInRelationship (object? dependentEntityType, object? principalEntityType, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityType" Type="System.Object" />
        <Parameter Name="principalEntityType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentEntityType">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                You are configuring a relationship between '{dependentEntityType}' and '{principalEntityType}', but have specified a principal key on '{entityType}'. The foreign key must target a type that is part of the relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalKeylessType">
      <MemberSignature Language="C#" Value="public static string PrincipalKeylessType (object entityType, object firstNavigationSpecification, object secondNavigationSpecification);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PrincipalKeylessType(object entityType, object firstNavigationSpecification, object secondNavigationSpecification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrincipalKeylessType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrincipalKeylessType (entityType As Object, firstNavigationSpecification As Object, secondNavigationSpecification As Object) As String" />
      <MemberSignature Language="F#" Value="static member PrincipalKeylessType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrincipalKeylessType (entityType, firstNavigationSpecification, secondNavigationSpecification)" />
      <MemberSignature Language="C#" Value="public static string PrincipalKeylessType (object? entityType, object? firstNavigationSpecification, object? secondNavigationSpecification);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="firstNavigationSpecification" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="secondNavigationSpecification" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="firstNavigationSpecification">To be added.</param>
        <param name="secondNavigationSpecification">To be added.</param>
        <summary>
                The keyless entity type '{entityType}' cannot be on the principal end of the relationship between '{firstNavigationSpecification}' and '{secondNavigationSpecification}'. The principal entity type must have a key. For more information on keyless entity types, see https://go.microsoft.com/fwlink/?linkid=2141943.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalOwnedType">
      <MemberSignature Language="C#" Value="public static string PrincipalOwnedType (object referencingEntityTypeOrNavigation, object referencedEntityTypeOrNavigation, object ownedType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PrincipalOwnedType(object referencingEntityTypeOrNavigation, object referencedEntityTypeOrNavigation, object ownedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrincipalOwnedType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrincipalOwnedType (referencingEntityTypeOrNavigation As Object, referencedEntityTypeOrNavigation As Object, ownedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PrincipalOwnedType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PrincipalOwnedType (referencingEntityTypeOrNavigation, referencedEntityTypeOrNavigation, ownedType)" />
      <MemberSignature Language="C#" Value="public static string PrincipalOwnedType (object? referencingEntityTypeOrNavigation, object? referencedEntityTypeOrNavigation, object? ownedType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referencingEntityTypeOrNavigation" Type="System.Object" />
        <Parameter Name="referencedEntityTypeOrNavigation" Type="System.Object" />
        <Parameter Name="ownedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="referencingEntityTypeOrNavigation">To be added.</param>
        <param name="referencedEntityTypeOrNavigation">To be added.</param>
        <param name="ownedType">To be added.</param>
        <summary>
                The relationship from '{referencingEntityTypeOrNavigation}' to '{referencedEntityTypeOrNavigation}' is not supported because the owned entity type '{ownedType}' cannot be on the principal side of a non-ownership relationship. Remove the relationship or configure the foreign key to be on '{ownedType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCalledOnNavigation">
      <MemberSignature Language="C#" Value="public static string PropertyCalledOnNavigation (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyCalledOnNavigation(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyCalledOnNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyCalledOnNavigation (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyCalledOnNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyCalledOnNavigation (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string PropertyCalledOnNavigation (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                '{property}' cannot be used as a property on entity type '{entityType}' because it is configured as a navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyClashingNonIndexer">
      <MemberSignature Language="C#" Value="public static string PropertyClashingNonIndexer (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyClashingNonIndexer(object property, object entityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyClashingNonIndexer(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyClashingNonIndexer (property As Object, entityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member PropertyClashingNonIndexer : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyClashingNonIndexer (property, entityType)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyClashingNonIndexer (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyClashingNonIndexer (object? property, object? type);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyClashingNonIndexer(object property, object type) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyClashingNonIndexer (property As Object, type As Object) As String" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member PropertyClashingNonIndexer : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyClashingNonIndexer (property, type)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                The indexer property '{property}' cannot be added to the type '{type}' because the CLR type contains a member with the same name. Specify a different name or configure '{property}' as a non-indexer property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyConceptualNull">
      <MemberSignature Language="C#" Value="public static string PropertyConceptualNull (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyConceptualNull(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyConceptualNull(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyConceptualNull (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyConceptualNull : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyConceptualNull (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string PropertyConceptualNull (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' contains null, but the property is marked as required.  Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyConceptualNullSensitive">
      <MemberSignature Language="C#" Value="public static string PropertyConceptualNullSensitive (object property, object entityType, object keyValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyConceptualNullSensitive(object property, object entityType, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyConceptualNullSensitive(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyConceptualNullSensitive (property As Object, entityType As Object, keyValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyConceptualNullSensitive : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyConceptualNullSensitive (property, entityType, keyValue)" />
      <MemberSignature Language="C#" Value="public static string PropertyConceptualNullSensitive (object? property, object? entityType, object? keyValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <summary>
                The property '{property}' contains null on entity '{entityType}' with the key value '{keyValue}', but the property is marked as required.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDoesNotBelong">
      <MemberSignature Language="C#" Value="public static string PropertyDoesNotBelong (object property, object entityType, object expectedType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyDoesNotBelong(object property, object entityType, object expectedType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyDoesNotBelong(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyDoesNotBelong (property As Object, entityType As Object, expectedType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member PropertyDoesNotBelong : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyDoesNotBelong (property, entityType, expectedType)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyDoesNotBelong (object? property, object? entityType, object? expectedType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyDoesNotBelong (object? property, object? expectedType, object? actualType);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyDoesNotBelong(object property, object expectedType, object actualType) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyDoesNotBelong (property As Object, expectedType As Object, actualType As Object) As String" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member PropertyDoesNotBelong : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyDoesNotBelong (property, expectedType, actualType)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="expectedType" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="expectedType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="actualType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="expectedType">To be added.</param>
        <param name="actualType">To be added.</param>
        <summary>
                The property '{property}' belongs to the type '{expectedType}', but is being used with an instance of type '{actualType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyInUseForeignKey">
      <MemberSignature Language="C#" Value="public static string PropertyInUseForeignKey (object property, object entityType, object foreignKey, object foreignKeyType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyInUseForeignKey(object property, object entityType, object foreignKey, object foreignKeyType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyInUseForeignKey(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyInUseForeignKey (property As Object, entityType As Object, foreignKey As Object, foreignKeyType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member PropertyInUseForeignKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyInUseForeignKey (property, entityType, foreignKey, foreignKeyType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string PropertyInUseForeignKey (object property, object entityType, object foreignKeyProperties, object foreignKeyType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyInUseForeignKey(object property, object entityType, object foreignKeyProperties, object foreignKeyType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyInUseForeignKey (property As Object, entityType As Object, foreignKeyProperties As Object, foreignKeyType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member PropertyInUseForeignKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyInUseForeignKey (property, entityType, foreignKeyProperties, foreignKeyType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyInUseForeignKey (object? property, object? entityType, object? foreignKeyProperties, object? foreignKeyType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyInUseForeignKey (object? property, object? type, object? foreignKeyProperties, object? foreignKeyType);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyInUseForeignKey(object property, object type, object foreignKeyProperties, object foreignKeyType) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyInUseForeignKey (property As Object, type As Object, foreignKeyProperties As Object, foreignKeyType As Object) As String" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member PropertyInUseForeignKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyInUseForeignKey (property, type, foreignKeyProperties, foreignKeyType)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="foreignKey" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKeyType" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="type">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="foreignKeyType">To be added.</param>
        <summary>
                The property '{property}' cannot be removed from the type '{type}' because it is being used in the foreign key {foreignKeyProperties} on '{foreignKeyType}'. All containing foreign keys must be removed or redefined before the property can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyInUseIndex">
      <MemberSignature Language="C#" Value="public static string PropertyInUseIndex (object property, object entityType, object index, object indexType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyInUseIndex(object property, object entityType, object index, object indexType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyInUseIndex(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyInUseIndex (property As Object, entityType As Object, index As Object, indexType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyInUseIndex : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyInUseIndex (property, entityType, index, indexType)" />
      <MemberSignature Language="C#" Value="public static string PropertyInUseIndex (object? property, object? entityType, object? index, object? indexType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="index" Type="System.Object" />
        <Parameter Name="indexType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="index">To be added.</param>
        <param name="indexType">To be added.</param>
        <summary>
                The property '{property}' cannot be removed from the type '{entityType}' because it is being used in the index {index} on '{indexType}'. All containing indexes must be removed or redefined before the property can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyInUseKey">
      <MemberSignature Language="C#" Value="public static string PropertyInUseKey (object property, object entityType, object key);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyInUseKey(object property, object entityType, object key) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyInUseKey(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyInUseKey (property As Object, entityType As Object, key As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member PropertyInUseKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyInUseKey (property, entityType, key)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string PropertyInUseKey (object property, object entityType, object keyProperties);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyInUseKey(object property, object entityType, object keyProperties) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyInUseKey (property As Object, entityType As Object, keyProperties As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member PropertyInUseKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyInUseKey (property, entityType, keyProperties)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string PropertyInUseKey (object? property, object? entityType, object? keyProperties);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
        <Parameter Name="key" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="keyProperties" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="key">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <summary>
                The property '{property}' cannot be removed from the type '{entityType}' because it is being used in the key {keyProperties}. All containing keys must be removed or redefined before the property can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyIsNavigation">
      <MemberSignature Language="C#" Value="public static string PropertyIsNavigation (object property, object entityType, object PropertyMethod, object ReferenceMethod, object CollectionMethod);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyIsNavigation(object property, object entityType, object PropertyMethod, object ReferenceMethod, object CollectionMethod) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyIsNavigation(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyIsNavigation (property As Object, entityType As Object, PropertyMethod As Object, ReferenceMethod As Object, CollectionMethod As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member PropertyIsNavigation : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyIsNavigation (property, entityType, PropertyMethod, ReferenceMethod, CollectionMethod)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string PropertyIsNavigation (object property, object entityType, object propertyMethod, object referenceMethod, object collectionMethod);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyIsNavigation(object property, object entityType, object propertyMethod, object referenceMethod, object collectionMethod) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyIsNavigation (property As Object, entityType As Object, propertyMethod As Object, referenceMethod As Object, collectionMethod As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member PropertyIsNavigation : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyIsNavigation (property, entityType, propertyMethod, referenceMethod, collectionMethod)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyIsNavigation (object? property, object? entityType, object? propertyMethod, object? referenceMethod, object? collectionMethod);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="PropertyMethod" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="propertyMethod" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="ReferenceMethod" Type="System.Object" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="referenceMethod" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="CollectionMethod" Type="System.Object" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="collectionMethod" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="PropertyMethod">To be added.</param>
        <param name="propertyMethod">To be added.</param>
        <param name="ReferenceMethod">To be added.</param>
        <param name="referenceMethod">To be added.</param>
        <param name="CollectionMethod">To be added.</param>
        <param name="collectionMethod">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' is being accessed using the '{propertyMethod}' method, but is defined in the model as a navigation. Use either the '{referenceMethod}' or '{collectionMethod}' method to access navigations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyMethodInvoked">
      <MemberSignature Language="C#" Value="public static string PropertyMethodInvoked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PropertyMethodInvoked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyMethodInvoked" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PropertyMethodInvoked As String" />
      <MemberSignature Language="F#" Value="static member PropertyMethodInvoked : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyMethodInvoked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The EF.Property&lt;T&gt; method may only be used within Entity Framework LINQ queries.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNotAdded">
      <MemberSignature Language="C#" Value="public static string PropertyNotAdded (object entityType, object property, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyNotAdded(object entityType, object property, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyNotAdded(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyNotAdded (entityType As Object, property As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyNotAdded : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyNotAdded (entityType, property, propertyType)" />
      <MemberSignature Language="C#" Value="public static string PropertyNotAdded (object? entityType, object? property, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{entityType}.{property}' could not be mapped because it is of type '{propertyType}', which is not a supported primitive type or a valid entity type. Either explicitly map this property, or ignore it using the '[NotMapped]' attribute or by using 'EntityTypeBuilder.Ignore' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNotAddedAdHoc">
      <MemberSignature Language="C#" Value="public static string PropertyNotAddedAdHoc (object? entityType, object? property, object? propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyNotAddedAdHoc(object entityType, object property, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyNotAddedAdHoc(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyNotAddedAdHoc (entityType As Object, property As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyNotAddedAdHoc : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyNotAddedAdHoc (entityType, property, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="propertyType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{entityType}.{property}' could not be mapped because it is of type '{propertyType}', which is not a supported primitive type or a valid entity type. The property can be ignored using the '[NotMapped]' attribute.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNotFound">
      <MemberSignature Language="C#" Value="public static string PropertyNotFound (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyNotFound(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyNotFound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyNotFound (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyNotFound : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyNotFound (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string PropertyNotFound (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' could not be found. Ensure that the property exists and has been included in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNotMapped">
      <MemberSignature Language="C#" Value="public static string PropertyNotMapped (object entityType, object property, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyNotMapped(object entityType, object property, object propertyType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyNotMapped(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyNotMapped (entityType As Object, property As Object, propertyType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="static member PropertyNotMapped : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyNotMapped (entityType, property, propertyType)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public static string PropertyNotMapped (object? entityType, object? property, object? propertyType);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public static string PropertyNotMapped (object? propertyType, object? entityType, object? property);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyNotMapped(object propertyType, object entityType, object property) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyNotMapped (propertyType As Object, entityType As Object, property As Object) As String" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member PropertyNotMapped : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyNotMapped (propertyType, entityType, property)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="propertyType" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="property" Type="System.Object" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The '{propertyType}' property '{entityType}.{property}' could not be mapped because the database provider does not support this type. Consider converting the property value to a type supported by the database using a value converter. See https://aka.ms/efcore-docs-value-converters for more information. Alternately, exclude the property from the model using the '[NotMapped]' attribute or by using 'EntityTypeBuilder.Ignore' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyReadOnlyAfterSave">
      <MemberSignature Language="C#" Value="public static string PropertyReadOnlyAfterSave (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyReadOnlyAfterSave(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyReadOnlyAfterSave(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyReadOnlyAfterSave (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyReadOnlyAfterSave : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyReadOnlyAfterSave (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string PropertyReadOnlyAfterSave (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' is defined as read-only after it has been saved, but its value has been modified or marked as modified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyReadOnlyBeforeSave">
      <MemberSignature Language="C#" Value="public static string PropertyReadOnlyBeforeSave (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyReadOnlyBeforeSave(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyReadOnlyBeforeSave(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyReadOnlyBeforeSave (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyReadOnlyBeforeSave : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyReadOnlyBeforeSave (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string PropertyReadOnlyBeforeSave (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' is defined as read-only before it has been saved, but its value has been set to something other than a temporary or default value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyWrongClrType">
      <MemberSignature Language="C#" Value="public static string PropertyWrongClrType (object property, object entityType, object clrType, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyWrongClrType(object property, object entityType, object clrType, object propertyType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongClrType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyWrongClrType (property As Object, entityType As Object, clrType As Object, propertyType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member PropertyWrongClrType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongClrType (property, entityType, clrType, propertyType)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyWrongClrType (object? property, object? entityType, object? clrType, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyWrongClrType (object? property, object? type, object? clrType, object? propertyType);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyWrongClrType(object property, object type, object clrType, object propertyType) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyWrongClrType (property As Object, type As Object, clrType As Object, propertyType As Object) As String" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member PropertyWrongClrType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongClrType (property, type, clrType, propertyType)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="clrType" Type="System.Object" Index="2" />
        <Parameter Name="propertyType" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="type">To be added.</param>
        <param name="clrType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{property}' cannot be added to the type '{type}' because the type of the corresponding CLR property or field '{clrType}' does not match the specified type '{propertyType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyWrongEntityClrType">
      <MemberSignature Language="C#" Value="public static string PropertyWrongEntityClrType (object property, object entityType, object clrType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyWrongEntityClrType(object property, object entityType, object clrType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongEntityClrType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyWrongEntityClrType (property As Object, entityType As Object, clrType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member PropertyWrongEntityClrType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongEntityClrType (property, entityType, clrType)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyWrongEntityClrType (object? property, object? entityType, object? clrType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyWrongEntityClrType (object? property, object? type, object? clrType);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyWrongEntityClrType(object property, object type, object clrType) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyWrongEntityClrType (property As Object, type As Object, clrType As Object) As String" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member PropertyWrongEntityClrType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongEntityClrType (property, type, clrType)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="clrType" Type="System.Object" Index="2" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="type">To be added.</param>
        <param name="clrType">To be added.</param>
        <summary>
                The property '{property}' cannot be added to the type '{type}' because it is declared on the CLR type '{clrType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyWrongName">
      <MemberSignature Language="C#" Value="public static string PropertyWrongName (object property, object entityType, object clrName);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyWrongName(object property, object entityType, object clrName) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongName(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyWrongName (property As Object, entityType As Object, clrName As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member PropertyWrongName : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongName (property, entityType, clrName)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyWrongName (object? property, object? entityType, object? clrName);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyWrongName (object? property, object? type, object? clrName);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyWrongName(object property, object type, object clrName) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyWrongName (property As Object, type As Object, clrName As Object) As String" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member PropertyWrongName : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongName (property, type, clrName)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="clrName" Type="System.Object" Index="2" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="type">To be added.</param>
        <param name="clrName">To be added.</param>
        <summary>
                The property '{property}' cannot be added to the type '{type}' because it doesn't match the name of the provided CLR property or field '{clrName}'. Use the same name or specify a different CLR member.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyWrongType">
      <MemberSignature Language="C#" Value="public static string PropertyWrongType (object property, object otherEntityType, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyWrongType(object property, object otherEntityType, object entityType) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyWrongType (property As Object, otherEntityType As Object, entityType As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member PropertyWrongType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongType (property, otherEntityType, entityType)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string PropertyWrongType (object property, object entityType, object otherEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyWrongType(object property, object entityType, object otherEntityType) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyWrongType (property As Object, entityType As Object, otherEntityType As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member PropertyWrongType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongType (property, entityType, otherEntityType)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyWrongType (object? property, object? entityType, object? otherEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static string PropertyWrongType (object? property, object? type, object? otherType);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyWrongType(object property, object type, object otherType) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyWrongType (property As Object, type As Object, otherType As Object) As String" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member PropertyWrongType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.PropertyWrongType (property, type, otherType)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="type" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="otherType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="type">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <param name="otherType">To be added.</param>
        <summary>
                The property '{property}' cannot be removed from the type '{type}' because it is declared on the '{otherType}' type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContextAlreadyInitializedStateManager">
      <MemberSignature Language="C#" Value="public static string QueryContextAlreadyInitializedStateManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string QueryContextAlreadyInitializedStateManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryContextAlreadyInitializedStateManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property QueryContextAlreadyInitializedStateManager As String" />
      <MemberSignature Language="F#" Value="static member QueryContextAlreadyInitializedStateManager : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryContextAlreadyInitializedStateManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The 'InitializeStateManager' method has been called multiple times on the current query context. This method is intended to be called only once before query enumeration starts.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryEntityMaterializationConditionWrongShape">
      <MemberSignature Language="C#" Value="public static string QueryEntityMaterializationConditionWrongShape (object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QueryEntityMaterializationConditionWrongShape(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryEntityMaterializationConditionWrongShape(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryEntityMaterializationConditionWrongShape (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member QueryEntityMaterializationConditionWrongShape : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryEntityMaterializationConditionWrongShape entityType" />
      <MemberSignature Language="C#" Value="public static string QueryEntityMaterializationConditionWrongShape (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The materialization condition passed for entity shaper of entity type '{entityType}' is not of the correct shape. A materialization condition must be a 'LambdaExpression' of 'Func&lt;ValueBuffer, IEntityType&gt;'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryFailed">
      <MemberSignature Language="C#" Value="public static string QueryFailed (object expression, object visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QueryFailed(object expression, object visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryFailed(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryFailed (expression As Object, visitor As Object) As String" />
      <MemberSignature Language="F#" Value="static member QueryFailed : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryFailed (expression, visitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="visitor" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="visitor">To be added.</param>
        <summary>
                Processing of the LINQ expression '{expression}' by '{visitor}' failed. This may indicate either a bug or a limitation in Entity Framework. See https://go.microsoft.com/fwlink/?linkid=2101433 for more detailed information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryInvalidMaterializationType">
      <MemberSignature Language="C#" Value="public static string QueryInvalidMaterializationType (object projection, object queryableType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QueryInvalidMaterializationType(object projection, object queryableType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryInvalidMaterializationType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryInvalidMaterializationType (projection As Object, queryableType As Object) As String" />
      <MemberSignature Language="F#" Value="static member QueryInvalidMaterializationType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryInvalidMaterializationType (projection, queryableType)" />
      <MemberSignature Language="C#" Value="public static string QueryInvalidMaterializationType (object? projection, object? queryableType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projection" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="queryableType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="projection">To be added.</param>
        <param name="queryableType">To be added.</param>
        <summary>
                The query contains a projection '{projection}' of type '{queryableType}'. Collections in the final projection must be an 'IEnumerable&lt;T&gt;' type such as 'List&lt;T&gt;'. Consider using 'ToList' or some other mechanism to convert the 'IQueryable&lt;T&gt;' or 'IOrderedEnumerable&lt;T&gt;' into an 'IEnumerable&lt;T&gt;'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryRootDifferentEntityType">
      <MemberSignature Language="C#" Value="public static string QueryRootDifferentEntityType (object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QueryRootDifferentEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryRootDifferentEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryRootDifferentEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member QueryRootDifferentEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryRootDifferentEntityType entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The replacement entity type: {entityType} does not have same name and CLR type as entity type this query root represents.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySelectContainsGrouping">
      <MemberSignature Language="C#" Value="public static string QuerySelectContainsGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string QuerySelectContainsGrouping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QuerySelectContainsGrouping" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property QuerySelectContainsGrouping As String" />
      <MemberSignature Language="F#" Value="static member QuerySelectContainsGrouping : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QuerySelectContainsGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Translation of 'Select' which contains grouping parameter without composition is not supported.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryUnableToTranslateEFProperty">
      <MemberSignature Language="C#" Value="public static string QueryUnableToTranslateEFProperty (object expression);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QueryUnableToTranslateEFProperty(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryUnableToTranslateEFProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryUnableToTranslateEFProperty (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member QueryUnableToTranslateEFProperty : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryUnableToTranslateEFProperty expression" />
      <MemberSignature Language="C#" Value="public static string QueryUnableToTranslateEFProperty (object? expression);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                Translation of '{expression}' failed. Either the query source is not an entity type, or the specified property does not exist on the entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryUnableToTranslateMember">
      <MemberSignature Language="C#" Value="public static string QueryUnableToTranslateMember (object member, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QueryUnableToTranslateMember(object member, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryUnableToTranslateMember(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryUnableToTranslateMember (member As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member QueryUnableToTranslateMember : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryUnableToTranslateMember (member, entityType)" />
      <MemberSignature Language="C#" Value="public static string QueryUnableToTranslateMember (object? member, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="member">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Translation of member '{member}' on entity type '{entityType}' failed. This commonly occurs when the specified member is unmapped.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryUnableToTranslateMethod">
      <MemberSignature Language="C#" Value="public static string QueryUnableToTranslateMethod (object declaringTypeName, object methodName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QueryUnableToTranslateMethod(object declaringTypeName, object methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryUnableToTranslateMethod(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryUnableToTranslateMethod (declaringTypeName As Object, methodName As Object) As String" />
      <MemberSignature Language="F#" Value="static member QueryUnableToTranslateMethod : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryUnableToTranslateMethod (declaringTypeName, methodName)" />
      <MemberSignature Language="C#" Value="public static string QueryUnableToTranslateMethod (object? declaringTypeName, object? methodName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="declaringTypeName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="methodName" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="declaringTypeName">To be added.</param>
        <param name="methodName">To be added.</param>
        <summary>
                Translation of method '{declaringTypeName}.{methodName}' failed. If this method can be mapped to your custom function, see https://go.microsoft.com/fwlink/?linkid=2132413 for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryUnableToTranslateStringEqualsWithStringComparison">
      <MemberSignature Language="C#" Value="public static string QueryUnableToTranslateStringEqualsWithStringComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string QueryUnableToTranslateStringEqualsWithStringComparison" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryUnableToTranslateStringEqualsWithStringComparison" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property QueryUnableToTranslateStringEqualsWithStringComparison As String" />
      <MemberSignature Language="F#" Value="static member QueryUnableToTranslateStringEqualsWithStringComparison : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryUnableToTranslateStringEqualsWithStringComparison" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Translation of the 'string.Equals' overload with a 'StringComparison' parameter is not supported. See https://go.microsoft.com/fwlink/?linkid=2129535 for more information.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryUnhandledQueryRootExpression">
      <MemberSignature Language="C#" Value="public static string QueryUnhandledQueryRootExpression (object? type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QueryUnhandledQueryRootExpression(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryUnhandledQueryRootExpression(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryUnhandledQueryRootExpression (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member QueryUnhandledQueryRootExpression : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.QueryUnhandledQueryRootExpression type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                Query root of type '{type}' wasn't handled by provider code. This issue happens when using a provider specific method on a different provider where it is not supported.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyListType">
      <MemberSignature Language="C#" Value="public static string ReadOnlyListType (object? givenType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadOnlyListType(object givenType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ReadOnlyListType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnlyListType (givenType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ReadOnlyListType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ReadOnlyListType givenType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="givenType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="givenType">To be added.</param>
        <summary>
                The type '{givenType}' cannot be used as a primitive collection because it is read-only. Read-only collections of primitive types are not supported.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecursiveOnConfiguring">
      <MemberSignature Language="C#" Value="public static string RecursiveOnConfiguring { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RecursiveOnConfiguring" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RecursiveOnConfiguring" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RecursiveOnConfiguring As String" />
      <MemberSignature Language="F#" Value="static member RecursiveOnConfiguring : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RecursiveOnConfiguring" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An attempt was made to use the context instance while it is being configured. A DbContext instance cannot be used inside 'OnConfiguring' since it is still being configured at this point. This can happen if a second operation is started on this context instance before a previous operation completed. Any instance members are not guaranteed to be thread safe.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecursiveOnModelCreating">
      <MemberSignature Language="C#" Value="public static string RecursiveOnModelCreating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RecursiveOnModelCreating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RecursiveOnModelCreating" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RecursiveOnModelCreating As String" />
      <MemberSignature Language="F#" Value="static member RecursiveOnModelCreating : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RecursiveOnModelCreating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An attempt was made to use the model while it was being created. A DbContext instance cannot be used inside 'OnModelCreating' in any way that makes use of the model that is being created.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedShadowKey">
      <MemberSignature Language="C#" Value="public static string ReferencedShadowKey (object referencingEntityTypeOrNavigation, object referencedEntityTypeOrNavigation, object foreignKeyPropertiesWithTypes, object primaryKeyPropertiesWithTypes);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReferencedShadowKey(object referencingEntityTypeOrNavigation, object referencedEntityTypeOrNavigation, object foreignKeyPropertiesWithTypes, object primaryKeyPropertiesWithTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ReferencedShadowKey(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferencedShadowKey (referencingEntityTypeOrNavigation As Object, referencedEntityTypeOrNavigation As Object, foreignKeyPropertiesWithTypes As Object, primaryKeyPropertiesWithTypes As Object) As String" />
      <MemberSignature Language="F#" Value="static member ReferencedShadowKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ReferencedShadowKey (referencingEntityTypeOrNavigation, referencedEntityTypeOrNavigation, foreignKeyPropertiesWithTypes, primaryKeyPropertiesWithTypes)" />
      <MemberSignature Language="C#" Value="public static string ReferencedShadowKey (object? referencingEntityTypeOrNavigation, object? referencedEntityTypeOrNavigation, object? foreignKeyPropertiesWithTypes, object? primaryKeyPropertiesWithTypes);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referencingEntityTypeOrNavigation" Type="System.Object" />
        <Parameter Name="referencedEntityTypeOrNavigation" Type="System.Object" />
        <Parameter Name="foreignKeyPropertiesWithTypes" Type="System.Object" />
        <Parameter Name="primaryKeyPropertiesWithTypes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="referencingEntityTypeOrNavigation">To be added.</param>
        <param name="referencedEntityTypeOrNavigation">To be added.</param>
        <param name="foreignKeyPropertiesWithTypes">To be added.</param>
        <param name="primaryKeyPropertiesWithTypes">To be added.</param>
        <summary>
                The relationship from '{referencingEntityTypeOrNavigation}' to '{referencedEntityTypeOrNavigation}' with foreign key properties {foreignKeyPropertiesWithTypes} cannot target the primary key {primaryKeyPropertiesWithTypes} because it is not compatible. Configure a principal key or a set of foreign key properties with compatible types for this relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceIsCollection">
      <MemberSignature Language="C#" Value="public static string ReferenceIsCollection (object property, object entityType, object ReferenceMethod, object CollectionMethod);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReferenceIsCollection(object property, object entityType, object ReferenceMethod, object CollectionMethod) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ReferenceIsCollection(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceIsCollection (property As Object, entityType As Object, ReferenceMethod As Object, CollectionMethod As Object) As String" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member ReferenceIsCollection : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ReferenceIsCollection (property, entityType, ReferenceMethod, CollectionMethod)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string ReferenceIsCollection (object property, object entityType, object referenceMethod, object collectionMethod);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReferenceIsCollection(object property, object entityType, object referenceMethod, object collectionMethod) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceIsCollection (property As Object, entityType As Object, referenceMethod As Object, collectionMethod As Object) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member ReferenceIsCollection : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ReferenceIsCollection (property, entityType, referenceMethod, collectionMethod)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string ReferenceIsCollection (object? property, object? entityType, object? referenceMethod, object? collectionMethod);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" />
        <Parameter Name="ReferenceMethod" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="referenceMethod" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="CollectionMethod" Type="System.Object" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="collectionMethod" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="ReferenceMethod">To be added.</param>
        <param name="referenceMethod">To be added.</param>
        <param name="CollectionMethod">To be added.</param>
        <param name="collectionMethod">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' is being accessed using the '{referenceMethod}' method, but is defined in the model as a collection navigation. Use the '{collectionMethod}' method to access collection navigations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceMustBeLoaded">
      <MemberSignature Language="C#" Value="public static string ReferenceMustBeLoaded (object navigation, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReferenceMustBeLoaded(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ReferenceMustBeLoaded(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceMustBeLoaded (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ReferenceMustBeLoaded : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ReferenceMustBeLoaded (navigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string ReferenceMustBeLoaded (object? navigation, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The navigation '{1_entityType}.{0_navigation}' cannot have 'IsLoaded' set to false because the referenced entity is non-null and is therefore loaded.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipCannotBeInverted">
      <MemberSignature Language="C#" Value="public static string RelationshipCannotBeInverted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RelationshipCannotBeInverted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RelationshipCannotBeInverted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RelationshipCannotBeInverted As String" />
      <MemberSignature Language="F#" Value="static member RelationshipCannotBeInverted : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RelationshipCannotBeInverted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The principal and dependent ends of the relationship cannot be changed once foreign key or principal key properties have been specified. Remove the conflicting configuration.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipConceptualNull">
      <MemberSignature Language="C#" Value="public static string RelationshipConceptualNull (object firstType, object secondType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RelationshipConceptualNull(object firstType, object secondType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RelationshipConceptualNull(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RelationshipConceptualNull (firstType As Object, secondType As Object) As String" />
      <MemberSignature Language="F#" Value="static member RelationshipConceptualNull : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RelationshipConceptualNull (firstType, secondType)" />
      <MemberSignature Language="C#" Value="public static string RelationshipConceptualNull (object? firstType, object? secondType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstType" Type="System.Object" />
        <Parameter Name="secondType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="firstType">To be added.</param>
        <param name="secondType">To be added.</param>
        <summary>
                The association between entity types '{firstType}' and '{secondType}' has been severed, but the relationship is either marked as required or is implicitly required because the foreign key is not nullable. If the dependent/child entity should be deleted when a required relationship is severed, configure the relationship to use cascade deletes. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipConceptualNullSensitive">
      <MemberSignature Language="C#" Value="public static string RelationshipConceptualNullSensitive (object firstType, object secondType, object secondKeyValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RelationshipConceptualNullSensitive(object firstType, object secondType, object secondKeyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RelationshipConceptualNullSensitive(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RelationshipConceptualNullSensitive (firstType As Object, secondType As Object, secondKeyValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member RelationshipConceptualNullSensitive : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RelationshipConceptualNullSensitive (firstType, secondType, secondKeyValue)" />
      <MemberSignature Language="C#" Value="public static string RelationshipConceptualNullSensitive (object? firstType, object? secondType, object? secondKeyValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstType" Type="System.Object" />
        <Parameter Name="secondType" Type="System.Object" />
        <Parameter Name="secondKeyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="firstType">To be added.</param>
        <param name="secondType">To be added.</param>
        <param name="secondKeyValue">To be added.</param>
        <summary>
                The association between entities '{firstType}' and '{secondType}' with the key value '{secondKeyValue}' has been severed, but the relationship is either marked as required or is implicitly required because the foreign key is not nullable. If the dependent/child entity should be deleted when a required relationship is severed, configure the relationship to use cascade deletes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipCycle">
      <MemberSignature Language="C#" Value="public static string RelationshipCycle (object? entityType, object? property, object? configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RelationshipCycle(object entityType, object property, object configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RelationshipCycle(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RelationshipCycle (entityType As Object, property As Object, configuration As Object) As String" />
      <MemberSignature Language="F#" Value="static member RelationshipCycle : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RelationshipCycle (entityType, property, configuration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="configuration" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="configuration">To be added.</param>
        <summary>
                A relationship cycle involving the property '{entityType}.{property}' was detected. This prevents Entity Framework from determining the correct configuration. Review the foreign keys defined on the property and the corresponding principal property and either remove one of them or specify '{configuration}' explicitly on one of the properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredSkipNavigation">
      <MemberSignature Language="C#" Value="public static string RequiredSkipNavigation (object entityType, object navigation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RequiredSkipNavigation(object entityType, object navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RequiredSkipNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RequiredSkipNavigation (entityType As Object, navigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member RequiredSkipNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RequiredSkipNavigation (entityType, navigation)" />
      <MemberSignature Language="C#" Value="public static string RequiredSkipNavigation (object? entityType, object? navigation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                '{entityType}.{navigation}' cannot be configured as required since it represents a skip navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetNotSupported">
      <MemberSignature Language="C#" Value="public static string ResetNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ResetNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ResetNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ResetNotSupported As String" />
      <MemberSignature Language="F#" Value="static member ResetNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ResetNotSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                'ObservableCollection&lt;T&gt;.Clear' is not supported because it uses the 'INotifyCollectionChanged' 'Reset' operation, which does not supply the items removed. Either use multiple calls to 'Remove', or use a notifying collection that supports 'Clear', such as 'Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet&lt;T&gt;'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryLimitExceeded">
      <MemberSignature Language="C#" Value="public static string RetryLimitExceeded (object retryLimit, object strategy);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RetryLimitExceeded(object retryLimit, object strategy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RetryLimitExceeded(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RetryLimitExceeded (retryLimit As Object, strategy As Object) As String" />
      <MemberSignature Language="F#" Value="static member RetryLimitExceeded : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RetryLimitExceeded (retryLimit, strategy)" />
      <MemberSignature Language="C#" Value="public static string RetryLimitExceeded (object? retryLimit, object? strategy);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="retryLimit" Type="System.Object" />
        <Parameter Name="strategy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="retryLimit">To be added.</param>
        <param name="strategy">To be added.</param>
        <summary>
                The maximum number of retries ({retryLimit}) was exceeded while executing database operations with '{strategy}'. See the inner exception for the most recent failure.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeModelMissingData">
      <MemberSignature Language="C#" Value="public static string RuntimeModelMissingData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RuntimeModelMissingData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RuntimeModelMissingData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RuntimeModelMissingData As String" />
      <MemberSignature Language="F#" Value="static member RuntimeModelMissingData : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RuntimeModelMissingData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The requested configuration is not stored in the read-optimized model, please use 'DbContext.GetService&lt;IDesignTimeModel&gt;().Model'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeParameterMissingParameter">
      <MemberSignature Language="C#" Value="public static string RuntimeParameterMissingParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RuntimeParameterMissingParameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RuntimeParameterMissingParameter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RuntimeParameterMissingParameter As String" />
      <MemberSignature Language="F#" Value="static member RuntimeParameterMissingParameter : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.RuntimeParameterMissingParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                While registering a runtime parameter, the lambda expression must have only one parameter which must be same as 'QueryCompilationContext.QueryContextParameter' expression.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SameParameterInstanceUsedInMultipleLambdas">
      <MemberSignature Language="C#" Value="public static string SameParameterInstanceUsedInMultipleLambdas (object? parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SameParameterInstanceUsedInMultipleLambdas(object parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SameParameterInstanceUsedInMultipleLambdas(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SameParameterInstanceUsedInMultipleLambdas (parameterName As Object) As String" />
      <MemberSignature Language="F#" Value="static member SameParameterInstanceUsedInMultipleLambdas : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SameParameterInstanceUsedInMultipleLambdas parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>
                The same parameter instance with name '{parameterName}' was used in multiple lambdas in the query tree. Each lambda must have its own parameter instances.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveOwnedWithoutOwner">
      <MemberSignature Language="C#" Value="public static string SaveOwnedWithoutOwner (object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SaveOwnedWithoutOwner(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SaveOwnedWithoutOwner(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SaveOwnedWithoutOwner (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SaveOwnedWithoutOwner : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SaveOwnedWithoutOwner entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Cannot save instance of '{entityType}' because it is an owned entity without any reference to its owner. Owned entities can only be saved as part of an aggregate also including the owner entity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SavepointsNotSupported">
      <MemberSignature Language="C#" Value="public static string SavepointsNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SavepointsNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SavepointsNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SavepointsNotSupported As String" />
      <MemberSignature Language="F#" Value="static member SavepointsNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SavepointsNotSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Savepoints are not supported by the database provider in use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumComplexProperty">
      <MemberSignature Language="C#" Value="public static string SeedDatumComplexProperty (object? entityType, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumComplexProperty(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumComplexProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumComplexProperty (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumComplexProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumComplexProperty (entityType, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because it has the complex property '{property}' set. Complex properties are currently not supported in seeding. See https://github.com/dotnet/efcore/issues/31254 for more information. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the involved property values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumComplexPropertySensitive">
      <MemberSignature Language="C#" Value="public static string SeedDatumComplexPropertySensitive (object? entityType, object? keyValue, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumComplexPropertySensitive(object entityType, object keyValue, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumComplexPropertySensitive(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumComplexPropertySensitive (entityType As Object, keyValue As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumComplexPropertySensitive : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumComplexPropertySensitive (entityType, keyValue, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="keyValue" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' with the key value '{keyValue}' cannot be added because it has the complex property '{property}' set. Complex properties are currently not supported in seeding. See https://github.com/dotnet/efcore/issues/31254 for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumDefaultValue">
      <MemberSignature Language="C#" Value="public static string SeedDatumDefaultValue (object entityType, object property, object defaultValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumDefaultValue(object entityType, object property, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumDefaultValue(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumDefaultValue (entityType As Object, property As Object, defaultValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumDefaultValue : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumDefaultValue (entityType, property, defaultValue)" />
      <MemberSignature Language="C#" Value="public static string SeedDatumDefaultValue (object? entityType, object? property, object? defaultValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because a default value was provided for the required property '{property}'. Please provide a value different from '{defaultValue}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumDerivedType">
      <MemberSignature Language="C#" Value="public static string SeedDatumDerivedType (object entityType, object derivedType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumDerivedType(object entityType, object derivedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumDerivedType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumDerivedType (entityType As Object, derivedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumDerivedType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumDerivedType (entityType, derivedType)" />
      <MemberSignature Language="C#" Value="public static string SeedDatumDerivedType (object? entityType, object? derivedType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="derivedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="derivedType">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because the value provided is of a derived type '{derivedType}'. Add the derived seed entities to the corresponding entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumDuplicate">
      <MemberSignature Language="C#" Value="public static string SeedDatumDuplicate (object entityType, object keyProperties);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumDuplicate(object entityType, object keyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumDuplicate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumDuplicate (entityType As Object, keyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumDuplicate : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumDuplicate (entityType, keyProperties)" />
      <MemberSignature Language="C#" Value="public static string SeedDatumDuplicate (object? entityType, object? keyProperties);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because another seed entity with the same key value for {keyProperties} has already been added. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumDuplicateSensitive">
      <MemberSignature Language="C#" Value="public static string SeedDatumDuplicateSensitive (object entityType, object keyValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumDuplicateSensitive(object entityType, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumDuplicateSensitive(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumDuplicateSensitive (entityType As Object, keyValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumDuplicateSensitive : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumDuplicateSensitive (entityType, keyValue)" />
      <MemberSignature Language="C#" Value="public static string SeedDatumDuplicateSensitive (object? entityType, object? keyValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because another seed entity with the key value '{keyValue}' has already been added.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumIncompatibleValue">
      <MemberSignature Language="C#" Value="public static string SeedDatumIncompatibleValue (object entityType, object property, object type);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumIncompatibleValue(object entityType, object property, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumIncompatibleValue(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumIncompatibleValue (entityType As Object, property As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumIncompatibleValue : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumIncompatibleValue (entityType, property, type)" />
      <MemberSignature Language="C#" Value="public static string SeedDatumIncompatibleValue (object? entityType, object? property, object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because the value provided for the property '{property}' is not compatible with the property type '{type}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the involved property value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumIncompatibleValueSensitive">
      <MemberSignature Language="C#" Value="public static string SeedDatumIncompatibleValueSensitive (object entityType, object value, object property, object type);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumIncompatibleValueSensitive(object entityType, object value, object property, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumIncompatibleValueSensitive(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumIncompatibleValueSensitive (entityType As Object, value As Object, property As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumIncompatibleValueSensitive : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumIncompatibleValueSensitive (entityType, value, property, type)" />
      <MemberSignature Language="C#" Value="public static string SeedDatumIncompatibleValueSensitive (object? entityType, object? value, object? property, object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="property">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because the value '{value}' provided for the property '{property}' is not compatible with the property type '{type}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumMissingValue">
      <MemberSignature Language="C#" Value="public static string SeedDatumMissingValue (object entityType, object property);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumMissingValue(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumMissingValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumMissingValue (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumMissingValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumMissingValue (entityType, property)" />
      <MemberSignature Language="C#" Value="public static string SeedDatumMissingValue (object? entityType, object? property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because no value was provided for the required property '{property}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumNavigation">
      <MemberSignature Language="C#" Value="public static string SeedDatumNavigation (object entityType, object navigation, object relatedEntityType, object foreignKeyProperties);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumNavigation(object entityType, object navigation, object relatedEntityType, object foreignKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumNavigation(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumNavigation (entityType As Object, navigation As Object, relatedEntityType As Object, foreignKeyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumNavigation : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumNavigation (entityType, navigation, relatedEntityType, foreignKeyProperties)" />
      <MemberSignature Language="C#" Value="public static string SeedDatumNavigation (object? entityType, object? navigation, object? relatedEntityType, object? foreignKeyProperties);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="relatedEntityType" Type="System.Object" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="relatedEntityType">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because it has the navigation '{navigation}' set. To seed relationships,  add the entity seed to '{relatedEntityType}' and specify the foreign key values {foreignKeyProperties}. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the involved property values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumNavigationSensitive">
      <MemberSignature Language="C#" Value="public static string SeedDatumNavigationSensitive (object entityType, object keyValue, object navigation, object relatedEntityType, object foreignKeyProperties);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumNavigationSensitive(object entityType, object keyValue, object navigation, object relatedEntityType, object foreignKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumNavigationSensitive(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumNavigationSensitive (entityType As Object, keyValue As Object, navigation As Object, relatedEntityType As Object, foreignKeyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumNavigationSensitive : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumNavigationSensitive (entityType, keyValue, navigation, relatedEntityType, foreignKeyProperties)" />
      <MemberSignature Language="C#" Value="public static string SeedDatumNavigationSensitive (object? entityType, object? keyValue, object? navigation, object? relatedEntityType, object? foreignKeyProperties);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyValue" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="relatedEntityType" Type="System.Object" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="relatedEntityType">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' with the key value '{keyValue}' cannot be added because it has the navigation '{navigation}' set. To seed relationships, add the entity seed to '{relatedEntityType}' and specify the foreign key values {foreignKeyProperties}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumSignedNumericValue">
      <MemberSignature Language="C#" Value="public static string SeedDatumSignedNumericValue (object entityType, object property);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumSignedNumericValue(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumSignedNumericValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumSignedNumericValue (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumSignedNumericValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedDatumSignedNumericValue (entityType, property)" />
      <MemberSignature Language="C#" Value="public static string SeedDatumSignedNumericValue (object? entityType, object? property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because a non-zero value is required for property '{property}'. Consider providing a negative value to avoid collisions with non-seed data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedKeylessEntity">
      <MemberSignature Language="C#" Value="public static string SeedKeylessEntity (object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedKeylessEntity(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedKeylessEntity(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedKeylessEntity (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedKeylessEntity : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SeedKeylessEntity entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because keyless entity types are not supported. Consider providing a key or removing the seed data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelfReferencingNavigationWithInverseProperty">
      <MemberSignature Language="C#" Value="public static string SelfReferencingNavigationWithInverseProperty (object? entityType, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SelfReferencingNavigationWithInverseProperty(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SelfReferencingNavigationWithInverseProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SelfReferencingNavigationWithInverseProperty (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member SelfReferencingNavigationWithInverseProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SelfReferencingNavigationWithInverseProperty (entityType, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The inverse for the navigation '{entityType}.{property}' cannot be the same navigation. Change the value in the [InverseProperty] attribute to a different navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelfReferencingNavigationWithInverseProperty">
      <MemberSignature Language="C#" Value="public static string SelfReferencingNavigationWithInverseProperty (object property, object entityType, object referencedProperty, object referencedEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SelfReferencingNavigationWithInverseProperty(object property, object entityType, object referencedProperty, object referencedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SelfReferencingNavigationWithInverseProperty(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SelfReferencingNavigationWithInverseProperty (property As Object, entityType As Object, referencedProperty As Object, referencedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SelfReferencingNavigationWithInverseProperty : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SelfReferencingNavigationWithInverseProperty (property, entityType, referencedProperty, referencedEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="referencedProperty" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="referencedEntityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="referencedProperty">To be added.</param>
        <param name="referencedEntityType">To be added.</param>
        <summary>
                A relationship cannot be established from property '{1_entityType}.{0_property}' to property '{3_referencedEntityType}.{2_referencedProperty}'. Check the values in the [InverseProperty] attribute to ensure relationship definitions are unique and reference from one navigation to its corresponding inverse navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SensitiveDataDisabled">
      <MemberSignature Language="C#" Value="public static string SensitiveDataDisabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SensitiveDataDisabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SensitiveDataDisabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SensitiveDataDisabled As String" />
      <MemberSignature Language="F#" Value="static member SensitiveDataDisabled : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SensitiveDataDisabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                To show additional information call 'DbContextOptionsBuilder.EnableSensitiveDataLogging'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceContainsMoreThanOneElement">
      <MemberSignature Language="C#" Value="public static string SequenceContainsMoreThanOneElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SequenceContainsMoreThanOneElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SequenceContainsMoreThanOneElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SequenceContainsMoreThanOneElement As String" />
      <MemberSignature Language="F#" Value="static member SequenceContainsMoreThanOneElement : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SequenceContainsMoreThanOneElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Sequence contains more than one element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceContainsNoElements">
      <MemberSignature Language="C#" Value="public static string SequenceContainsNoElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SequenceContainsNoElements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SequenceContainsNoElements" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SequenceContainsNoElements As String" />
      <MemberSignature Language="F#" Value="static member SequenceContainsNoElements : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SequenceContainsNoElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Sequence contains no elements.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProviderConfigAdded">
      <MemberSignature Language="C#" Value="public static string ServiceProviderConfigAdded (object key);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ServiceProviderConfigAdded(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ServiceProviderConfigAdded(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceProviderConfigAdded (key As Object) As String" />
      <MemberSignature Language="F#" Value="static member ServiceProviderConfigAdded : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ServiceProviderConfigAdded key" />
      <MemberSignature Language="C#" Value="public static string ServiceProviderConfigAdded (object? key);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>
                configuration added for '{key}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProviderConfigChanged">
      <MemberSignature Language="C#" Value="public static string ServiceProviderConfigChanged (object key);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ServiceProviderConfigChanged(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ServiceProviderConfigChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceProviderConfigChanged (key As Object) As String" />
      <MemberSignature Language="F#" Value="static member ServiceProviderConfigChanged : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ServiceProviderConfigChanged key" />
      <MemberSignature Language="C#" Value="public static string ServiceProviderConfigChanged (object? key);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>
                configuration changed for '{key}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProviderConfigRemoved">
      <MemberSignature Language="C#" Value="public static string ServiceProviderConfigRemoved (object key);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ServiceProviderConfigRemoved(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ServiceProviderConfigRemoved(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceProviderConfigRemoved (key As Object) As String" />
      <MemberSignature Language="F#" Value="static member ServiceProviderConfigRemoved : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ServiceProviderConfigRemoved key" />
      <MemberSignature Language="C#" Value="public static string ServiceProviderConfigRemoved (object? key);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>
                configuration removed for '{key}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOperationWithDifferentIncludesInOperands">
      <MemberSignature Language="C#" Value="public static string SetOperationWithDifferentIncludesInOperands { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SetOperationWithDifferentIncludesInOperands" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SetOperationWithDifferentIncludesInOperands" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SetOperationWithDifferentIncludesInOperands As String" />
      <MemberSignature Language="F#" Value="static member SetOperationWithDifferentIncludesInOperands : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SetOperationWithDifferentIncludesInOperands" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unable to translate set operation since both operands have different 'Include' operations. Consider having same 'Include' applied on both sides.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowEntity">
      <MemberSignature Language="C#" Value="public static string ShadowEntity (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ShadowEntity(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ShadowEntity(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShadowEntity (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ShadowEntity : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ShadowEntity entityType" />
      <MemberSignature Language="C#" Value="public static string ShadowEntity (object? entityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' is in shadow state. A valid model requires all entity types to have a corresponding CLR type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowManyToManyNavigation">
      <MemberSignature Language="C#" Value="public static string ShadowManyToManyNavigation (object? leftEntityType, object? leftNavigation, object? rightEntityType, object? rightNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ShadowManyToManyNavigation(object leftEntityType, object leftNavigation, object rightEntityType, object rightNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ShadowManyToManyNavigation(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShadowManyToManyNavigation (leftEntityType As Object, leftNavigation As Object, rightEntityType As Object, rightNavigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member ShadowManyToManyNavigation : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ShadowManyToManyNavigation (leftEntityType, leftNavigation, rightEntityType, rightNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftEntityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="leftNavigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="rightEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="rightNavigation" Type="System.Object" Index="3" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="leftEntityType">To be added.</param>
        <param name="leftNavigation">To be added.</param>
        <param name="rightEntityType">To be added.</param>
        <param name="rightNavigation">To be added.</param>
        <summary>
                Unable to set up a many-to-many relationship between '{leftEntityType}.{leftNavigation}' and '{rightEntityType}.{rightNavigation}' because one or both of the navigations don't have a corresponding CLR property. Consider adding a corresponding private property to the entity CLR type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedTypeDerivedType">
      <MemberSignature Language="C#" Value="public static string SharedTypeDerivedType (object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SharedTypeDerivedType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SharedTypeDerivedType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SharedTypeDerivedType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SharedTypeDerivedType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SharedTypeDerivedType entityType" />
      <MemberSignature Language="C#" Value="public static string SharedTypeDerivedType (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The shared-type entity type '{entityType}' cannot have a base type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingletonOptionChanged">
      <MemberSignature Language="C#" Value="public static string SingletonOptionChanged (object optionCall, object useInternalServiceProvider);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SingletonOptionChanged(object optionCall, object useInternalServiceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SingletonOptionChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SingletonOptionChanged (optionCall As Object, useInternalServiceProvider As Object) As String" />
      <MemberSignature Language="F#" Value="static member SingletonOptionChanged : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SingletonOptionChanged (optionCall, useInternalServiceProvider)" />
      <MemberSignature Language="C#" Value="public static string SingletonOptionChanged (object? optionCall, object? useInternalServiceProvider);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionCall" Type="System.Object" />
        <Parameter Name="useInternalServiceProvider" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="optionCall">To be added.</param>
        <param name="useInternalServiceProvider">To be added.</param>
        <summary>
                A call was made to '{optionCall}' that changed an option that must be constant within a service provider, but Entity Framework is not building its own internal service provider. Either allow Entity Framework to build the service provider by removing the call to '{useInternalServiceProvider}', or ensure that the configuration for '{optionCall}' does not change for all uses of a given service provider passed to '{useInternalServiceProvider}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingletonRequired">
      <MemberSignature Language="C#" Value="public static string SingletonRequired (object scope, object service);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SingletonRequired(object scope, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SingletonRequired(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SingletonRequired (scope As Object, service As Object) As String" />
      <MemberSignature Language="F#" Value="static member SingletonRequired : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SingletonRequired (scope, service)" />
      <MemberSignature Language="C#" Value="public static string SingletonRequired (object? scope, object? service);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="service">To be added.</param>
        <summary>
                An attempt was made to register an instance for the '{scope}' service '{service}'. Instances can only be registered for 'Singleton' services.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipInverseMismatchedForeignKey">
      <MemberSignature Language="C#" Value="public static string SkipInverseMismatchedForeignKey (object foreignKeyProperties, object navigation, object joinType, object inverse, object inverseJoinType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipInverseMismatchedForeignKey(object foreignKeyProperties, object navigation, object joinType, object inverse, object inverseJoinType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipInverseMismatchedForeignKey(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipInverseMismatchedForeignKey (foreignKeyProperties As Object, navigation As Object, joinType As Object, inverse As Object, inverseJoinType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SkipInverseMismatchedForeignKey : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipInverseMismatchedForeignKey (foreignKeyProperties, navigation, joinType, inverse, inverseJoinType)" />
      <MemberSignature Language="C#" Value="public static string SkipInverseMismatchedForeignKey (object? foreignKeyProperties, object? navigation, object? joinType, object? inverse, object? inverseJoinType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="joinType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="inverse" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="inverseJoinType" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="joinType">To be added.</param>
        <param name="inverse">To be added.</param>
        <param name="inverseJoinType">To be added.</param>
        <summary>
                The foreign key {foreignKeyProperties} cannot be set for the skip navigation '{navigation}' as it uses the join entity type '{joinType}' while the inverse skip navigation '{inverse}' is associated with a foreign key using the join entity type '{inverseJoinType}'. The inverse navigation must use the same join entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipInverseMismatchedJoinType">
      <MemberSignature Language="C#" Value="public static string SkipInverseMismatchedJoinType (object inverse, object inverseJoinType, object navigation, object joinType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipInverseMismatchedJoinType(object inverse, object inverseJoinType, object navigation, object joinType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipInverseMismatchedJoinType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipInverseMismatchedJoinType (inverse As Object, inverseJoinType As Object, navigation As Object, joinType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SkipInverseMismatchedJoinType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipInverseMismatchedJoinType (inverse, inverseJoinType, navigation, joinType)" />
      <MemberSignature Language="C#" Value="public static string SkipInverseMismatchedJoinType (object? inverse, object? inverseJoinType, object? navigation, object? joinType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inverse" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="inverseJoinType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="joinType" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="inverse">To be added.</param>
        <param name="inverseJoinType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="joinType">To be added.</param>
        <summary>
                The skip navigation '{inverse}' using the join entity type '{inverseJoinType}' cannot be set as the inverse of '{navigation}', which uses the join entity type '{joinType}'. The inverse navigation must use the same join entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipNavigationForeignKeyWrongDependentType">
      <MemberSignature Language="C#" Value="public static string SkipNavigationForeignKeyWrongDependentType (object foreignKeyProperties, object navigation, object entityType, object dependentEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipNavigationForeignKeyWrongDependentType(object foreignKeyProperties, object navigation, object entityType, object dependentEntityType) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationForeignKeyWrongDependentType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipNavigationForeignKeyWrongDependentType (foreignKeyProperties As Object, navigation As Object, entityType As Object, dependentEntityType As Object) As String" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member SkipNavigationForeignKeyWrongDependentType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationForeignKeyWrongDependentType (foreignKeyProperties, navigation, entityType, dependentEntityType)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string SkipNavigationForeignKeyWrongDependentType (object? foreignKeyProperties, object? entityType, object? navigation, object? dependentEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipNavigationForeignKeyWrongDependentType(object foreignKeyProperties, object entityType, object navigation, object dependentEntityType) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipNavigationForeignKeyWrongDependentType (foreignKeyProperties As Object, entityType As Object, navigation As Object, dependentEntityType As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SkipNavigationForeignKeyWrongDependentType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationForeignKeyWrongDependentType (foreignKeyProperties, entityType, navigation, dependentEntityType)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="navigation" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dependentEntityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <summary>
                The foreign key {foreignKeyProperties} cannot be used for the skip navigation '{entityType}.{navigation}' because it is declared on the entity type '{dependentEntityType}', but a foreign key on '{entityType}' is expected.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipNavigationForeignKeyWrongPrincipalType">
      <MemberSignature Language="C#" Value="public static string SkipNavigationForeignKeyWrongPrincipalType (object foreignKeyProperties, object navigation, object entityType, object principalEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipNavigationForeignKeyWrongPrincipalType(object foreignKeyProperties, object navigation, object entityType, object principalEntityType) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationForeignKeyWrongPrincipalType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipNavigationForeignKeyWrongPrincipalType (foreignKeyProperties As Object, navigation As Object, entityType As Object, principalEntityType As Object) As String" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member SkipNavigationForeignKeyWrongPrincipalType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationForeignKeyWrongPrincipalType (foreignKeyProperties, navigation, entityType, principalEntityType)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string SkipNavigationForeignKeyWrongPrincipalType (object? foreignKeyProperties, object? entityType, object? navigation, object? principalEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipNavigationForeignKeyWrongPrincipalType(object foreignKeyProperties, object entityType, object navigation, object principalEntityType) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipNavigationForeignKeyWrongPrincipalType (foreignKeyProperties As Object, entityType As Object, navigation As Object, principalEntityType As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SkipNavigationForeignKeyWrongPrincipalType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationForeignKeyWrongPrincipalType (foreignKeyProperties, entityType, navigation, principalEntityType)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKeyProperties" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="navigation" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalEntityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKeyProperties">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <summary>
                The foreign key {foreignKeyProperties} cannot be used for the skip navigation '{entityType}.{navigation}' because it is declared on the entity type '{entityType}', but a foreign key on '{principalEntityType}' is expected.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipNavigationInUseBySkipNavigation">
      <MemberSignature Language="C#" Value="public static string SkipNavigationInUseBySkipNavigation (object skipNavigation, object inverseSkipNavigation, object referencingEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipNavigationInUseBySkipNavigation(object skipNavigation, object inverseSkipNavigation, object referencingEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationInUseBySkipNavigation(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipNavigationInUseBySkipNavigation (skipNavigation As Object, inverseSkipNavigation As Object, referencingEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SkipNavigationInUseBySkipNavigation : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationInUseBySkipNavigation (skipNavigation, inverseSkipNavigation, referencingEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipNavigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="inverseSkipNavigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="referencingEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="skipNavigation">To be added.</param>
        <param name="inverseSkipNavigation">To be added.</param>
        <param name="referencingEntityType">To be added.</param>
        <summary>
                The skip navigation '{skipNavigation}' cannot be removed because it is set as the inverse of the skip navigation '{inverseSkipNavigation}' on '{referencingEntityType}'. All referencing skip navigations must be removed before this skip navigation can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipNavigationInUseBySkipNavigation">
      <MemberSignature Language="C#" Value="public static string SkipNavigationInUseBySkipNavigation (object? entityType, object? skipNavigation, object? referencingEntityType, object? inverseSkipNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipNavigationInUseBySkipNavigation(object entityType, object skipNavigation, object referencingEntityType, object inverseSkipNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationInUseBySkipNavigation(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipNavigationInUseBySkipNavigation (entityType As Object, skipNavigation As Object, referencingEntityType As Object, inverseSkipNavigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member SkipNavigationInUseBySkipNavigation : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationInUseBySkipNavigation (entityType, skipNavigation, referencingEntityType, inverseSkipNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="skipNavigation" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="referencingEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="inverseSkipNavigation" Type="System.Object" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="skipNavigation">To be added.</param>
        <param name="referencingEntityType">To be added.</param>
        <param name="inverseSkipNavigation">To be added.</param>
        <summary>
                The skip navigation '{entityType}.{skipNavigation}' cannot be removed because it is configured as the inverse of the skip navigation '{referencingEntityType}.{inverseSkipNavigation}'. All referencing skip navigations must be removed before this skip navigation can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipNavigationNoForeignKey">
      <MemberSignature Language="C#" Value="public static string SkipNavigationNoForeignKey (object navigation, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipNavigationNoForeignKey(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationNoForeignKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipNavigationNoForeignKey (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SkipNavigationNoForeignKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationNoForeignKey (navigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string SkipNavigationNoForeignKey (object? navigation, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The skip navigation '{1_entityType}.{0_navigation}' doesn't have a foreign key associated with it. Every skip navigation must have a configured foreign key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipNavigationNoInverse">
      <MemberSignature Language="C#" Value="public static string SkipNavigationNoInverse (object navigation, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipNavigationNoInverse(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationNoInverse(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipNavigationNoInverse (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SkipNavigationNoInverse : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationNoInverse (navigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string SkipNavigationNoInverse (object? navigation, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The skip navigation '{1_entityType}.{0_navigation}' doesn't have an inverse navigation configured. Every skip navigation should have an inverse skip navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipNavigationNonCollection">
      <MemberSignature Language="C#" Value="public static string SkipNavigationNonCollection (object navigation, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipNavigationNonCollection(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationNonCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipNavigationNonCollection (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SkipNavigationNonCollection : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationNonCollection (navigation, entityType)" />
      <MemberSignature Language="C#" Value="public static string SkipNavigationNonCollection (object? navigation, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The skip navigation '{1_entityType}.{0_navigation}' is not a collection. Only collection skip navigations are currently supported.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipNavigationWrongInverse">
      <MemberSignature Language="C#" Value="public static string SkipNavigationWrongInverse (object inverse, object inverseEntityType, object navigation, object targetEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipNavigationWrongInverse(object inverse, object inverseEntityType, object navigation, object targetEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationWrongInverse(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipNavigationWrongInverse (inverse As Object, inverseEntityType As Object, navigation As Object, targetEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SkipNavigationWrongInverse : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationWrongInverse (inverse, inverseEntityType, navigation, targetEntityType)" />
      <MemberSignature Language="C#" Value="public static string SkipNavigationWrongInverse (object? inverse, object? inverseEntityType, object? navigation, object? targetEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inverse" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="inverseEntityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="targetEntityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="inverse">To be added.</param>
        <param name="inverseEntityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="targetEntityType">To be added.</param>
        <summary>
                The skip navigation '{inverse}' declared on the entity type '{inverseEntityType}' cannot be set as the inverse of '{navigation}', which targets '{targetEntityType}'. The inverse navigation should be declared on the target entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipNavigationWrongType">
      <MemberSignature Language="C#" Value="public static string SkipNavigationWrongType (object navigation, object entityType, object otherEntityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SkipNavigationWrongType(object navigation, object entityType, object otherEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationWrongType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SkipNavigationWrongType (navigation As Object, entityType As Object, otherEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SkipNavigationWrongType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.SkipNavigationWrongType (navigation, entityType, otherEntityType)" />
      <MemberSignature Language="C#" Value="public static string SkipNavigationWrongType (object? navigation, object? entityType, object? otherEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <summary>
                The skip navigation '{navigation}' cannot be removed from the entity type '{entityType}' because it is defined on the entity type '{otherEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreGenValue">
      <MemberSignature Language="C#" Value="public static string StoreGenValue (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StoreGenValue(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.StoreGenValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StoreGenValue (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member StoreGenValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.StoreGenValue (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string StoreGenValue (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' cannot be assigned a value generated by the database. Store-generated values can only be assigned to properties configured to use store-generated values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TempValue">
      <MemberSignature Language="C#" Value="public static string TempValue (object property, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TempValue(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TempValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TempValue (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member TempValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TempValue (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string TempValue (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' cannot be assigned a temporary value. Temporary values can only be assigned to properties configured to use store-generated values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TempValuePersists">
      <MemberSignature Language="C#" Value="public static string TempValuePersists (object property, object entityType, object state);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TempValuePersists(object property, object entityType, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TempValuePersists(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TempValuePersists (property As Object, entityType As Object, state As Object) As String" />
      <MemberSignature Language="F#" Value="static member TempValuePersists : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TempValuePersists (property, entityType, state)" />
      <MemberSignature Language="C#" Value="public static string TempValuePersists (object? property, object? entityType, object? state);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
                The property '{1_entityType}.{0_property}' has a temporary value while attempting to change the entity's state to '{state}'. Either set a permanent value explicitly, or ensure that the database is configured to generate values for this property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackingTypeMismatch">
      <MemberSignature Language="C#" Value="public static string TrackingTypeMismatch (object runtimeEntityType, object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TrackingTypeMismatch(object runtimeEntityType, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TrackingTypeMismatch(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrackingTypeMismatch (runtimeEntityType As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member TrackingTypeMismatch : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TrackingTypeMismatch (runtimeEntityType, entityType)" />
      <MemberSignature Language="C#" Value="public static string TrackingTypeMismatch (object? runtimeEntityType, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runtimeEntityType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="runtimeEntityType">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The instance of entity type '{runtimeEntityType}' cannot be tracked as the entity type '{entityType}' because the two types are not in the same hierarchy.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionsNotSupported">
      <MemberSignature Language="C#" Value="public static string TransactionsNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TransactionsNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TransactionsNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransactionsNotSupported As String" />
      <MemberSignature Language="F#" Value="static member TransactionsNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TransactionsNotSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The current provider doesn't support System.Transaction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationFailed">
      <MemberSignature Language="C#" Value="public static string TranslationFailed (object expression);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TranslationFailed(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TranslationFailed(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TranslationFailed (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member TranslationFailed : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TranslationFailed expression" />
      <MemberSignature Language="C#" Value="public static string TranslationFailed (object? expression);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                The LINQ expression '{expression}' could not be translated. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationFailedWithDetails">
      <MemberSignature Language="C#" Value="public static string TranslationFailedWithDetails (object expression, object details);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TranslationFailedWithDetails(object expression, object details) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TranslationFailedWithDetails(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TranslationFailedWithDetails (expression As Object, details As Object) As String" />
      <MemberSignature Language="F#" Value="static member TranslationFailedWithDetails : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TranslationFailedWithDetails (expression, details)" />
      <MemberSignature Language="C#" Value="public static string TranslationFailedWithDetails (object? expression, object? details);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="details" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="details">To be added.</param>
        <summary>
                The LINQ expression '{expression}' could not be translated. Additional information: {details} Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConfigurationConflict">
      <MemberSignature Language="C#" Value="public static string TypeConfigurationConflict (object? type, object? typeConfiguration, object? otherType, object? otherTypeConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TypeConfigurationConflict(object type, object typeConfiguration, object otherType, object otherTypeConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TypeConfigurationConflict(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TypeConfigurationConflict (type As Object, typeConfiguration As Object, otherType As Object, otherTypeConfiguration As Object) As String" />
      <MemberSignature Language="F#" Value="static member TypeConfigurationConflict : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TypeConfigurationConflict (type, typeConfiguration, otherType, otherTypeConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="typeConfiguration" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="otherType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="otherTypeConfiguration" Type="System.Object" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="typeConfiguration">To be added.</param>
        <param name="otherType">To be added.</param>
        <param name="otherTypeConfiguration">To be added.</param>
        <summary>
                The type '{type}' has been configured as '{typeConfiguration}', this conflicts with type '{otherType}' configured as '{otherTypeConfiguration}'. All base types and implemented interfaces must have the same configuration type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNotMarkedAsShared">
      <MemberSignature Language="C#" Value="public static string TypeNotMarkedAsShared (object type);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TypeNotMarkedAsShared(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TypeNotMarkedAsShared(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TypeNotMarkedAsShared (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member TypeNotMarkedAsShared : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.TypeNotMarkedAsShared type" />
      <MemberSignature Language="C#" Value="public static string TypeNotMarkedAsShared (object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                The type '{type}' has not been configured as a shared type in the model. Before calling 'UsingEntity' add the entity type in the model as a shared entity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnableToDiscriminate">
      <MemberSignature Language="C#" Value="public static string UnableToDiscriminate (object entityType, object discriminator);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnableToDiscriminate(object entityType, object discriminator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnableToDiscriminate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnableToDiscriminate (entityType As Object, discriminator As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnableToDiscriminate : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnableToDiscriminate (entityType, discriminator)" />
      <MemberSignature Language="C#" Value="public static string UnableToDiscriminate (object? entityType, object? discriminator);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="discriminator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="discriminator">To be added.</param>
        <summary>
                Unable to materialize entity instance of type '{entityType}'. No discriminators matched the discriminator value '{discriminator}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnableToSetIsUnique">
      <MemberSignature Language="C#" Value="public static string UnableToSetIsUnique (object isUnique, object navigationName, object entityType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnableToSetIsUnique(object isUnique, object navigationName, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnableToSetIsUnique(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnableToSetIsUnique (isUnique As Object, navigationName As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnableToSetIsUnique : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnableToSetIsUnique (isUnique, navigationName, entityType)" />
      <MemberSignature Language="C#" Value="public static string UnableToSetIsUnique (object? isUnique, object? navigationName, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnique" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationName" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="isUnique">To be added.</param>
        <param name="navigationName">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Unable to set 'IsUnique' to '{isUnique}' on the relationship associated with the navigation '{2_entityType}.{1_navigationName}' because the navigation has the opposite multiplicity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnconfigurableType">
      <MemberSignature Language="C#" Value="public static string UnconfigurableType (object? type, object? configuration, object? expectedConfiguration, object? configurationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnconfigurableType(object type, object configuration, object expectedConfiguration, object configurationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnconfigurableType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnconfigurableType (type As Object, configuration As Object, expectedConfiguration As Object, configurationType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnconfigurableType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnconfigurableType (type, configuration, expectedConfiguration, configurationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configuration" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="expectedConfiguration" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="configurationType" Type="System.Object" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="configuration">To be added.</param>
        <param name="expectedConfiguration">To be added.</param>
        <param name="configurationType">To be added.</param>
        <summary>
                The type '{type}' cannot be configured as '{configuration}' since model building assumes that it is configured as '{expectedConfiguration}'. Remove the unsupported configuration for '{configurationType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnconfigurableTypeMapping">
      <MemberSignature Language="C#" Value="public static string UnconfigurableTypeMapping (object? type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnconfigurableTypeMapping(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnconfigurableTypeMapping(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnconfigurableTypeMapping (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnconfigurableTypeMapping : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnconfigurableTypeMapping type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                Default type mapping cannot be configured for the type '{type}' since it's not a valid scalar type. Remove the unsupported configuration.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledExpressionNode">
      <MemberSignature Language="C#" Value="public static string UnhandledExpressionNode (object nodeType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnhandledExpressionNode(object nodeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnhandledExpressionNode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnhandledExpressionNode (nodeType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnhandledExpressionNode : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnhandledExpressionNode nodeType" />
      <MemberSignature Language="C#" Value="public static string UnhandledExpressionNode (object? nodeType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="nodeType">To be added.</param>
        <summary>
                Unhandled expression node type '{nodeType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledMemberBinding">
      <MemberSignature Language="C#" Value="public static string UnhandledMemberBinding (object bindingType);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnhandledMemberBinding(object bindingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnhandledMemberBinding(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnhandledMemberBinding (bindingType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnhandledMemberBinding : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnhandledMemberBinding bindingType" />
      <MemberSignature Language="C#" Value="public static string UnhandledMemberBinding (object? bindingType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="bindingType">To be added.</param>
        <summary>
                Unhandled member binding type '{bindingType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledNavigationBase">
      <MemberSignature Language="C#" Value="public static string UnhandledNavigationBase (object type);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnhandledNavigationBase(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnhandledNavigationBase(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnhandledNavigationBase (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnhandledNavigationBase : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnhandledNavigationBase type" />
      <MemberSignature Language="C#" Value="public static string UnhandledNavigationBase (object? type);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                Unhandled 'INavigationBase' of type '{type}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownEntity">
      <MemberSignature Language="C#" Value="public static string UnknownEntity (object entity);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnknownEntity(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnknownEntity(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnknownEntity (entity As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnknownEntity : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnknownEntity entity" />
      <MemberSignature Language="C#" Value="public static string UnknownEntity (object? entity);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>
                Unhandled {entity} encountered.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownKeyValue">
      <MemberSignature Language="C#" Value="public static string UnknownKeyValue (object entityType, object property);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnknownKeyValue(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnknownKeyValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnknownKeyValue (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnknownKeyValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnknownKeyValue (entityType, property)" />
      <MemberSignature Language="C#" Value="public static string UnknownKeyValue (object? entityType, object? property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The value of '{entityType}.{property}' is unknown when attempting to save changes. This is because the property is also part of a foreign key for which the principal entity in the relationship is not known.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownShadowKeyValue">
      <MemberSignature Language="C#" Value="public static string UnknownShadowKeyValue (object? entityType, object? property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnknownShadowKeyValue(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnknownShadowKeyValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnknownShadowKeyValue (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnknownShadowKeyValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnknownShadowKeyValue (entityType, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The value of shadow key property '{entityType}.{property}' is unknown when attempting to save changes. This is because shadow property values cannot be preserved when the entity is not being tracked. Consider adding the property to the entity's .NET type. See https://aka.ms/efcore-docs-owned-collections for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnnamedIndexDefinedOnIgnoredProperty">
      <MemberSignature Language="C#" Value="public static string UnnamedIndexDefinedOnIgnoredProperty (object entityType, object indexPropertyList, object propertyName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnnamedIndexDefinedOnIgnoredProperty(object entityType, object indexPropertyList, object propertyName) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnnamedIndexDefinedOnIgnoredProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnnamedIndexDefinedOnIgnoredProperty (entityType As Object, indexPropertyList As Object, propertyName As Object) As String" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member UnnamedIndexDefinedOnIgnoredProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnnamedIndexDefinedOnIgnoredProperty (entityType, indexPropertyList, propertyName)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string UnnamedIndexDefinedOnIgnoredProperty (object? entityType, object? indexProperties, object? propertyName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnnamedIndexDefinedOnIgnoredProperty(object entityType, object indexProperties, object propertyName) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnnamedIndexDefinedOnIgnoredProperty (entityType As Object, indexProperties As Object, propertyName As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member UnnamedIndexDefinedOnIgnoredProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnnamedIndexDefinedOnIgnoredProperty (entityType, indexProperties, propertyName)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="indexPropertyList" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="indexProperties" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="indexPropertyList">To be added.</param>
        <param name="indexProperties">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                The unnamed index specified via [Index] attribute on the entity type '{entityType}' with properties {indexProperties} is invalid. The property '{propertyName}' was marked as unmapped by [NotMapped] attribute or 'Ignore()' in 'OnModelCreating'. An index cannot use unmapped properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnnamedIndexDefinedOnNonExistentProperty">
      <MemberSignature Language="C#" Value="public static string UnnamedIndexDefinedOnNonExistentProperty (object entityType, object indexPropertyList, object propertyName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnnamedIndexDefinedOnNonExistentProperty(object entityType, object indexPropertyList, object propertyName) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnnamedIndexDefinedOnNonExistentProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnnamedIndexDefinedOnNonExistentProperty (entityType As Object, indexPropertyList As Object, propertyName As Object) As String" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member UnnamedIndexDefinedOnNonExistentProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnnamedIndexDefinedOnNonExistentProperty (entityType, indexPropertyList, propertyName)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public static string UnnamedIndexDefinedOnNonExistentProperty (object? entityType, object? indexProperties, object? propertyName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnnamedIndexDefinedOnNonExistentProperty(object entityType, object indexProperties, object propertyName) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnnamedIndexDefinedOnNonExistentProperty (entityType As Object, indexProperties As Object, propertyName As Object) As String" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member UnnamedIndexDefinedOnNonExistentProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UnnamedIndexDefinedOnNonExistentProperty (entityType, indexProperties, propertyName)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="indexPropertyList" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="indexProperties" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="indexPropertyList">To be added.</param>
        <param name="indexProperties">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                An unnamed index specified via [Index] attribute on the entity type '{entityType}' references properties {indexProperties}, but no property with name '{propertyName}' exists on that entity type or any of its base types.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UntrackedDependentEntity">
      <MemberSignature Language="C#" Value="public static string UntrackedDependentEntity (object entityType, object referenceCall, object collectionCall);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UntrackedDependentEntity(object entityType, object referenceCall, object collectionCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UntrackedDependentEntity(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UntrackedDependentEntity (entityType As Object, referenceCall As Object, collectionCall As Object) As String" />
      <MemberSignature Language="F#" Value="static member UntrackedDependentEntity : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.UntrackedDependentEntity (entityType, referenceCall, collectionCall)" />
      <MemberSignature Language="C#" Value="public static string UntrackedDependentEntity (object? entityType, object? referenceCall, object? collectionCall);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="referenceCall" Type="System.Object" />
        <Parameter Name="collectionCall" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="referenceCall">To be added.</param>
        <param name="collectionCall">To be added.</param>
        <summary>
                The entity type '{entityType}' uses a shared type and the supplied entity is currently not being tracked. To start tracking this entity, call '{referenceCall}' or '{collectionCall}' on the owner entry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueCannotBeNull">
      <MemberSignature Language="C#" Value="public static string ValueCannotBeNull (object property, object entityType, object propertyType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ValueCannotBeNull(object property, object entityType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ValueCannotBeNull(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValueCannotBeNull (property As Object, entityType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ValueCannotBeNull : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ValueCannotBeNull (property, entityType, propertyType)" />
      <MemberSignature Language="C#" Value="public static string ValueCannotBeNull (object? property, object? entityType, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The value for property '{1_entityType}.{0_property}' cannot be set to null because its type is '{propertyType}' which is not a nullable type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGenWithConversion">
      <MemberSignature Language="C#" Value="public static string ValueGenWithConversion (object entityType, object property, object converter);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ValueGenWithConversion(object entityType, object property, object converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ValueGenWithConversion(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValueGenWithConversion (entityType As Object, property As Object, converter As Object) As String" />
      <MemberSignature Language="F#" Value="static member ValueGenWithConversion : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.ValueGenWithConversion (entityType, property, converter)" />
      <MemberSignature Language="C#" Value="public static string ValueGenWithConversion (object? entityType, object? property, object? converter);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="converter" Type="System.Object" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="converter">To be added.</param>
        <summary>
                Value generation is not supported for property '{entityType}.{property}' because it has a '{converter}' converter configured. Configure the property to not use value generation using 'ValueGenerated.Never' or 'DatabaseGeneratedOption.None' and specify explicit values instead.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIsNotAllowed">
      <MemberSignature Language="C#" Value="public static string VisitIsNotAllowed (object visitMethodName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VisitIsNotAllowed(object visitMethodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.VisitIsNotAllowed(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VisitIsNotAllowed (visitMethodName As Object) As String" />
      <MemberSignature Language="F#" Value="static member VisitIsNotAllowed : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.VisitIsNotAllowed visitMethodName" />
      <MemberSignature Language="C#" Value="public static string VisitIsNotAllowed (object? visitMethodName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitMethodName" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="visitMethodName">To be added.</param>
        <summary>
                Calling '{visitMethodName}' is not allowed. Visit the expression manually for the relevant part in the visitor.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WarningAsErrorTemplate">
      <MemberSignature Language="C#" Value="public static string WarningAsErrorTemplate (object eventName, object message, object eventId);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WarningAsErrorTemplate(object eventName, object message, object eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.WarningAsErrorTemplate(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WarningAsErrorTemplate (eventName As Object, message As Object, eventId As Object) As String" />
      <MemberSignature Language="F#" Value="static member WarningAsErrorTemplate : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.WarningAsErrorTemplate (eventName, message, eventId)" />
      <MemberSignature Language="C#" Value="public static string WarningAsErrorTemplate (object? eventName, object? message, object? eventId);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.Object" />
        <Parameter Name="message" Type="System.Object" />
        <Parameter Name="eventId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventName">To be added.</param>
        <param name="message">To be added.</param>
        <param name="eventId">To be added.</param>
        <summary>
                An error was generated for warning '{eventName}': {message} This exception can be suppressed or logged by passing event ID '{eventId}' to the 'ConfigureWarnings' method in 'DbContext.OnConfiguring' or 'AddDbContext'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakBaseType">
      <MemberSignature Language="C#" Value="public static string WeakBaseType (object entityType, object baseType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WeakBaseType(object entityType, object baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.WeakBaseType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WeakBaseType (entityType As Object, baseType As Object) As String" />
      <MemberSignature Language="F#" Value="static member WeakBaseType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.WeakBaseType (entityType, baseType)" />
      <MemberSignature Language="C#" Value="public static string WeakBaseType (object? entityType, object? baseType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="baseType" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseType">To be added.</param>
        <summary>
                The type '{entityType}' cannot have entity type '{baseType}' as the base type because the latter has a defining navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDerivedType">
      <MemberSignature Language="C#" Value="public static string WeakDerivedType (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WeakDerivedType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.WeakDerivedType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WeakDerivedType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member WeakDerivedType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.WeakDerivedType entityType" />
      <MemberSignature Language="C#" Value="public static string WeakDerivedType (object? entityType);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot have a base type because it has a defining navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrongGenericPropertyType">
      <MemberSignature Language="C#" Value="public static string WrongGenericPropertyType (object property, object entityType, object actualType, object genericType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WrongGenericPropertyType(object property, object entityType, object actualType, object genericType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.WrongGenericPropertyType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WrongGenericPropertyType (property As Object, entityType As Object, actualType As Object, genericType As Object) As String" />
      <MemberSignature Language="F#" Value="static member WrongGenericPropertyType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.WrongGenericPropertyType (property, entityType, actualType, genericType)" />
      <MemberSignature Language="C#" Value="public static string WrongGenericPropertyType (object? property, object? entityType, object? actualType, object? genericType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="actualType" Type="System.Object" />
        <Parameter Name="genericType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="actualType">To be added.</param>
        <param name="genericType">To be added.</param>
        <summary>
                Property '{1_entityType}.{0_property}' is of type '{actualType}' but the generic type provided is of type '{genericType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrongStateManager">
      <MemberSignature Language="C#" Value="public static string WrongStateManager (object entityType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WrongStateManager(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.WrongStateManager(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WrongStateManager (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member WrongStateManager : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreStrings.WrongStateManager entityType" />
      <MemberSignature Language="C#" Value="public static string WrongStateManager (object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Cannot start tracking the entry for entity type '{entityType}' because it was created by a different StateManager instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
