<Type Name="CoreLoggerExtensions" FullName="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions">
  <TypeSignature Language="C#" Value="public static class CoreLoggerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CoreLoggerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CoreLoggerExtensions" />
  <TypeSignature Language="F#" Value="type CoreLoggerExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    This class contains static methods used by EF Core internals and database providers to
                    write information to an <see cref="T:Microsoft.Extensions.Logging.ILogger" /> and a <see cref="T:System.Diagnostics.DiagnosticListener" /> for
                    well-known events.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AmbiguousEndRequiredWarning">
      <MemberSignature Language="C#" Value="public static void AmbiguousEndRequiredWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AmbiguousEndRequiredWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.AmbiguousEndRequiredWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AmbiguousEndRequiredWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), foreignKey As IForeignKey)" />
      <MemberSignature Language="F#" Value="static member AmbiguousEndRequiredWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.AmbiguousEndRequiredWarning (diagnostics, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="foreignKey">The foreign key.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.AmbiguousEndRequiredWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CascadeDelete">
      <MemberSignature Language="C#" Value="public static void CascadeDelete (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalChildEntry, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalParentEntry, Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CascadeDelete(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalChildEntry, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalParentEntry, valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CascadeDelete(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CascadeDelete (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), internalChildEntry As InternalEntityEntry, internalParentEntry As InternalEntityEntry, state As EntityState)" />
      <MemberSignature Language="F#" Value="static member CascadeDelete : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CascadeDelete (diagnostics, internalChildEntry, internalParentEntry, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="internalChildEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="internalParentEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalChildEntry">The child internal entity entry.</param>
        <param name="internalParentEntry">The parent internal entity entry.</param>
        <param name="state">The target state.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.CascadeDelete" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CascadeDeleteOrphan">
      <MemberSignature Language="C#" Value="public static void CascadeDeleteOrphan (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalChildEntry, Microsoft.EntityFrameworkCore.Metadata.IEntityType parentEntityType, Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CascadeDeleteOrphan(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalChildEntry, class Microsoft.EntityFrameworkCore.Metadata.IEntityType parentEntityType, valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CascadeDeleteOrphan(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CascadeDeleteOrphan (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), internalChildEntry As InternalEntityEntry, parentEntityType As IEntityType, state As EntityState)" />
      <MemberSignature Language="F#" Value="static member CascadeDeleteOrphan : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CascadeDeleteOrphan (diagnostics, internalChildEntry, parentEntityType, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="internalChildEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="parentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalChildEntry">The child internal entity entry.</param>
        <param name="parentEntityType">The parent entity type.</param>
        <param name="state">The target state.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.CascadeDeleteOrphan" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CascadeDeleteOrphanSensitive">
      <MemberSignature Language="C#" Value="public static void CascadeDeleteOrphanSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalChildEntry, Microsoft.EntityFrameworkCore.Metadata.IEntityType parentEntityType, Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CascadeDeleteOrphanSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalChildEntry, class Microsoft.EntityFrameworkCore.Metadata.IEntityType parentEntityType, valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CascadeDeleteOrphanSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CascadeDeleteOrphanSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), internalChildEntry As InternalEntityEntry, parentEntityType As IEntityType, state As EntityState)" />
      <MemberSignature Language="F#" Value="static member CascadeDeleteOrphanSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CascadeDeleteOrphanSensitive (diagnostics, internalChildEntry, parentEntityType, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="internalChildEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="parentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalChildEntry">The child internal entity entry.</param>
        <param name="parentEntityType">The parent entity type.</param>
        <param name="state">The target state.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.CascadeDeleteOrphan" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CascadeDeleteSensitive">
      <MemberSignature Language="C#" Value="public static void CascadeDeleteSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalChildEntry, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalParentEntry, Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CascadeDeleteSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalChildEntry, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalParentEntry, valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CascadeDeleteSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CascadeDeleteSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), internalChildEntry As InternalEntityEntry, internalParentEntry As InternalEntityEntry, state As EntityState)" />
      <MemberSignature Language="F#" Value="static member CascadeDeleteSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CascadeDeleteSensitive (diagnostics, internalChildEntry, internalParentEntry, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="internalChildEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="internalParentEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalChildEntry">The child internal entity entry.</param>
        <param name="internalParentEntry">The parent internal entity entry.</param>
        <param name="state">The target state.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.CascadeDelete" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChangeDetected">
      <MemberSignature Language="C#" Value="public static void CollectionChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, System.Collections.Generic.ISet&lt;object&gt; added, System.Collections.Generic.ISet&lt;object&gt; removed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CollectionChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class System.Collections.Generic.ISet`1&lt;object&gt; added, class System.Collections.Generic.ISet`1&lt;object&gt; removed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CollectionChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.ISet{System.Object},System.Collections.Generic.ISet{System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CollectionChangeDetected (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, navigation As INavigation, added As ISet(Of Object), removed As ISet(Of Object))" />
      <MemberSignature Language="F#" Value="static member CollectionChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation * System.Collections.Generic.ISet&lt;obj&gt; * System.Collections.Generic.ISet&lt;obj&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CollectionChangeDetected (diagnostics, internalEntityEntry, navigation, added, removed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="added" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" />
        <Parameter Name="removed" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="navigation">The navigation property.</param>
        <param name="added">The added values.</param>
        <param name="removed">The removed values.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.CollectionChangeDetected" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static void CollectionChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, System.Collections.Generic.ISet&lt;object&gt; added, System.Collections.Generic.ISet&lt;object&gt; removed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CollectionChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class System.Collections.Generic.ISet`1&lt;object&gt; added, class System.Collections.Generic.ISet`1&lt;object&gt; removed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CollectionChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.ISet{System.Object},System.Collections.Generic.ISet{System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CollectionChangeDetectedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, navigation As INavigation, added As ISet(Of Object), removed As ISet(Of Object))" />
      <MemberSignature Language="F#" Value="static member CollectionChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation * System.Collections.Generic.ISet&lt;obj&gt; * System.Collections.Generic.ISet&lt;obj&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CollectionChangeDetectedSensitive (diagnostics, internalEntityEntry, navigation, added, removed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="added" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" />
        <Parameter Name="removed" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="navigation">The navigation property.</param>
        <param name="added">The added values.</param>
        <param name="removed">The removed values.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.CollectionChangeDetected" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionWithoutComparer">
      <MemberSignature Language="C#" Value="public static void CollectionWithoutComparer (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CollectionWithoutComparer(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CollectionWithoutComparer(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CollectionWithoutComparer (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), property As IProperty)" />
      <MemberSignature Language="F#" Value="static member CollectionWithoutComparer : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.CollectionWithoutComparer (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="property">The property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.CollectionWithoutComparer" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning">
      <MemberSignature Language="C#" Value="public static void ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, System.Reflection.MemberInfo property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class System.Reflection.MemberInfo property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As INavigation, property As MemberInfo)" />
      <MemberSignature Language="F#" Value="static member ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation * System.Reflection.MemberInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning (diagnostics, navigation, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="property" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="navigation"> The navigation property. </param>
        <param name="property"> The property. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning">
      <MemberSignature Language="C#" Value="public static void ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation navigation, System.Reflection.MemberInfo property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation navigation, class System.Reflection.MemberInfo property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As IReadOnlyNavigation, property As MemberInfo)" />
      <MemberSignature Language="F#" Value="static member ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation * System.Reflection.MemberInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning (diagnostics, navigation, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigation">The navigation property.</param>
        <param name="property">The property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ConflictingForeignKeyAttributesOnNavigationAndPropertyWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingKeylessAndKeyAttributesWarning">
      <MemberSignature Language="C#" Value="public static void ConflictingKeylessAndKeyAttributesWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConflictingKeylessAndKeyAttributesWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingKeylessAndKeyAttributesWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConflictingKeylessAndKeyAttributesWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), property As IProperty)" />
      <MemberSignature Language="F#" Value="static member ConflictingKeylessAndKeyAttributesWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingKeylessAndKeyAttributesWarning (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="property"> The property which is being defined as part of a key. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ConflictingKeylessAndKeyAttributesWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingKeylessAndKeyAttributesWarning">
      <MemberSignature Language="C#" Value="public static void ConflictingKeylessAndKeyAttributesWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConflictingKeylessAndKeyAttributesWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingKeylessAndKeyAttributesWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConflictingKeylessAndKeyAttributesWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), property As IReadOnlyProperty)" />
      <MemberSignature Language="F#" Value="static member ConflictingKeylessAndKeyAttributesWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingKeylessAndKeyAttributesWarning (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="property">The property which is being defined as part of a key.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ConflictingKeylessAndKeyAttributesWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingShadowForeignKeysWarning">
      <MemberSignature Language="C#" Value="public static void ConflictingShadowForeignKeysWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConflictingShadowForeignKeysWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingShadowForeignKeysWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConflictingShadowForeignKeysWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), foreignKey As IForeignKey)" />
      <MemberSignature Language="F#" Value="static member ConflictingShadowForeignKeysWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingShadowForeignKeysWarning (diagnostics, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="foreignKey"> The foreign key. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ConflictingShadowForeignKeysWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingShadowForeignKeysWarning">
      <MemberSignature Language="C#" Value="public static void ConflictingShadowForeignKeysWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConflictingShadowForeignKeysWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingShadowForeignKeysWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConflictingShadowForeignKeysWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), foreignKey As IReadOnlyForeignKey)" />
      <MemberSignature Language="F#" Value="static member ConflictingShadowForeignKeysWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ConflictingShadowForeignKeysWarning (diagnostics, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="foreignKey">The foreign key.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ConflictingShadowForeignKeysWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposed">
      <MemberSignature Language="C#" Value="public static void ContextDisposed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContextDisposed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ContextDisposed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ContextDisposed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext)" />
      <MemberSignature Language="F#" Value="static member ContextDisposed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * Microsoft.EntityFrameworkCore.DbContext -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ContextDisposed (diagnostics, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ContextDisposed" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextInitialized">
      <MemberSignature Language="C#" Value="public static void ContextInitialized (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, Microsoft.EntityFrameworkCore.DbContextOptions contextOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContextInitialized(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class Microsoft.EntityFrameworkCore.DbContextOptions contextOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ContextInitialized(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.DbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ContextInitialized (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext, contextOptions As DbContextOptions)" />
      <MemberSignature Language="F#" Value="static member ContextInitialized : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.DbContextOptions -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ContextInitialized (diagnostics, context, contextOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="contextOptions" Type="Microsoft.EntityFrameworkCore.DbContextOptions" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <param name="contextOptions">The context options being used.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ContextInitialized" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachedLazyLoadingWarning">
      <MemberSignature Language="C#" Value="public static void DetachedLazyLoadingWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DetachedLazyLoadingWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.DetachedLazyLoadingWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DetachedLazyLoadingWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext, entityType As Object, navigationName As String)" />
      <MemberSignature Language="F#" Value="static member DetachedLazyLoadingWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * Microsoft.EntityFrameworkCore.DbContext * obj * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.DetachedLazyLoadingWarning (diagnostics, context, entityType, navigationName)" />
      <MemberSignature Language="C#" Value="public static void DetachedLazyLoadingWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext? context, object entityType, string navigationName);" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="navigationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <param name="entityType">The entity type.</param>
        <param name="navigationName">The name of the navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.DetachedLazyLoadingWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectChangesCompleted">
      <MemberSignature Language="C#" Value="public static void DetectChangesCompleted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DetectChangesCompleted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.DetectChangesCompleted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DetectChangesCompleted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), context As DbContext)" />
      <MemberSignature Language="F#" Value="static member DetectChangesCompleted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.DbContext -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.DetectChangesCompleted (diagnostics, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.DetectChangesCompleted" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectChangesStarting">
      <MemberSignature Language="C#" Value="public static void DetectChangesStarting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DetectChangesStarting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.DetectChangesStarting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DetectChangesStarting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), context As DbContext)" />
      <MemberSignature Language="F#" Value="static member DetectChangesStarting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.DbContext -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.DetectChangesStarting (diagnostics, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.DetectChangesStarting" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DistinctAfterOrderByWithoutRowLimitingOperatorWarning">
      <MemberSignature Language="C#" Value="public static void DistinctAfterOrderByWithoutRowLimitingOperatorWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DistinctAfterOrderByWithoutRowLimitingOperatorWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.DistinctAfterOrderByWithoutRowLimitingOperatorWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DistinctAfterOrderByWithoutRowLimitingOperatorWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query))" />
      <MemberSignature Language="F#" Value="static member DistinctAfterOrderByWithoutRowLimitingOperatorWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.DistinctAfterOrderByWithoutRowLimitingOperatorWarning diagnostics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.DistinctAfterOrderByWithoutRowLimitingOperatorWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateDependentEntityTypeInstanceWarning">
      <MemberSignature Language="C#" Value="public static void DuplicateDependentEntityTypeInstanceWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent1, Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DuplicateDependentEntityTypeInstanceWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent1, class Microsoft.EntityFrameworkCore.Metadata.IEntityType dependent2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.DuplicateDependentEntityTypeInstanceWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DuplicateDependentEntityTypeInstanceWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), dependent1 As IEntityType, dependent2 As IEntityType)" />
      <MemberSignature Language="F#" Value="static member DuplicateDependentEntityTypeInstanceWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.DuplicateDependentEntityTypeInstanceWarning (diagnostics, dependent1, dependent2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="dependent1" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="dependent2" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="dependent1">The first dependent type.</param>
        <param name="dependent2">The second dependent type.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.DuplicateDependentEntityTypeInstanceWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStrategyRetrying">
      <MemberSignature Language="C#" Value="public static void ExecutionStrategyRetrying (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, System.Collections.Generic.IReadOnlyList&lt;Exception&gt; exceptionsEncountered, TimeSpan delay, bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExecutionStrategyRetrying(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Exception&gt; exceptionsEncountered, valuetype System.TimeSpan delay, bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ExecutionStrategyRetrying(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},System.Collections.Generic.IReadOnlyList{System.Exception},System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExecutionStrategyRetrying (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), exceptionsEncountered As IReadOnlyList(Of Exception), delay As TimeSpan, async As Boolean)" />
      <MemberSignature Language="F#" Value="static member ExecutionStrategyRetrying : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * System.Collections.Generic.IReadOnlyList&lt;Exception&gt; * TimeSpan * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ExecutionStrategyRetrying (diagnostics, exceptionsEncountered, delay, async)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="exceptionsEncountered" Type="System.Collections.Generic.IReadOnlyList&lt;System.Exception&gt;" />
        <Parameter Name="delay" Type="System.TimeSpan" />
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="exceptionsEncountered">The exceptions(s) that caused the failure.</param>
        <param name="delay">The delay that before the next retry.</param>
        <param name="async">Indicates whether execution is asynchronous or not.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ExecutionStrategyRetrying" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstWithoutOrderByAndFilterWarning">
      <MemberSignature Language="C#" Value="public static void FirstWithoutOrderByAndFilterWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FirstWithoutOrderByAndFilterWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.FirstWithoutOrderByAndFilterWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub FirstWithoutOrderByAndFilterWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query))" />
      <MemberSignature Language="F#" Value="static member FirstWithoutOrderByAndFilterWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.FirstWithoutOrderByAndFilterWarning diagnostics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.FirstWithoutOrderByAndFilterWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyAttributesOnBothNavigationsWarning">
      <MemberSignature Language="C#" Value="public static void ForeignKeyAttributesOnBothNavigationsWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyAttributesOnBothNavigationsWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyAttributesOnBothNavigationsWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyAttributesOnBothNavigationsWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstNavigation As INavigation, secondNavigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyAttributesOnBothNavigationsWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyAttributesOnBothNavigationsWarning (diagnostics, firstNavigation, secondNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="secondNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="firstNavigation"> The first navigation property. </param>
        <param name="secondNavigation"> The second navigation property. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ForeignKeyAttributesOnBothNavigationsWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyAttributesOnBothNavigationsWarning">
      <MemberSignature Language="C#" Value="public static void ForeignKeyAttributesOnBothNavigationsWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation secondNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyAttributesOnBothNavigationsWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation secondNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyAttributesOnBothNavigationsWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation,Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyAttributesOnBothNavigationsWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstNavigation As IReadOnlyNavigation, secondNavigation As IReadOnlyNavigation)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyAttributesOnBothNavigationsWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyAttributesOnBothNavigationsWarning (diagnostics, firstNavigation, secondNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="secondNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="firstNavigation">The first navigation property.</param>
        <param name="secondNavigation">The second navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ForeignKeyAttributesOnBothNavigationsWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyAttributesOnBothPropertiesWarning">
      <MemberSignature Language="C#" Value="public static void ForeignKeyAttributesOnBothPropertiesWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation, System.Reflection.MemberInfo firstProperty, System.Reflection.MemberInfo secondProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyAttributesOnBothPropertiesWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation, class System.Reflection.MemberInfo firstProperty, class System.Reflection.MemberInfo secondProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyAttributesOnBothPropertiesWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyAttributesOnBothPropertiesWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstNavigation As INavigation, secondNavigation As INavigation, firstProperty As MemberInfo, secondProperty As MemberInfo)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyAttributesOnBothPropertiesWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation * System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyAttributesOnBothPropertiesWarning (diagnostics, firstNavigation, secondNavigation, firstProperty, secondProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="secondNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="firstProperty" Type="System.Reflection.MemberInfo" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="secondProperty" Type="System.Reflection.MemberInfo" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="firstNavigation"> The first navigation property. </param>
        <param name="secondNavigation"> The second navigation property. </param>
        <param name="firstProperty"> The first property. </param>
        <param name="secondProperty"> The second property. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ForeignKeyAttributesOnBothPropertiesWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyAttributesOnBothPropertiesWarning">
      <MemberSignature Language="C#" Value="public static void ForeignKeyAttributesOnBothPropertiesWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation secondNavigation, System.Reflection.MemberInfo firstProperty, System.Reflection.MemberInfo secondProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyAttributesOnBothPropertiesWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation secondNavigation, class System.Reflection.MemberInfo firstProperty, class System.Reflection.MemberInfo secondProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyAttributesOnBothPropertiesWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation,Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation,System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyAttributesOnBothPropertiesWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstNavigation As IReadOnlyNavigation, secondNavigation As IReadOnlyNavigation, firstProperty As MemberInfo, secondProperty As MemberInfo)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyAttributesOnBothPropertiesWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation * System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyAttributesOnBothPropertiesWarning (diagnostics, firstNavigation, secondNavigation, firstProperty, secondProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="secondNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="firstProperty" Type="System.Reflection.MemberInfo" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="secondProperty" Type="System.Reflection.MemberInfo" Index="4" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="firstNavigation">The first navigation property.</param>
        <param name="secondNavigation">The second navigation property.</param>
        <param name="firstProperty">The first property.</param>
        <param name="secondProperty">The second property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ForeignKeyAttributesOnBothPropertiesWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyChangeDetected">
      <MemberSignature Language="C#" Value="public static void ForeignKeyChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyChangeDetected (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, property As IProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyChangeDetected (diagnostics, internalEntityEntry, property, oldValue, newValue)" />
      <MemberSignature Language="C#" Value="public static void ForeignKeyChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object? oldValue, object? newValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="property">The property.</param>
        <param name="oldValue">The old value.</param>
        <param name="newValue">the new value.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ForeignKeyChangeDetected" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static void ForeignKeyChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyChangeDetectedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, property As IProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ForeignKeyChangeDetectedSensitive (diagnostics, internalEntityEntry, property, oldValue, newValue)" />
      <MemberSignature Language="C#" Value="public static void ForeignKeyChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object? oldValue, object? newValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="property">The property.</param>
        <param name="oldValue">The old value.</param>
        <param name="newValue">The new value.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ForeignKeyChangeDetected" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleMatchingForeignKeyProperties">
      <MemberSignature Language="C#" Value="public static void IncompatibleMatchingForeignKeyProperties (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; foreignKeyProperties, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; principalKeyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncompatibleMatchingForeignKeyProperties(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; foreignKeyProperties, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; principalKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.IncompatibleMatchingForeignKeyProperties(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IncompatibleMatchingForeignKeyProperties (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), foreignKeyProperties As IReadOnlyList(Of IPropertyBase), principalKeyProperties As IReadOnlyList(Of IPropertyBase))" />
      <MemberSignature Language="F#" Value="static member IncompatibleMatchingForeignKeyProperties : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.IncompatibleMatchingForeignKeyProperties (diagnostics, foreignKeyProperties, principalKeyProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="principalKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="foreignKeyProperties"> The properties that make up the foreign key. </param>
        <param name="principalKeyProperties"> The corresponding keys on the principal side. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.IncompatibleMatchingForeignKeyProperties" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleMatchingForeignKeyProperties">
      <MemberSignature Language="C#" Value="public static void IncompatibleMatchingForeignKeyProperties (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, string dependentToPrincipalNavigationSpecification, string principalToDependentNavigationSpecification, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; foreignKeyProperties, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; principalKeyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncompatibleMatchingForeignKeyProperties(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, string dependentToPrincipalNavigationSpecification, string principalToDependentNavigationSpecification, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; foreignKeyProperties, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; principalKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.IncompatibleMatchingForeignKeyProperties(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IncompatibleMatchingForeignKeyProperties (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), dependentToPrincipalNavigationSpecification As String, principalToDependentNavigationSpecification As String, foreignKeyProperties As IReadOnlyList(Of IPropertyBase), principalKeyProperties As IReadOnlyList(Of IPropertyBase))" />
      <MemberSignature Language="F#" Value="static member IncompatibleMatchingForeignKeyProperties : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.IncompatibleMatchingForeignKeyProperties (diagnostics, dependentToPrincipalNavigationSpecification, principalToDependentNavigationSpecification, foreignKeyProperties, principalKeyProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="dependentToPrincipalNavigationSpecification" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="principalToDependentNavigationSpecification" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="foreignKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="3" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="principalKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="4" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="dependentToPrincipalNavigationSpecification">
                The name of the navigation property or entity type on the dependent end of the
                relationship.
            </param>
        <param name="principalToDependentNavigationSpecification">
                The name of the navigation property or entity type on the principal end of the
                relationship.
            </param>
        <param name="foreignKeyProperties"> The properties that make up the foreign key. </param>
        <param name="principalKeyProperties"> The corresponding keys on the principal side. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.IncompatibleMatchingForeignKeyProperties" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleMatchingForeignKeyProperties">
      <MemberSignature Language="C#" Value="public static void IncompatibleMatchingForeignKeyProperties (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, string dependentToPrincipalNavigationSpecification, string principalToDependentNavigationSpecification, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; foreignKeyProperties, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; principalKeyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncompatibleMatchingForeignKeyProperties(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, string dependentToPrincipalNavigationSpecification, string principalToDependentNavigationSpecification, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; foreignKeyProperties, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; principalKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.IncompatibleMatchingForeignKeyProperties(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},System.String,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IncompatibleMatchingForeignKeyProperties (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), dependentToPrincipalNavigationSpecification As String, principalToDependentNavigationSpecification As String, foreignKeyProperties As IReadOnlyList(Of IReadOnlyPropertyBase), principalKeyProperties As IReadOnlyList(Of IReadOnlyPropertyBase))" />
      <MemberSignature Language="F#" Value="static member IncompatibleMatchingForeignKeyProperties : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * string * string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.IncompatibleMatchingForeignKeyProperties (diagnostics, dependentToPrincipalNavigationSpecification, principalToDependentNavigationSpecification, foreignKeyProperties, principalKeyProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dependentToPrincipalNavigationSpecification" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalToDependentNavigationSpecification" Type="System.String" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt;" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt;" Index="4" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="dependentToPrincipalNavigationSpecification">
                The name of the navigation property or entity type on the dependent end of the
                relationship.
            </param>
        <param name="principalToDependentNavigationSpecification">
                The name of the navigation property or entity type on the principal end of the
                relationship.
            </param>
        <param name="foreignKeyProperties">The properties that make up the foreign key.</param>
        <param name="principalKeyProperties">The corresponding keys on the principal side.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.IncompatibleMatchingForeignKeyProperties" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidIncludePathError">
      <MemberSignature Language="C#" Value="public static void InvalidIncludePathError (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, string navigationChain, string navigationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvalidIncludePathError(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, string navigationChain, string navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.InvalidIncludePathError(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub InvalidIncludePathError (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), navigationChain As String, navigationName As String)" />
      <MemberSignature Language="F#" Value="static member InvalidIncludePathError : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.InvalidIncludePathError (diagnostics, navigationChain, navigationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationChain" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationName" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigationChain">
                The navigation chain used in the
                <see cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.Linq.IQueryable{``0},System.String)" /></param>
        <param name="navigationName">The navigation name which was not found in the model.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.InvalidIncludePathError" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LazyLoadOnDisposedContextWarning">
      <MemberSignature Language="C#" Value="public static void LazyLoadOnDisposedContextWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LazyLoadOnDisposedContextWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.LazyLoadOnDisposedContextWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LazyLoadOnDisposedContextWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext, entityType As Object, navigationName As String)" />
      <MemberSignature Language="F#" Value="static member LazyLoadOnDisposedContextWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * Microsoft.EntityFrameworkCore.DbContext * obj * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.LazyLoadOnDisposedContextWarning (diagnostics, context, entityType, navigationName)" />
      <MemberSignature Language="C#" Value="public static void LazyLoadOnDisposedContextWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext? context, object entityType, string navigationName);" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="navigationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <param name="entityType">The entity type.</param>
        <param name="navigationName">The name of the navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.LazyLoadOnDisposedContextWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManyServiceProvidersCreatedWarning">
      <MemberSignature Language="C#" Value="public static void ManyServiceProvidersCreatedWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, System.Collections.Generic.ICollection&lt;IServiceProvider&gt; serviceProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ManyServiceProvidersCreatedWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class System.Collections.Generic.ICollection`1&lt;class System.IServiceProvider&gt; serviceProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ManyServiceProvidersCreatedWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},System.Collections.Generic.ICollection{System.IServiceProvider})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ManyServiceProvidersCreatedWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), serviceProviders As ICollection(Of IServiceProvider))" />
      <MemberSignature Language="F#" Value="static member ManyServiceProvidersCreatedWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * System.Collections.Generic.ICollection&lt;IServiceProvider&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ManyServiceProvidersCreatedWarning (diagnostics, serviceProviders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="serviceProviders" Type="System.Collections.Generic.ICollection&lt;System.IServiceProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="serviceProviders">The service providers that have been created.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ManyServiceProvidersCreatedWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedComplexPropertyIgnoredWarning">
      <MemberSignature Language="C#" Value="public static void MappedComplexPropertyIgnoredWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IComplexProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MappedComplexPropertyIgnoredWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MappedComplexPropertyIgnoredWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IComplexProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MappedComplexPropertyIgnoredWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), property As IComplexProperty)" />
      <MemberSignature Language="F#" Value="static member MappedComplexPropertyIgnoredWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IComplexProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MappedComplexPropertyIgnoredWarning (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="property">The property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.MappedComplexPropertyIgnoredWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedEntityTypeIgnoredWarning">
      <MemberSignature Language="C#" Value="public static void MappedEntityTypeIgnoredWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MappedEntityTypeIgnoredWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MappedEntityTypeIgnoredWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MappedEntityTypeIgnoredWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="static member MappedEntityTypeIgnoredWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MappedEntityTypeIgnoredWarning (diagnostics, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="entityType">The entity type.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.MappedEntityTypeIgnoredWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedNavigationIgnoredWarning">
      <MemberSignature Language="C#" Value="public static void MappedNavigationIgnoredWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MappedNavigationIgnoredWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MappedNavigationIgnoredWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigationBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MappedNavigationIgnoredWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As INavigationBase)" />
      <MemberSignature Language="F#" Value="static member MappedNavigationIgnoredWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigationBase -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MappedNavigationIgnoredWarning (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigation">The navigation.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.MappedNavigationIgnoredWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedPropertyIgnoredWarning">
      <MemberSignature Language="C#" Value="public static void MappedPropertyIgnoredWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MappedPropertyIgnoredWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MappedPropertyIgnoredWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MappedPropertyIgnoredWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), property As IProperty)" />
      <MemberSignature Language="F#" Value="static member MappedPropertyIgnoredWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MappedPropertyIgnoredWarning (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="property">The property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.MappedPropertyIgnoredWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleInversePropertiesSameTargetWarning">
      <MemberSignature Language="C#" Value="public static void MultipleInversePropertiesSameTargetWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.Reflection.MemberInfo,Type&gt;&gt; conflictingNavigations, System.Reflection.MemberInfo inverseNavigation, Type targetType);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultipleInversePropertiesSameTargetWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.Reflection.MemberInfo, class System.Type&gt;&gt; conflictingNavigations, class System.Reflection.MemberInfo inverseNavigation, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MultipleInversePropertiesSameTargetWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},System.Collections.Generic.IEnumerable{System.Tuple{System.Reflection.MemberInfo,System.Type}},System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MultipleInversePropertiesSameTargetWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), conflictingNavigations As IEnumerable(Of Tuple(Of MemberInfo, Type)), inverseNavigation As MemberInfo, targetType As Type)" />
      <MemberSignature Language="F#" Value="static member MultipleInversePropertiesSameTargetWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * seq&lt;System.Reflection.MemberInfo * Type&gt; * System.Reflection.MemberInfo * Type -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MultipleInversePropertiesSameTargetWarning (diagnostics, conflictingNavigations, inverseNavigation, targetType)" />
      <MemberSignature Language="C#" Value="public static void MultipleInversePropertiesSameTargetWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.Reflection.MemberInfo?,Type&gt;&gt; conflictingNavigations, System.Reflection.MemberInfo inverseNavigation, Type targetType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" />
        <Parameter Name="conflictingNavigations" Type="System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.Reflection.MemberInfo,System.Type&gt;&gt;" />
        <Parameter Name="inverseNavigation" Type="System.Reflection.MemberInfo" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="conflictingNavigations">The list of conflicting navigation properties.</param>
        <param name="inverseNavigation">The inverse navigation property.</param>
        <param name="targetType">The target type.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.MultipleInversePropertiesSameTargetWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleNavigationProperties">
      <MemberSignature Language="C#" Value="public static void MultipleNavigationProperties (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.Reflection.MemberInfo,Type&gt;&gt; firstPropertyCollection, System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.Reflection.MemberInfo,Type&gt;&gt; secondPropertyCollection);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultipleNavigationProperties(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.Reflection.MemberInfo, class System.Type&gt;&gt; firstPropertyCollection, class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.Reflection.MemberInfo, class System.Type&gt;&gt; secondPropertyCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MultipleNavigationProperties(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},System.Collections.Generic.IEnumerable{System.Tuple{System.Reflection.MemberInfo,System.Type}},System.Collections.Generic.IEnumerable{System.Tuple{System.Reflection.MemberInfo,System.Type}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MultipleNavigationProperties (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstPropertyCollection As IEnumerable(Of Tuple(Of MemberInfo, Type)), secondPropertyCollection As IEnumerable(Of Tuple(Of MemberInfo, Type)))" />
      <MemberSignature Language="F#" Value="static member MultipleNavigationProperties : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * seq&lt;System.Reflection.MemberInfo * Type&gt; * seq&lt;System.Reflection.MemberInfo * Type&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MultipleNavigationProperties (diagnostics, firstPropertyCollection, secondPropertyCollection)" />
      <MemberSignature Language="C#" Value="public static void MultipleNavigationProperties (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.Reflection.MemberInfo?,Type&gt;&gt; firstPropertyCollection, System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.Reflection.MemberInfo?,Type&gt;&gt; secondPropertyCollection);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" />
        <Parameter Name="firstPropertyCollection" Type="System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.Reflection.MemberInfo,System.Type&gt;&gt;" />
        <Parameter Name="secondPropertyCollection" Type="System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.Reflection.MemberInfo,System.Type&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="firstPropertyCollection">The first set of properties.</param>
        <param name="secondPropertyCollection">The second set of properties.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.MultipleNavigationProperties" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplePrimaryKeyCandidates">
      <MemberSignature Language="C#" Value="public static void MultiplePrimaryKeyCandidates (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty firstProperty, Microsoft.EntityFrameworkCore.Metadata.IProperty secondProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiplePrimaryKeyCandidates(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty firstProperty, class Microsoft.EntityFrameworkCore.Metadata.IProperty secondProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MultiplePrimaryKeyCandidates(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MultiplePrimaryKeyCandidates (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstProperty As IProperty, secondProperty As IProperty)" />
      <MemberSignature Language="F#" Value="static member MultiplePrimaryKeyCandidates : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MultiplePrimaryKeyCandidates (diagnostics, firstProperty, secondProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="firstProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="secondProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="firstProperty"> The first property. </param>
        <param name="secondProperty"> The second property. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.MultiplePrimaryKeyCandidates" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplePrimaryKeyCandidates">
      <MemberSignature Language="C#" Value="public static void MultiplePrimaryKeyCandidates (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty firstProperty, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty secondProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiplePrimaryKeyCandidates(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty firstProperty, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty secondProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MultiplePrimaryKeyCandidates(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MultiplePrimaryKeyCandidates (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstProperty As IReadOnlyProperty, secondProperty As IReadOnlyProperty)" />
      <MemberSignature Language="F#" Value="static member MultiplePrimaryKeyCandidates : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.MultiplePrimaryKeyCandidates (diagnostics, firstProperty, secondProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="firstProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="secondProperty" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="firstProperty">The first property.</param>
        <param name="secondProperty">The second property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.MultiplePrimaryKeyCandidates" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationBaseIncluded">
      <MemberSignature Language="C#" Value="public static void NavigationBaseIncluded (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NavigationBaseIncluded(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NavigationBaseIncluded(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Metadata.INavigationBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NavigationBaseIncluded (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), navigation As INavigationBase)" />
      <MemberSignature Language="F#" Value="static member NavigationBaseIncluded : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigationBase -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NavigationBaseIncluded (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigation">The navigation being included.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.NavigationBaseIncluded" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationBaseIncludeIgnored">
      <MemberSignature Language="C#" Value="public static void NavigationBaseIncludeIgnored (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NavigationBaseIncludeIgnored(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NavigationBaseIncludeIgnored(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Metadata.INavigationBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NavigationBaseIncludeIgnored (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), navigation As INavigationBase)" />
      <MemberSignature Language="F#" Value="static member NavigationBaseIncludeIgnored : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigationBase -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NavigationBaseIncludeIgnored (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigation">The navigation being included.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.NavigationBaseIncludeIgnored" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationLazyLoading">
      <MemberSignature Language="C#" Value="public static void NavigationLazyLoading (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NavigationLazyLoading(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, object entityType, string navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NavigationLazyLoading(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NavigationLazyLoading (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext, entityType As Object, navigationName As String)" />
      <MemberSignature Language="F#" Value="static member NavigationLazyLoading : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * Microsoft.EntityFrameworkCore.DbContext * obj * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NavigationLazyLoading (diagnostics, context, entityType, navigationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="navigationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <param name="entityType">The entity type.</param>
        <param name="navigationName">The name of the navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.NavigationLazyLoading" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonDefiningInverseNavigationWarning">
      <MemberSignature Language="C#" Value="public static void NonDefiningInverseNavigationWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType declaringType, System.Reflection.MemberInfo navigation, Microsoft.EntityFrameworkCore.Metadata.IEntityType targetType, System.Reflection.MemberInfo inverseNavigation, System.Reflection.MemberInfo definingNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NonDefiningInverseNavigationWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType declaringType, class System.Reflection.MemberInfo navigation, class Microsoft.EntityFrameworkCore.Metadata.IEntityType targetType, class System.Reflection.MemberInfo inverseNavigation, class System.Reflection.MemberInfo definingNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonDefiningInverseNavigationWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NonDefiningInverseNavigationWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), declaringType As IEntityType, navigation As MemberInfo, targetType As IEntityType, inverseNavigation As MemberInfo, definingNavigation As MemberInfo)" />
      <MemberSignature Language="F#" Value="static member NonDefiningInverseNavigationWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonDefiningInverseNavigationWarning (diagnostics, declaringType, navigation, targetType, inverseNavigation, definingNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="declaringType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="navigation" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="targetType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="inverseNavigation" Type="System.Reflection.MemberInfo" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="definingNavigation" Type="System.Reflection.MemberInfo" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="declaringType">The declaring entity type.</param>
        <param name="navigation">The navigation property.</param>
        <param name="targetType">The target type.</param>
        <param name="inverseNavigation">The inverse navigation property.</param>
        <param name="definingNavigation">The defining navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.NonDefiningInverseNavigationWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonNullableInverted">
      <MemberSignature Language="C#" Value="public static void NonNullableInverted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NonNullableInverted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonNullableInverted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NonNullableInverted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member NonNullableInverted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonNullableInverted (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigation">The navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.NonNullableInverted" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonNullableReferenceOnBothNavigations">
      <MemberSignature Language="C#" Value="public static void NonNullableReferenceOnBothNavigations (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NonNullableReferenceOnBothNavigations(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonNullableReferenceOnBothNavigations(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NonNullableReferenceOnBothNavigations (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstNavigation As INavigation, secondNavigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member NonNullableReferenceOnBothNavigations : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonNullableReferenceOnBothNavigations (diagnostics, firstNavigation, secondNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="secondNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="firstNavigation"> The first navigation property. </param>
        <param name="secondNavigation"> The second navigation property. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.NonNullableReferenceOnBothNavigations" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonNullableReferenceOnBothNavigations">
      <MemberSignature Language="C#" Value="public static void NonNullableReferenceOnBothNavigations (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation secondNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NonNullableReferenceOnBothNavigations(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation secondNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonNullableReferenceOnBothNavigations(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation,Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NonNullableReferenceOnBothNavigations (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstNavigation As IReadOnlyNavigation, secondNavigation As IReadOnlyNavigation)" />
      <MemberSignature Language="F#" Value="static member NonNullableReferenceOnBothNavigations : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonNullableReferenceOnBothNavigations (diagnostics, firstNavigation, secondNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="secondNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" Index="2" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="firstNavigation">The first navigation property.</param>
        <param name="secondNavigation">The second navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.NonNullableReferenceOnBothNavigations" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonNullableReferenceOnDependent">
      <MemberSignature Language="C#" Value="public static void NonNullableReferenceOnDependent (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NonNullableReferenceOnDependent(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonNullableReferenceOnDependent(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NonNullableReferenceOnDependent (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member NonNullableReferenceOnDependent : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonNullableReferenceOnDependent (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigation">The navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.NonNullableReferenceOnDependent" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonOwnershipInverseNavigationWarning">
      <MemberSignature Language="C#" Value="public static void NonOwnershipInverseNavigationWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IEntityType declaringType, System.Reflection.MemberInfo navigation, Microsoft.EntityFrameworkCore.Metadata.IEntityType targetType, System.Reflection.MemberInfo inverseNavigation, System.Reflection.MemberInfo ownershipNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NonOwnershipInverseNavigationWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IEntityType declaringType, class System.Reflection.MemberInfo navigation, class Microsoft.EntityFrameworkCore.Metadata.IEntityType targetType, class System.Reflection.MemberInfo inverseNavigation, class System.Reflection.MemberInfo ownershipNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonOwnershipInverseNavigationWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NonOwnershipInverseNavigationWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), declaringType As IEntityType, navigation As MemberInfo, targetType As IEntityType, inverseNavigation As MemberInfo, ownershipNavigation As MemberInfo)" />
      <MemberSignature Language="F#" Value="static member NonOwnershipInverseNavigationWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonOwnershipInverseNavigationWarning (diagnostics, declaringType, navigation, targetType, inverseNavigation, ownershipNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="declaringType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="navigation" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="targetType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="inverseNavigation" Type="System.Reflection.MemberInfo" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="ownershipNavigation" Type="System.Reflection.MemberInfo" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="declaringType"> The declaring entity type. </param>
        <param name="navigation"> The navigation property. </param>
        <param name="targetType"> The target type. </param>
        <param name="inverseNavigation"> The inverse navigation property. </param>
        <param name="ownershipNavigation"> The ownership navigation property. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.NonOwnershipInverseNavigationWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonOwnershipInverseNavigationWarning">
      <MemberSignature Language="C#" Value="public static void NonOwnershipInverseNavigationWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType declaringType, System.Reflection.MemberInfo navigation, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType targetType, System.Reflection.MemberInfo inverseNavigation, System.Reflection.MemberInfo ownershipNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NonOwnershipInverseNavigationWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType declaringType, class System.Reflection.MemberInfo navigation, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType targetType, class System.Reflection.MemberInfo inverseNavigation, class System.Reflection.MemberInfo ownershipNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonOwnershipInverseNavigationWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType,System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub NonOwnershipInverseNavigationWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), declaringType As IReadOnlyEntityType, navigation As MemberInfo, targetType As IReadOnlyEntityType, inverseNavigation As MemberInfo, ownershipNavigation As MemberInfo)" />
      <MemberSignature Language="F#" Value="static member NonOwnershipInverseNavigationWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType * System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.NonOwnershipInverseNavigationWarning (diagnostics, declaringType, navigation, targetType, inverseNavigation, ownershipNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="declaringType" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="targetType" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="inverseNavigation" Type="System.Reflection.MemberInfo" Index="4" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="ownershipNavigation" Type="System.Reflection.MemberInfo" Index="5" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="declaringType">The declaring entity type.</param>
        <param name="navigation">The navigation property.</param>
        <param name="targetType">The target type.</param>
        <param name="inverseNavigation">The inverse navigation property.</param>
        <param name="ownershipNavigation">The ownership navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.NonOwnershipInverseNavigationWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldModelVersionWarning">
      <MemberSignature Language="C#" Value="public static void OldModelVersionWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, Microsoft.EntityFrameworkCore.DbContextOptions contextOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OldModelVersionWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class Microsoft.EntityFrameworkCore.DbContextOptions contextOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.OldModelVersionWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.DbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub OldModelVersionWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), context As DbContext, contextOptions As DbContextOptions)" />
      <MemberSignature Language="F#" Value="static member OldModelVersionWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.DbContextOptions -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.OldModelVersionWarning (diagnostics, context, contextOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="contextOptions" Type="Microsoft.EntityFrameworkCore.DbContextOptions" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <param name="contextOptions">The context options being used.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.OldModelVersionWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptimisticConcurrencyException">
      <MemberSignature Language="C#" Value="public static void OptimisticConcurrencyException (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OptimisticConcurrencyException(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.OptimisticConcurrencyException(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub OptimisticConcurrencyException (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, exception As Exception)" />
      <MemberSignature Language="F#" Value="static member OptimisticConcurrencyException : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * Exception -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.OptimisticConcurrencyException (diagnostics, context, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context in use.</param>
        <param name="exception">The exception that caused this event.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.OptimisticConcurrencyException" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptimisticConcurrencyException">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult OptimisticConcurrencyException (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException exception, Func&lt;Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;,Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Exception&gt;,Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData&gt;? createEventData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult OptimisticConcurrencyException(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, class Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException exception, class System.Func`5&lt;class Microsoft.EntityFrameworkCore.DbContext, class Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;, class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;class System.Exception&gt;, class Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData&gt; createEventData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.OptimisticConcurrencyException(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException,System.Func{Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition{System.Exception},Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OptimisticConcurrencyException (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, entries As IReadOnlyList(Of IUpdateEntry), exception As DbUpdateConcurrencyException, createEventData As Func(Of DbContext, DbUpdateConcurrencyException, IReadOnlyList(Of IUpdateEntry), EventDefinition(Of Exception), ConcurrencyExceptionEventData)) As InterceptionResult" />
      <MemberSignature Language="F#" Value="static member OptimisticConcurrencyException : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException * Func&lt;Microsoft.EntityFrameworkCore.DbContext, Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;, Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Exception&gt;, Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData&gt; -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.OptimisticConcurrencyException (diagnostics, context, entries, exception, createEventData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="exception" Type="Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="createEventData" Type="System.Func&lt;Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;,Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Exception&gt;,Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData&gt;" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context in use.</param>
        <param name="entries">The entries that were involved in the concurrency violation.</param>
        <param name="exception">The exception that caused this event.</param>
        <param name="createEventData">Optional delegate to override event data creation.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.OptimisticConcurrencyException" /> event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptimisticConcurrencyExceptionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task OptimisticConcurrencyExceptionAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, Exception exception, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task OptimisticConcurrencyExceptionAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class System.Exception exception, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.OptimisticConcurrencyExceptionAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Exception,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OptimisticConcurrencyExceptionAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, exception As Exception, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member OptimisticConcurrencyExceptionAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * Exception * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.OptimisticConcurrencyExceptionAsync (diagnostics, context, exception, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context in use.</param>
        <param name="exception">The exception that caused this event.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.OptimisticConcurrencyException" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> for the async result.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="OptimisticConcurrencyExceptionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; OptimisticConcurrencyExceptionAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException exception, Func&lt;Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;,Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Exception&gt;,Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData&gt;? createEventData, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; OptimisticConcurrencyExceptionAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, class Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException exception, class System.Func`5&lt;class Microsoft.EntityFrameworkCore.DbContext, class Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;, class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;class System.Exception&gt;, class Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData&gt; createEventData, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.OptimisticConcurrencyExceptionAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException,System.Func{Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition{System.Exception},Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OptimisticConcurrencyExceptionAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, entries As IReadOnlyList(Of IUpdateEntry), exception As DbUpdateConcurrencyException, createEventData As Func(Of DbContext, DbUpdateConcurrencyException, IReadOnlyList(Of IUpdateEntry), EventDefinition(Of Exception), ConcurrencyExceptionEventData), Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult)" />
      <MemberSignature Language="F#" Value="static member OptimisticConcurrencyExceptionAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException * Func&lt;Microsoft.EntityFrameworkCore.DbContext, Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;, Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Exception&gt;, Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.OptimisticConcurrencyExceptionAsync (diagnostics, context, entries, exception, createEventData, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="exception" Type="Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="createEventData" Type="System.Func&lt;Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;,Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Exception&gt;,Microsoft.EntityFrameworkCore.Diagnostics.ConcurrencyExceptionEventData&gt;" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context in use.</param>
        <param name="entries">The entries that were involved in the concurrency violation.</param>
        <param name="exception">The exception that caused this event.</param>
        <param name="createEventData">Optional delegate to override event data creation.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.OptimisticConcurrencyException" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> for the async result.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="PossibleIncorrectRequiredNavigationWithQueryFilterInteractionWarning">
      <MemberSignature Language="C#" Value="public static void PossibleIncorrectRequiredNavigationWithQueryFilterInteractionWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PossibleIncorrectRequiredNavigationWithQueryFilterInteractionWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.PossibleIncorrectRequiredNavigationWithQueryFilterInteractionWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PossibleIncorrectRequiredNavigationWithQueryFilterInteractionWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), foreignKey As IForeignKey)" />
      <MemberSignature Language="F#" Value="static member PossibleIncorrectRequiredNavigationWithQueryFilterInteractionWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.PossibleIncorrectRequiredNavigationWithQueryFilterInteractionWarning (diagnostics, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="foreignKey">Foreign key which is used in the incorrectly setup navigation.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.PossibleIncorrectRequiredNavigationWithQueryFilterInteractionWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PossibleUnintendedCollectionNavigationNullComparisonWarning">
      <MemberSignature Language="C#" Value="public static void PossibleUnintendedCollectionNavigationNullComparisonWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PossibleUnintendedCollectionNavigationNullComparisonWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.PossibleUnintendedCollectionNavigationNullComparisonWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PossibleUnintendedCollectionNavigationNullComparisonWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), navigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member PossibleUnintendedCollectionNavigationNullComparisonWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.PossibleUnintendedCollectionNavigationNullComparisonWarning (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigation">The navigation being used.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.PossibleUnintendedCollectionNavigationNullComparisonWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PossibleUnintendedReferenceComparisonWarning">
      <MemberSignature Language="C#" Value="public static void PossibleUnintendedReferenceComparisonWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PossibleUnintendedReferenceComparisonWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.PossibleUnintendedReferenceComparisonWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PossibleUnintendedReferenceComparisonWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), left As Expression, right As Expression)" />
      <MemberSignature Language="F#" Value="static member PossibleUnintendedReferenceComparisonWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.PossibleUnintendedReferenceComparisonWarning (diagnostics, left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="left">The left side expression.</param>
        <param name="right">The right side expression.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.PossibleUnintendedReferenceComparisonWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChangeDetected">
      <MemberSignature Language="C#" Value="public static void PropertyChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PropertyChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.PropertyChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PropertyChangeDetected (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, property As IProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member PropertyChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.PropertyChangeDetected (diagnostics, internalEntityEntry, property, oldValue, newValue)" />
      <MemberSignature Language="C#" Value="public static void PropertyChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object? oldValue, object? newValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="property">The property.</param>
        <param name="oldValue">The old value.</param>
        <param name="newValue">The new value.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.PropertyChangeDetected" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static void PropertyChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PropertyChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.PropertyChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PropertyChangeDetectedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, property As IProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member PropertyChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.PropertyChangeDetectedSensitive (diagnostics, internalEntityEntry, property, oldValue, newValue)" />
      <MemberSignature Language="C#" Value="public static void PropertyChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object? oldValue, object? newValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="property">The property.</param>
        <param name="oldValue">The old value.</param>
        <param name="newValue">The new value.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.PropertyChangeDetected" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCanceled">
      <MemberSignature Language="C#" Value="public static void QueryCanceled (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryCanceled(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryCanceled(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryCanceled (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), contextType As Type)" />
      <MemberSignature Language="F#" Value="static member QueryCanceled : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Type -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryCanceled (diagnostics, contextType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="contextType" Type="System.Type" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="contextType">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type being used.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.QueryCanceled" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCompilationStarting">
      <MemberSignature Language="C#" Value="public static void QueryCompilationStarting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter, System.Linq.Expressions.Expression queryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryCompilationStarting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter, class System.Linq.Expressions.Expression queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryCompilationStarting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Query.ExpressionPrinter,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryCompilationStarting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), expressionPrinter As ExpressionPrinter, queryExpression As Expression)" />
      <MemberSignature Language="F#" Value="static member QueryCompilationStarting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Microsoft.EntityFrameworkCore.Query.ExpressionPrinter * System.Linq.Expressions.Expression -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryCompilationStarting (diagnostics, expressionPrinter, queryExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="expressionPrinter">Used to create a human-readable representation of the expression tree.</param>
        <param name="queryExpression">The query expression tree.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.QueryCompilationStarting" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCompilationStarting">
      <MemberSignature Language="C#" Value="public static (System.Linq.Expressions.Expression Query, Microsoft.EntityFrameworkCore.Diagnostics.QueryExpressionEventData? EventData) QueryCompilationStarting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext? context, Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter, System.Linq.Expressions.Expression queryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;class System.Linq.Expressions.Expression, class Microsoft.EntityFrameworkCore.Diagnostics.QueryExpressionEventData&gt; QueryCompilationStarting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter, class System.Linq.Expressions.Expression queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryCompilationStarting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Query.ExpressionPrinter,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function QueryCompilationStarting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), context As DbContext, expressionPrinter As ExpressionPrinter, queryExpression As Expression) As ValueTuple(Of Expression, QueryExpressionEventData)" />
      <MemberSignature Language="F#" Value="static member QueryCompilationStarting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Query.ExpressionPrinter * System.Linq.Expressions.Expression -&gt; ValueTuple&lt;System.Linq.Expressions.Expression, Microsoft.EntityFrameworkCore.Diagnostics.QueryExpressionEventData&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryCompilationStarting (diagnostics, context, expressionPrinter, queryExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Diagnostics.QueryExpressionEventData&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="efcore-7.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Query", "EventData" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Query", "EventData" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The current <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />, or <see langword="null" /> if not known.</param>
        <param name="expressionPrinter">Used to create a human-readable representation of the expression tree.</param>
        <param name="queryExpression">The query expression tree.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.QueryCompilationStarting" /> event.
            </summary>
        <returns>The query expression and event data.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryExecutionPlanned">
      <MemberSignature Language="C#" Value="public static void QueryExecutionPlanned (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter, System.Linq.Expressions.Expression queryExecutorExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryExecutionPlanned(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter, class System.Linq.Expressions.Expression queryExecutorExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryExecutionPlanned(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.Query.ExpressionPrinter,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryExecutionPlanned (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), expressionPrinter As ExpressionPrinter, queryExecutorExpression As Expression)" />
      <MemberSignature Language="F#" Value="static member QueryExecutionPlanned : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Microsoft.EntityFrameworkCore.Query.ExpressionPrinter * System.Linq.Expressions.Expression -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryExecutionPlanned (diagnostics, expressionPrinter, queryExecutorExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="queryExecutorExpression" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="expressionPrinter">Used to create a human-readable representation of the expression tree.</param>
        <param name="queryExecutorExpression">The query expression tree.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.QueryExecutionPlanned" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryExecutionPlanned">
      <MemberSignature Language="C#" Value="public static void QueryExecutionPlanned (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext? context, Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter, System.Linq.Expressions.Expression queryExecutorExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryExecutionPlanned(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter, class System.Linq.Expressions.Expression queryExecutorExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryExecutionPlanned(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Query.ExpressionPrinter,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryExecutionPlanned (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), context As DbContext, expressionPrinter As ExpressionPrinter, queryExecutorExpression As Expression)" />
      <MemberSignature Language="F#" Value="static member QueryExecutionPlanned : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Query.ExpressionPrinter * System.Linq.Expressions.Expression -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryExecutionPlanned (diagnostics, context, expressionPrinter, queryExecutorExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="queryExecutorExpression" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The current <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />, or <see langword="null" /> if not known.</param>
        <param name="expressionPrinter">Used to create a human-readable representation of the expression tree.</param>
        <param name="queryExecutorExpression">The query expression tree.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.QueryExecutionPlanned" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryIterationFailed">
      <MemberSignature Language="C#" Value="public static void QueryIterationFailed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Type contextType, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueryIterationFailed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Type contextType, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryIterationFailed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Type,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub QueryIterationFailed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), contextType As Type, exception As Exception)" />
      <MemberSignature Language="F#" Value="static member QueryIterationFailed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Type * Exception -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.QueryIterationFailed (diagnostics, contextType, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" />
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="contextType">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> type being used.</param>
        <param name="exception">The exception that caused this failure.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.QueryIterationFailed" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedundantAddServicesCallWarning">
      <MemberSignature Language="C#" Value="public static void RedundantAddServicesCallWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedundantAddServicesCallWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RedundantAddServicesCallWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RedundantAddServicesCallWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), serviceProvider As IServiceProvider)" />
      <MemberSignature Language="F#" Value="static member RedundantAddServicesCallWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * IServiceProvider -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RedundantAddServicesCallWarning (diagnostics, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="serviceProvider">The service provider used.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RedundantAddServicesCallWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedundantForeignKeyWarning">
      <MemberSignature Language="C#" Value="public static void RedundantForeignKeyWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IForeignKey redundantForeignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedundantForeignKeyWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey redundantForeignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RedundantForeignKeyWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RedundantForeignKeyWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), redundantForeignKey As IForeignKey)" />
      <MemberSignature Language="F#" Value="static member RedundantForeignKeyWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RedundantForeignKeyWarning (diagnostics, redundantForeignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" />
        <Parameter Name="redundantForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="redundantForeignKey">The redundant foreign key.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RedundantForeignKeyWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedundantIndexRemoved">
      <MemberSignature Language="C#" Value="public static void RedundantIndexRemoved (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; redundantIndex, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; otherIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedundantIndexRemoved(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; redundantIndex, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; otherIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RedundantIndexRemoved(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RedundantIndexRemoved (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), redundantIndex As IReadOnlyList(Of IPropertyBase), otherIndex As IReadOnlyList(Of IPropertyBase))" />
      <MemberSignature Language="F#" Value="static member RedundantIndexRemoved : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RedundantIndexRemoved (diagnostics, redundantIndex, otherIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="redundantIndex" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="otherIndex" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="redundantIndex"> The redundant index. </param>
        <param name="otherIndex"> The other index. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RedundantIndexRemoved" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedundantIndexRemoved">
      <MemberSignature Language="C#" Value="public static void RedundantIndexRemoved (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; redundantIndex, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; otherIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedundantIndexRemoved(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; redundantIndex, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; otherIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RedundantIndexRemoved(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RedundantIndexRemoved (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), redundantIndex As IReadOnlyList(Of IReadOnlyPropertyBase), otherIndex As IReadOnlyList(Of IReadOnlyPropertyBase))" />
      <MemberSignature Language="F#" Value="static member RedundantIndexRemoved : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RedundantIndexRemoved (diagnostics, redundantIndex, otherIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="redundantIndex" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="otherIndex" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase&gt;" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="redundantIndex">The redundant index.</param>
        <param name="otherIndex">The other index.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RedundantIndexRemoved" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceChangeDetected">
      <MemberSignature Language="C#" Value="public static void ReferenceChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object oldValue, object newValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReferenceChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ReferenceChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ReferenceChangeDetected (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, navigation As INavigation, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member ReferenceChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ReferenceChangeDetected (diagnostics, internalEntityEntry, navigation, oldValue, newValue)" />
      <MemberSignature Language="C#" Value="public static void ReferenceChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object? oldValue, object? newValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="navigation">The navigation property.</param>
        <param name="oldValue">The old value.</param>
        <param name="newValue">The new value.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ReferenceChangeDetected" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static void ReferenceChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object oldValue, object newValue);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReferenceChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ReferenceChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ReferenceChangeDetectedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, navigation As INavigation, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="static member ReferenceChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation * obj * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ReferenceChangeDetectedSensitive (diagnostics, internalEntityEntry, navigation, oldValue, newValue)" />
      <MemberSignature Language="C#" Value="public static void ReferenceChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object? oldValue, object? newValue);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="navigation">The navigation property.</param>
        <param name="oldValue">The old value.</param>
        <param name="newValue">The new value.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ReferenceChangeDetected" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAttributeInverted">
      <MemberSignature Language="C#" Value="public static void RequiredAttributeInverted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequiredAttributeInverted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeInverted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RequiredAttributeInverted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member RequiredAttributeInverted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeInverted (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigation">The navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RequiredAttributeInverted" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAttributeOnBothNavigations">
      <MemberSignature Language="C#" Value="public static void RequiredAttributeOnBothNavigations (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequiredAttributeOnBothNavigations(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.INavigation secondNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnBothNavigations(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RequiredAttributeOnBothNavigations (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstNavigation As INavigation, secondNavigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member RequiredAttributeOnBothNavigations : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnBothNavigations (diagnostics, firstNavigation, secondNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="secondNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="firstNavigation"> The first navigation property. </param>
        <param name="secondNavigation"> The second navigation property. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RequiredAttributeOnBothNavigations" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAttributeOnBothNavigations">
      <MemberSignature Language="C#" Value="public static void RequiredAttributeOnBothNavigations (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation firstNavigation, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation secondNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequiredAttributeOnBothNavigations(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation firstNavigation, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation secondNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnBothNavigations(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation,Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RequiredAttributeOnBothNavigations (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), firstNavigation As IReadOnlyNavigation, secondNavigation As IReadOnlyNavigation)" />
      <MemberSignature Language="F#" Value="static member RequiredAttributeOnBothNavigations : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnBothNavigations (diagnostics, firstNavigation, secondNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="firstNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="secondNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" Index="2" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="firstNavigation">The first navigation property.</param>
        <param name="secondNavigation">The second navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RequiredAttributeOnBothNavigations" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAttributeOnCollection">
      <MemberSignature Language="C#" Value="public static void RequiredAttributeOnCollection (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequiredAttributeOnCollection(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnCollection(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RequiredAttributeOnCollection (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member RequiredAttributeOnCollection : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnCollection (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="navigation"> The navigation property. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RequiredAttributeOnCollection" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAttributeOnCollection">
      <MemberSignature Language="C#" Value="public static void RequiredAttributeOnCollection (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequiredAttributeOnCollection(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnCollection(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RequiredAttributeOnCollection (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As IReadOnlyNavigation)" />
      <MemberSignature Language="F#" Value="static member RequiredAttributeOnCollection : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnCollection (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigation">The navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RequiredAttributeOnCollection" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAttributeOnDependent">
      <MemberSignature Language="C#" Value="public static void RequiredAttributeOnDependent (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequiredAttributeOnDependent(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnDependent(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RequiredAttributeOnDependent (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As INavigation)" />
      <MemberSignature Language="F#" Value="static member RequiredAttributeOnDependent : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnDependent (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigation">The navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RequiredAttributeOnDependent" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAttributeOnSkipNavigation">
      <MemberSignature Language="C#" Value="public static void RequiredAttributeOnSkipNavigation (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequiredAttributeOnSkipNavigation(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnSkipNavigation(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RequiredAttributeOnSkipNavigation (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As IReadOnlySkipNavigation)" />
      <MemberSignature Language="F#" Value="static member RequiredAttributeOnSkipNavigation : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnSkipNavigation (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="navigation">The navigation property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RequiredAttributeOnSkipNavigation" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredAttributeOnSkipNavigation">
      <MemberSignature Language="C#" Value="public static void RequiredAttributeOnSkipNavigation (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequiredAttributeOnSkipNavigation(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnSkipNavigation(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model},Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RequiredAttributeOnSkipNavigation (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model), navigation As ISkipNavigation)" />
      <MemberSignature Language="F#" Value="static member RequiredAttributeOnSkipNavigation : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; * Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RequiredAttributeOnSkipNavigation (diagnostics, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics"> The diagnostics logger to use. </param>
        <param name="navigation"> The navigation property. </param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RequiredAttributeOnSkipNavigation" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowLimitingOperationWithoutOrderByWarning">
      <MemberSignature Language="C#" Value="public static void RowLimitingOperationWithoutOrderByWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RowLimitingOperationWithoutOrderByWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RowLimitingOperationWithoutOrderByWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RowLimitingOperationWithoutOrderByWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query))" />
      <MemberSignature Language="F#" Value="static member RowLimitingOperationWithoutOrderByWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.RowLimitingOperationWithoutOrderByWarning diagnostics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.RowLimitingOperationWithoutOrderByWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesCanceled">
      <MemberSignature Language="C#" Value="public static void SaveChangesCanceled (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveChangesCanceled(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesCanceled(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SaveChangesCanceled (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext)" />
      <MemberSignature Language="F#" Value="static member SaveChangesCanceled : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesCanceled (diagnostics, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context in use.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.SaveChangesFailed" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesCanceledAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SaveChangesCanceledAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SaveChangesCanceledAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesCanceledAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SaveChangesCanceledAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member SaveChangesCanceledAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesCanceledAsync (diagnostics, context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context in use.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.SaveChangesFailed" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> for the async result.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesCompleted">
      <MemberSignature Language="C#" Value="public static void SaveChangesCompleted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, int entitiesSavedCount);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveChangesCompleted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, int32 entitiesSavedCount) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesCompleted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SaveChangesCompleted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, entitiesSavedCount As Integer)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SaveChangesCompleted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * int -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesCompleted (diagnostics, context, entitiesSavedCount)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static int SaveChangesCompleted (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, int entitiesSavedCount);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SaveChangesCompleted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, int32 entitiesSavedCount) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SaveChangesCompleted (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, entitiesSavedCount As Integer) As Integer" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SaveChangesCompleted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * int -&gt; int" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesCompleted (diagnostics, context, entitiesSavedCount)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="entitiesSavedCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <param name="entitiesSavedCount">The number of entities saved.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.SaveChangesCompleted" /> event.
            </summary>
        <returns>The, possibly intercepted, result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesCompletedAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;int&gt; SaveChangesCompletedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, int entitiesSavedCount, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; SaveChangesCompletedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, int32 entitiesSavedCount, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesCompletedAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SaveChangesCompletedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, entitiesSavedCount As Integer, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SaveChangesCompletedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesCompletedAsync (diagnostics, context, entitiesSavedCount, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entitiesSavedCount" Type="System.Int32" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <param name="entitiesSavedCount">The number of entities saved.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.SaveChangesCompleted" /> event.
            </summary>
        <returns>The, possibly intercepted, result.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesFailed">
      <MemberSignature Language="C#" Value="public static void SaveChangesFailed (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveChangesFailed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesFailed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SaveChangesFailed (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, exception As Exception)" />
      <MemberSignature Language="F#" Value="static member SaveChangesFailed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * Exception -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesFailed (diagnostics, context, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context in use.</param>
        <param name="exception">The exception that caused this event.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.SaveChangesFailed" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesFailedAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SaveChangesFailedAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, Exception exception, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SaveChangesFailedAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, class System.Exception exception, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesFailedAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Exception,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SaveChangesFailedAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, exception As Exception, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member SaveChangesFailedAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * Exception * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesFailedAsync (diagnostics, context, exception, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context in use.</param>
        <param name="exception">The exception that caused this event.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.SaveChangesFailed" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> for the async result.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesStarting">
      <MemberSignature Language="C#" Value="public static void SaveChangesStarting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveChangesStarting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesStarting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SaveChangesStarting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SaveChangesStarting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesStarting (diagnostics, context)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt; SaveChangesStarting (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;int32&gt; SaveChangesStarting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SaveChangesStarting (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext) As InterceptionResult(Of Integer)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SaveChangesStarting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesStarting (diagnostics, context)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.SaveChangesStarting" /> event.
            </summary>
        <returns>The, possibly intercepted, result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesStartingAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&gt; SaveChangesStartingAsync (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; diagnostics, Microsoft.EntityFrameworkCore.DbContext context, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;int32&gt;&gt; SaveChangesStartingAsync(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; diagnostics, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesStartingAsync(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.DbContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SaveChangesStartingAsync (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Update), context As DbContext, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult(Of Integer))" />
      <MemberSignature Language="F#" Value="static member SaveChangesStartingAsync : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.DbContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SaveChangesStartingAsync (diagnostics, context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="context">The context being used.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.SaveChangesStarting" /> event.
            </summary>
        <returns>The, possibly intercepted, result.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="SensitiveDataLoggingEnabledWarning&lt;TLoggerCategory&gt;">
      <MemberSignature Language="C#" Value="public static void SensitiveDataLoggingEnabledWarning&lt;TLoggerCategory&gt; (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt; diagnostics) where TLoggerCategory : Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;, new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SensitiveDataLoggingEnabledWarning&lt;.ctor (class Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory`1&lt;!!TLoggerCategory&gt;) TLoggerCategory&gt;(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;!!TLoggerCategory&gt; diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SensitiveDataLoggingEnabledWarning``1(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SensitiveDataLoggingEnabledWarning(Of TLoggerCategory As {LoggerCategory(Of TLoggerCategory)New}) (diagnostics As IDiagnosticsLogger(Of TLoggerCategory))" />
      <MemberSignature Language="F#" Value="static member SensitiveDataLoggingEnabledWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; -&gt; unit (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SensitiveDataLoggingEnabledWarning diagnostics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLoggerCategory">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TLoggerCategory">The logger category for which to log the warning.</typeparam>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.SensitiveDataLoggingEnabledWarning" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProviderCreated">
      <MemberSignature Language="C#" Value="public static void ServiceProviderCreated (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ServiceProviderCreated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ServiceProviderCreated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ServiceProviderCreated (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), serviceProvider As IServiceProvider)" />
      <MemberSignature Language="F#" Value="static member ServiceProviderCreated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * IServiceProvider -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ServiceProviderCreated (diagnostics, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="serviceProvider">The service provider.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ServiceProviderCreated" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProviderDebugInfo">
      <MemberSignature Language="C#" Value="public static void ServiceProviderDebugInfo (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; diagnostics, System.Collections.Generic.IDictionary&lt;string,string&gt; newDebugInfo, System.Collections.Generic.IList&lt;System.Collections.Generic.IDictionary&lt;string,string&gt;&gt; cachedDebugInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ServiceProviderDebugInfo(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Infrastructure&gt; diagnostics, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; newDebugInfo, class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, string&gt;&gt; cachedDebugInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ServiceProviderDebugInfo(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ServiceProviderDebugInfo (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Infrastructure), newDebugInfo As IDictionary(Of String, String), cachedDebugInfos As IList(Of IDictionary(Of String, String)))" />
      <MemberSignature Language="F#" Value="static member ServiceProviderDebugInfo : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Infrastructure&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IList&lt;System.Collections.Generic.IDictionary&lt;string, string&gt;&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ServiceProviderDebugInfo (diagnostics, newDebugInfo, cachedDebugInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Infrastructure&gt;" RefType="this" />
        <Parameter Name="newDebugInfo" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cachedDebugInfos" Type="System.Collections.Generic.IList&lt;System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="newDebugInfo">Debug information for the new service providers.</param>
        <param name="cachedDebugInfos">Debug information for existing service providers.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ServiceProviderDebugInfo" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowForeignKeyPropertyCreated">
      <MemberSignature Language="C#" Value="public static void ShadowForeignKeyPropertyCreated (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property, string basePropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShadowForeignKeyPropertyCreated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, string basePropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ShadowForeignKeyPropertyCreated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ShadowForeignKeyPropertyCreated (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), property As IProperty, basePropertyName As String)" />
      <MemberSignature Language="F#" Value="static member ShadowForeignKeyPropertyCreated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ShadowForeignKeyPropertyCreated (diagnostics, property, basePropertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="basePropertyName" Type="System.String" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="property">The property.</param>
        <param name="basePropertyName">The property name that was uniquified.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ShadowForeignKeyPropertyCreated" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowPropertyCreated">
      <MemberSignature Language="C#" Value="public static void ShadowPropertyCreated (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShadowPropertyCreated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ShadowPropertyCreated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ShadowPropertyCreated (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), property As IProperty)" />
      <MemberSignature Language="F#" Value="static member ShadowPropertyCreated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ShadowPropertyCreated (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="property">The property.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ShadowPropertyCreated" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipCollectionChangeDetected">
      <MemberSignature Language="C#" Value="public static void SkipCollectionChangeDetected (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation navigation, System.Collections.Generic.ISet&lt;object&gt; added, System.Collections.Generic.ISet&lt;object&gt; removed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SkipCollectionChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation navigation, class System.Collections.Generic.ISet`1&lt;object&gt; added, class System.Collections.Generic.ISet`1&lt;object&gt; removed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SkipCollectionChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation,System.Collections.Generic.ISet{System.Object},System.Collections.Generic.ISet{System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SkipCollectionChangeDetected (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, navigation As ISkipNavigation, added As ISet(Of Object), removed As ISet(Of Object))" />
      <MemberSignature Language="F#" Value="static member SkipCollectionChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation * System.Collections.Generic.ISet&lt;obj&gt; * System.Collections.Generic.ISet&lt;obj&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SkipCollectionChangeDetected (diagnostics, internalEntityEntry, navigation, added, removed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="added" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="removed" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="navigation">The navigation property.</param>
        <param name="added">The added values.</param>
        <param name="removed">The removed values.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.CollectionChangeDetected" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipCollectionChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static void SkipCollectionChangeDetectedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation navigation, System.Collections.Generic.ISet&lt;object&gt; added, System.Collections.Generic.ISet&lt;object&gt; removed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SkipCollectionChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation navigation, class System.Collections.Generic.ISet`1&lt;object&gt; added, class System.Collections.Generic.ISet`1&lt;object&gt; removed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SkipCollectionChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation,System.Collections.Generic.ISet{System.Object},System.Collections.Generic.ISet{System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SkipCollectionChangeDetectedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, navigation As ISkipNavigation, added As ISet(Of Object), removed As ISet(Of Object))" />
      <MemberSignature Language="F#" Value="static member SkipCollectionChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation * System.Collections.Generic.ISet&lt;obj&gt; * System.Collections.Generic.ISet&lt;obj&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.SkipCollectionChangeDetectedSensitive (diagnostics, internalEntityEntry, navigation, added, removed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="added" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="removed" Type="System.Collections.Generic.ISet&lt;System.Object&gt;" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="navigation">The navigation property.</param>
        <param name="added">The added values.</param>
        <param name="removed">The removed values.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.CollectionChangeDetected" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartedTracking">
      <MemberSignature Language="C#" Value="public static void StartedTracking (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartedTracking(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.StartedTracking(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StartedTracking (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="static member StartedTracking : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.StartedTracking (diagnostics, internalEntityEntry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.StartedTracking" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartedTrackingSensitive">
      <MemberSignature Language="C#" Value="public static void StartedTrackingSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartedTrackingSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.StartedTrackingSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StartedTrackingSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="static member StartedTrackingSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.StartedTrackingSensitive (diagnostics, internalEntityEntry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.StartedTracking" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public static void StateChanged (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.EntityState oldState, Microsoft.EntityFrameworkCore.EntityState newState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StateChanged(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, valuetype Microsoft.EntityFrameworkCore.EntityState oldState, valuetype Microsoft.EntityFrameworkCore.EntityState newState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.StateChanged(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StateChanged (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, oldState As EntityState, newState As EntityState)" />
      <MemberSignature Language="F#" Value="static member StateChanged : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.StateChanged (diagnostics, internalEntityEntry, oldState, newState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="oldState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="newState" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="oldState">The old value.</param>
        <param name="newState">The new value.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.StateChanged" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChangedSensitive">
      <MemberSignature Language="C#" Value="public static void StateChangedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.EntityState oldState, Microsoft.EntityFrameworkCore.EntityState newState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StateChangedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, valuetype Microsoft.EntityFrameworkCore.EntityState oldState, valuetype Microsoft.EntityFrameworkCore.EntityState newState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.StateChangedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StateChangedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, oldState As EntityState, newState As EntityState)" />
      <MemberSignature Language="F#" Value="static member StateChangedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.StateChangedSensitive (diagnostics, internalEntityEntry, oldState, newState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="oldState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="newState" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="oldState">The old state.</param>
        <param name="newState">The new state.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.StateChanged" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringEnumValueInJson">
      <MemberSignature Language="C#" Value="public static void StringEnumValueInJson (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; diagnostics, Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StringEnumValueInJson(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Query&gt; diagnostics, class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.StringEnumValueInJson(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Query},System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StringEnumValueInJson (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Query), enumType As Type)" />
      <MemberSignature Language="F#" Value="static member StringEnumValueInJson : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Query&gt; * Type -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.StringEnumValueInJson (diagnostics, enumType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Query&gt;" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="enumType" Type="System.Type" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="enumType">The type.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.StringEnumValueInJson" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGenerated">
      <MemberSignature Language="C#" Value="public static void ValueGenerated (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object value, bool temporary);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValueGenerated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object value, bool temporary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ValueGenerated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ValueGenerated (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, property As IProperty, value As Object, temporary As Boolean)" />
      <MemberSignature Language="F#" Value="static member ValueGenerated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ValueGenerated (diagnostics, internalEntityEntry, property, value, temporary)" />
      <MemberSignature Language="C#" Value="public static void ValueGenerated (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object? value, bool temporary);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="temporary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="property">The property.</param>
        <param name="value">The value generated.</param>
        <param name="temporary">Indicates whether or not the value is a temporary or permanent value.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ValueGenerated" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGeneratedSensitive">
      <MemberSignature Language="C#" Value="public static void ValueGeneratedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object value, bool temporary);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValueGeneratedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; diagnostics, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, object value, bool temporary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ValueGeneratedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ValueGeneratedSensitive (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), internalEntityEntry As InternalEntityEntry, property As IProperty, value As Object, temporary As Boolean)" />
      <MemberSignature Language="F#" Value="static member ValueGeneratedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * obj * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Diagnostics.CoreLoggerExtensions.ValueGeneratedSensitive (diagnostics, internalEntityEntry, property, value, temporary)" />
      <MemberSignature Language="C#" Value="public static void ValueGeneratedSensitive (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; diagnostics, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, object? value, bool temporary);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" RefType="this" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="temporary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="diagnostics">The diagnostics logger to use.</param>
        <param name="internalEntityEntry">The internal entity entry.</param>
        <param name="property">The property.</param>
        <param name="value">The value generated.</param>
        <param name="temporary">Indicates whether or not the value is a temporary or permanent value.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId.ValueGenerated" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
