<Type Name="IRelationalCommandDiagnosticsLogger" FullName="Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger">
  <TypeSignature Language="C#" Value="public interface IRelationalCommandDiagnosticsLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationalCommandDiagnosticsLogger implements class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt;" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalCommandDiagnosticsLogger&#xA;Implements IDiagnosticsLogger(Of DbLoggerCategory.Database.Command)" />
  <TypeSignature Language="F#" Value="type IRelationalCommandDiagnosticsLogger = interface&#xA;    interface IDiagnosticsLogger&lt;DbLoggerCategory.Database.Command&gt;&#xA;    interface IDiagnosticsLogger" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRelationalCommandDiagnosticsLogger implements class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt;" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                An <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1" /> with some extra functionality suited for high-performance logging.
            </summary>
    <remarks>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                    for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CommandCanceled">
      <MemberSignature Language="C#" Value="public void CommandCanceled (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, Guid commandId, Guid connectionId, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommandCanceled(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandCanceled(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommandCanceled (connection As IRelationalConnection, command As DbCommand, context As DbContext, executeMethod As DbCommandMethod, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource)" />
      <MemberSignature Language="F#" Value="abstract member CommandCanceled : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; unit" Usage="iRelationalCommandDiagnosticsLogger.CommandCanceled (connection, command, context, executeMethod, commandId, connectionId, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="executeMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="7" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" Index="8" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="executeMethod">Represents the method that will be called to execute the command.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The amount of time that passed until the exception was raised.</param>
        <param name="commandSource">Source of the command.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandCanceled" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandCanceledAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CommandCanceledAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, Guid commandId, Guid connectionId, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CommandCanceledAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandCanceledAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandCanceledAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, executeMethod As DbCommandMethod, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CommandCanceledAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iRelationalCommandDiagnosticsLogger.CommandCanceledAsync (connection, command, context, executeMethod, commandId, connectionId, startTime, duration, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="executeMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="7" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" Index="8" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="9" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="executeMethod">Represents the method that will be called to execute the command.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The amount of time that passed until the exception was raised.</param>
        <param name="commandSource">Source of the command.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandCanceled" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="CommandCreated">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand CommandCreated (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbCommand CommandCreated(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandCreated(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandCreated (connection As IRelationalConnection, command As DbCommand, commandMethod As DbCommandMethod, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource) As DbCommand" />
      <MemberSignature Language="F#" Value="abstract member CommandCreated : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; System.Data.Common.DbCommand" Usage="iRelationalCommandDiagnosticsLogger.CommandCreated (connection, command, commandMethod, context, commandId, connectionId, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="commandMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="commandMethod">The type of method that will be called on this command.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The duration of the command creation.</param>
        <param name="commandSource">Source of the command.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandCreated" /> event.
            </summary>
        <returns>An intercepted result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandCreating">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbCommand&gt; CommandCreating (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbCommand&gt; CommandCreating(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandCreating(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandCreating (connection As IRelationalConnection, commandMethod As DbCommandMethod, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource) As InterceptionResult(Of DbCommand)" />
      <MemberSignature Language="F#" Value="abstract member CommandCreating : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbCommand&gt;" Usage="iRelationalCommandDiagnosticsLogger.CommandCreating (connection, commandMethod, context, commandId, connectionId, startTime, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbCommand&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="commandMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="commandMethod">The type of method that will be called on this command.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="commandSource">Source of the command.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandCreating" /> event.
            </summary>
        <returns>An intercepted result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandError">
      <MemberSignature Language="C#" Value="public void CommandError (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, Guid commandId, Guid connectionId, Exception exception, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommandError(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandError(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Exception,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommandError (connection As IRelationalConnection, command As DbCommand, context As DbContext, executeMethod As DbCommandMethod, commandId As Guid, connectionId As Guid, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource)" />
      <MemberSignature Language="F#" Value="abstract member CommandError : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * Exception * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; unit" Usage="iRelationalCommandDiagnosticsLogger.CommandError (connection, command, context, executeMethod, commandId, connectionId, exception, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="executeMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="executeMethod">Represents the method that will be called to execute the command.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="exception">The exception that caused this failure.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The amount of time that passed until the exception was raised.</param>
        <param name="commandSource">Source of the command.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandError" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandErrorAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CommandErrorAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, Guid commandId, Guid connectionId, Exception exception, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CommandErrorAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandErrorAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Exception,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandErrorAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, executeMethod As DbCommandMethod, commandId As Guid, connectionId As Guid, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CommandErrorAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * Exception * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iRelationalCommandDiagnosticsLogger.CommandErrorAsync (connection, command, context, executeMethod, commandId, connectionId, exception, startTime, duration, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="executeMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="executeMethod">Represents the method that will be called to execute the command.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="exception">The exception that caused this failure.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The amount of time that passed until the exception was raised.</param>
        <param name="commandSource">Source of the command.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandError" /> event.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="CommandInitialized">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand CommandInitialized (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbCommand CommandInitialized(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandInitialized(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandInitialized (connection As IRelationalConnection, command As DbCommand, commandMethod As DbCommandMethod, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource) As DbCommand" />
      <MemberSignature Language="F#" Value="abstract member CommandInitialized : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; System.Data.Common.DbCommand" Usage="iRelationalCommandDiagnosticsLogger.CommandInitialized (connection, command, commandMethod, context, commandId, connectionId, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="7" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" Index="8" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="commandMethod">The type of method that will be called on this command.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The duration of the command creation.</param>
        <param name="commandSource">Source of the command.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandInitialized" /> event.
            </summary>
        <returns>An intercepted result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecuted">
      <MemberSignature Language="C#" Value="public int CommandNonQueryExecuted (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, int methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CommandNonQueryExecuted(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, int32 methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandNonQueryExecuted(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Int32,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandNonQueryExecuted (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Integer, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CommandNonQueryExecuted : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * int * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; int" Usage="iRelationalCommandDiagnosticsLogger.CommandNonQueryExecuted (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Int32" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="methodResult">The return value from the underlying method execution.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The duration of the command execution, not including consuming results.</param>
        <param name="commandSource">Source of the command.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecutedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;int&gt; CommandNonQueryExecutedAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, int methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; CommandNonQueryExecutedAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, int32 methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandNonQueryExecutedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Int32,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandNonQueryExecutedAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Integer, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member CommandNonQueryExecutedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * int * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="iRelationalCommandDiagnosticsLogger.CommandNonQueryExecutedAsync (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Int32" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="methodResult">The return value from the underlying method execution.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The duration of the command execution, not including consuming results.</param>
        <param name="commandSource">Source of the command.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecuting">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt; CommandNonQueryExecuting (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;int32&gt; CommandNonQueryExecuting(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandNonQueryExecuting(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandNonQueryExecuting (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource) As InterceptionResult(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member CommandNonQueryExecuting : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;" Usage="iRelationalCommandDiagnosticsLogger.CommandNonQueryExecuting (connection, command, context, commandId, connectionId, startTime, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="commandSource">Source of the command.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns>An intercepted result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecutingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&gt; CommandNonQueryExecutingAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;int32&gt;&gt; CommandNonQueryExecutingAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandNonQueryExecutingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandNonQueryExecutingAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult(Of Integer))" />
      <MemberSignature Language="F#" Value="abstract member CommandNonQueryExecutingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&gt;" Usage="iRelationalCommandDiagnosticsLogger.CommandNonQueryExecutingAsync (connection, command, context, commandId, connectionId, startTime, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="commandSource">Source of the command.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns>An intercepted result.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecuted">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataReader CommandReaderExecuted (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, System.Data.Common.DbDataReader methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbDataReader CommandReaderExecuted(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Data.Common.DbDataReader methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandReaderExecuted(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Data.Common.DbDataReader,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandReaderExecuted (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As DbDataReader, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource) As DbDataReader" />
      <MemberSignature Language="F#" Value="abstract member CommandReaderExecuted : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * System.Data.Common.DbDataReader * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; System.Data.Common.DbDataReader" Usage="iRelationalCommandDiagnosticsLogger.CommandReaderExecuted (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="methodResult">The return value from the underlying method execution.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The duration of the command execution, not including consuming results.</param>
        <param name="commandSource">Source of the command.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecutedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbDataReader&gt; CommandReaderExecutedAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, System.Data.Common.DbDataReader methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class System.Data.Common.DbDataReader&gt; CommandReaderExecutedAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Data.Common.DbDataReader methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandReaderExecutedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Data.Common.DbDataReader,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandReaderExecutedAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As DbDataReader, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of DbDataReader)" />
      <MemberSignature Language="F#" Value="abstract member CommandReaderExecutedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * System.Data.Common.DbDataReader * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbDataReader&gt;" Usage="iRelationalCommandDiagnosticsLogger.CommandReaderExecutedAsync (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="methodResult">The return value from the underlying method execution.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The duration of the command execution, not including consuming results.</param>
        <param name="commandSource">Source of the command.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecuting">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt; CommandReaderExecuting (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbDataReader&gt; CommandReaderExecuting(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandReaderExecuting(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandReaderExecuting (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource) As InterceptionResult(Of DbDataReader)" />
      <MemberSignature Language="F#" Value="abstract member CommandReaderExecuting : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;" Usage="iRelationalCommandDiagnosticsLogger.CommandReaderExecuting (connection, command, context, commandId, connectionId, startTime, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="commandSource">Source of the command.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns>An intercepted result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecutingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt; CommandReaderExecutingAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbDataReader&gt;&gt; CommandReaderExecutingAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandReaderExecutingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandReaderExecutingAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult(Of DbDataReader))" />
      <MemberSignature Language="F#" Value="abstract member CommandReaderExecutingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt;" Usage="iRelationalCommandDiagnosticsLogger.CommandReaderExecutingAsync (connection, command, context, commandId, connectionId, startTime, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="commandSource">Source of the command.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns>An intercepted result.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecuted">
      <MemberSignature Language="C#" Value="public object? CommandScalarExecuted (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, object? methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CommandScalarExecuted(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, object methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandScalarExecuted(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Object,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandScalarExecuted (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Object, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource) As Object" />
      <MemberSignature Language="F#" Value="abstract member CommandScalarExecuted : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * obj * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; obj" Usage="iRelationalCommandDiagnosticsLogger.CommandScalarExecuted (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Object" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="methodResult">The return value from the underlying method execution.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The duration of the command execution, not including consuming results.</param>
        <param name="commandSource">Source of the command.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecutedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;object?&gt; CommandScalarExecutedAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, object? methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; CommandScalarExecutedAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, object methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandScalarExecutedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Object,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandScalarExecutedAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Object, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member CommandScalarExecutedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * obj * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="iRelationalCommandDiagnosticsLogger.CommandScalarExecutedAsync (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Object" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="methodResult">The return value from the underlying method execution.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="duration">The duration of the command execution, not including consuming results.</param>
        <param name="commandSource">Source of the command.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecuting">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;object&gt; CommandScalarExecuting (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;object&gt; CommandScalarExecuting(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandScalarExecuting(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandScalarExecuting (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource) As InterceptionResult(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member CommandScalarExecuting : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt;" Usage="iRelationalCommandDiagnosticsLogger.CommandScalarExecuting (connection, command, context, commandId, connectionId, startTime, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="commandSource">Source of the command.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns>An intercepted result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecutingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;object&gt;&gt; CommandScalarExecutingAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;object&gt;&gt; CommandScalarExecutingAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandScalarExecutingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommandScalarExecutingAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult(Of Object))" />
      <MemberSignature Language="F#" Value="abstract member CommandScalarExecutingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt;&gt;" Usage="iRelationalCommandDiagnosticsLogger.CommandScalarExecutingAsync (connection, command, context, commandId, connectionId, startTime, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="context">The <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> currently being used, to null if not known.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="connectionId">The correlation ID associated with the <see cref="T:System.Data.Common.DbConnection" /> being used.</param>
        <param name="startTime">The time that execution began.</param>
        <param name="commandSource">Source of the command.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> event.
            </summary>
        <returns>An intercepted result.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataReaderClosing">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult DataReaderClosing (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, System.Data.Common.DbDataReader dataReader, Guid commandId, int recordsAffected, int readCount, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult DataReaderClosing(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class System.Data.Common.DbDataReader dataReader, valuetype System.Guid commandId, int32 recordsAffected, int32 readCount, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.DataReaderClosing(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Int32,System.Int32,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataReaderClosing (connection As IRelationalConnection, command As DbCommand, dataReader As DbDataReader, commandId As Guid, recordsAffected As Integer, readCount As Integer, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="abstract member DataReaderClosing : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * int * int * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="iRelationalCommandDiagnosticsLogger.DataReaderClosing (connection, command, dataReader, commandId, recordsAffected, readCount, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="dataReader" Type="System.Data.Common.DbDataReader" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="recordsAffected" Type="System.Int32" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="readCount" Type="System.Int32" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="dataReader">The data reader.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="recordsAffected">The number of records in the database that were affected.</param>
        <param name="readCount">The number of records that were read.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DataReaderClosing" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataReaderClosingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; DataReaderClosingAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, System.Data.Common.DbDataReader dataReader, Guid commandId, int recordsAffected, int readCount, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; DataReaderClosingAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class System.Data.Common.DbDataReader dataReader, valuetype System.Guid commandId, int32 recordsAffected, int32 readCount, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.DataReaderClosingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Int32,System.Int32,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataReaderClosingAsync (connection As IRelationalConnection, command As DbCommand, dataReader As DbDataReader, commandId As Guid, recordsAffected As Integer, readCount As Integer, startTime As DateTimeOffset) As ValueTask(Of InterceptionResult)" />
      <MemberSignature Language="F#" Value="abstract member DataReaderClosingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * int * int * DateTimeOffset -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="iRelationalCommandDiagnosticsLogger.DataReaderClosingAsync (connection, command, dataReader, commandId, recordsAffected, readCount, startTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="dataReader" Type="System.Data.Common.DbDataReader" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="recordsAffected" Type="System.Int32" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="readCount" Type="System.Int32" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="dataReader">The data reader.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="recordsAffected">The number of records in the database that were affected.</param>
        <param name="readCount">The number of records that were read.</param>
        <param name="startTime">The time that the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DataReaderClosing" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataReaderDisposing">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult DataReaderDisposing (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, System.Data.Common.DbDataReader dataReader, Guid commandId, int recordsAffected, int readCount, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult DataReaderDisposing(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class System.Data.Common.DbDataReader dataReader, valuetype System.Guid commandId, int32 recordsAffected, int32 readCount, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.DataReaderDisposing(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Int32,System.Int32,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataReaderDisposing (connection As IRelationalConnection, command As DbCommand, dataReader As DbDataReader, commandId As Guid, recordsAffected As Integer, readCount As Integer, startTime As DateTimeOffset, duration As TimeSpan) As InterceptionResult" />
      <MemberSignature Language="F#" Value="abstract member DataReaderDisposing : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * int * int * DateTimeOffset * TimeSpan -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="iRelationalCommandDiagnosticsLogger.DataReaderDisposing (connection, command, dataReader, commandId, recordsAffected, readCount, startTime, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="dataReader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="recordsAffected" Type="System.Int32" />
        <Parameter Name="readCount" Type="System.Int32" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connection">The connection.</param>
        <param name="command">The database command object.</param>
        <param name="dataReader">The data reader.</param>
        <param name="commandId">The correlation ID associated with the given <see cref="T:System.Data.Common.DbCommand" />.</param>
        <param name="recordsAffected">The number of records in the database that were affected.</param>
        <param name="readCount">The number of records that were read.</param>
        <param name="startTime">The time that the operation was started.</param>
        <param name="duration">The elapsed time from when the operation was started.</param>
        <summary>
                Logs for the <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DataReaderDisposing" /> event.
            </summary>
        <returns>The result of execution, which may have been modified by an interceptor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogCommandCreate">
      <MemberSignature Language="C#" Value="public bool ShouldLogCommandCreate (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogCommandCreate(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.ShouldLogCommandCreate(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldLogCommandCreate (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogCommandCreate : DateTimeOffset -&gt; bool" Usage="iRelationalCommandDiagnosticsLogger.ShouldLogCommandCreate now" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                Whether <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandCreating" /> or <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandCreated" /> need
                to be logged.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogCommandExecute">
      <MemberSignature Language="C#" Value="public bool ShouldLogCommandExecute (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogCommandExecute(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.ShouldLogCommandExecute(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldLogCommandExecute (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogCommandExecute : DateTimeOffset -&gt; bool" Usage="iRelationalCommandDiagnosticsLogger.ShouldLogCommandExecute now" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                Whether <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuting" /> or <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.CommandExecuted" /> need
                to be logged.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogDataReaderClose">
      <MemberSignature Language="C#" Value="public bool ShouldLogDataReaderClose (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogDataReaderClose(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.ShouldLogDataReaderClose(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldLogDataReaderClose (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogDataReaderClose : DateTimeOffset -&gt; bool" Usage="iRelationalCommandDiagnosticsLogger.ShouldLogDataReaderClose now" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                Whether <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DataReaderClosing" /> needs to be logged.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogDataReaderDispose">
      <MemberSignature Language="C#" Value="public bool ShouldLogDataReaderDispose (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogDataReaderDispose(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.ShouldLogDataReaderDispose(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldLogDataReaderDispose (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogDataReaderDispose : DateTimeOffset -&gt; bool" Usage="iRelationalCommandDiagnosticsLogger.ShouldLogDataReaderDispose now" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                Whether <see cref="F:Microsoft.EntityFrameworkCore.Diagnostics.RelationalEventId.DataReaderDisposing" /> needs to be logged.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
