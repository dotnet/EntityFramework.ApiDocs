<Type Name="IScaffoldingModelFactory" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory">
  <TypeSignature Language="C#" Value="public interface IScaffoldingModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IScaffoldingModelFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IScaffoldingModelFactory" />
  <TypeSignature Language="F#" Value="type IScaffoldingModelFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IModel Create (Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel, Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IModel Create(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel, class Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory.Create(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (databaseModel As DatabaseModel, options As ModelReverseEngineerOptions) As IModel" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel * Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="iScaffoldingModelFactory.Create (databaseModel, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseModel" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="databaseModel">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IModel Create (Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel, bool useDatabaseNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IModel Create(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel, bool useDatabaseNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory.Create(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (databaseModel As DatabaseModel, useDatabaseNames As Boolean) As IModel" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="iScaffoldingModelFactory.Create (databaseModel, useDatabaseNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseModel" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="useDatabaseNames" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="databaseModel">To be added.</param>
        <param name="useDatabaseNames">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IModel Create (string connectionString, System.Collections.Generic.IEnumerable&lt;string&gt; tables, System.Collections.Generic.IEnumerable&lt;string&gt; schemas, bool useDatabaseNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IModel Create(string connectionString, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tables, class System.Collections.Generic.IEnumerable`1&lt;string&gt; schemas, bool useDatabaseNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory.Create(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (connectionString As String, tables As IEnumerable(Of String), schemas As IEnumerable(Of String), useDatabaseNames As Boolean) As IModel" />
      <MemberSignature Language="F#" Value="abstract member Create : string * seq&lt;string&gt; * seq&lt;string&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="iScaffoldingModelFactory.Create (connectionString, tables, schemas, useDatabaseNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="tables" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="schemas" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="useDatabaseNames" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="tables">To be added.</param>
        <param name="schemas">To be added.</param>
        <param name="useDatabaseNames">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
