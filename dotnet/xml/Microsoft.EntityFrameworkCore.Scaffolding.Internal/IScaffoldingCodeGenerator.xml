<Type Name="IScaffoldingCodeGenerator" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator">
  <TypeSignature Language="C#" Value="public interface IScaffoldingCodeGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IScaffoldingCodeGenerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IScaffoldingCodeGenerator" />
  <TypeSignature Language="F#" Value="type IScaffoldingCodeGenerator = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExtension As String" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileService">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService FileService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService FileService" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator.FileService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileService As IFileService" />
      <MemberSignature Language="F#" Value="member this.FileService : Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator.FileService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExistingFilePaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; GetExistingFilePaths (string outputPath, string dbContextClassName, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; entityTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetExistingFilePaths(string outputPath, string dbContextClassName, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; entityTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator.GetExistingFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExistingFilePaths (outputPath As String, dbContextClassName As String, entityTypes As IEnumerable(Of IEntityType)) As IList(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetExistingFilePaths : string * string * seq&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="iScaffoldingCodeGenerator.GetExistingFilePaths (outputPath, dbContextClassName, entityTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputPath" Type="System.String" />
        <Parameter Name="dbContextClassName" Type="System.String" />
        <Parameter Name="entityTypes" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;" />
      </Parameters>
      <Docs>
        <param name="outputPath">To be added.</param>
        <param name="dbContextClassName">To be added.</param>
        <param name="entityTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReadOnlyFilePaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; GetReadOnlyFilePaths (string outputPath, string dbContextClassName, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; entityTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetReadOnlyFilePaths(string outputPath, string dbContextClassName, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; entityTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator.GetReadOnlyFilePaths(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadOnlyFilePaths (outputPath As String, dbContextClassName As String, entityTypes As IEnumerable(Of IEntityType)) As IList(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetReadOnlyFilePaths : string * string * seq&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="iScaffoldingCodeGenerator.GetReadOnlyFilePaths (outputPath, dbContextClassName, entityTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputPath" Type="System.String" />
        <Parameter Name="dbContextClassName" Type="System.String" />
        <Parameter Name="entityTypes" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;" />
      </Parameters>
      <Docs>
        <param name="outputPath">To be added.</param>
        <param name="dbContextClassName">To be added.</param>
        <param name="entityTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCode">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles WriteCode (Microsoft.EntityFrameworkCore.Metadata.IModel model, string outputPath, string namespace, string contextName, string connectionString, bool dataAnnotations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles WriteCode(class Microsoft.EntityFrameworkCore.Metadata.IModel model, string outputPath, string namespace, string contextName, string connectionString, bool dataAnnotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator.WriteCode(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteCode (model As IModel, outputPath As String, namespace As String, contextName As String, connectionString As String, dataAnnotations As Boolean) As ReverseEngineerFiles" />
      <MemberSignature Language="F#" Value="abstract member WriteCode : Microsoft.EntityFrameworkCore.Metadata.IModel * string * string * string * string * bool -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles" Usage="iScaffoldingCodeGenerator.WriteCode (model, outputPath, namespace, contextName, connectionString, dataAnnotations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="outputPath" Type="System.String" />
        <Parameter Name="namespace" Type="System.String" />
        <Parameter Name="contextName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="dataAnnotations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="outputPath">To be added.</param>
        <param name="namespace">To be added.</param>
        <param name="contextName">To be added.</param>
        <param name="connectionString">To be added.</param>
        <param name="dataAnnotations">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
