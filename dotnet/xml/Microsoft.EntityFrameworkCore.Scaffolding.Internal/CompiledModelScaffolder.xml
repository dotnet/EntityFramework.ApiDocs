<Type Name="CompiledModelScaffolder" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder">
  <TypeSignature Language="C#" Value="public class CompiledModelScaffolder : Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelScaffolder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompiledModelScaffolder extends System.Object implements class Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelScaffolder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder" />
  <TypeSignature Language="VB.NET" Value="Public Class CompiledModelScaffolder&#xA;Implements ICompiledModelScaffolder" />
  <TypeSignature Language="F#" Value="type CompiledModelScaffolder = class&#xA;    interface ICompiledModelScaffolder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelScaffolder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompiledModelScaffolder (Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector modelCodeGeneratorSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector modelCodeGeneratorSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modelCodeGeneratorSelector As ICompiledModelCodeGeneratorSelector)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder : Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder modelCodeGeneratorSelector" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="modelCodeGeneratorSelector" Type="Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelCodeGeneratorSelector">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompiledModelScaffolder (Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector modelCodeGeneratorSelector, Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector modelCodeGeneratorSelector, class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modelCodeGeneratorSelector As ICompiledModelCodeGeneratorSelector, reporter As IOperationReporter)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder : Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector * Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder (modelCodeGeneratorSelector, reporter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="modelCodeGeneratorSelector" Type="Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelCodeGeneratorSelector" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="reporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="1" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="modelCodeGeneratorSelector">To be added.</param>
        <param name="reporter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaffoldModel">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;string&gt; ScaffoldModel (Microsoft.EntityFrameworkCore.Metadata.IModel model, string outputDir, Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; ScaffoldModel(class Microsoft.EntityFrameworkCore.Metadata.IModel model, string outputDir, class Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CompiledModelScaffolder.ScaffoldModel(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ScaffoldModel (model As IModel, outputDir As String, options As CompiledModelCodeGenerationOptions) As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="abstract member ScaffoldModel : Microsoft.EntityFrameworkCore.Metadata.IModel * string * Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions -&gt; System.Collections.Generic.IReadOnlyList&lt;string&gt;&#xA;override this.ScaffoldModel : Microsoft.EntityFrameworkCore.Metadata.IModel * string * Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions -&gt; System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="compiledModelScaffolder.ScaffoldModel (model, outputDir, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.ICompiledModelScaffolder.ScaffoldModel(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="outputDir" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Scaffolding.CompiledModelCodeGenerationOptions" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="outputDir">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
