<Type Name="RelationalScaffoldingModelFactory" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory">
  <TypeSignature Language="C#" Value="public class RelationalScaffoldingModelFactory : Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalScaffoldingModelFactory extends System.Object implements class Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalScaffoldingModelFactory&#xA;Implements IScaffoldingModelFactory" />
  <TypeSignature Language="F#" Value="type RelationalScaffoldingModelFactory = class&#xA;    interface IScaffoldingModelFactory" />
  <TypeSignature Language="C#" Value="public class RelationalScaffoldingModelFactory : Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalScaffoldingModelFactory extends System.Object implements class Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalScaffoldingModelFactory (Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService candidateNamingService, Microsoft.EntityFrameworkCore.Design.IPluralizer pluralizer, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper scaffoldingTypeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService candidateNamingService, class Microsoft.EntityFrameworkCore.Design.IPluralizer pluralizer, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper scaffoldingTypeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService,Microsoft.EntityFrameworkCore.Design.IPluralizer,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reporter As IOperationReporter, candidateNamingService As ICandidateNamingService, pluralizer As IPluralizer, cSharpUtilities As ICSharpUtilities, scaffoldingTypeMapper As IScaffoldingTypeMapper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory : Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService * Microsoft.EntityFrameworkCore.Design.IPluralizer * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities * Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory (reporter, candidateNamingService, pluralizer, cSharpUtilities, scaffoldingTypeMapper)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="candidateNamingService" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="pluralizer" Type="Microsoft.EntityFrameworkCore.Design.IPluralizer" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="cSharpUtilities" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="scaffoldingTypeMapper" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper" Index="4" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="reporter">To be added.</param>
        <param name="candidateNamingService">To be added.</param>
        <param name="pluralizer">To be added.</param>
        <param name="cSharpUtilities">To be added.</param>
        <param name="scaffoldingTypeMapper">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalScaffoldingModelFactory (Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService candidateNamingService, Microsoft.EntityFrameworkCore.Design.IPluralizer pluralizer, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper scaffoldingTypeMapper, Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions loggingDefinitions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService candidateNamingService, class Microsoft.EntityFrameworkCore.Design.IPluralizer pluralizer, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper scaffoldingTypeMapper, class Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions loggingDefinitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService,Microsoft.EntityFrameworkCore.Design.IPluralizer,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper,Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reporter As IOperationReporter, candidateNamingService As ICandidateNamingService, pluralizer As IPluralizer, cSharpUtilities As ICSharpUtilities, scaffoldingTypeMapper As IScaffoldingTypeMapper, loggingDefinitions As LoggingDefinitions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory : Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService * Microsoft.EntityFrameworkCore.Design.IPluralizer * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities * Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper * Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory (reporter, candidateNamingService, pluralizer, cSharpUtilities, scaffoldingTypeMapper, loggingDefinitions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="candidateNamingService" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="pluralizer" Type="Microsoft.EntityFrameworkCore.Design.IPluralizer" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="cSharpUtilities" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="scaffoldingTypeMapper" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="loggingDefinitions" Type="Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="reporter">To be added.</param>
        <param name="candidateNamingService">To be added.</param>
        <param name="pluralizer">To be added.</param>
        <param name="cSharpUtilities">To be added.</param>
        <param name="scaffoldingTypeMapper">To be added.</param>
        <param name="loggingDefinitions">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalScaffoldingModelFactory (Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService candidateNamingService, Microsoft.EntityFrameworkCore.Design.IPluralizer pluralizer, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper scaffoldingTypeMapper, Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer modelRuntimeInitializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService candidateNamingService, class Microsoft.EntityFrameworkCore.Design.IPluralizer pluralizer, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper scaffoldingTypeMapper, class Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer modelRuntimeInitializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService,Microsoft.EntityFrameworkCore.Design.IPluralizer,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper,Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reporter As IOperationReporter, candidateNamingService As ICandidateNamingService, pluralizer As IPluralizer, cSharpUtilities As ICSharpUtilities, scaffoldingTypeMapper As IScaffoldingTypeMapper, modelRuntimeInitializer As IModelRuntimeInitializer)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory : Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService * Microsoft.EntityFrameworkCore.Design.IPluralizer * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities * Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper * Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory (reporter, candidateNamingService, pluralizer, cSharpUtilities, scaffoldingTypeMapper, modelRuntimeInitializer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="candidateNamingService" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="pluralizer" Type="Microsoft.EntityFrameworkCore.Design.IPluralizer" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="cSharpUtilities" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="scaffoldingTypeMapper" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="modelRuntimeInitializer" Type="Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="reporter">To be added.</param>
        <param name="candidateNamingService">To be added.</param>
        <param name="pluralizer">To be added.</param>
        <param name="cSharpUtilities">To be added.</param>
        <param name="scaffoldingTypeMapper">To be added.</param>
        <param name="modelRuntimeInitializer">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalScaffoldingModelFactory (Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService candidateNamingService, Microsoft.EntityFrameworkCore.Design.IPluralizer pluralizer, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper scaffoldingTypeMapper, Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions loggingDefinitions, Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer modelRuntimeInitializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService candidateNamingService, class Microsoft.EntityFrameworkCore.Design.IPluralizer pluralizer, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper scaffoldingTypeMapper, class Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions loggingDefinitions, class Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer modelRuntimeInitializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService,Microsoft.EntityFrameworkCore.Design.IPluralizer,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper,Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions,Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reporter As IOperationReporter, candidateNamingService As ICandidateNamingService, pluralizer As IPluralizer, cSharpUtilities As ICSharpUtilities, scaffoldingTypeMapper As IScaffoldingTypeMapper, loggingDefinitions As LoggingDefinitions, modelRuntimeInitializer As IModelRuntimeInitializer)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory : Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService * Microsoft.EntityFrameworkCore.Design.IPluralizer * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities * Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper * Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions * Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory (reporter, candidateNamingService, pluralizer, cSharpUtilities, scaffoldingTypeMapper, loggingDefinitions, modelRuntimeInitializer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="candidateNamingService" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="pluralizer" Type="Microsoft.EntityFrameworkCore.Design.IPluralizer" Index="2" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="cSharpUtilities" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities" Index="3" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="scaffoldingTypeMapper" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper" Index="4" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="loggingDefinitions" Type="Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions" Index="5" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="modelRuntimeInitializer" Type="Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer" Index="6" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="reporter">To be added.</param>
        <param name="candidateNamingService">To be added.</param>
        <param name="pluralizer">To be added.</param>
        <param name="cSharpUtilities">To be added.</param>
        <param name="scaffoldingTypeMapper">To be added.</param>
        <param name="loggingDefinitions">To be added.</param>
        <param name="modelRuntimeInitializer">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalScaffoldingModelFactory (Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory databaseModelFactory, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService candidateNamingService, Microsoft.EntityFrameworkCore.Design.IPluralizer pluralizer, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper scaffoldingTypeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, class Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory databaseModelFactory, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService candidateNamingService, class Microsoft.EntityFrameworkCore.Design.IPluralizer pluralizer, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper scaffoldingTypeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService,Microsoft.EntityFrameworkCore.Design.IPluralizer,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reporter As IOperationReporter, typeMapper As IRelationalTypeMapper, databaseModelFactory As IDatabaseModelFactory, candidateNamingService As ICandidateNamingService, pluralizer As IPluralizer, cSharpUtilities As ICSharpUtilities, scaffoldingTypeMapper As IScaffoldingTypeMapper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory : Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper * Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService * Microsoft.EntityFrameworkCore.Design.IPluralizer * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities * Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory (reporter, typeMapper, databaseModelFactory, candidateNamingService, pluralizer, cSharpUtilities, scaffoldingTypeMapper)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="databaseModelFactory" Type="Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory" Index="2" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="candidateNamingService" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService" Index="3" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="pluralizer" Type="Microsoft.EntityFrameworkCore.Design.IPluralizer" Index="4" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="cSharpUtilities" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities" Index="5" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="scaffoldingTypeMapper" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingTypeMapper" Index="6" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="reporter">To be added.</param>
        <param name="typeMapper">To be added.</param>
        <param name="databaseModelFactory">To be added.</param>
        <param name="candidateNamingService">To be added.</param>
        <param name="pluralizer">To be added.</param>
        <param name="cSharpUtilities">To be added.</param>
        <param name="scaffoldingTypeMapper">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNavigationProperties">
      <MemberSignature Language="C#" Value="protected virtual void AddNavigationProperties (Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddNavigationProperties(class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.AddNavigationProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddNavigationProperties (foreignKey As IMutableForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member AddNavigationProperties : Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey -&gt; unit&#xA;override this.AddNavigationProperties : Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey -&gt; unit" Usage="relationalScaffoldingModelFactory.AddNavigationProperties foreignKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CandidateNamingService">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService CandidateNamingService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService CandidateNamingService" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.CandidateNamingService" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CandidateNamingService As ICandidateNamingService" />
      <MemberSignature Language="F#" Value="member this.CandidateNamingService : Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.CandidateNamingService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICandidateNamingService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel Create (Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel, Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IModel Create(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel, class Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.Create(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (databaseModel As DatabaseModel, options As ModelReverseEngineerOptions) As IModel" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel * Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel&#xA;override this.Create : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel * Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="relationalScaffoldingModelFactory.Create (databaseModel, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-5.0">M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory.Create(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">M:Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory.Create(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseModel" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Scaffolding.ModelReverseEngineerOptions" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="databaseModel">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel Create (Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel, bool useDatabaseNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IModel Create(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel, bool useDatabaseNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.Create(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (databaseModel As DatabaseModel, useDatabaseNames As Boolean) As IModel" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel&#xA;override this.Create : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="relationalScaffoldingModelFactory.Create (databaseModel, useDatabaseNames)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory.Create(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseModel" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="useDatabaseNames" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="databaseModel">To be added.</param>
        <param name="useDatabaseNames">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel Create (string connectionString, System.Collections.Generic.IEnumerable&lt;string&gt; tables, System.Collections.Generic.IEnumerable&lt;string&gt; schemas, bool useDatabaseNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IModel Create(string connectionString, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tables, class System.Collections.Generic.IEnumerable`1&lt;string&gt; schemas, bool useDatabaseNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.Create(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (connectionString As String, tables As IEnumerable(Of String), schemas As IEnumerable(Of String), useDatabaseNames As Boolean) As IModel" />
      <MemberSignature Language="F#" Value="abstract member Create : string * seq&lt;string&gt; * seq&lt;string&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel&#xA;override this.Create : string * seq&lt;string&gt; * seq&lt;string&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="relationalScaffoldingModelFactory.Create (connectionString, tables, schemas, useDatabaseNames)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory.Create(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="tables" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="schemas" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="useDatabaseNames" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="tables">To be added.</param>
        <param name="schemas">To be added.</param>
        <param name="useDatabaseNames">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromDatabaseModel">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.IModel CreateFromDatabaseModel (Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel, bool useDatabaseNames);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IModel CreateFromDatabaseModel(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel, bool useDatabaseNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.CreateFromDatabaseModel(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateFromDatabaseModel (databaseModel As DatabaseModel, useDatabaseNames As Boolean) As IModel" />
      <MemberSignature Language="F#" Value="abstract member CreateFromDatabaseModel : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel&#xA;override this.CreateFromDatabaseModel : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="relationalScaffoldingModelFactory.CreateFromDatabaseModel (databaseModel, useDatabaseNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseModel" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="useDatabaseNames" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="databaseModel">To be added.</param>
        <param name="useDatabaseNames">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistingIdentifiers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.List&lt;string&gt; ExistingIdentifiers (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;string&gt; ExistingIdentifiers(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.ExistingIdentifiers(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExistingIdentifiers (entityType As IEntityType) As List(Of String)" />
      <MemberSignature Language="F#" Value="abstract member ExistingIdentifiers : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; System.Collections.Generic.List&lt;string&gt;&#xA;override this.ExistingIdentifiers : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; System.Collections.Generic.List&lt;string&gt;" Usage="relationalScaffoldingModelFactory.ExistingIdentifiers entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistingIdentifiers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.List&lt;string&gt; ExistingIdentifiers (Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;string&gt; ExistingIdentifiers(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.ExistingIdentifiers(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExistingIdentifiers (entityType As IReadOnlyEntityType) As List(Of String)" />
      <MemberSignature Language="F#" Value="abstract member ExistingIdentifiers : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType -&gt; System.Collections.Generic.List&lt;string&gt;&#xA;override this.ExistingIdentifiers : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType -&gt; System.Collections.Generic.List&lt;string&gt;" Usage="relationalScaffoldingModelFactory.ExistingIdentifiers entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbSetName">
      <MemberSignature Language="C#" Value="protected virtual string GetDbSetName (Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetDbSetName(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.GetDbSetName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbSetName (table As DatabaseTable) As String" />
      <MemberSignature Language="F#" Value="abstract member GetDbSetName : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable -&gt; string&#xA;override this.GetDbSetName : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable -&gt; string" Usage="relationalScaffoldingModelFactory.GetDbSetName table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityTypeName">
      <MemberSignature Language="C#" Value="protected virtual string GetEntityTypeName (Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetEntityTypeName(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.GetEntityTypeName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEntityTypeName (table As DatabaseTable) As String" />
      <MemberSignature Language="F#" Value="abstract member GetEntityTypeName : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable -&gt; string&#xA;override this.GetEntityTypeName : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable -&gt; string" Usage="relationalScaffoldingModelFactory.GetEntityTypeName table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyName">
      <MemberSignature Language="C#" Value="protected virtual string GetPropertyName (Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetPropertyName(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.GetPropertyName(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPropertyName (column As DatabaseColumn) As String" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyName : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn -&gt; string&#xA;override this.GetPropertyName : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn -&gt; string" Usage="relationalScaffoldingModelFactory.GetPropertyName column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeScaffoldingInfo">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo GetTypeScaffoldingInfo (Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo GetTypeScaffoldingInfo(class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.GetTypeScaffoldingInfo(Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTypeScaffoldingInfo (column As DatabaseColumn) As TypeScaffoldingInfo" />
      <MemberSignature Language="F#" Value="abstract member GetTypeScaffoldingInfo : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo&#xA;override this.GetTypeScaffoldingInfo : Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo" Usage="relationalScaffoldingModelFactory.GetTypeScaffoldingInfo column" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo? GetTypeScaffoldingInfo (Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Internal.TypeScaffoldingInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reporter">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter Reporter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter Reporter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.Reporter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Reporter As IOperationReporter" />
      <MemberSignature Language="F#" Value="member this.Reporter : Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.Reporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeMapper">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper TypeMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper TypeMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.TypeMapper" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TypeMapper As IRelationalTypeMapper" />
      <MemberSignature Language="F#" Value="member this.TypeMapper : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.TypeMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitColumn">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder VisitColumn (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder VisitColumn(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitColumn (builder As EntityTypeBuilder, column As DatabaseColumn) As PropertyBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitColumn : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder&#xA;override this.VisitColumn : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder" Usage="relationalScaffoldingModelFactory.VisitColumn (builder, column)" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder? VisitColumn (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn column);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="column">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitColumns">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder VisitColumns (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn&gt; columns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder VisitColumns(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn&gt; columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitColumns(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitColumns (builder As EntityTypeBuilder, columns As ICollection(Of DatabaseColumn)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitColumns : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.VisitColumns : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="relationalScaffoldingModelFactory.VisitColumns (builder, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />
        <Parameter Name="columns" Type="System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseColumn&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="columns">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDatabaseModel">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.ModelBuilder VisitDatabaseModel (Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ModelBuilder VisitDatabaseModel(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel databaseModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitDatabaseModel(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitDatabaseModel (modelBuilder As ModelBuilder, databaseModel As DatabaseModel) As ModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitDatabaseModel : Microsoft.EntityFrameworkCore.ModelBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel -&gt; Microsoft.EntityFrameworkCore.ModelBuilder&#xA;override this.VisitDatabaseModel : Microsoft.EntityFrameworkCore.ModelBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="relationalScaffoldingModelFactory.VisitDatabaseModel (modelBuilder, databaseModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" />
        <Parameter Name="databaseModel" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="databaseModel">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForeignKey">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey VisitForeignKey (Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey foreignKey);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey VisitForeignKey(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitForeignKey(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitForeignKey (modelBuilder As ModelBuilder, foreignKey As DatabaseForeignKey) As IMutableForeignKey" />
      <MemberSignature Language="F#" Value="abstract member VisitForeignKey : Microsoft.EntityFrameworkCore.ModelBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&#xA;override this.VisitForeignKey : Microsoft.EntityFrameworkCore.ModelBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey" Usage="relationalScaffoldingModelFactory.VisitForeignKey (modelBuilder, foreignKey)" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey? VisitForeignKey (Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey foreignKey);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForeignKeys">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.ModelBuilder VisitForeignKeys (Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey&gt; foreignKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ModelBuilder VisitForeignKeys(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, class System.Collections.Generic.IList`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey&gt; foreignKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitForeignKeys(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.IList{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitForeignKeys (modelBuilder As ModelBuilder, foreignKeys As IList(Of DatabaseForeignKey)) As ModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitForeignKeys : Microsoft.EntityFrameworkCore.ModelBuilder * System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder&#xA;override this.VisitForeignKeys : Microsoft.EntityFrameworkCore.ModelBuilder * System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="relationalScaffoldingModelFactory.VisitForeignKeys (modelBuilder, foreignKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" />
        <Parameter Name="foreignKeys" Type="System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseForeignKey&gt;" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="foreignKeys">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIndex">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder VisitIndex (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex index);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder VisitIndex(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitIndex(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitIndex (builder As EntityTypeBuilder, index As DatabaseIndex) As IndexBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitIndex : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&#xA;override this.VisitIndex : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" Usage="relationalScaffoldingModelFactory.VisitIndex (builder, index)" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder? VisitIndex (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex index);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIndexes">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder VisitIndexes (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex&gt; indexes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder VisitIndexes(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex&gt; indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitIndexes(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitIndexes (builder As EntityTypeBuilder, indexes As ICollection(Of DatabaseIndex)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitIndexes : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.VisitIndexes : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="relationalScaffoldingModelFactory.VisitIndexes (builder, indexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />
        <Parameter Name="indexes" Type="System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseIndex&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="indexes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPrimaryKey">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder VisitPrimaryKey (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder VisitPrimaryKey(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitPrimaryKey (builder As EntityTypeBuilder, table As DatabaseTable) As KeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitPrimaryKey : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder&#xA;override this.VisitPrimaryKey : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" Usage="relationalScaffoldingModelFactory.VisitPrimaryKey (builder, table)" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder? VisitPrimaryKey (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSequence">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.SequenceBuilder VisitSequence (Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence sequence);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.SequenceBuilder VisitSequence(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence sequence) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitSequence(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSequence (modelBuilder As ModelBuilder, sequence As DatabaseSequence) As SequenceBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitSequence : Microsoft.EntityFrameworkCore.ModelBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence -&gt; Microsoft.EntityFrameworkCore.Metadata.SequenceBuilder&#xA;override this.VisitSequence : Microsoft.EntityFrameworkCore.ModelBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence -&gt; Microsoft.EntityFrameworkCore.Metadata.SequenceBuilder" Usage="relationalScaffoldingModelFactory.VisitSequence (modelBuilder, sequence)" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.SequenceBuilder VisitSequence (Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence sequence);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.SequenceBuilder VisitSequence(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence sequence) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member VisitSequence : Microsoft.EntityFrameworkCore.ModelBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.SequenceBuilder&#xA;override this.VisitSequence : Microsoft.EntityFrameworkCore.ModelBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.SequenceBuilder" Usage="relationalScaffoldingModelFactory.VisitSequence (modelBuilder, sequence)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.SequenceBuilder? VisitSequence (Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence sequence);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">Microsoft.EntityFrameworkCore.Metadata.SequenceBuilder</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.Builders.SequenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" />
        <Parameter Name="sequence" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="sequence">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSequences">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.ModelBuilder VisitSequences (Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence&gt; sequences);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ModelBuilder VisitSequences(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence&gt; sequences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitSequences(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSequences (modelBuilder As ModelBuilder, sequences As ICollection(Of DatabaseSequence)) As ModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitSequences : Microsoft.EntityFrameworkCore.ModelBuilder * System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder&#xA;override this.VisitSequences : Microsoft.EntityFrameworkCore.ModelBuilder * System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="relationalScaffoldingModelFactory.VisitSequences (modelBuilder, sequences)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" />
        <Parameter Name="sequences" Type="System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseSequence&gt;" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="sequences">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTable">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder VisitTable (Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder VisitTable(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitTable(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitTable (modelBuilder As ModelBuilder, table As DatabaseTable) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitTable : Microsoft.EntityFrameworkCore.ModelBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.VisitTable : Microsoft.EntityFrameworkCore.ModelBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="relationalScaffoldingModelFactory.VisitTable (modelBuilder, table)" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder? VisitTable (Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" />
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTables">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.ModelBuilder VisitTables (Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable&gt; tables);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ModelBuilder VisitTables(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable&gt; tables) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitTables(Microsoft.EntityFrameworkCore.ModelBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitTables (modelBuilder As ModelBuilder, tables As ICollection(Of DatabaseTable)) As ModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitTables : Microsoft.EntityFrameworkCore.ModelBuilder * System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder&#xA;override this.VisitTables : Microsoft.EntityFrameworkCore.ModelBuilder * System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="relationalScaffoldingModelFactory.VisitTables (modelBuilder, tables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" />
        <Parameter Name="tables" Type="System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable&gt;" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="tables">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUniqueConstraint">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder VisitUniqueConstraint (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint uniqueConstraint);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder VisitUniqueConstraint(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint uniqueConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitUniqueConstraint(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitUniqueConstraint (builder As EntityTypeBuilder, uniqueConstraint As DatabaseUniqueConstraint) As IndexBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitUniqueConstraint : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&#xA;override this.VisitUniqueConstraint : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" Usage="relationalScaffoldingModelFactory.VisitUniqueConstraint (builder, uniqueConstraint)" />
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder? VisitUniqueConstraint (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint uniqueConstraint);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />
        <Parameter Name="uniqueConstraint" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="uniqueConstraint">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUniqueConstraints">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder VisitUniqueConstraints (Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint&gt; uniqueConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder VisitUniqueConstraints(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder builder, class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint&gt; uniqueConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.RelationalScaffoldingModelFactory.VisitUniqueConstraints(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Collections.Generic.ICollection{Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitUniqueConstraints (builder As EntityTypeBuilder, uniqueConstraints As ICollection(Of DatabaseUniqueConstraint)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member VisitUniqueConstraints : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&#xA;override this.VisitUniqueConstraints : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="relationalScaffoldingModelFactory.VisitUniqueConstraints (builder, uniqueConstraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />
        <Parameter Name="uniqueConstraints" Type="System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseUniqueConstraint&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="uniqueConstraints">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
