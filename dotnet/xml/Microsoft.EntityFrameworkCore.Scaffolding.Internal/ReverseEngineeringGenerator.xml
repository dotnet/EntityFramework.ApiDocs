<Type Name="ReverseEngineeringGenerator" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator">
  <TypeSignature Language="C#" Value="public class ReverseEngineeringGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReverseEngineeringGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class ReverseEngineeringGenerator" />
  <TypeSignature Language="F#" Value="type ReverseEngineeringGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReverseEngineeringGenerator (Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory scaffoldingModelFactory, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory configurationFactory, Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter codeWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory scaffoldingModelFactory, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory configurationFactory, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter codeWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scaffoldingModelFactory As IScaffoldingModelFactory, configurationFactory As ConfigurationFactory, codeWriter As CodeWriter)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator : Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory * Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator (scaffoldingModelFactory, configurationFactory, codeWriter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scaffoldingModelFactory" Type="Microsoft.EntityFrameworkCore.Scaffolding.IScaffoldingModelFactory" />
        <Parameter Name="configurationFactory" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory" />
        <Parameter Name="codeWriter" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter" />
      </Parameters>
      <Docs>
        <param name="scaffoldingModelFactory">To be added.</param>
        <param name="configurationFactory">To be added.</param>
        <param name="codeWriter">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOutputFiles">
      <MemberSignature Language="C#" Value="public virtual void CheckOutputFiles (string outputPath, string dbContextClassName, Microsoft.EntityFrameworkCore.Metadata.IModel metadataModel, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOutputFiles(string outputPath, string dbContextClassName, class Microsoft.EntityFrameworkCore.Metadata.IModel metadataModel, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.CheckOutputFiles(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IModel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CheckOutputFiles (outputPath As String, dbContextClassName As String, metadataModel As IModel, overwriteFiles As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CheckOutputFiles : string * string * Microsoft.EntityFrameworkCore.Metadata.IModel * bool -&gt; unit&#xA;override this.CheckOutputFiles : string * string * Microsoft.EntityFrameworkCore.Metadata.IModel * bool -&gt; unit" Usage="reverseEngineeringGenerator.CheckOutputFiles (outputPath, dbContextClassName, metadataModel, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputPath" Type="System.String" />
        <Parameter Name="dbContextClassName" Type="System.String" />
        <Parameter Name="metadataModel" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="outputPath">To be added.</param>
        <param name="dbContextClassName">To be added.</param>
        <param name="metadataModel">To be added.</param>
        <param name="overwriteFiles">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeWriter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter CodeWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter CodeWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.CodeWriter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeWriter As CodeWriter" />
      <MemberSignature Language="F#" Value="member this.CodeWriter : Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.CodeWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Internal.CodeWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles&gt; GenerateAsync (Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration configuration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles&gt; GenerateAsync(class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration configuration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.GenerateAsync(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateAsync (configuration As ReverseEngineeringConfiguration, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ReverseEngineerFiles)" />
      <MemberSignature Language="F#" Value="abstract member GenerateAsync : Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles&gt;&#xA;override this.GenerateAsync : Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles&gt;" Usage="reverseEngineeringGenerator.GenerateAsync (configuration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataModel">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel GetMetadataModel (Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IModel GetMetadataModel(class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringGenerator.GetMetadataModel(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMetadataModel (configuration As ReverseEngineeringConfiguration) As IModel" />
      <MemberSignature Language="F#" Value="abstract member GetMetadataModel : Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel&#xA;override this.GetMetadataModel : Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="reverseEngineeringGenerator.GetMetadataModel configuration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineeringConfiguration" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
