<Type Name="CSharpEntityTypeGenerator" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator">
  <TypeSignature Language="C#" Value="public class CSharpEntityTypeGenerator : Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CSharpEntityTypeGenerator extends System.Object implements class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class CSharpEntityTypeGenerator&#xA;Implements ICSharpEntityTypeGenerator" />
  <TypeSignature Language="F#" Value="type CSharpEntityTypeGenerator = class&#xA;    interface ICSharpEntityTypeGenerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpEntityTypeGenerator (Microsoft.EntityFrameworkCore.Design.ICSharpHelper cSharpHelper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.ICSharpHelper cSharpHelper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.#ctor(Microsoft.EntityFrameworkCore.Design.ICSharpHelper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cSharpHelper As ICSharpHelper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator : Microsoft.EntityFrameworkCore.Design.ICSharpHelper -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator cSharpHelper" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cSharpHelper" Type="Microsoft.EntityFrameworkCore.Design.ICSharpHelper" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-2.1;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="cSharpHelper">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpEntityTypeGenerator (Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cSharpUtilities As ICSharpUtilities)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator : Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator cSharpUtilities" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cSharpUtilities" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities" Index="0" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="cSharpUtilities">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpEntityTypeGenerator (Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator annotationCodeGenerator, Microsoft.EntityFrameworkCore.Design.ICSharpHelper cSharpHelper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator annotationCodeGenerator, class Microsoft.EntityFrameworkCore.Design.ICSharpHelper cSharpHelper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.#ctor(Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator,Microsoft.EntityFrameworkCore.Design.ICSharpHelper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (annotationCodeGenerator As IAnnotationCodeGenerator, cSharpHelper As ICSharpHelper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator : Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator * Microsoft.EntityFrameworkCore.Design.ICSharpHelper -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator (annotationCodeGenerator, cSharpHelper)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="annotationCodeGenerator" Type="Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="cSharpHelper" Type="Microsoft.EntityFrameworkCore.Design.ICSharpHelper" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="annotationCodeGenerator">To be added.</param>
        <param name="cSharpHelper">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateClass">
      <MemberSignature Language="C#" Value="protected virtual void GenerateClass (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateClass(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.GenerateClass(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateClass (entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member GenerateClass : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit&#xA;override this.GenerateClass : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="cSharpEntityTypeGenerator.GenerateClass entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateConstructor">
      <MemberSignature Language="C#" Value="protected virtual void GenerateConstructor (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateConstructor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.GenerateConstructor(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateConstructor (entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member GenerateConstructor : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit&#xA;override this.GenerateConstructor : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="cSharpEntityTypeGenerator.GenerateConstructor entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateEntityTypeDataAnnotations">
      <MemberSignature Language="C#" Value="protected virtual void GenerateEntityTypeDataAnnotations (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateEntityTypeDataAnnotations(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.GenerateEntityTypeDataAnnotations(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateEntityTypeDataAnnotations (entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member GenerateEntityTypeDataAnnotations : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit&#xA;override this.GenerateEntityTypeDataAnnotations : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="cSharpEntityTypeGenerator.GenerateEntityTypeDataAnnotations entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateNavigationProperties">
      <MemberSignature Language="C#" Value="protected virtual void GenerateNavigationProperties (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateNavigationProperties(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.GenerateNavigationProperties(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateNavigationProperties (entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member GenerateNavigationProperties : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit&#xA;override this.GenerateNavigationProperties : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="cSharpEntityTypeGenerator.GenerateNavigationProperties entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateProperties">
      <MemberSignature Language="C#" Value="protected virtual void GenerateProperties (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateProperties(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.GenerateProperties(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateProperties (entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member GenerateProperties : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit&#xA;override this.GenerateProperties : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="cSharpEntityTypeGenerator.GenerateProperties entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratePropertyDataAnnotations">
      <MemberSignature Language="C#" Value="protected virtual void GeneratePropertyDataAnnotations (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GeneratePropertyDataAnnotations(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.GeneratePropertyDataAnnotations(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GeneratePropertyDataAnnotations (property As IProperty)" />
      <MemberSignature Language="F#" Value="abstract member GeneratePropertyDataAnnotations : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit&#xA;override this.GeneratePropertyDataAnnotations : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="cSharpEntityTypeGenerator.GeneratePropertyDataAnnotations property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSkipNavigationProperties">
      <MemberSignature Language="C#" Value="protected virtual void GenerateSkipNavigationProperties (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSkipNavigationProperties(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.GenerateSkipNavigationProperties(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateSkipNavigationProperties (entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member GenerateSkipNavigationProperties : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit&#xA;override this.GenerateSkipNavigationProperties : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="cSharpEntityTypeGenerator.GenerateSkipNavigationProperties entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCode">
      <MemberSignature Language="C#" Value="public virtual string WriteCode (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string namespace, bool useDataAnnotations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteCode(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string namespace, bool useDataAnnotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.WriteCode(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCode (entityType As IEntityType, namespace As String, useDataAnnotations As Boolean) As String" />
      <MemberSignature Language="F#" Value="abstract member WriteCode : Microsoft.EntityFrameworkCore.Metadata.IEntityType * string * bool -&gt; string&#xA;override this.WriteCode : Microsoft.EntityFrameworkCore.Metadata.IEntityType * string * bool -&gt; string" Usage="cSharpEntityTypeGenerator.WriteCode (entityType, namespace, useDataAnnotations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator.WriteCode(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="namespace" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="useDataAnnotations" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="namespace">To be added.</param>
        <param name="useDataAnnotations">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCode">
      <MemberSignature Language="C#" Value="public virtual string WriteCode (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string? namespace, bool useDataAnnotations, bool useNullableReferenceTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteCode(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string namespace, bool useDataAnnotations, bool useNullableReferenceTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpEntityTypeGenerator.WriteCode(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCode (entityType As IEntityType, namespace As String, useDataAnnotations As Boolean, useNullableReferenceTypes As Boolean) As String" />
      <MemberSignature Language="F#" Value="abstract member WriteCode : Microsoft.EntityFrameworkCore.Metadata.IEntityType * string * bool * bool -&gt; string&#xA;override this.WriteCode : Microsoft.EntityFrameworkCore.Metadata.IEntityType * string * bool * bool -&gt; string" Usage="cSharpEntityTypeGenerator.WriteCode (entityType, namespace, useDataAnnotations, useNullableReferenceTypes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator.WriteCode(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="namespace" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="useDataAnnotations" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="useNullableReferenceTypes" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="namespace">To be added.</param>
        <param name="useDataAnnotations">To be added.</param>
        <param name="useNullableReferenceTypes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
