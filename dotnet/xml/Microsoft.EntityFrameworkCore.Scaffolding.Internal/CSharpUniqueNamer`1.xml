<Type Name="CSharpUniqueNamer&lt;T&gt;" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class CSharpUniqueNamer&lt;T&gt; : Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpNamer&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CSharpUniqueNamer`1&lt;T&gt; extends Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpNamer`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer`1" />
  <TypeSignature Language="VB.NET" Value="Public Class CSharpUniqueNamer(Of T)&#xA;Inherits CSharpNamer(Of T)" />
  <TypeSignature Language="F#" Value="type CSharpUniqueNamer&lt;'T&gt; = class&#xA;    inherit CSharpNamer&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Design</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpNamer&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpUniqueNamer (Func&lt;T,string&gt; nameGetter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!T, string&gt; nameGetter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer`1.#ctor(System.Func{`0,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameGetter As Func(Of T, String))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt; : Func&lt;'T, string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt;" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt; nameGetter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameGetter" Type="System.Func&lt;T,System.String&gt;" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="nameGetter">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpUniqueNamer (Func&lt;T,string&gt; nameGetter, System.Collections.Generic.IEnumerable&lt;string&gt; usedNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!T, string&gt; nameGetter, class System.Collections.Generic.IEnumerable`1&lt;string&gt; usedNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer`1.#ctor(System.Func{`0,System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameGetter As Func(Of T, String), usedNames As IEnumerable(Of String))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt; : Func&lt;'T, string&gt; * seq&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt;" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt; (nameGetter, usedNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameGetter" Type="System.Func&lt;T,System.String&gt;" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="usedNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="nameGetter">To be added.</param>
        <param name="usedNames">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpUniqueNamer (Func&lt;T,string&gt; nameGetter, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, Func&lt;string,string&gt; singularizePluralizer);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!T, string&gt; nameGetter, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, class System.Func`2&lt;string, string&gt; singularizePluralizer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer`1.#ctor(System.Func{`0,System.String},Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,System.Func{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameGetter As Func(Of T, String), cSharpUtilities As ICSharpUtilities, singularizePluralizer As Func(Of String, String))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt; : Func&lt;'T, string&gt; * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities * Func&lt;string, string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt;" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt; (nameGetter, cSharpUtilities, singularizePluralizer)" />
      <MemberSignature Language="C#" Value="public CSharpUniqueNamer (Func&lt;T,string&gt; nameGetter, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, Func&lt;string,string&gt;? singularizePluralizer);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameGetter" Type="System.Func&lt;T,System.String&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cSharpUtilities" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="singularizePluralizer" Type="System.Func&lt;System.String,System.String&gt;" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="nameGetter">To be added.</param>
        <param name="cSharpUtilities">To be added.</param>
        <param name="singularizePluralizer">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpUniqueNamer (Func&lt;T,string&gt; nameGetter, System.Collections.Generic.IEnumerable&lt;string&gt; usedNames, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, Func&lt;string,string&gt; singularizePluralizer);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!T, string&gt; nameGetter, class System.Collections.Generic.IEnumerable`1&lt;string&gt; usedNames, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, class System.Func`2&lt;string, string&gt; singularizePluralizer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer`1.#ctor(System.Func{`0,System.String},System.Collections.Generic.IEnumerable{System.String},Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities,System.Func{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameGetter As Func(Of T, String), usedNames As IEnumerable(Of String), cSharpUtilities As ICSharpUtilities, singularizePluralizer As Func(Of String, String))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt; : Func&lt;'T, string&gt; * seq&lt;string&gt; * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities * Func&lt;string, string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt;" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer&lt;'T&gt; (nameGetter, usedNames, cSharpUtilities, singularizePluralizer)" />
      <MemberSignature Language="C#" Value="public CSharpUniqueNamer (Func&lt;T,string&gt; nameGetter, System.Collections.Generic.IEnumerable&lt;string&gt;? usedNames, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities, Func&lt;string,string&gt;? singularizePluralizer);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameGetter" Type="System.Func&lt;T,System.String&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="usedNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cSharpUtilities" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="singularizePluralizer" Type="System.Func&lt;System.String,System.String&gt;" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="nameGetter">To be added.</param>
        <param name="usedNames">To be added.</param>
        <param name="cSharpUtilities">To be added.</param>
        <param name="singularizePluralizer">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUniqueNamer`1.GetName(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (item As T) As String" />
      <MemberSignature Language="F#" Value="override this.GetName : 'T -&gt; string" Usage="cSharpUniqueNamer.GetName item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
