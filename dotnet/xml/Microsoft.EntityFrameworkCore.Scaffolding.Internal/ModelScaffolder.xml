<Type Name="ModelScaffolder" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ModelScaffolder">
  <TypeSignature Language="C#" Value="public class ModelScaffolder : Microsoft.EntityFrameworkCore.Scaffolding.Internal.IModelScaffolder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ModelScaffolder extends System.Object implements class Microsoft.EntityFrameworkCore.Scaffolding.Internal.IModelScaffolder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ModelScaffolder" />
  <TypeSignature Language="VB.NET" Value="Public Class ModelScaffolder&#xA;Implements IModelScaffolder" />
  <TypeSignature Language="F#" Value="type ModelScaffolder = class&#xA;    interface IModelScaffolder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Scaffolding.Internal.IModelScaffolder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ModelScaffolder (Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory scaffoldingModelFactory, Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator scaffoldingCodeGenerator, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory scaffoldingModelFactory, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator scaffoldingCodeGenerator, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities cSharpUtilities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ModelScaffolder.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory,Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scaffoldingModelFactory As IScaffoldingModelFactory, scaffoldingCodeGenerator As IScaffoldingCodeGenerator, cSharpUtilities As ICSharpUtilities)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.ModelScaffolder : Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory * Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.ModelScaffolder" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.ModelScaffolder (scaffoldingModelFactory, scaffoldingCodeGenerator, cSharpUtilities)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scaffoldingModelFactory" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingModelFactory" />
        <Parameter Name="scaffoldingCodeGenerator" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IScaffoldingCodeGenerator" />
        <Parameter Name="cSharpUtilities" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpUtilities" />
      </Parameters>
      <Docs>
        <param name="scaffoldingModelFactory">To be added.</param>
        <param name="scaffoldingCodeGenerator">To be added.</param>
        <param name="cSharpUtilities">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles Generate (string connectionString, System.Collections.Generic.IEnumerable&lt;string&gt; tables, System.Collections.Generic.IEnumerable&lt;string&gt; schemas, string projectPath, string outputPath, string rootNamespace, string contextName, bool useDataAnnotations, bool overwriteFiles, bool useDatabaseNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles Generate(string connectionString, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tables, class System.Collections.Generic.IEnumerable`1&lt;string&gt; schemas, string projectPath, string outputPath, string rootNamespace, string contextName, bool useDataAnnotations, bool overwriteFiles, bool useDatabaseNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ModelScaffolder.Generate(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Generate (connectionString As String, tables As IEnumerable(Of String), schemas As IEnumerable(Of String), projectPath As String, outputPath As String, rootNamespace As String, contextName As String, useDataAnnotations As Boolean, overwriteFiles As Boolean, useDatabaseNames As Boolean) As ReverseEngineerFiles" />
      <MemberSignature Language="F#" Value="abstract member Generate : string * seq&lt;string&gt; * seq&lt;string&gt; * string * string * string * string * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles&#xA;override this.Generate : string * seq&lt;string&gt; * seq&lt;string&gt; * string * string * string * string * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles" Usage="modelScaffolder.Generate (connectionString, tables, schemas, projectPath, outputPath, rootNamespace, contextName, useDataAnnotations, overwriteFiles, useDatabaseNames)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IModelScaffolder.Generate(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="tables" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="schemas" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="projectPath" Type="System.String" />
        <Parameter Name="outputPath" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="contextName" Type="System.String" />
        <Parameter Name="useDataAnnotations" Type="System.Boolean" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" />
        <Parameter Name="useDatabaseNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="tables">To be added.</param>
        <param name="schemas">To be added.</param>
        <param name="projectPath">To be added.</param>
        <param name="outputPath">To be added.</param>
        <param name="rootNamespace">To be added.</param>
        <param name="contextName">To be added.</param>
        <param name="useDataAnnotations">To be added.</param>
        <param name="overwriteFiles">To be added.</param>
        <param name="useDatabaseNames">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
