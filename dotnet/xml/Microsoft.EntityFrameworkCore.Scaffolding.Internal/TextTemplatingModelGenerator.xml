<Type Name="TextTemplatingModelGenerator" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator">
  <TypeSignature Language="C#" Value="public class TextTemplatingModelGenerator : Microsoft.EntityFrameworkCore.Scaffolding.TemplatedModelGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextTemplatingModelGenerator extends Microsoft.EntityFrameworkCore.Scaffolding.TemplatedModelGenerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextTemplatingModelGenerator&#xA;Inherits TemplatedModelGenerator" />
  <TypeSignature Language="F#" Value="type TextTemplatingModelGenerator = class&#xA;    inherit TemplatedModelGenerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Scaffolding.TemplatedModelGenerator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextTemplatingModelGenerator (Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGeneratorDependencies dependencies, Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGeneratorDependencies dependencies, class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGeneratorDependencies,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ModelCodeGeneratorDependencies, reporter As IOperationReporter, serviceProvider As IServiceProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator : Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGeneratorDependencies * Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter * IServiceProvider -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator (dependencies, reporter, serviceProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGeneratorDependencies" />
        <Parameter Name="reporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="reporter">To be added.</param>
        <param name="serviceProvider">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Engine">
      <MemberSignature Language="C#" Value="protected virtual Mono.TextTemplating.TemplatingEngine Engine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.TextTemplating.TemplatingEngine Engine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator.Engine" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Engine As TemplatingEngine" />
      <MemberSignature Language="F#" Value="member this.Engine : Mono.TextTemplating.TemplatingEngine" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator.Engine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.TextTemplating.TemplatingEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateModel">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedModel GenerateModel (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedModel GenerateModel(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator.GenerateModel(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GenerateModel (model As IModel, options As ModelCodeGenerationOptions) As ScaffoldedModel" />
      <MemberSignature Language="F#" Value="override this.GenerateModel : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions -&gt; Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedModel" Usage="textTemplatingModelGenerator.GenerateModel (model, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.ScaffoldedModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Scaffolding.ModelCodeGenerationOptions" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTemplates">
      <MemberSignature Language="C#" Value="public override bool HasTemplates (string projectDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasTemplates(string projectDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.TextTemplatingModelGenerator.HasTemplates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasTemplates (projectDir As String) As Boolean" />
      <MemberSignature Language="F#" Value="override this.HasTemplates : string -&gt; bool" Usage="textTemplatingModelGenerator.HasTemplates projectDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectDir">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
