<Type Name="CSharpScaffoldingGenerator" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator">
  <TypeSignature Language="C#" Value="public class CSharpScaffoldingGenerator : Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingCodeGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CSharpScaffoldingGenerator extends Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingCodeGenerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class CSharpScaffoldingGenerator&#xA;Inherits ScaffoldingCodeGenerator" />
  <TypeSignature Language="F#" Value="type CSharpScaffoldingGenerator = class&#xA;    inherit ScaffoldingCodeGenerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingCodeGenerator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpScaffoldingGenerator (Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService fileService, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpDbContextGenerator cSharpDbContextGenerator, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator cSharpEntityTypeGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService fileService, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpDbContextGenerator cSharpDbContextGenerator, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator cSharpEntityTypeGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpDbContextGenerator,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileService As IFileService, cSharpDbContextGenerator As ICSharpDbContextGenerator, cSharpEntityTypeGenerator As ICSharpEntityTypeGenerator)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator : Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpDbContextGenerator * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator (fileService, cSharpDbContextGenerator, cSharpEntityTypeGenerator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileService" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.IFileService" />
        <Parameter Name="cSharpDbContextGenerator" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpDbContextGenerator" />
        <Parameter Name="cSharpEntityTypeGenerator" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator" />
      </Parameters>
      <Docs>
        <param name="fileService">To be added.</param>
        <param name="cSharpDbContextGenerator">To be added.</param>
        <param name="cSharpEntityTypeGenerator">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CSharpDbContextGenerator">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpDbContextGenerator CSharpDbContextGenerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpDbContextGenerator CSharpDbContextGenerator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator.CSharpDbContextGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CSharpDbContextGenerator As ICSharpDbContextGenerator" />
      <MemberSignature Language="F#" Value="member this.CSharpDbContextGenerator : Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpDbContextGenerator" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator.CSharpDbContextGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpDbContextGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CSharpEntityTypeGenerator">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator CSharpEntityTypeGenerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator CSharpEntityTypeGenerator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator.CSharpEntityTypeGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CSharpEntityTypeGenerator As ICSharpEntityTypeGenerator" />
      <MemberSignature Language="F#" Value="member this.CSharpEntityTypeGenerator : Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator.CSharpEntityTypeGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Internal.ICSharpEntityTypeGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public override string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FileExtension As String" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCode">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles WriteCode (Microsoft.EntityFrameworkCore.Metadata.IModel model, string outputPath, string namespace, string contextName, string connectionString, bool useDataAnnotations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles WriteCode(class Microsoft.EntityFrameworkCore.Metadata.IModel model, string outputPath, string namespace, string contextName, string connectionString, bool useDataAnnotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpScaffoldingGenerator.WriteCode(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteCode (model As IModel, outputPath As String, namespace As String, contextName As String, connectionString As String, useDataAnnotations As Boolean) As ReverseEngineerFiles" />
      <MemberSignature Language="F#" Value="override this.WriteCode : Microsoft.EntityFrameworkCore.Metadata.IModel * string * string * string * string * bool -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles" Usage="cSharpScaffoldingGenerator.WriteCode (model, outputPath, namespace, contextName, connectionString, useDataAnnotations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Internal.ReverseEngineerFiles</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="outputPath" Type="System.String" />
        <Parameter Name="namespace" Type="System.String" />
        <Parameter Name="contextName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="useDataAnnotations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="outputPath">To be added.</param>
        <param name="namespace">To be added.</param>
        <param name="contextName">To be added.</param>
        <param name="connectionString">To be added.</param>
        <param name="useDataAnnotations">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
