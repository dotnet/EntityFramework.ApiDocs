<Type Name="InMemoryConventionSetBuilder" FullName="Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder">
  <TypeSignature Language="C#" Value="public class InMemoryConventionSetBuilder : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InMemoryConventionSetBuilder extends Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class InMemoryConventionSetBuilder&#xA;Inherits ProviderConventionSetBuilder" />
  <TypeSignature Language="F#" Value="type InMemoryConventionSetBuilder = class&#xA;    inherit ProviderConventionSetBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                A builder for building conventions for th in-memory provider.
            </summary>
    <remarks>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> and multiple registrations
                    are allowed. This means that each <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own
                    set of instances of this service.
                    The implementations may depend on other services registered with any lifetime.
                    The implementations do not need to be thread-safe.
                </para>
      <para>
                    See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see>, and
                    <see href="https://aka.ms/efcore-docs-in-memory">The EF Core in-memory database provider</see> for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryConventionSetBuilder (Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies -&gt; Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder" Usage="new Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">The core dependencies for this service.</param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder.Build" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Build () As ConventionSet" />
      <MemberSignature Language="F#" Value="static member Build : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet" Usage="Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Call this method to build a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet" /> for the in-memory provider when using
                the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> outside of <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)" />.
            </summary>
        <returns>The convention set.</returns>
        <remarks>
                Note that it is unusual to use this method.
                Consider using <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> in the normal way instead.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConventionSet">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet CreateConventionSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet CreateConventionSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder.CreateConventionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateConventionSet () As ConventionSet" />
      <MemberSignature Language="F#" Value="override this.CreateConventionSet : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet" Usage="inMemoryConventionSetBuilder.CreateConventionSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CreateModelBuilder">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder CreateModelBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder CreateModelBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder.CreateModelBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateModelBuilder () As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member CreateModelBuilder : unit -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.InMemory.Metadata.Conventions.InMemoryConventionSetBuilder.CreateModelBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Call this method to build a <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> for SQLite outside of <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)" />.
            </summary>
        <returns>The convention set.</returns>
        <remarks>
                Note that it is unusual to use this method. Consider using <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> in the normal way instead.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
