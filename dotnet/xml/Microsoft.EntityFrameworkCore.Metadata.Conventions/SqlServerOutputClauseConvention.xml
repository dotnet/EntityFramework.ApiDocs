<Type Name="SqlServerOutputClauseConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention">
  <TypeSignature Language="C#" Value="public class SqlServerOutputClauseConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.ITriggerAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.ITriggerRemovedConvention" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerOutputClauseConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.ITriggerAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.ITriggerRemovedConvention" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerOutputClauseConvention&#xA;Implements ITriggerAddedConvention, ITriggerRemovedConvention" />
  <TypeSignature Language="F#" Value="type SqlServerOutputClauseConvention = class&#xA;    interface ITriggerAddedConvention&#xA;    interface IConvention&#xA;    interface ITriggerRemovedConvention" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.ITriggerAddedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.ITriggerRemovedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A convention that configures tables with triggers to not use the OUTPUT clause when saving changes.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerOutputClauseConvention (Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies, Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies relationalDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies relationalDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies,Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ProviderConventionSetBuilderDependencies, relationalDependencies As RelationalConventionSetBuilderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies * Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention (dependencies, relationalDependencies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" />
        <Parameter Name="relationalDependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this convention.</param>
        <param name="relationalDependencies"> Parameter object containing relational dependencies for this convention.</param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerDbFunctionConvention" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As ProviderConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTriggerAdded">
      <MemberSignature Language="C#" Value="public virtual void ProcessTriggerAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder triggerBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessTriggerAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder triggerBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention.ProcessTriggerAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessTriggerAdded (triggerBuilder As IConventionTriggerBuilder, context As IConventionContext(Of IConventionTriggerBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessTriggerAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder&gt; -&gt; unit&#xA;override this.ProcessTriggerAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder&gt; -&gt; unit" Usage="sqlServerOutputClauseConvention.ProcessTriggerAdded (triggerBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ITriggerAddedConvention.ProcessTriggerAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="triggerBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionTriggerBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="triggerBuilder">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessTriggerRemoved">
      <MemberSignature Language="C#" Value="public virtual void ProcessTriggerRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessTriggerRemoved(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention.ProcessTriggerRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessTriggerRemoved (entityTypeBuilder As IConventionEntityTypeBuilder, trigger As IConventionTrigger, context As IConventionContext(Of IConventionTrigger))" />
      <MemberSignature Language="F#" Value="abstract member ProcessTriggerRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger&gt; -&gt; unit&#xA;override this.ProcessTriggerRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger&gt; -&gt; unit" Usage="sqlServerOutputClauseConvention.ProcessTriggerRemoved (entityTypeBuilder, trigger, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ITriggerRemovedConvention.ProcessTriggerRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="trigger">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="RelationalDependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies RelationalDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies RelationalDependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention.RelationalDependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property RelationalDependencies As RelationalConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.RelationalDependencies : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.SqlServerOutputClauseConvention.RelationalDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Relational provider-specific dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
