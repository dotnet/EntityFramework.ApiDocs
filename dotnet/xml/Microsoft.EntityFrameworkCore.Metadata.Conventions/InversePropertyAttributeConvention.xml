<Type Name="InversePropertyAttributeConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention">
  <TypeSignature Language="C#" Value="public class InversePropertyAttributeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.NavigationAttributeConventionBase&lt;System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt;, Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizedConvention" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InversePropertyAttributeConvention extends Microsoft.EntityFrameworkCore.Metadata.Conventions.NavigationAttributeConventionBase`1&lt;class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt; implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizedConvention" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class InversePropertyAttributeConvention&#xA;Inherits NavigationAttributeConventionBase(Of InversePropertyAttribute)&#xA;Implements IModelFinalizedConvention" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="F#" Value="type InversePropertyAttributeConvention = class&#xA;    inherit NavigationAttributeConventionBase&lt;InversePropertyAttribute&gt;&#xA;    interface IModelFinalizedConvention&#xA;    interface IConvention" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="C#" Value="public class InversePropertyAttributeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.NavigationAttributeConventionBase&lt;System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt;, Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizingConvention" FrameworkAlternate="efcore-5.0;efcore-6.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InversePropertyAttributeConvention extends Microsoft.EntityFrameworkCore.Metadata.Conventions.NavigationAttributeConventionBase`1&lt;class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt; implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizingConvention" FrameworkAlternate="efcore-5.0;efcore-6.0" />
  <TypeSignature Language="VB.NET" Value="Public Class InversePropertyAttributeConvention&#xA;Inherits NavigationAttributeConventionBase(Of InversePropertyAttribute)&#xA;Implements IModelFinalizingConvention" FrameworkAlternate="efcore-5.0;efcore-6.0" />
  <TypeSignature Language="F#" Value="type InversePropertyAttributeConvention = class&#xA;    inherit NavigationAttributeConventionBase&lt;InversePropertyAttribute&gt;&#xA;    interface IModelFinalizingConvention&#xA;    interface IConvention" FrameworkAlternate="efcore-5.0;efcore-6.0" />
  <TypeSignature Language="C#" Value="public class InversePropertyAttributeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.NavigationAttributeConventionBase&lt;System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt;, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeRemovedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizingConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InversePropertyAttributeConvention extends Microsoft.EntityFrameworkCore.Metadata.Conventions.NavigationAttributeConventionBase`1&lt;class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt; implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeRemovedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizingConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class InversePropertyAttributeConvention&#xA;Inherits NavigationAttributeConventionBase(Of InversePropertyAttribute)&#xA;Implements IEntityTypeAddedConvention, IEntityTypeBaseTypeChangedConvention, IEntityTypeMemberIgnoredConvention, IEntityTypeRemovedConvention, IModelFinalizingConvention, INavigationAddedConvention" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type InversePropertyAttributeConvention = class&#xA;    inherit NavigationAttributeConventionBase&lt;InversePropertyAttribute&gt;&#xA;    interface IEntityTypeAddedConvention&#xA;    interface IConvention&#xA;    interface IEntityTypeRemovedConvention&#xA;    interface IEntityTypeBaseTypeChangedConvention&#xA;    interface IEntityTypeMemberIgnoredConvention&#xA;    interface INavigationAddedConvention&#xA;    interface IModelFinalizingConvention" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Conventions.NavigationAttributeConventionBase&lt;System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TAttribute">System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-3.0;efcore-3.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizingConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeRemovedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A convention that configures the inverse navigation property based on the <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
                specified on the other navigation property.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InversePropertyAttributeConvention (Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this convention.</param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbiguous">
      <MemberSignature Language="C#" Value="public static bool IsAmbiguous (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, System.Reflection.MemberInfo navigation, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType targetEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAmbiguous(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, class System.Reflection.MemberInfo navigation, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType targetEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.IsAmbiguous(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAmbiguous (entityType As IConventionEntityType, navigation As MemberInfo, targetEntityType As IConventionEntityType) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAmbiguous : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.IsAmbiguous (entityType, navigation, targetEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="navigation" Type="System.Reflection.MemberInfo" />
        <Parameter Name="targetEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type.</param>
        <param name="navigation">The navigation.</param>
        <param name="targetEntityType">Target entity type.</param>
        <summary>
                Returns a value indication whether the given navigation has ambiguous inverse navigations with
                <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />.
            </summary>
        <returns>
          <see langword="true" /> if the given navigation has ambiguous inverse navigations with <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeAdded">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, System.Reflection.MemberInfo navigationMemberInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class System.Reflection.MemberInfo navigationMemberInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Reflection.MemberInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEntityTypeAdded (entityTypeBuilder As IConventionEntityTypeBuilder, navigationMemberInfo As MemberInfo, targetClrType As Type, attribute As InversePropertyAttribute, context As IConventionContext(Of IConventionEntityTypeBuilder))" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * System.Reflection.MemberInfo * Type * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeAdded (entityTypeBuilder, navigationMemberInfo, targetClrType, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="targetClrType" Type="System.Type" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type.</param>
        <param name="navigationMemberInfo">The navigation member info.</param>
        <param name="targetClrType">The CLR type of the target entity type</param>
        <param name="attribute">The attribute.</param>
        <param name="context">Additional information associated with convention execution.</param>
        <summary>
                Called for every navigation property that has an attribute after an entity type is added to the model.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeBaseTypeChanged">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeBaseTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType? newBaseType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType? oldBaseType, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeBaseTypeChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType newBaseType, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType oldBaseType, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeBaseTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEntityTypeBaseTypeChanged (entityTypeBuilder As IConventionEntityTypeBuilder, newBaseType As IConventionEntityType, oldBaseType As IConventionEntityType, context As IConventionContext(Of IConventionEntityType))" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeBaseTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeBaseTypeChanged (entityTypeBuilder, newBaseType, oldBaseType, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-7.0;efcore-8.0">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention.ProcessEntityTypeBaseTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="newBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="oldBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt;" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="newBaseType">To be added.</param>
        <param name="oldBaseType">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeBaseTypeChanged">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeBaseTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType newBaseType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType oldBaseType, System.Reflection.MemberInfo navigationMemberInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeBaseTypeChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType newBaseType, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType oldBaseType, class System.Reflection.MemberInfo navigationMemberInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeBaseTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Reflection.MemberInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEntityTypeBaseTypeChanged (entityTypeBuilder As IConventionEntityTypeBuilder, newBaseType As IConventionEntityType, oldBaseType As IConventionEntityType, navigationMemberInfo As MemberInfo, targetClrType As Type, attribute As InversePropertyAttribute, context As IConventionContext(Of IConventionEntityType))" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeBaseTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * System.Reflection.MemberInfo * Type * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeBaseTypeChanged (entityTypeBuilder, newBaseType, oldBaseType, navigationMemberInfo, targetClrType, attribute, context)" />
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeBaseTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType? newBaseType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType? oldBaseType, System.Reflection.MemberInfo navigationMemberInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="newBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="oldBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="targetClrType" Type="System.Type" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder"> The builder for the entity type. </param>
        <param name="newBaseType"> The new base type. </param>
        <param name="oldBaseType"> The old base type. </param>
        <param name="navigationMemberInfo"> The navigation member info. </param>
        <param name="targetClrType"> The CLR type of the target entity type. </param>
        <param name="attribute"> The attribute. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called for every navigation property that has an attribute after the base type for an entity type is changed.
            </summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeIgnored">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Type type, System.Reflection.MemberInfo navigationMemberInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, class System.Type type, class System.Reflection.MemberInfo navigationMemberInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Type,System.Reflection.MemberInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEntityTypeIgnored (modelBuilder As IConventionModelBuilder, type As Type, navigationMemberInfo As MemberInfo, targetClrType As Type, attribute As InversePropertyAttribute, context As IConventionContext(Of String))" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Type * System.Reflection.MemberInfo * Type * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeIgnored (modelBuilder, type, navigationMemberInfo, targetClrType, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="targetClrType" Type="System.Type" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The builder for the model. </param>
        <param name="type"> The ignored entity type. </param>
        <param name="navigationMemberInfo"> The navigation member info. </param>
        <param name="targetClrType"> The CLR type of the target entity type. </param>
        <param name="attribute"> The attribute. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called for every navigation property that has an attribute after an entity type is ignored.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeMemberIgnored">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeMemberIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeMemberIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEntityTypeMemberIgnored (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, context As IConventionContext(Of String))" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeMemberIgnored (entityTypeBuilder, name, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-7.0;efcore-8.0">M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention.ProcessEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeMemberIgnored">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeMemberIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, System.Reflection.MemberInfo navigationMemberInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeMemberIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class System.Reflection.MemberInfo navigationMemberInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Reflection.MemberInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEntityTypeMemberIgnored (entityTypeBuilder As IConventionEntityTypeBuilder, navigationMemberInfo As MemberInfo, targetClrType As Type, attribute As InversePropertyAttribute, context As IConventionContext(Of String))" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * System.Reflection.MemberInfo * Type * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeMemberIgnored (entityTypeBuilder, navigationMemberInfo, targetClrType, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="targetClrType" Type="System.Type" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder"> The builder for the entity type. </param>
        <param name="navigationMemberInfo"> The navigation member info. </param>
        <param name="targetClrType"> The CLR type of the target entity type. </param>
        <param name="attribute"> The attribute. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after a navigation property that has an attribute is ignored.
            </summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeRemoved">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, System.Reflection.MemberInfo navigationMemberInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeRemoved(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, class System.Reflection.MemberInfo navigationMemberInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Reflection.MemberInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEntityTypeRemoved (modelBuilder As IConventionModelBuilder, entityType As IConventionEntityType, navigationMemberInfo As MemberInfo, targetClrType As Type, attribute As InversePropertyAttribute, context As IConventionContext(Of IConventionEntityType))" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * System.Reflection.MemberInfo * Type * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeRemoved (modelBuilder, entityType, navigationMemberInfo, targetClrType, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="targetClrType" Type="System.Type" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" Index="4" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt;" Index="5" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="navigationMemberInfo">To be added.</param>
        <param name="targetClrType">To be added.</param>
        <param name="attribute">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeRemoved">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Type type, System.Reflection.MemberInfo navigationMemberInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeRemoved(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, class System.Type type, class System.Reflection.MemberInfo navigationMemberInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Type,System.Reflection.MemberInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEntityTypeRemoved (modelBuilder As IConventionModelBuilder, type As Type, navigationMemberInfo As MemberInfo, targetClrType As Type, attribute As InversePropertyAttribute, context As IConventionContext(Of IConventionEntityType))" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Type * System.Reflection.MemberInfo * Type * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeRemoved (modelBuilder, type, navigationMemberInfo, targetClrType, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="targetClrType" Type="System.Type" Index="3" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" Index="4" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt;" Index="5" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="type">To be added.</param>
        <param name="navigationMemberInfo">To be added.</param>
        <param name="targetClrType">To be added.</param>
        <param name="attribute">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessModelFinalized">
      <MemberSignature Language="C#" Value="public virtual void ProcessModelFinalized (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessModelFinalized(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessModelFinalized(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessModelFinalized (modelBuilder As IConventionModelBuilder, context As IConventionContext(Of IConventionModelBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessModelFinalized : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; -&gt; unit&#xA;override this.ProcessModelFinalized : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessModelFinalized (modelBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizedConvention.ProcessModelFinalized(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The builder for the model. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after a model is finalized.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessModelFinalizing">
      <MemberSignature Language="C#" Value="public virtual void ProcessModelFinalizing (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessModelFinalizing(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessModelFinalizing(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessModelFinalizing (modelBuilder As IConventionModelBuilder, context As IConventionContext(Of IConventionModelBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessModelFinalizing : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; -&gt; unit&#xA;override this.ProcessModelFinalizing : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessModelFinalizing (modelBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizingConvention.ProcessModelFinalizing(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt;" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessNavigationAdded">
      <MemberSignature Language="C#" Value="public override void ProcessNavigationAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder navigationBuilder, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessNavigationAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder navigationBuilder, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessNavigationAdded (navigationBuilder As IConventionNavigationBuilder, attribute As InversePropertyAttribute, context As IConventionContext(Of IConventionNavigationBuilder))" />
      <MemberSignature Language="F#" Value="override this.ProcessNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessNavigationAdded (navigationBuilder, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder&gt;" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigationBuilder">To be added.</param>
        <param name="attribute">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessNavigationAdded">
      <MemberSignature Language="C#" Value="public override void ProcessNavigationAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessNavigationAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessNavigationAdded (relationshipBuilder As IConventionRelationshipBuilder, navigation As IConventionNavigation, attribute As InversePropertyAttribute, context As IConventionContext(Of IConventionNavigation))" />
      <MemberSignature Language="F#" Value="override this.ProcessNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessNavigationAdded (relationshipBuilder, navigation, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt;" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder"> The builder for the relationship. </param>
        <param name="navigation"> The navigation. </param>
        <param name="attribute"> The attribute. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after a navigation property that has an attribute is added to an entity type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTargetEntityTypeBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? TryGetTargetEntityTypeBuilder (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Type targetClrType, System.Reflection.MemberInfo navigationMemberInfo, bool shouldCreate = true);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder TryGetTargetEntityTypeBuilder(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class System.Type targetClrType, class System.Reflection.MemberInfo navigationMemberInfo, bool shouldCreate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.TryGetTargetEntityTypeBuilder(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Type,System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryGetTargetEntityTypeBuilder (entityTypeBuilder As IConventionEntityTypeBuilder, targetClrType As Type, navigationMemberInfo As MemberInfo, Optional shouldCreate As Boolean = true) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member TryGetTargetEntityTypeBuilder : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Type * System.Reflection.MemberInfo * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&#xA;override this.TryGetTargetEntityTypeBuilder : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Type * System.Reflection.MemberInfo * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="inversePropertyAttributeConvention.TryGetTargetEntityTypeBuilder (entityTypeBuilder, targetClrType, navigationMemberInfo, shouldCreate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="targetClrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="shouldCreate" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the referencing entity type.</param>
        <param name="targetClrType">The CLR type of the target entity type.</param>
        <param name="navigationMemberInfo">The navigation member.</param>
        <param name="shouldCreate">Whether an entity type should be created if one doesn't currently exist.</param>
        <summary>
                Finds or tries to create an entity type target for the given navigation member.
            </summary>
        <returns>The builder for the target entity type or <see langword="null" /> if it can't be created.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
