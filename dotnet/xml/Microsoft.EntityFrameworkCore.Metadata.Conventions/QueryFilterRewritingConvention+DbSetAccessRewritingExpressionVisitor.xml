<Type Name="QueryFilterRewritingConvention+DbSetAccessRewritingExpressionVisitor" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.QueryFilterRewritingConvention+DbSetAccessRewritingExpressionVisitor">
  <TypeSignature Language="C#" Value="protected class QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor : System.Linq.Expressions.ExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit QueryFilterRewritingConvention/DbSetAccessRewritingExpressionVisitor extends System.Linq.Expressions.ExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Protected Class QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor&#xA;Inherits ExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.ExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                A visitor that rewrites DbSet accesses encountered in an expression to <see cref="T:Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbSetAccessRewritingExpressionVisitor (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contextType As Type)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor : Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor contextType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType">The clr type of derived DbContext.</param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewrite">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Rewrite (Microsoft.EntityFrameworkCore.Metadata.IModel model, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression Rewrite(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor.Rewrite(Microsoft.EntityFrameworkCore.Metadata.IModel,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rewrite (model As IModel, expression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="member this.Rewrite : Microsoft.EntityFrameworkCore.Metadata.IModel * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="dbSetAccessRewritingExpressionVisitor.Rewrite (model, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="model"> The model to look for entity types. </param>
        <param name="expression"> The query expression to rewrite. </param>
        <summary>
                Rewrites DbSet accesses encountered in the expression to <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryRootExpression" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewrite">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Rewrite (Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression Rewrite(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor.Rewrite(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rewrite (model As IReadOnlyModel, expression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="member this.Rewrite : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="dbSetAccessRewritingExpressionVisitor.Rewrite (model, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to look for entity types.</param>
        <param name="expression">The query expression to rewrite.</param>
        <summary>
                Rewrites DbSet accesses encountered in the expression to <see cref="T:Microsoft.EntityFrameworkCore.Query.EntityQueryRootExpression" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMember">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMember (System.Linq.Expressions.MemberExpression memberExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMember(class System.Linq.Expressions.MemberExpression memberExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMember (memberExpression As MemberExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitMember : System.Linq.Expressions.MemberExpression -&gt; System.Linq.Expressions.Expression" Usage="dbSetAccessRewritingExpressionVisitor.VisitMember memberExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberExpression" Type="System.Linq.Expressions.MemberExpression" />
      </Parameters>
      <Docs>
        <param name="memberExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="VisitMethodCall">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMethodCall (System.Linq.Expressions.MethodCallExpression methodCallExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMethodCall(class System.Linq.Expressions.MethodCallExpression methodCallExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.QueryFilterRewritingConvention.DbSetAccessRewritingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMethodCall (methodCallExpression As MethodCallExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitMethodCall : System.Linq.Expressions.MethodCallExpression -&gt; System.Linq.Expressions.Expression" Usage="dbSetAccessRewritingExpressionVisitor.VisitMethodCall methodCallExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodCallExpression" Type="System.Linq.Expressions.MethodCallExpression" />
      </Parameters>
      <Docs>
        <param name="methodCallExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
