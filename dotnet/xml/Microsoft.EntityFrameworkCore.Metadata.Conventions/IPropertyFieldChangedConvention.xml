<Type Name="IPropertyFieldChangedConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.IPropertyFieldChangedConvention">
  <TypeSignature Language="C#" Value="public interface IPropertyFieldChangedConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPropertyFieldChangedConvention implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.IPropertyFieldChangedConvention" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPropertyFieldChangedConvention&#xA;Implements IConvention" />
  <TypeSignature Language="F#" Value="type IPropertyFieldChangedConvention = interface&#xA;    interface IConvention" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IPropertyFieldChangedConvention implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents an operation that should be performed when the backing field for a property is changed.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ProcessPropertyFieldChanged">
      <MemberSignature Language="C#" Value="public void ProcessPropertyFieldChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder, System.Reflection.FieldInfo newFieldInfo, System.Reflection.FieldInfo oldFieldInfo, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Reflection.FieldInfo&gt; context);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessPropertyFieldChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder, class System.Reflection.FieldInfo newFieldInfo, class System.Reflection.FieldInfo oldFieldInfo, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class System.Reflection.FieldInfo&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IPropertyFieldChangedConvention.ProcessPropertyFieldChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.Reflection.FieldInfo,System.Reflection.FieldInfo,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.Reflection.FieldInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessPropertyFieldChanged (propertyBuilder As IConventionPropertyBuilder, newFieldInfo As FieldInfo, oldFieldInfo As FieldInfo, context As IConventionContext(Of FieldInfo))" />
      <MemberSignature Language="F#" Value="abstract member ProcessPropertyFieldChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder * System.Reflection.FieldInfo * System.Reflection.FieldInfo * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Reflection.FieldInfo&gt; -&gt; unit" Usage="iPropertyFieldChangedConvention.ProcessPropertyFieldChanged (propertyBuilder, newFieldInfo, oldFieldInfo, context)" />
      <MemberSignature Language="C#" Value="public void ProcessPropertyFieldChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder, System.Reflection.FieldInfo? newFieldInfo, System.Reflection.FieldInfo? oldFieldInfo, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Reflection.FieldInfo&gt; context);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder" />
        <Parameter Name="newFieldInfo" Type="System.Reflection.FieldInfo" />
        <Parameter Name="oldFieldInfo" Type="System.Reflection.FieldInfo" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Reflection.FieldInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">The builder for the property.</param>
        <param name="newFieldInfo">The new field.</param>
        <param name="oldFieldInfo">The old field.</param>
        <param name="context">Additional information associated with convention execution.</param>
        <summary>
                Called after the backing field for a property is changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
