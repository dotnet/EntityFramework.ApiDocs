<Type Name="CosmosManyToManyJoinEntityTypeConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.CosmosManyToManyJoinEntityTypeConvention">
  <TypeSignature Language="C#" Value="public class CosmosManyToManyJoinEntityTypeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAnnotationChangedConvention" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CosmosManyToManyJoinEntityTypeConvention extends Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAnnotationChangedConvention" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.CosmosManyToManyJoinEntityTypeConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class CosmosManyToManyJoinEntityTypeConvention&#xA;Inherits ManyToManyJoinEntityTypeConvention&#xA;Implements IEntityTypeAnnotationChangedConvention" />
  <TypeSignature Language="F#" Value="type CosmosManyToManyJoinEntityTypeConvention = class&#xA;    inherit ManyToManyJoinEntityTypeConvention&#xA;    interface IEntityTypeAnnotationChangedConvention&#xA;    interface IConvention" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAnnotationChangedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A convention that creates a join entity type for a many-to-many relationship
                and adds a partition key to it if the related types share one.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CosmosManyToManyJoinEntityTypeConvention (Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.CosmosManyToManyJoinEntityTypeConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.CosmosManyToManyJoinEntityTypeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.CosmosManyToManyJoinEntityTypeConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.CosmosManyToManyJoinEntityTypeConvention dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this convention.</param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.CosmosManyToManyJoinEntityTypeConvention" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJoinEntityType">
      <MemberSignature Language="C#" Value="protected override void CreateJoinEntityType (string joinEntityTypeName, Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation skipNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateJoinEntityType(string joinEntityTypeName, class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation skipNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.CosmosManyToManyJoinEntityTypeConvention.CreateJoinEntityType(System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateJoinEntityType (joinEntityTypeName As String, skipNavigation As IConventionSkipNavigation)" />
      <MemberSignature Language="F#" Value="override this.CreateJoinEntityType : string * Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation -&gt; unit" Usage="cosmosManyToManyJoinEntityTypeConvention.CreateJoinEntityType (joinEntityTypeName, skipNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinEntityTypeName" Type="System.String" />
        <Parameter Name="skipNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation" />
      </Parameters>
      <Docs>
        <param name="joinEntityTypeName">To be added.</param>
        <param name="skipNavigation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation? annotation, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation? oldAnnotation, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEntityTypeAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.CosmosManyToManyJoinEntityTypeConvention.ProcessEntityTypeAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessEntityTypeAnnotationChanged (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, annotation As IConventionAnnotation, oldAnnotation As IConventionAnnotation, context As IConventionContext(Of IConventionAnnotation))" />
      <MemberSignature Language="F#" Value="abstract member ProcessEntityTypeAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&gt; -&gt; unit&#xA;override this.ProcessEntityTypeAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&gt; -&gt; unit" Usage="cosmosManyToManyJoinEntityTypeConvention.ProcessEntityTypeAnnotationChanged (entityTypeBuilder, name, annotation, oldAnnotation, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAnnotationChangedConvention.ProcessEntityTypeAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type.</param>
        <param name="name">The annotation name.</param>
        <param name="annotation">The new annotation.</param>
        <param name="oldAnnotation">The old annotation.</param>
        <param name="context">Additional information associated with convention execution.</param>
        <summary>
                Called after an annotation is changed on an entity type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessSkipNavigationForeignKeyChanged">
      <MemberSignature Language="C#" Value="public override void ProcessSkipNavigationForeignKeyChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder skipNavigationBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey? foreignKey, Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey? oldForeignKey, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessSkipNavigationForeignKeyChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder skipNavigationBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey oldForeignKey, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.CosmosManyToManyJoinEntityTypeConvention.ProcessSkipNavigationForeignKeyChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey,Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessSkipNavigationForeignKeyChanged (skipNavigationBuilder As IConventionSkipNavigationBuilder, foreignKey As IConventionForeignKey, oldForeignKey As IConventionForeignKey, context As IConventionContext(Of IConventionForeignKey))" />
      <MemberSignature Language="F#" Value="override this.ProcessSkipNavigationForeignKeyChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; -&gt; unit" Usage="cosmosManyToManyJoinEntityTypeConvention.ProcessSkipNavigationForeignKeyChanged (skipNavigationBuilder, foreignKey, oldForeignKey, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipNavigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" />
        <Parameter Name="oldForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;" />
      </Parameters>
      <Docs>
        <param name="skipNavigationBuilder">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="oldForeignKey">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
