<Type Name="ElementTypeChangedConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention">
  <TypeSignature Language="C#" Value="public class ElementTypeChangedConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyPropertiesChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IPropertyElementTypeChangedConvention" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElementTypeChangedConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyPropertiesChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IPropertyElementTypeChangedConvention" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class ElementTypeChangedConvention&#xA;Implements IForeignKeyAddedConvention, IForeignKeyPropertiesChangedConvention, IPropertyElementTypeChangedConvention" />
  <TypeSignature Language="F#" Value="type ElementTypeChangedConvention = class&#xA;    interface IPropertyElementTypeChangedConvention&#xA;    interface IConvention&#xA;    interface IForeignKeyAddedConvention&#xA;    interface IForeignKeyPropertiesChangedConvention" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyAddedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyPropertiesChangedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IPropertyElementTypeChangedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A convention that reacts to changes made to element types of primitive collections.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ElementTypeChangedConvention (Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this convention.</param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As ProviderConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessForeignKeyAdded">
      <MemberSignature Language="C#" Value="public void ProcessForeignKeyAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder foreignKeyBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessForeignKeyAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder foreignKeyBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention.ProcessForeignKeyAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessForeignKeyAdded (foreignKeyBuilder As IConventionForeignKeyBuilder, context As IConventionContext(Of IConventionForeignKeyBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessForeignKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&gt; -&gt; unit&#xA;override this.ProcessForeignKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&gt; -&gt; unit" Usage="elementTypeChangedConvention.ProcessForeignKeyAdded (foreignKeyBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyAddedConvention.ProcessForeignKeyAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKeyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="foreignKeyBuilder">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessForeignKeyPropertiesChanged">
      <MemberSignature Language="C#" Value="public void ProcessForeignKeyPropertiesChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationshipBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; oldDependentProperties, Microsoft.EntityFrameworkCore.Metadata.IConventionKey oldPrincipalKey, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessForeignKeyPropertiesChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationshipBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; oldDependentProperties, class Microsoft.EntityFrameworkCore.Metadata.IConventionKey oldPrincipalKey, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention.ProcessForeignKeyPropertiesChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},Microsoft.EntityFrameworkCore.Metadata.IConventionKey,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessForeignKeyPropertiesChanged (relationshipBuilder As IConventionForeignKeyBuilder, oldDependentProperties As IReadOnlyList(Of IConventionProperty), oldPrincipalKey As IConventionKey, context As IConventionContext(Of IReadOnlyList(Of IConventionProperty)))" />
      <MemberSignature Language="F#" Value="abstract member ProcessForeignKeyPropertiesChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * Microsoft.EntityFrameworkCore.Metadata.IConventionKey * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;&gt; -&gt; unit&#xA;override this.ProcessForeignKeyPropertiesChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * Microsoft.EntityFrameworkCore.Metadata.IConventionKey * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;&gt; -&gt; unit" Usage="elementTypeChangedConvention.ProcessForeignKeyPropertiesChanged (relationshipBuilder, oldDependentProperties, oldPrincipalKey, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyPropertiesChangedConvention.ProcessForeignKeyPropertiesChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},Microsoft.EntityFrameworkCore.Metadata.IConventionKey,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" />
        <Parameter Name="oldDependentProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" />
        <Parameter Name="oldPrincipalKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionKey" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="oldDependentProperties">To be added.</param>
        <param name="oldPrincipalKey">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessPropertyElementTypeChanged">
      <MemberSignature Language="C#" Value="public void ProcessPropertyElementTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder, Microsoft.EntityFrameworkCore.Metadata.IElementType? newElementType, Microsoft.EntityFrameworkCore.Metadata.IElementType? oldElementType, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IElementType&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessPropertyElementTypeChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder, class Microsoft.EntityFrameworkCore.Metadata.IElementType newElementType, class Microsoft.EntityFrameworkCore.Metadata.IElementType oldElementType, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IElementType&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementTypeChangedConvention.ProcessPropertyElementTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,Microsoft.EntityFrameworkCore.Metadata.IElementType,Microsoft.EntityFrameworkCore.Metadata.IElementType,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IElementType})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessPropertyElementTypeChanged (propertyBuilder As IConventionPropertyBuilder, newElementType As IElementType, oldElementType As IElementType, context As IConventionContext(Of IElementType))" />
      <MemberSignature Language="F#" Value="abstract member ProcessPropertyElementTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder * Microsoft.EntityFrameworkCore.Metadata.IElementType * Microsoft.EntityFrameworkCore.Metadata.IElementType * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IElementType&gt; -&gt; unit&#xA;override this.ProcessPropertyElementTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder * Microsoft.EntityFrameworkCore.Metadata.IElementType * Microsoft.EntityFrameworkCore.Metadata.IElementType * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IElementType&gt; -&gt; unit" Usage="elementTypeChangedConvention.ProcessPropertyElementTypeChanged (propertyBuilder, newElementType, oldElementType, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IPropertyElementTypeChangedConvention.ProcessPropertyElementTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,Microsoft.EntityFrameworkCore.Metadata.IElementType,Microsoft.EntityFrameworkCore.Metadata.IElementType,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IElementType})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder" />
        <Parameter Name="newElementType" Type="Microsoft.EntityFrameworkCore.Metadata.IElementType" />
        <Parameter Name="oldElementType" Type="Microsoft.EntityFrameworkCore.Metadata.IElementType" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IElementType&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <param name="newElementType">To be added.</param>
        <param name="oldElementType">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
