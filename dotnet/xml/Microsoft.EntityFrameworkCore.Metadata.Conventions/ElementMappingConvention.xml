<Type Name="ElementMappingConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementMappingConvention">
  <TypeSignature Language="C#" Value="public class ElementMappingConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizingConvention" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElementMappingConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizingConvention" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementMappingConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class ElementMappingConvention&#xA;Implements IModelFinalizingConvention" />
  <TypeSignature Language="F#" Value="type ElementMappingConvention = class&#xA;    interface IModelFinalizingConvention&#xA;    interface IConvention" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizingConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A convention that ensures property mappings have any ElementMapping discovered by the type mapper.
            </summary>
    <remarks>
      <para>
                    See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
                </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ElementMappingConvention (Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementMappingConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementMappingConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementMappingConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementMappingConvention dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this convention.</param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementMappingConvention" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementMappingConvention.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As ProviderConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementMappingConvention.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessModelFinalizing">
      <MemberSignature Language="C#" Value="public void ProcessModelFinalizing (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessModelFinalizing(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ElementMappingConvention.ProcessModelFinalizing(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessModelFinalizing (modelBuilder As IConventionModelBuilder, context As IConventionContext(Of IConventionModelBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessModelFinalizing : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; -&gt; unit&#xA;override this.ProcessModelFinalizing : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; -&gt; unit" Usage="elementMappingConvention.ProcessModelFinalizing (modelBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizingConvention.ProcessModelFinalizing(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
