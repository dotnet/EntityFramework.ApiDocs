<Type Name="IPropertyElementTypeChangedConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.IPropertyElementTypeChangedConvention">
  <TypeSignature Language="C#" Value="public interface IPropertyElementTypeChangedConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IPropertyElementTypeChangedConvention implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.IPropertyElementTypeChangedConvention" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPropertyElementTypeChangedConvention&#xA;Implements IConvention" />
  <TypeSignature Language="F#" Value="type IPropertyElementTypeChangedConvention = interface&#xA;    interface IConvention" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents an operation that should be performed when the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IElementType" /> for a property is changed.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ProcessPropertyElementTypeChanged">
      <MemberSignature Language="C#" Value="public void ProcessPropertyElementTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder, Microsoft.EntityFrameworkCore.Metadata.IElementType? newElementType, Microsoft.EntityFrameworkCore.Metadata.IElementType? oldElementType, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IElementType&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessPropertyElementTypeChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder, class Microsoft.EntityFrameworkCore.Metadata.IElementType newElementType, class Microsoft.EntityFrameworkCore.Metadata.IElementType oldElementType, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IElementType&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IPropertyElementTypeChangedConvention.ProcessPropertyElementTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,Microsoft.EntityFrameworkCore.Metadata.IElementType,Microsoft.EntityFrameworkCore.Metadata.IElementType,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IElementType})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessPropertyElementTypeChanged (propertyBuilder As IConventionPropertyBuilder, newElementType As IElementType, oldElementType As IElementType, context As IConventionContext(Of IElementType))" />
      <MemberSignature Language="F#" Value="abstract member ProcessPropertyElementTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder * Microsoft.EntityFrameworkCore.Metadata.IElementType * Microsoft.EntityFrameworkCore.Metadata.IElementType * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IElementType&gt; -&gt; unit" Usage="iPropertyElementTypeChangedConvention.ProcessPropertyElementTypeChanged (propertyBuilder, newElementType, oldElementType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder" />
        <Parameter Name="newElementType" Type="Microsoft.EntityFrameworkCore.Metadata.IElementType" />
        <Parameter Name="oldElementType" Type="Microsoft.EntityFrameworkCore.Metadata.IElementType" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IElementType&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">The builder for the property.</param>
        <param name="newElementType">The new element type.</param>
        <param name="oldElementType">The old element type.</param>
        <param name="context">Additional information associated with convention execution.</param>
        <summary>
                Called after the element type for a property is changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
