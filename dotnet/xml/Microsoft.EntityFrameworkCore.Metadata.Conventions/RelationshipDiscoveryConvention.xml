<Type Name="RelationshipDiscoveryConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention">
  <TypeSignature Language="C#" Value="public class RelationshipDiscoveryConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationshipDiscoveryConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationshipDiscoveryConvention&#xA;Implements IEntityTypeAddedConvention, IEntityTypeBaseTypeChangedConvention, IEntityTypeIgnoredConvention, IEntityTypeMemberIgnoredConvention, IForeignKeyOwnershipChangedConvention, INavigationAddedConvention, INavigationRemovedConvention" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="F#" Value="type RelationshipDiscoveryConvention = class&#xA;    interface IEntityTypeAddedConvention&#xA;    interface IConvention&#xA;    interface IEntityTypeIgnoredConvention&#xA;    interface IEntityTypeBaseTypeChangedConvention&#xA;    interface INavigationRemovedConvention&#xA;    interface IEntityTypeMemberIgnoredConvention&#xA;    interface INavigationAddedConvention&#xA;    interface IForeignKeyOwnershipChangedConvention" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="F#" Value="type RelationshipDiscoveryConvention = class&#xA;    interface IEntityTypeAddedConvention&#xA;    interface IConvention&#xA;    interface IEntityTypeIgnoredConvention&#xA;    interface IEntityTypeBaseTypeChangedConvention&#xA;    interface IEntityTypeMemberIgnoredConvention&#xA;    interface INavigationRemovedConvention&#xA;    interface INavigationAddedConvention&#xA;    interface IForeignKeyOwnershipChangedConvention" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="C#" Value="public class RelationshipDiscoveryConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyNullNavigationSetConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyRemovedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationshipDiscoveryConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyNullNavigationSetConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyRemovedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationshipDiscoveryConvention&#xA;Implements IEntityTypeAddedConvention, IEntityTypeBaseTypeChangedConvention, IEntityTypeIgnoredConvention, IEntityTypeMemberIgnoredConvention, IForeignKeyNullNavigationSetConvention, IForeignKeyOwnershipChangedConvention, IForeignKeyRemovedConvention, INavigationAddedConvention, INavigationRemovedConvention" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="F#" Value="type RelationshipDiscoveryConvention = class&#xA;    interface IEntityTypeAddedConvention&#xA;    interface IConvention&#xA;    interface IEntityTypeIgnoredConvention&#xA;    interface IEntityTypeBaseTypeChangedConvention&#xA;    interface IEntityTypeMemberIgnoredConvention&#xA;    interface INavigationRemovedConvention&#xA;    interface INavigationAddedConvention&#xA;    interface IForeignKeyOwnershipChangedConvention&#xA;    interface IForeignKeyNullNavigationSetConvention&#xA;    interface IForeignKeyRemovedConvention" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="C#" Value="public class RelationshipDiscoveryConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyNullNavigationSetConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyRemovedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.ITypeIgnoredConvention" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationshipDiscoveryConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyNullNavigationSetConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyRemovedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.ITypeIgnoredConvention" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationshipDiscoveryConvention&#xA;Implements IEntityTypeAddedConvention, IEntityTypeBaseTypeChangedConvention, IEntityTypeMemberIgnoredConvention, IForeignKeyNullNavigationSetConvention, IForeignKeyOwnershipChangedConvention, IForeignKeyRemovedConvention, INavigationAddedConvention, INavigationRemovedConvention, ITypeIgnoredConvention" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="F#" Value="type RelationshipDiscoveryConvention = class&#xA;    interface ITypeIgnoredConvention&#xA;    interface IConvention&#xA;    interface IEntityTypeAddedConvention&#xA;    interface IEntityTypeBaseTypeChangedConvention&#xA;    interface IEntityTypeMemberIgnoredConvention&#xA;    interface INavigationRemovedConvention&#xA;    interface INavigationAddedConvention&#xA;    interface IForeignKeyOwnershipChangedConvention&#xA;    interface IForeignKeyNullNavigationSetConvention&#xA;    interface IForeignKeyRemovedConvention" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeIgnoredConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyNullNavigationSetConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyRemovedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.ITypeIgnoredConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A convention that configures relationships between entity types based on the navigation properties
                as long as there is no ambiguity as to which is the corresponding inverse navigation.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationshipDiscoveryConvention (Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this convention.</param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As ProviderConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeAdded">
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEntityTypeAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessEntityTypeAdded (entityTypeBuilder As IConventionEntityTypeBuilder, context As IConventionContext(Of IConventionEntityTypeBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; -&gt; unit&#xA;override this.ProcessEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessEntityTypeAdded (entityTypeBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention.ProcessEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder"> The builder for the entity type. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after an entity type is added to the model.
            </summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeBaseTypeChanged">
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeBaseTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType newBaseType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType oldBaseType, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEntityTypeBaseTypeChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType newBaseType, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType oldBaseType, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessEntityTypeBaseTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessEntityTypeBaseTypeChanged (entityTypeBuilder As IConventionEntityTypeBuilder, newBaseType As IConventionEntityType, oldBaseType As IConventionEntityType, context As IConventionContext(Of IConventionEntityType))" />
      <MemberSignature Language="F#" Value="abstract member ProcessEntityTypeBaseTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; -&gt; unit&#xA;override this.ProcessEntityTypeBaseTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessEntityTypeBaseTypeChanged (entityTypeBuilder, newBaseType, oldBaseType, context)" />
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeBaseTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType? newBaseType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType? oldBaseType, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention.ProcessEntityTypeBaseTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="newBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="oldBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder"> The builder for the entity type. </param>
        <param name="newBaseType"> The new base entity type. </param>
        <param name="oldBaseType"> The old base entity type. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after the base type of an entity type changes.
            </summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeIgnored">
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, Type type, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEntityTypeIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, class System.Type type, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessEntityTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessEntityTypeIgnored (modelBuilder As IConventionModelBuilder, name As String, type As Type, context As IConventionContext(Of String))" />
      <MemberSignature Language="F#" Value="abstract member ProcessEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * Type * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit&#xA;override this.ProcessEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * Type * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessEntityTypeIgnored (modelBuilder, name, type, context)" />
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, Type? type, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeIgnoredConvention.ProcessEntityTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="type" Type="System.Type" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The builder for the model. </param>
        <param name="name"> The name of the ignored entity type. </param>
        <param name="type"> The ignored entity type. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after an entity type is ignored.
            </summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeMemberIgnored">
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeMemberIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEntityTypeMemberIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessEntityTypeMemberIgnored (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, context As IConventionContext(Of String))" />
      <MemberSignature Language="F#" Value="abstract member ProcessEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit&#xA;override this.ProcessEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessEntityTypeMemberIgnored (entityTypeBuilder, name, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention.ProcessEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder"> The builder for the entity type. </param>
        <param name="name"> The name of the ignored member. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after an entity type member is ignored.
            </summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessForeignKeyNullNavigationSet">
      <MemberSignature Language="C#" Value="public virtual void ProcessForeignKeyNullNavigationSet (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationshipBuilder, bool pointsToPrincipal, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessForeignKeyNullNavigationSet(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationshipBuilder, bool pointsToPrincipal, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessForeignKeyNullNavigationSet(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessForeignKeyNullNavigationSet (relationshipBuilder As IConventionForeignKeyBuilder, pointsToPrincipal As Boolean, context As IConventionContext(Of IConventionNavigation))" />
      <MemberSignature Language="F#" Value="abstract member ProcessForeignKeyNullNavigationSet : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder * bool * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; -&gt; unit&#xA;override this.ProcessForeignKeyNullNavigationSet : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder * bool * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessForeignKeyNullNavigationSet (relationshipBuilder, pointsToPrincipal, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyNullNavigationSetConvention.ProcessForeignKeyNullNavigationSet(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="pointsToPrincipal" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt;" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="pointsToPrincipal">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessForeignKeyOwnershipChanged">
      <MemberSignature Language="C#" Value="public virtual void ProcessForeignKeyOwnershipChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;bool?&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessForeignKeyOwnershipChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;valuetype System.Nullable`1&lt;bool&gt;&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessForeignKeyOwnershipChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.Nullable{System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessForeignKeyOwnershipChanged (relationshipBuilder As IConventionForeignKeyBuilder, context As IConventionContext(Of Nullable(Of Boolean)))" />
      <MemberSignature Language="F#" Value="abstract member ProcessForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Nullable&lt;bool&gt;&gt; -&gt; unit&#xA;override this.ProcessForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Nullable&lt;bool&gt;&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessForeignKeyOwnershipChanged (relationshipBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention.ProcessForeignKeyOwnershipChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.Nullable{System.Boolean}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Nullable&lt;System.Boolean&gt;&gt;" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessForeignKeyOwnershipChanged">
      <MemberSignature Language="C#" Value="public virtual void ProcessForeignKeyOwnershipChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessForeignKeyOwnershipChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessForeignKeyOwnershipChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessForeignKeyOwnershipChanged (relationshipBuilder As IConventionRelationshipBuilder, context As IConventionContext(Of IConventionRelationshipBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&gt; -&gt; unit&#xA;override this.ProcessForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessForeignKeyOwnershipChanged (relationshipBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention.ProcessForeignKeyOwnershipChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder"> The builder for the foreign key. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after the ownership value for a foreign key is changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessForeignKeyRemoved">
      <MemberSignature Language="C#" Value="public virtual void ProcessForeignKeyRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessForeignKeyRemoved(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessForeignKeyRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessForeignKeyRemoved (entityTypeBuilder As IConventionEntityTypeBuilder, foreignKey As IConventionForeignKey, context As IConventionContext(Of IConventionForeignKey))" />
      <MemberSignature Language="F#" Value="abstract member ProcessForeignKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; -&gt; unit&#xA;override this.ProcessForeignKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessForeignKeyRemoved (entityTypeBuilder, foreignKey, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyRemovedConvention.ProcessForeignKeyRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessNavigationAdded">
      <MemberSignature Language="C#" Value="public virtual void ProcessNavigationAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder navigationBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessNavigationAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder navigationBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessNavigationAdded (navigationBuilder As IConventionNavigationBuilder, context As IConventionContext(Of IConventionNavigationBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder&gt; -&gt; unit&#xA;override this.ProcessNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessNavigationAdded (navigationBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention.ProcessNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionNavigationBuilder&gt;" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigationBuilder">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessNavigationAdded">
      <MemberSignature Language="C#" Value="public virtual void ProcessNavigationAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessNavigationAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessNavigationAdded (relationshipBuilder As IConventionRelationshipBuilder, navigation As IConventionNavigation, context As IConventionContext(Of IConventionNavigation))" />
      <MemberSignature Language="F#" Value="abstract member ProcessNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; -&gt; unit&#xA;override this.ProcessNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessNavigationAdded (relationshipBuilder, navigation, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention.ProcessNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt;" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder"> The builder for the foreign key. </param>
        <param name="navigation"> The navigation. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after a navigation is added to the entity type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessNavigationRemoved">
      <MemberSignature Language="C#" Value="public virtual void ProcessNavigationRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder sourceEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder targetEntityTypeBuilder, string navigationName, System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessNavigationRemoved(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder sourceEntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder targetEntityTypeBuilder, string navigationName, class System.Reflection.MemberInfo memberInfo, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessNavigationRemoved (sourceEntityTypeBuilder As IConventionEntityTypeBuilder, targetEntityTypeBuilder As IConventionEntityTypeBuilder, navigationName As String, memberInfo As MemberInfo, context As IConventionContext(Of String))" />
      <MemberSignature Language="F#" Value="abstract member ProcessNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit&#xA;override this.ProcessNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessNavigationRemoved (sourceEntityTypeBuilder, targetEntityTypeBuilder, navigationName, memberInfo, context)" />
      <MemberSignature Language="C#" Value="public virtual void ProcessNavigationRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder sourceEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder targetEntityTypeBuilder, string navigationName, System.Reflection.MemberInfo? memberInfo, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention.ProcessNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="targetEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="navigationName" Type="System.String" />
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="sourceEntityTypeBuilder"> The builder for the entity type that contained the navigation. </param>
        <param name="targetEntityTypeBuilder"> The builder for the target entity type of the navigation. </param>
        <param name="navigationName"> The navigation name. </param>
        <param name="memberInfo"> The member used for by the navigation. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after a navigation is removed from the entity type.
            </summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessTypeIgnored">
      <MemberSignature Language="C#" Value="public virtual void ProcessTypeIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, Type? type, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessTypeIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, class System.Type type, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessTypeIgnored (modelBuilder As IConventionModelBuilder, name As String, type As Type, context As IConventionContext(Of String))" />
      <MemberSignature Language="F#" Value="abstract member ProcessTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * Type * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit&#xA;override this.ProcessTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * Type * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessTypeIgnored (modelBuilder, name, type, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ITypeIgnoredConvention.ProcessTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="type" Type="System.Type" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" Index="3" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ShouldBeOwned">
      <MemberSignature Language="C#" Value="protected virtual bool? ShouldBeOwned (Type targetType, Microsoft.EntityFrameworkCore.Metadata.IConventionModel model);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Nullable`1&lt;bool&gt; ShouldBeOwned(class System.Type targetType, class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ShouldBeOwned(System.Type,Microsoft.EntityFrameworkCore.Metadata.IConventionModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldBeOwned (targetType As Type, model As IConventionModel) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ShouldBeOwned : Type * Microsoft.EntityFrameworkCore.Metadata.IConventionModel -&gt; Nullable&lt;bool&gt;&#xA;override this.ShouldBeOwned : Type * Microsoft.EntityFrameworkCore.Metadata.IConventionModel -&gt; Nullable&lt;bool&gt;" Usage="relationshipDiscoveryConvention.ShouldBeOwned (targetType, model)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="targetType">Target entity type.</param>
        <param name="model">The model.</param>
        <summary>
                Returns a value indicating whether the given entity type should be added as owned if it isn't currently in the model.
            </summary>
        <returns>
          <see langword="true" /> if the given entity type should be owned.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTargetEntityTypeBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? TryGetTargetEntityTypeBuilder (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Type targetClrType, System.Reflection.MemberInfo navigationMemberInfo, bool? shouldBeOwned = default, bool shouldCreate = true);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder TryGetTargetEntityTypeBuilder(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class System.Type targetClrType, class System.Reflection.MemberInfo navigationMemberInfo, valuetype System.Nullable`1&lt;bool&gt; shouldBeOwned, bool shouldCreate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.TryGetTargetEntityTypeBuilder(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Type,System.Reflection.MemberInfo,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryGetTargetEntityTypeBuilder (entityTypeBuilder As IConventionEntityTypeBuilder, targetClrType As Type, navigationMemberInfo As MemberInfo, Optional shouldBeOwned As Nullable(Of Boolean) = Nothing, Optional shouldCreate As Boolean = true) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member TryGetTargetEntityTypeBuilder : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Type * System.Reflection.MemberInfo * Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&#xA;override this.TryGetTargetEntityTypeBuilder : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Type * System.Reflection.MemberInfo * Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="relationshipDiscoveryConvention.TryGetTargetEntityTypeBuilder (entityTypeBuilder, targetClrType, navigationMemberInfo, shouldBeOwned, shouldCreate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="targetClrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="shouldBeOwned" Type="System.Nullable&lt;System.Boolean&gt;" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="shouldCreate" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the referencing entity type.</param>
        <param name="targetClrType">The CLR type of the target entity type.</param>
        <param name="navigationMemberInfo">The navigation member.</param>
        <param name="shouldBeOwned">Whether the target entity type should be owned.</param>
        <param name="shouldCreate">Whether an entity type should be created if one doesn't currently exist.</param>
        <summary>
                Finds or tries to create an entity type target for the given navigation member.
            </summary>
        <returns>The builder for the target entity type or <see langword="null" /> if it can't be created.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
