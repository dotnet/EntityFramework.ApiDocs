<Type Name="NotMappedMemberAttributeConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention">
  <TypeSignature Language="C#" Value="public class NotMappedMemberAttributeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NotMappedMemberAttributeConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class NotMappedMemberAttributeConvention&#xA;Implements IEntityTypeAddedConvention" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="F#" Value="type NotMappedMemberAttributeConvention = class&#xA;    interface IEntityTypeAddedConvention&#xA;    interface IConvention" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="C#" Value="public class NotMappedMemberAttributeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IComplexPropertyAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NotMappedMemberAttributeConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IComplexPropertyAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class NotMappedMemberAttributeConvention&#xA;Implements IComplexPropertyAddedConvention, IEntityTypeAddedConvention" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="F#" Value="type NotMappedMemberAttributeConvention = class&#xA;    interface IEntityTypeAddedConvention&#xA;    interface IConvention&#xA;    interface IComplexPropertyAddedConvention" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IComplexPropertyAddedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A convention that ignores members on entity types that have the <see cref="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotMappedMemberAttributeConvention (Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">Parameter object containing dependencies for this convention.</param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As ProviderConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessComplexPropertyAdded">
      <MemberSignature Language="C#" Value="public void ProcessComplexPropertyAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder propertyBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessComplexPropertyAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder propertyBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention.ProcessComplexPropertyAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessComplexPropertyAdded (propertyBuilder As IConventionComplexPropertyBuilder, context As IConventionContext(Of IConventionComplexPropertyBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessComplexPropertyAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder&gt; -&gt; unit&#xA;override this.ProcessComplexPropertyAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder&gt; -&gt; unit" Usage="notMappedMemberAttributeConvention.ProcessComplexPropertyAdded (propertyBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IComplexPropertyAddedConvention.ProcessComplexPropertyAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionComplexPropertyBuilder&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeAdded">
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEntityTypeAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention.ProcessEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessEntityTypeAdded (entityTypeBuilder As IConventionEntityTypeBuilder, context As IConventionContext(Of IConventionEntityTypeBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; -&gt; unit&#xA;override this.ProcessEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; -&gt; unit" Usage="notMappedMemberAttributeConvention.ProcessEntityTypeAdded (entityTypeBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention.ProcessEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type.</param>
        <param name="context">Additional information associated with convention execution.</param>
        <summary>
                Called after an entity type is added to the model.
            </summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ShouldIgnore">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldIgnore (System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldIgnore(class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.NotMappedMemberAttributeConvention.ShouldIgnore(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldIgnore (memberInfo As MemberInfo) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldIgnore : System.Reflection.MemberInfo -&gt; bool&#xA;override this.ShouldIgnore : System.Reflection.MemberInfo -&gt; bool" Usage="notMappedMemberAttributeConvention.ShouldIgnore memberInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="memberInfo">The member.</param>
        <summary>
                Returns a value indicating whether the given CLR member should be ignored.
            </summary>
        <returns>
          <see langword="true" /> if the member should be ignored.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
