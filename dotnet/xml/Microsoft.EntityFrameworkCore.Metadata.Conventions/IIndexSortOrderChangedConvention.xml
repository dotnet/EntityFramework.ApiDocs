<Type Name="IIndexSortOrderChangedConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.IIndexSortOrderChangedConvention">
  <TypeSignature Language="C#" Value="public interface IIndexSortOrderChangedConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IIndexSortOrderChangedConvention implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention" FrameworkAlternate="efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.IIndexSortOrderChangedConvention" />
  <TypeSignature Language="VB.NET" Value="Public Interface IIndexSortOrderChangedConvention&#xA;Implements IConvention" />
  <TypeSignature Language="F#" Value="type IIndexSortOrderChangedConvention = interface&#xA;    interface IConvention" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IIndexSortOrderChangedConvention implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents an operation that should be performed when the sort order of an index is changed.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ProcessIndexSortOrderChanged">
      <MemberSignature Language="C#" Value="public void ProcessIndexSortOrderChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Collections.Generic.IReadOnlyList&lt;bool&gt;?&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessIndexSortOrderChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;bool&gt;&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IIndexSortOrderChangedConvention.ProcessIndexSortOrderChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.Collections.Generic.IReadOnlyList{System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessIndexSortOrderChanged (indexBuilder As IConventionIndexBuilder, context As IConventionContext(Of IReadOnlyList(Of Boolean)))" />
      <MemberSignature Language="F#" Value="abstract member ProcessIndexSortOrderChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Collections.Generic.IReadOnlyList&lt;bool&gt;&gt; -&gt; unit" Usage="iIndexSortOrderChangedConvention.ProcessIndexSortOrderChanged (indexBuilder, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.Collections.Generic.IReadOnlyList&lt;System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index.</param>
        <param name="context">Additional information associated with convention execution.</param>
        <summary>
                Called after the uniqueness for an index is changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
