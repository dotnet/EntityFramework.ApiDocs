<Type Name="IEntityTypeAnnotationChangedConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAnnotationChangedConvention">
  <TypeSignature Language="C#" Value="public interface IEntityTypeAnnotationChangedConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEntityTypeAnnotationChangedConvention implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAnnotationChangedConvention" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEntityTypeAnnotationChangedConvention&#xA;Implements IConvention" />
  <TypeSignature Language="F#" Value="type IEntityTypeAnnotationChangedConvention = interface&#xA;    interface IConvention" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IEntityTypeAnnotationChangedConvention implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents an operation that should be performed when an annotation is changed on an entity type.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-conventions">Model building conventions</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ProcessEntityTypeAnnotationChanged">
      <MemberSignature Language="C#" Value="public void ProcessEntityTypeAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&gt; context);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEntityTypeAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAnnotationChangedConvention.ProcessEntityTypeAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessEntityTypeAnnotationChanged (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, annotation As IConventionAnnotation, oldAnnotation As IConventionAnnotation, context As IConventionContext(Of IConventionAnnotation))" />
      <MemberSignature Language="F#" Value="abstract member ProcessEntityTypeAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&gt; -&gt; unit" Usage="iEntityTypeAnnotationChangedConvention.ProcessEntityTypeAnnotationChanged (entityTypeBuilder, name, annotation, oldAnnotation, context)" />
      <MemberSignature Language="C#" Value="public void ProcessEntityTypeAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation? annotation, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation? oldAnnotation, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&gt; context);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type.</param>
        <param name="name">The annotation name.</param>
        <param name="annotation">The new annotation.</param>
        <param name="oldAnnotation">The old annotation.</param>
        <param name="context">Additional information associated with convention execution.</param>
        <summary>
                Called after an annotation is changed on an entity type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
