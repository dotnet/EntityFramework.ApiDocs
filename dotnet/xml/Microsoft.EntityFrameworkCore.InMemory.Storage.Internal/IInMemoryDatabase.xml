<Type Name="IInMemoryDatabase" FullName="Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryDatabase">
  <TypeSignature Language="C#" Value="public interface IInMemoryDatabase : Microsoft.EntityFrameworkCore.Storage.IDatabase" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInMemoryDatabase implements class Microsoft.EntityFrameworkCore.Storage.IDatabase" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryDatabase" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInMemoryDatabase&#xA;Implements IDatabase" />
  <TypeSignature Language="F#" Value="type IInMemoryDatabase = interface&#xA;    interface IDatabase" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IInMemoryDatabase implements class Microsoft.EntityFrameworkCore.Storage.IDatabase" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IDatabase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>
                The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                The implementation may depend on other services registered with any lifetime.
                The implementation does not need to be thread-safe.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="EnsureDatabaseCreated">
      <MemberSignature Language="C#" Value="public bool EnsureDatabaseCreated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EnsureDatabaseCreated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryDatabase.EnsureDatabaseCreated" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureDatabaseCreated () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member EnsureDatabaseCreated : unit -&gt; bool" Usage="iInMemoryDatabase.EnsureDatabaseCreated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDatabaseCreated">
      <MemberSignature Language="C#" Value="public bool EnsureDatabaseCreated (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies stateManagerDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EnsureDatabaseCreated(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies stateManagerDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureDatabaseCreated (stateManagerDependencies As StateManagerDependencies) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member EnsureDatabaseCreated : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies -&gt; bool" Usage="iInMemoryDatabase.EnsureDatabaseCreated stateManagerDependencies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateManagerDependencies" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="stateManagerDependencies">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Store">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore Store { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore Store" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryDatabase.Store" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Store As IInMemoryStore" />
      <MemberSignature Language="F#" Value="member this.Store : Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore" Usage="Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryDatabase.Store" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
