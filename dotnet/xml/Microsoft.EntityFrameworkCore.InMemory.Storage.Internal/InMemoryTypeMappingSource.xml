<Type Name="InMemoryTypeMappingSource" FullName="Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTypeMappingSource">
  <TypeSignature Language="C#" Value="public class InMemoryTypeMappingSource : Microsoft.EntityFrameworkCore.Storage.TypeMappingSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InMemoryTypeMappingSource extends Microsoft.EntityFrameworkCore.Storage.TypeMappingSource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTypeMappingSource" />
  <TypeSignature Language="VB.NET" Value="Public Class InMemoryTypeMappingSource&#xA;Inherits TypeMappingSource" />
  <TypeSignature Language="F#" Value="type InMemoryTypeMappingSource = class&#xA;    inherit TypeMappingSource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.TypeMappingSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryTypeMappingSource (Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTypeMappingSource.#ctor(Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As TypeMappingSourceDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTypeMappingSource : Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies -&gt; Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTypeMappingSource" Usage="new Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTypeMappingSource dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMapping">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping FindMapping (in Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo mappingInfo);" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping FindMapping([in]valuetype Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo mappingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTypeMappingSource.FindMapping(Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FindMapping (mappingInfo As TypeMappingInfo) As CoreTypeMapping" />
      <MemberSignature Language="F#" Value="override this.FindMapping : TypeMappingInfo -&gt; Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" Usage="inMemoryTypeMappingSource.FindMapping mappingInfo" />
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping? FindMapping (in Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo? mappingInfo);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappingInfo" Type="Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-3.0;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mappingInfo">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
