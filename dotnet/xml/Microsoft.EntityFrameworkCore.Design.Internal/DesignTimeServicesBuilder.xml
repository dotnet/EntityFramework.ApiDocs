<Type Name="DesignTimeServicesBuilder" FullName="Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder">
  <TypeSignature Language="C#" Value="public class DesignTimeServicesBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignTimeServicesBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignTimeServicesBuilder" />
  <TypeSignature Language="F#" Value="type DesignTimeServicesBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignTimeServicesBuilder (Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker startupInvoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker startupInvoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (startupInvoker As StartupInvoker)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder : Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker -&gt; Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder" Usage="new Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder startupInvoker" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="startupInvoker" Type="Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="startupInvoker">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignTimeServicesBuilder (System.Reflection.Assembly startupAssembly, Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly startupAssembly, class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.#ctor(System.Reflection.Assembly,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (startupAssembly As Assembly, reporter As IOperationReporter)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder : System.Reflection.Assembly * Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter -&gt; Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder" Usage="new Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder (startupAssembly, reporter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="startupAssembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="reporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="1" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="startupAssembly">To be added.</param>
        <param name="reporter">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignTimeServicesBuilder (System.Reflection.Assembly startupAssembly, Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly startupAssembly, class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.#ctor(System.Reflection.Assembly,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (startupAssembly As Assembly, reporter As IOperationReporter, args As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder : System.Reflection.Assembly * Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter * string[] -&gt; Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder" Usage="new Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder (startupAssembly, reporter, args)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="startupAssembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="reporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="1" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="args" Type="System.String[]" Index="2" FrameworkAlternate="efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="startupAssembly">To be added.</param>
        <param name="reporter">To be added.</param>
        <param name="args">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignTimeServicesBuilder (System.Reflection.Assembly assembly, System.Reflection.Assembly startupAssembly, Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.Reflection.Assembly startupAssembly, class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.#ctor(System.Reflection.Assembly,System.Reflection.Assembly,Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assembly As Assembly, startupAssembly As Assembly, reporter As IOperationReporter, args As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder : System.Reflection.Assembly * System.Reflection.Assembly * Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter * string[] -&gt; Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder" Usage="new Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder (assembly, startupAssembly, reporter, args)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="startupAssembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="reporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="2" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="args" Type="System.String[]" Index="3" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="assembly">To be added.</param>
        <param name="startupAssembly">To be added.</param>
        <param name="reporter">To be added.</param>
        <param name="args">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public virtual IServiceProvider Build (Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IServiceProvider Build(class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.Build(Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Build (context As DbContext) As IServiceProvider" />
      <MemberSignature Language="F#" Value="abstract member Build : Microsoft.EntityFrameworkCore.DbContext -&gt; IServiceProvider&#xA;override this.Build : Microsoft.EntityFrameworkCore.DbContext -&gt; IServiceProvider" Usage="designTimeServicesBuilder.Build context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public virtual IServiceProvider Build (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IServiceProvider Build(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Build (provider As String) As IServiceProvider" />
      <MemberSignature Language="F#" Value="abstract member Build : string -&gt; IServiceProvider&#xA;override this.Build : string -&gt; IServiceProvider" Usage="designTimeServicesBuilder.Build provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureContextServices">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureContextServices (IServiceProvider contextServices, Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureContextServices(class System.IServiceProvider contextServices, class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.ConfigureContextServices(System.IServiceProvider,Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ConfigureContextServices (contextServices As IServiceProvider, services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member ConfigureContextServices : IServiceProvider * Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection&#xA;override this.ConfigureContextServices : IServiceProvider * Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="designTimeServicesBuilder.ConfigureContextServices (contextServices, services)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextServices" Type="System.IServiceProvider" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="contextServices">To be added.</param>
        <param name="services">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureServices">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureServices (Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ConfigureServices (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member ConfigureServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection&#xA;override this.ConfigureServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="designTimeServicesBuilder.ConfigureServices services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="services">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceCollection">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.DependencyInjection.IServiceCollection CreateServiceCollection (Microsoft.EntityFrameworkCore.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.DependencyInjection.IServiceCollection CreateServiceCollection(class Microsoft.EntityFrameworkCore.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.CreateServiceCollection(Microsoft.EntityFrameworkCore.DbContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateServiceCollection (context As DbContext) As IServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member CreateServiceCollection : Microsoft.EntityFrameworkCore.DbContext -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection&#xA;override this.CreateServiceCollection : Microsoft.EntityFrameworkCore.DbContext -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="designTimeServicesBuilder.CreateServiceCollection context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceCollection">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.DependencyInjection.IServiceCollection CreateServiceCollection (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.DependencyInjection.IServiceCollection CreateServiceCollection(string provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.DesignTimeServicesBuilder.CreateServiceCollection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateServiceCollection (provider As String) As IServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member CreateServiceCollection : string -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection&#xA;override this.CreateServiceCollection : string -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="designTimeServicesBuilder.CreateServiceCollection provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
