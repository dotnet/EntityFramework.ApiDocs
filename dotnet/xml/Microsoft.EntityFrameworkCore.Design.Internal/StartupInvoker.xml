<Type Name="StartupInvoker" FullName="Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker">
  <TypeSignature Language="C#" Value="public class StartupInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StartupInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class StartupInvoker" />
  <TypeSignature Language="F#" Value="type StartupInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StartupInvoker (Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, System.Reflection.Assembly startupAssembly, string environment, string contentRootPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter reporter, class System.Reflection.Assembly startupAssembly, string environment, string contentRootPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,System.Reflection.Assembly,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reporter As IOperationReporter, startupAssembly As Assembly, environment As String, contentRootPath As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker : Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter * System.Reflection.Assembly * string * string -&gt; Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker" Usage="new Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker (reporter, startupAssembly, environment, contentRootPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" />
        <Parameter Name="startupAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="environment" Type="System.String" />
        <Parameter Name="contentRootPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reporter">To be added.</param>
        <param name="startupAssembly">To be added.</param>
        <param name="environment">To be added.</param>
        <param name="contentRootPath">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureDesignTimeServices">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureDesignTimeServices (Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureDesignTimeServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker.ConfigureDesignTimeServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConfigureDesignTimeServices (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member ConfigureDesignTimeServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection&#xA;override this.ConfigureDesignTimeServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="startupInvoker.ConfigureDesignTimeServices services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="services">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureDesignTimeServices">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureDesignTimeServices (Type type, Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureDesignTimeServices(class System.Type type, class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker.ConfigureDesignTimeServices(System.Type,Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConfigureDesignTimeServices (type As Type, services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member ConfigureDesignTimeServices : Type * Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection&#xA;override this.ConfigureDesignTimeServices : Type * Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="startupInvoker.ConfigureDesignTimeServices (type, services)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="services">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHostServices">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureHostServices (Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureHostServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker.ConfigureHostServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ConfigureHostServices (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member ConfigureHostServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection&#xA;override this.ConfigureHostServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="startupInvoker.ConfigureHostServices services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="services">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureServices">
      <MemberSignature Language="C#" Value="public virtual IServiceProvider ConfigureServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IServiceProvider ConfigureServices() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.StartupInvoker.ConfigureServices" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConfigureServices () As IServiceProvider" />
      <MemberSignature Language="F#" Value="abstract member ConfigureServices : unit -&gt; IServiceProvider&#xA;override this.ConfigureServices : unit -&gt; IServiceProvider" Usage="startupInvoker.ConfigureServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
