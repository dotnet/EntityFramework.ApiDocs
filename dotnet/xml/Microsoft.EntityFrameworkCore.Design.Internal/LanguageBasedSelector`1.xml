<Type Name="LanguageBasedSelector&lt;T&gt;" FullName="Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class LanguageBasedSelector&lt;T&gt; where T : ILanguageBasedService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LanguageBasedSelector`1&lt;(class Microsoft.EntityFrameworkCore.Design.ILanguageBasedService) T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LanguageBasedSelector(Of T)" />
  <TypeSignature Language="F#" Value="type LanguageBasedSelector&lt;'T (requires 'T :&gt; ILanguageBasedService)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <InterfaceName>Microsoft.EntityFrameworkCore.Design.ILanguageBasedService</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LanguageBasedSelector (System.Collections.Generic.IEnumerable&lt;T&gt; services);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (services As IEnumerable(Of T))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector&lt;'T (requires 'T :&gt; Microsoft.EntityFrameworkCore.Design.ILanguageBasedService)&gt; : seq&lt;'T (requires 'T :&gt; Microsoft.EntityFrameworkCore.Design.ILanguageBasedService)&gt; -&gt; Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector&lt;'T (requires 'T :&gt; Microsoft.EntityFrameworkCore.Design.ILanguageBasedService)&gt;" Usage="new Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector&lt;'T (requires 'T :&gt; Microsoft.EntityFrameworkCore.Design.ILanguageBasedService)&gt; services" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="services" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="services">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual T Select (string language);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Select(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector`1.Select(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select (language As String) As T" />
      <MemberSignature Language="F#" Value="abstract member Select : string -&gt; 'T&#xA;override this.Select : string -&gt; 'T" Usage="languageBasedSelector.Select language" />
      <MemberSignature Language="C#" Value="public virtual T Select (string? language);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected virtual T Select (string? language, System.Collections.Generic.IEnumerable&lt;T&gt; services);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !T Select(string language, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector`1.Select(System.String,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Select (language As String, services As IEnumerable(Of T)) As T" />
      <MemberSignature Language="F#" Value="abstract member Select : string * seq&lt;'T (requires 'T :&gt; Microsoft.EntityFrameworkCore.Design.ILanguageBasedService)&gt; -&gt; 'T&#xA;override this.Select : string * seq&lt;'T (requires 'T :&gt; Microsoft.EntityFrameworkCore.Design.ILanguageBasedService)&gt; -&gt; 'T" Usage="languageBasedSelector.Select (language, services)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="services" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="language">To be added.</param>
        <param name="services">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;T&gt; Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; Services" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector`1.Services" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Services As IEnumerable(Of T)" />
      <MemberSignature Language="F#" Value="member this.Services : seq&lt;'T (requires 'T :&gt; Microsoft.EntityFrameworkCore.Design.ILanguageBasedService)&gt;" Usage="Microsoft.EntityFrameworkCore.Design.Internal.LanguageBasedSelector&lt;'T (requires 'T :&gt; Microsoft.EntityFrameworkCore.Design.ILanguageBasedService)&gt;.Services" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
