<Type Name="ICSharpHelper" FullName="Microsoft.EntityFrameworkCore.Design.ICSharpHelper">
  <TypeSignature Language="C#" Value="public interface ICSharpHelper" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICSharpHelper" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Design.ICSharpHelper" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICSharpHelper" />
  <TypeSignature Language="F#" Value="type ICSharpHelper = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ICSharpHelper" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="Microsoft.EntityFrameworkCore.Design" FromVersion="6.0.0.0" To="Microsoft.EntityFrameworkCore" ToVersion="6.0.0.0" FrameworkAlternate="efcore-6.0" />
    <TypeForwarding From="Microsoft.EntityFrameworkCore.Design" FromVersion="7.0.0.0" To="Microsoft.EntityFrameworkCore" ToVersion="7.0.0.0" FrameworkAlternate="efcore-7.0" />
    <TypeForwarding From="Microsoft.EntityFrameworkCore.Design" FromVersion="8.0.0.0" To="Microsoft.EntityFrameworkCore" ToVersion="8.0.0.0" FrameworkAlternate="efcore-8.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary>
                Helper for generating C# code.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments (System.Collections.Generic.IEnumerable&lt;object&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Arguments(class System.Collections.Generic.IEnumerable`1&lt;object&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Arguments(System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Arguments (values As IEnumerable(Of Object)) As String" />
      <MemberSignature Language="F#" Value="abstract member Arguments : seq&lt;obj&gt; -&gt; string" Usage="iCSharpHelper.Arguments values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="values">The values.</param>
        <summary>
                Generates a comma-sepearated argument list of values.
            </summary>
        <returns>The argument list.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression (System.Linq.Expressions.Expression node, System.Collections.Generic.ISet&lt;string&gt; collectedNamespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Expression(class System.Linq.Expressions.Expression node, class System.Collections.Generic.ISet`1&lt;string&gt; collectedNamespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Expression(System.Linq.Expressions.Expression,System.Collections.Generic.ISet{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Expression (node As Expression, collectedNamespaces As ISet(Of String)) As String" />
      <MemberSignature Language="F#" Value="abstract member Expression : System.Linq.Expressions.Expression * System.Collections.Generic.ISet&lt;string&gt; -&gt; string" Usage="iCSharpHelper.Expression (node, collectedNamespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="collectedNamespaces" Type="System.Collections.Generic.ISet&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="node">The node to be translated.</param>
        <param name="collectedNamespaces">Any namespaces required by the translated code will be added to this set.</param>
        <summary>
                Translates a node representing an expression into source code that would produce it.
            </summary>
        <returns>Source code that would produce  <paramref name="node" />.</returns>
        <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="public string Fragment (Microsoft.EntityFrameworkCore.Design.AttributeCodeFragment fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Fragment(class Microsoft.EntityFrameworkCore.Design.AttributeCodeFragment fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.AttributeCodeFragment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fragment (fragment As AttributeCodeFragment) As String" />
      <MemberSignature Language="F#" Value="abstract member Fragment : Microsoft.EntityFrameworkCore.Design.AttributeCodeFragment -&gt; string" Usage="iCSharpHelper.Fragment fragment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Microsoft.EntityFrameworkCore.Design.AttributeCodeFragment" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="fragment">The attribute code fragment.</param>
        <summary>
                Generates an attribute specification.
            </summary>
        <returns>The attribute specification code.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="public string Fragment (Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Fragment(class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fragment (fragment As MethodCallCodeFragment) As String" />
      <MemberSignature Language="F#" Value="abstract member Fragment : Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment -&gt; string" Usage="iCSharpHelper.Fragment fragment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-2.1;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="fragment"> The method call. </param>
        <summary>
                Generates a method call code fragment.
            </summary>
        <returns> The fragment. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="public string Fragment (Microsoft.EntityFrameworkCore.Design.PropertyAccessorCodeFragment fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Fragment(class Microsoft.EntityFrameworkCore.Design.PropertyAccessorCodeFragment fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.PropertyAccessorCodeFragment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fragment (fragment As PropertyAccessorCodeFragment) As String" />
      <MemberSignature Language="F#" Value="abstract member Fragment : Microsoft.EntityFrameworkCore.Design.PropertyAccessorCodeFragment -&gt; string" Usage="iCSharpHelper.Fragment fragment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Microsoft.EntityFrameworkCore.Design.PropertyAccessorCodeFragment" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="fragment">The property accessor lambda.</param>
        <summary>
                Generates a property accessor lambda code fragment.
            </summary>
        <returns>A code representation of the lambda.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="public string Fragment (Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment? fragment, int indent = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Fragment(class Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment fragment, int32 indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fragment (fragment As IMethodCallCodeFragment, Optional indent As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="abstract member Fragment : Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment * int -&gt; string" Usage="iCSharpHelper.Fragment (fragment, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="indent" Type="System.Int32" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="fragment">The method call. If null, no code is generated.</param>
        <param name="indent">The indentation level to use when multiple lines are generated.</param>
        <summary>
                Generates a method call code fragment.
            </summary>
        <returns>The fragment.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="public string Fragment (Microsoft.EntityFrameworkCore.Design.NestedClosureCodeFragment fragment, int indent = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Fragment(class Microsoft.EntityFrameworkCore.Design.NestedClosureCodeFragment fragment, int32 indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.NestedClosureCodeFragment,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fragment (fragment As NestedClosureCodeFragment, Optional indent As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="abstract member Fragment : Microsoft.EntityFrameworkCore.Design.NestedClosureCodeFragment * int -&gt; string" Usage="iCSharpHelper.Fragment (fragment, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Microsoft.EntityFrameworkCore.Design.NestedClosureCodeFragment" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="indent" Type="System.Int32" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="fragment">The lambda.</param>
        <param name="indent">The indentation level to use when multiple lines are generated.</param>
        <summary>
                Generates a lambda code fragment.
            </summary>
        <returns>The fragment.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="public string Fragment (Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment fragment, string? instanceIdentifier, bool typeQualified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Fragment(class Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment fragment, string instanceIdentifier, bool typeQualified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fragment (fragment As IMethodCallCodeFragment, instanceIdentifier As String, typeQualified As Boolean) As String" />
      <MemberSignature Language="F#" Value="abstract member Fragment : Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment * string * bool -&gt; string" Usage="iCSharpHelper.Fragment (fragment, instanceIdentifier, typeQualified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="instanceIdentifier" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="typeQualified" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="fragment">The method call.</param>
        <param name="instanceIdentifier">An identifier on which the method call will be generated.</param>
        <param name="typeQualified">
          <see langword="true" /> if the method call should be type-qualified, <see langword="false" /> for instance/extension syntax.
            </param>
        <summary>
                Generates a method call code fragment.
            </summary>
        <returns>The fragment.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="public string Fragment (Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment fragment, string? instanceIdentifier = default, bool typeQualified = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Fragment(class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment fragment, string instanceIdentifier, bool typeQualified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Fragment(Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fragment (fragment As MethodCallCodeFragment, Optional instanceIdentifier As String = Nothing, Optional typeQualified As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="abstract member Fragment : Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment * string * bool -&gt; string" Usage="iCSharpHelper.Fragment (fragment, instanceIdentifier, typeQualified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="instanceIdentifier" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="typeQualified" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="fragment">The method call.</param>
        <param name="instanceIdentifier">An identifier on which the method call will be generated.</param>
        <param name="typeQualified">
          <see langword="true" /> if the method call should be type-qualified, <see langword="false" /> for instance/extension syntax.
            </param>
        <summary>
                Generates a method call code fragment.
            </summary>
        <returns>The fragment.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredUsings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; GetRequiredUsings (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetRequiredUsings(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.GetRequiredUsings(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredUsings (type As Type) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetRequiredUsings : Type -&gt; seq&lt;string&gt;" Usage="iCSharpHelper.GetRequiredUsings type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">The type.</param>
        <summary>
                Gets the using statements required when referencing a type.
            </summary>
        <returns>The usings.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public string Identifier (string name, System.Collections.Generic.ICollection&lt;string&gt; scope = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Identifier(string name, class System.Collections.Generic.ICollection`1&lt;string&gt; scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Identifier(System.String,System.Collections.Generic.ICollection{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Identifier (name As String, Optional scope As ICollection(Of String) = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member Identifier : string * System.Collections.Generic.ICollection&lt;string&gt; -&gt; string" Usage="iCSharpHelper.Identifier (name, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="scope" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="name"> The base identifier name. </param>
        <param name="scope"> A list of in-scope identifiers. </param>
        <summary>
                Generates a valid C# identifier from the specified string unique to the scope.
            </summary>
        <returns> The identifier. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public string Identifier (string name, System.Collections.Generic.ICollection&lt;string&gt;? scope = default, bool? capitalize = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Identifier(string name, class System.Collections.Generic.ICollection`1&lt;string&gt; scope, valuetype System.Nullable`1&lt;bool&gt; capitalize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Identifier(System.String,System.Collections.Generic.ICollection{System.String},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function Identifier (name As String, Optional scope As ICollection(Of String) = Nothing, Optional capitalize As Nullable(Of Boolean) = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member Identifier : string * System.Collections.Generic.ICollection&lt;string&gt; * Nullable&lt;bool&gt; -&gt; string" Usage="iCSharpHelper.Identifier (name, scope, capitalize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="scope" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="capitalize" Type="System.Nullable&lt;System.Boolean&gt;" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">The base identifier name.</param>
        <param name="scope">A list of in-scope identifiers.</param>
        <param name="capitalize">
          <see langword="true" /> if the first letter should be converted to uppercase;
                <see langword="false" /> if the first letter should be converted to lowercase;
            </param>
        <summary>
                Generates a valid C# identifier from the specified string unique to the scope.
            </summary>
        <returns>The identifier.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public string Lambda (System.Collections.Generic.IReadOnlyList&lt;string&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Lambda(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Lambda(System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (properties As IReadOnlyList(Of String)) As String" />
      <MemberSignature Language="F#" Value="abstract member Lambda : System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; string" Usage="iCSharpHelper.Lambda properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="properties"> The property names. </param>
        <summary>
                Generates a property accessor lambda.
            </summary>
        <returns> The lambda. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public virtual string Lambda (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties, string lambdaIdentifier = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Lambda(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties, string lambdaIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Lambda(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Lambda (properties As IEnumerable(Of IProperty), Optional lambdaIdentifier As String = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member Lambda : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; * string -&gt; string&#xA;override this.Lambda : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; * string -&gt; string" Usage="iCSharpHelper.Lambda (properties, lambdaIdentifier)" />
      <MemberSignature Language="C#" Value="public virtual string Lambda (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties, string? lambdaIdentifier = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="lambdaIdentifier" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="properties">The properties.</param>
        <param name="lambdaIdentifier">The identifier to use for parameter in the lambda.</param>
        <summary>
                Generates a property accessor lambda.
            </summary>
        <returns>The lambda.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public string Lambda (System.Collections.Generic.IReadOnlyList&lt;string&gt; properties, string lambdaIdentifier = default);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Lambda(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; properties, string lambdaIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Lambda(System.Collections.Generic.IReadOnlyList{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (properties As IReadOnlyList(Of String), Optional lambdaIdentifier As String = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member Lambda : System.Collections.Generic.IReadOnlyList&lt;string&gt; * string -&gt; string" Usage="iCSharpHelper.Lambda (properties, lambdaIdentifier)" />
      <MemberSignature Language="C#" Value="public string Lambda (System.Collections.Generic.IReadOnlyList&lt;string&gt; properties, string? lambdaIdentifier = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="lambdaIdentifier" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="properties">The property names.</param>
        <param name="lambdaIdentifier">The identifier to use for parameter in the lambda.</param>
        <summary>
                Generates a property accessor lambda.
            </summary>
        <returns>The lambda.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Boolean) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : bool -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a bool literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Byte) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : byte -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a byte literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (byte[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(unsigned int8[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (values As Byte()) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : byte[] -&gt; string" Usage="iCSharpHelper.Literal values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Byte[]" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="values"> The byte array. </param>
        <summary>
                Generates a byte array literal.
            </summary>
        <returns> The literal. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Char) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : char -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a char literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (System.Collections.Generic.IReadOnlyList&lt;object&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(class System.Collections.Generic.IReadOnlyList`1&lt;object&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Collections.Generic.IReadOnlyList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (values As IReadOnlyList(Of Object)) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : System.Collections.Generic.IReadOnlyList&lt;obj&gt; -&gt; string" Usage="iCSharpHelper.Literal values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IReadOnlyList&lt;System.Object&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="values"> The object array. </param>
        <summary>
                Generates an object array literal.
            </summary>
        <returns> The literal. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (DateOnly value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(valuetype System.DateOnly value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.DateOnly)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As DateOnly) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : DateOnly -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateOnly" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a DateOnly literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As DateTime) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : DateTime -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a DateTime literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As DateTimeOffset) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : DateTimeOffset -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a DateTimeOffset literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Decimal) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : decimal -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a decimal literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Double) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : double -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a double literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (Enum value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(class System.Enum value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Enum)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Enum) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : Enum -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Enum" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates an enum literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Guid) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : Guid -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a Guid literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Short) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : int16 -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a short literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Integer) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : int -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates an int literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Long) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : int64 -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a long literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As BigInteger) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : System.Numerics.BigInteger -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a BigInteger literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (object[,] values);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(object[,] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Object[0:,0:])" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (values As Object(,)) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : obj[,] -&gt; string" Usage="iCSharpHelper.Literal values" />
      <MemberSignature Language="C#" Value="public string Literal (object?[,] values);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[,]" />
      </Parameters>
      <Docs>
        <param name="values">The multidimensional array.</param>
        <summary>
                Generates a multidimensional array literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As SByte) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : sbyte -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a sbyte literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Single) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : single -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a float literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (string value);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As String) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : string -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberSignature Language="C#" Value="public string Literal (string? value);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a string literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (TimeOnly value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(valuetype System.TimeOnly value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.TimeOnly)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As TimeOnly) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : TimeOnly -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeOnly" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a TimeOnly literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As TimeSpan) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : TimeSpan -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a TimeSpan literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As UShort) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : uint16 -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a ushort literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As UInteger) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : uint32 -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a uint literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As ULong) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : uint64 -&gt; string" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a ulong literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (System.Collections.Generic.IReadOnlyList&lt;object&gt; values, bool vertical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(class System.Collections.Generic.IReadOnlyList`1&lt;object&gt; values, bool vertical) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Collections.Generic.IReadOnlyList{System.Object},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (values As IReadOnlyList(Of Object), vertical As Boolean) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : System.Collections.Generic.IReadOnlyList&lt;obj&gt; * bool -&gt; string" Usage="iCSharpHelper.Literal (values, vertical)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IReadOnlyList&lt;System.Object&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="vertical" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="values"> The object array. </param>
        <param name="vertical"> A value indicating whether to layout the literal vertically. </param>
        <summary>
                Generates an object array literal.
            </summary>
        <returns> The literal. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (Enum value, bool fullName = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(class System.Enum value, bool fullName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Enum,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Enum, Optional fullName As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : Enum * bool -&gt; string" Usage="iCSharpHelper.Literal (value, fullName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Enum" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="fullName" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <param name="fullName">Whether the type should be namespace-qualified.</param>
        <summary>
                Generates an enum literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="public string Literal (Type value, bool? fullName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal(class System.Type value, valuetype System.Nullable`1&lt;bool&gt; fullName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal(System.Type,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal (value As Type, Optional fullName As Nullable(Of Boolean) = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : Type * Nullable&lt;bool&gt; -&gt; string" Usage="iCSharpHelper.Literal (value, fullName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Type" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fullName" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <param name="fullName">Whether the type should be namespace-qualified.</param>
        <summary>
                Generates a <see cref="T:System.Type" /> literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal&lt;T&gt;">
      <MemberSignature Language="C#" Value="public string Literal&lt;T&gt; (System.Collections.Generic.IReadOnlyList&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal&lt;T&gt;(class System.Collections.Generic.IReadOnlyList`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal``1(System.Collections.Generic.IReadOnlyList{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal(Of T) (values As IReadOnlyList(Of T)) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : System.Collections.Generic.IReadOnlyList&lt;'T&gt; -&gt; string" Usage="iCSharpHelper.Literal values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IReadOnlyList&lt;T&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The element type of the array. </typeparam>
        <param name="values"> The array. </param>
        <summary>
                Generates an array literal.
            </summary>
        <returns> The literal. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal&lt;T&gt;">
      <MemberSignature Language="C#" Value="public string Literal&lt;T&gt; (T? value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Nullable`1&lt;!!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal``1(System.Nullable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal(Of T As Structure) (value As Nullable(Of T)) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : Nullable&lt;'T (requires 'T : struct)&gt; -&gt; string (requires 'T : struct)" Usage="iCSharpHelper.Literal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The underlying type of the nullable type.</typeparam>
        <param name="value">The nullable value.</param>
        <summary>
                Generates a nullable literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal&lt;T&gt;">
      <MemberSignature Language="C#" Value="public string Literal&lt;T&gt; (System.Collections.Generic.List&lt;T&gt; values, bool vertical = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal&lt;T&gt;(class System.Collections.Generic.List`1&lt;!!T&gt; values, bool vertical) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal``1(System.Collections.Generic.List{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal(Of T) (values As List(Of T), Optional vertical As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : System.Collections.Generic.List&lt;'T&gt; * bool -&gt; string" Usage="iCSharpHelper.Literal (values, vertical)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.List&lt;T&gt;" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="vertical" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="values">The list.</param>
        <param name="vertical">A value indicating whether to layout the literal vertically.</param>
        <summary>
                Generates a list literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal&lt;T&gt;">
      <MemberSignature Language="C#" Value="public string Literal&lt;T&gt; (T[] values, bool vertical = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal&lt;T&gt;(!!T[] values, bool vertical) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal``1(``0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal(Of T) (values As T(), Optional vertical As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : 'T[] * bool -&gt; string" Usage="iCSharpHelper.Literal (values, vertical)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="values" Type="T[]" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="vertical" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="values">The object array.</param>
        <param name="vertical">A value indicating whether to layout the literal vertically.</param>
        <summary>
                Generates an object array literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Literal&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public string Literal&lt;TKey,TValue&gt; (System.Collections.Generic.Dictionary&lt;TKey,TValue&gt; values, bool vertical = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Literal&lt;TKey, TValue&gt;(class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TValue&gt; values, bool vertical) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Literal``2(System.Collections.Generic.Dictionary{``0,``1},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Literal(Of TKey, TValue) (values As Dictionary(Of TKey, TValue), Optional vertical As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="abstract member Literal : System.Collections.Generic.Dictionary&lt;'Key, 'Value&gt; * bool -&gt; string" Usage="iCSharpHelper.Literal (values, vertical)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="vertical" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="values">The dictionary.</param>
        <param name="vertical">A value indicating whether to layout the literal vertically.</param>
        <summary>
                Generates a dictionary literal.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace (params string[] name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Namespace(string[] name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Namespace(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Namespace (ParamArray name As String()) As String" />
      <MemberSignature Language="F#" Value="abstract member Namespace : string[] -&gt; string" Usage="iCSharpHelper.Namespace name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The base parts of the namespace.</param>
        <summary>
                Generates a valid C# namespace from the specified parts.
            </summary>
        <returns>The namespace.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference">
      <MemberSignature Language="C#" Value="public string Reference (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Reference(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Reference(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Reference (type As Type) As String" />
      <MemberSignature Language="F#" Value="abstract member Reference : Type -&gt; string" Usage="iCSharpHelper.Reference type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="type"> The type to reference. </param>
        <summary>
                Generates a C# type reference.
            </summary>
        <returns> The reference. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference">
      <MemberSignature Language="C#" Value="public string Reference (Type type, bool? fullName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Reference(class System.Type type, valuetype System.Nullable`1&lt;bool&gt; fullName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Reference(System.Type,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function Reference (type As Type, Optional fullName As Nullable(Of Boolean) = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member Reference : Type * Nullable&lt;bool&gt; -&gt; string" Usage="iCSharpHelper.Reference (type, fullName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fullName" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">The type to reference.</param>
        <param name="fullName">Whether the type should be namespace-qualified.</param>
        <summary>
                Generates a C# type reference.
            </summary>
        <returns>The reference.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statement">
      <MemberSignature Language="C#" Value="public string Statement (System.Linq.Expressions.Expression node, System.Collections.Generic.ISet&lt;string&gt; collectedNamespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Statement(class System.Linq.Expressions.Expression node, class System.Collections.Generic.ISet`1&lt;string&gt; collectedNamespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.Statement(System.Linq.Expressions.Expression,System.Collections.Generic.ISet{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Statement (node As Expression, collectedNamespaces As ISet(Of String)) As String" />
      <MemberSignature Language="F#" Value="abstract member Statement : System.Linq.Expressions.Expression * System.Collections.Generic.ISet&lt;string&gt; -&gt; string" Usage="iCSharpHelper.Statement (node, collectedNamespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="collectedNamespaces" Type="System.Collections.Generic.ISet&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="node">The node to be translated.</param>
        <param name="collectedNamespaces">Any namespaces required by the translated code will be added to this set.</param>
        <summary>
                Translates a node representing a statement into source code that would produce it.
            </summary>
        <returns>Source code that would produce <paramref name="node" />.</returns>
        <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownLiteral">
      <MemberSignature Language="C#" Value="public string UnknownLiteral (object value);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UnknownLiteral(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.UnknownLiteral(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnknownLiteral (value As Object) As String" />
      <MemberSignature Language="F#" Value="abstract member UnknownLiteral : obj -&gt; string" Usage="iCSharpHelper.UnknownLiteral value" />
      <MemberSignature Language="C#" Value="public string UnknownLiteral (object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
                Generates a literal for a type not known at compile time.
            </summary>
        <returns>The literal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlComment">
      <MemberSignature Language="C#" Value="public string XmlComment (string comment, int indent = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string XmlComment(string comment, int32 indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.ICSharpHelper.XmlComment(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlComment (comment As String, Optional indent As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="abstract member XmlComment : string * int -&gt; string" Usage="iCSharpHelper.XmlComment (comment, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comment" Type="System.String" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="indent" Type="System.Int32" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="comment">The comment.</param>
        <param name="indent">The indentation level to use when multiple lines are generated.</param>
        <summary>
                Generates an XML documentation comment. Handles escaping and newlines.
            </summary>
        <returns>The comment.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
