<Type Name="MethodCallCodeFragment" FullName="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment">
  <TypeSignature Language="C#" Value="public class MethodCallCodeFragment" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MethodCallCodeFragment extends System.Object" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class MethodCallCodeFragment" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
  <TypeSignature Language="F#" Value="type MethodCallCodeFragment = class" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
  <TypeSignature Language="C#" Value="public class MethodCallCodeFragment : Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MethodCallCodeFragment extends System.Object implements class Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class MethodCallCodeFragment&#xA;Implements IMethodCallCodeFragment" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type MethodCallCodeFragment = class&#xA;    interface IMethodCallCodeFragment" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="Microsoft.EntityFrameworkCore.Relational" FromVersion="6.0.0.0" To="Microsoft.EntityFrameworkCore" ToVersion="6.0.0.0" FrameworkAlternate="efcore-6.0" />
    <TypeForwarding From="Microsoft.EntityFrameworkCore.Relational" FromVersion="7.0.0.0" To="Microsoft.EntityFrameworkCore" ToVersion="7.0.0.0" FrameworkAlternate="efcore-7.0" />
    <TypeForwarding From="Microsoft.EntityFrameworkCore.Relational" FromVersion="8.0.0.0" To="Microsoft.EntityFrameworkCore" ToVersion="8.0.0.0" FrameworkAlternate="efcore-8.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents a call to a method.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-providers">Implementation of database providers and extensions</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MethodCallCodeFragment (System.Reflection.MethodInfo methodInfo, params object?[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo methodInfo, object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.#ctor(System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodInfo As MethodInfo, ParamArray arguments As Object())" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment : System.Reflection.MethodInfo * obj[] -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="new Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment (methodInfo, arguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arguments" Type="System.Object[]" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="methodInfo">The method's <see cref="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.MethodInfo" />.</param>
        <param name="arguments">The method call's arguments. Can be <see cref="T:Microsoft.EntityFrameworkCore.Design.NestedClosureCodeFragment" />.</param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MethodCallCodeFragment (string method, params object[] arguments);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string method, object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (method As String, ParamArray arguments As Object())" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment : string * obj[] -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="new Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment (method, arguments)" />
      <MemberSignature Language="C#" Value="public MethodCallCodeFragment (string method, params object?[] arguments);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use the overload accepting a MethodInfo")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the overload accepting a MethodInfo")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="arguments" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">The method's name.</param>
        <param name="arguments">
                The method call's arguments. Can be a fragment like <see cref="T:Microsoft.EntityFrameworkCore.Design.NestedClosureCodeFragment" /> or
                <see cref="T:Microsoft.EntityFrameworkCore.Design.PropertyAccessorCodeFragment" />.
            </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MethodCallCodeFragment (System.Reflection.MethodInfo methodInfo, object?[] arguments, Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment chainedCall);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo methodInfo, object[] arguments, class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment chainedCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.#ctor(System.Reflection.MethodInfo,System.Object[],Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodInfo As MethodInfo, arguments As Object(), chainedCall As MethodCallCodeFragment)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment : System.Reflection.MethodInfo * obj[] * Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="new Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment (methodInfo, arguments, chainedCall)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use the constructor without a chained call, and then invoke Chain() on the result", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the constructor without a chained call, and then invoke Chain() on the result", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="arguments" Type="System.Object[]" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="chainedCall" Type="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Index="2" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="methodInfo">The method's <see cref="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.MethodInfo" />.</param>
        <param name="arguments">The method call's arguments.  Can be <see cref="T:Microsoft.EntityFrameworkCore.Design.NestedClosureCodeFragment" />.</param>
        <param name="chainedCall">The next method call to chain after this.</param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MethodCallCodeFragment (string method, object[] arguments, Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment chainedCall);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string method, object[] arguments, class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment chainedCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.#ctor(System.String,System.Object[],Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (method As String, arguments As Object(), chainedCall As MethodCallCodeFragment)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment : string * obj[] * Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="new Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment (method, arguments, chainedCall)" />
      <MemberSignature Language="C#" Value="public MethodCallCodeFragment (string method, object?[] arguments, Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment chainedCall);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use the overload accepting a MethodInfo, and then invoke Chain on the instance for the chained call")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the overload accepting a MethodInfo, and then invoke Chain on the instance for the chained call")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="method" Type="System.String" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="arguments" Type="System.Object[]" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="chainedCall" Type="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="method">The method's name.</param>
        <param name="arguments">The method call's arguments.  Can be <see cref="T:Microsoft.EntityFrameworkCore.Design.NestedClosureCodeFragment" />.</param>
        <param name="chainedCall">The next method call to chain after this.</param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;object&gt; Arguments { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;object&gt; Arguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Arguments As IReadOnlyList(Of Object)" />
      <MemberSignature Language="F#" Value="member this.Arguments : System.Collections.Generic.IReadOnlyList&lt;obj&gt;" Usage="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Arguments" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;object?&gt; Arguments { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the method call's arguments.
            </summary>
        <value> The method call's arguments. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chain">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment Chain (Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment call);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment Chain(class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment call) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Chain(Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Chain (call As MethodCallCodeFragment) As MethodCallCodeFragment" />
      <MemberSignature Language="F#" Value="abstract member Chain : Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment&#xA;override this.Chain : Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="methodCallCodeFragment.Chain call" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="call">The next method.</param>
        <summary>
                Creates a method chain from this method to another.
            </summary>
        <returns>A new fragment representing the method chain.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chain">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment Chain (System.Reflection.MethodInfo methodInfo, params object[] arguments);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment Chain(class System.Reflection.MethodInfo methodInfo, object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Chain(System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Chain (methodInfo As MethodInfo, ParamArray arguments As Object()) As MethodCallCodeFragment" />
      <MemberSignature Language="F#" Value="abstract member Chain : System.Reflection.MethodInfo * obj[] -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment&#xA;override this.Chain : System.Reflection.MethodInfo * obj[] -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="methodCallCodeFragment.Chain (methodInfo, arguments)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment Chain (System.Reflection.MethodInfo methodInfo, params object?[] arguments);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="arguments" Type="System.Object[]" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="methodInfo">The method's <see cref="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.MethodInfo" />.</param>
        <param name="arguments">The next method call's arguments.</param>
        <summary>
                Creates a method chain from this method to another.
            </summary>
        <returns>A new fragment representing the method chain.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chain">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment Chain (string method, params object[] arguments);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment Chain(string method, object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Chain(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Chain (method As String, ParamArray arguments As Object()) As MethodCallCodeFragment" />
      <MemberSignature Language="F#" Value="abstract member Chain : string * obj[] -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment&#xA;override this.Chain : string * obj[] -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="methodCallCodeFragment.Chain (method, arguments)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment Chain (string method, params object?[] arguments);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use the overload accepting a MethodInfo")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the overload accepting a MethodInfo")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="arguments" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">The next method's name.</param>
        <param name="arguments">The next method call's arguments.</param>
        <summary>
                Creates a method chain from this method to another.
            </summary>
        <returns>A new fragment representing the method chain.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainedCall">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment ChainedCall { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment ChainedCall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.ChainedCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChainedCall As MethodCallCodeFragment" />
      <MemberSignature Language="F#" Value="member this.ChainedCall : Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.ChainedCall" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment? ChainedCall { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the next method call to chain after this.
            </summary>
        <value> The next method call. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public virtual string? DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeclaringType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeclaringType As String" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : string" Usage="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.DeclaringType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.DeclaringType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the name of the method's declaring type.
            </summary>
        <value> The declaring type's name. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual string Method { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Method As String" />
      <MemberSignature Language="F#" Value="member this.Method : string" Usage="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Method" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Method</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the method's name.
            </summary>
        <value> The method's name. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo? MethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo MethodInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.MethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MethodInfo As MethodInfo" />
      <MemberSignature Language="F#" Value="member this.MethodInfo : System.Reflection.MethodInfo" Usage="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.MethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the <see cref="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.MethodInfo" /> for this method call.
            </summary>
        <value> The <see cref="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.MethodInfo" />. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;object?&gt; Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Microsoft#EntityFrameworkCore#Design#IMethodCallCodeFragment#Arguments" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Arguments As IEnumerable(Of Object) Implements IMethodCallCodeFragment.Arguments" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments : seq&lt;obj&gt;" Usage="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment? Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Microsoft#EntityFrameworkCore#Design#IMethodCallCodeFragment#ChainedCall" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ChainedCall As IMethodCallCodeFragment Implements IMethodCallCodeFragment.ChainedCall" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall : Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment" Usage="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;string&gt; Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Microsoft#EntityFrameworkCore#Design#IMethodCallCodeFragment#TypeArguments" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property TypeArguments As IEnumerable(Of String) Implements IMethodCallCodeFragment.TypeArguments" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments : seq&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public virtual string? Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Namespace As String" />
      <MemberSignature Language="F#" Value="member this.Namespace : string" Usage="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the namespace of the method's declaring type.
            </summary>
        <value> The declaring type's name. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
