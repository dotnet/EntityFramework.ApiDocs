<Type Name="FluentApiCodeFragment" FullName="Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment">
  <TypeSignature Language="C#" Value="public class FluentApiCodeFragment : Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FluentApiCodeFragment extends System.Object implements class Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class FluentApiCodeFragment&#xA;Implements IMethodCallCodeFragment" />
  <TypeSignature Language="F#" Value="type FluentApiCodeFragment = class&#xA;    interface IMethodCallCodeFragment" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Represents a fluent API method call.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FluentApiCodeFragment (string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (method As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment : string -&gt; Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment" Usage="new Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment method" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="method">The method's name.</param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;object?&gt; Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;object&gt; Arguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Arguments As IList(Of Object)" />
      <MemberSignature Language="F#" Value="member this.Arguments : System.Collections.Generic.IList&lt;obj&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the method call's arguments.
            </summary>
        <value>The method call's arguments.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chain">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment Chain (Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment call);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment Chain(class Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment call) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Chain(Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Chain (call As FluentApiCodeFragment) As FluentApiCodeFragment" />
      <MemberSignature Language="F#" Value="abstract member Chain : Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment -&gt; Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment&#xA;override this.Chain : Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment -&gt; Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment" Usage="fluentApiCodeFragment.Chain call" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment" />
      </Parameters>
      <Docs>
        <param name="call">The next method.</param>
        <summary>
                Creates a method chain from this method to another.
            </summary>
        <returns>A new fragment representing the method chain.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainedCall">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment? ChainedCall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment ChainedCall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.ChainedCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ChainedCall As FluentApiCodeFragment" />
      <MemberSignature Language="F#" Value="member this.ChainedCall : Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment with get, set" Usage="Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.ChainedCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the next method call to chain after this.
            </summary>
        <value>The next method call.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public virtual string? DeclaringType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeclaringType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeclaringType As String" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : string with get, set" Usage="Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the name of the method's declaring type.
            </summary>
        <value> The declaring type's name. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterChain">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment? FilterChain (Func&lt;Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment FilterChain(class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.FilterChain(System.Func{Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FilterChain (predicate As Func(Of FluentApiCodeFragment, Boolean)) As FluentApiCodeFragment" />
      <MemberSignature Language="F#" Value="abstract member FilterChain : Func&lt;Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment, bool&gt; -&gt; Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment&#xA;override this.FilterChain : Func&lt;Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment, bool&gt; -&gt; Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment" Usage="fluentApiCodeFragment.FilterChain predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="predicate">A function to test each method call for a condition.</param>
        <summary>
                Creates a new method chain with calls filtered based on a predicate.
            </summary>
        <returns>A new method chain that only contains calls from the original one that satisfy the condition.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment? From (Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment? call);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment From(class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment call) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.From(Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function From (call As MethodCallCodeFragment) As FluentApiCodeFragment" />
      <MemberSignature Language="F#" Value="static member From : Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment -&gt; Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment" Usage="Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.From call" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="efcore-7.0">
            <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.NotNullIfNotNull("call")]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.NotNullIfNotNull("call")&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="call" Type="Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" />
      </Parameters>
      <Docs>
        <param name="call">The existing method call.</param>
        <summary>
                Creates a new fluent API method call from an existing method call.
            </summary>
        <returns>The new fluent API method call.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredUsings">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetRequiredUsings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetRequiredUsings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.GetRequiredUsings" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable Function GetRequiredUsings () As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetRequiredUsings : unit -&gt; seq&lt;string&gt;&#xA;override this.GetRequiredUsings : unit -&gt; seq&lt;string&gt;" Usage="fluentApiCodeFragment.GetRequiredUsings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment+&lt;GetRequiredUsings&gt;d__37))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment+&lt;GetRequiredUsings&gt;d__37))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets the using statements required for this method chain.
            </summary>
        <returns>The usings.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHandledByDataAnnotations">
      <MemberSignature Language="C#" Value="public virtual bool IsHandledByDataAnnotations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHandledByDataAnnotations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.IsHandledByDataAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsHandledByDataAnnotations As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsHandledByDataAnnotations : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.IsHandledByDataAnnotations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets a value indicating whether this method call has an equivalent data annotation.
            </summary>
        <value>A value indicating whether this method call has an equivalent data annotation.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Method As String" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the method's name.
            </summary>
        <value> The method's name. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;object?&gt; Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Microsoft#EntityFrameworkCore#Design#IMethodCallCodeFragment#Arguments" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Arguments As IEnumerable(Of Object) Implements IMethodCallCodeFragment.Arguments" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments : seq&lt;obj&gt;" Usage="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.Arguments</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment? Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Microsoft#EntityFrameworkCore#Design#IMethodCallCodeFragment#ChainedCall" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ChainedCall As IMethodCallCodeFragment Implements IMethodCallCodeFragment.ChainedCall" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall : Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment" Usage="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.ChainedCall</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;string&gt; Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Microsoft#EntityFrameworkCore#Design#IMethodCallCodeFragment#TypeArguments" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property TypeArguments As IEnumerable(Of String) Implements IMethodCallCodeFragment.TypeArguments" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments : seq&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Design.IMethodCallCodeFragment.TypeArguments</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public virtual string? Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Namespace As String" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the namespace of the method's declaring type.
            </summary>
        <value> The declaring type's name. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; TypeArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TypeArguments As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Design.FluentApiCodeFragment.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the method call's generic type arguments.
            </summary>
        <value>The type arguments.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
