<Type Name="SqlServerStrings" FullName="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings">
  <TypeSignature Language="C#" Value="public static class SqlServerStrings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlServerStrings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerStrings" />
  <TypeSignature Language="F#" Value="type SqlServerStrings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AlterIdentityColumn">
      <MemberSignature Language="C#" Value="public static string AlterIdentityColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string AlterIdentityColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.AlterIdentityColumn" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlterIdentityColumn As String" />
      <MemberSignature Language="F#" Value="static member AlterIdentityColumn : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.AlterIdentityColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                To change the IDENTITY property of a column, the column needs to be dropped and recreated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterMemoryOptimizedTable">
      <MemberSignature Language="C#" Value="public static string AlterMemoryOptimizedTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string AlterMemoryOptimizedTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.AlterMemoryOptimizedTable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlterMemoryOptimizedTable As String" />
      <MemberSignature Language="F#" Value="static member AlterMemoryOptimizedTable : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.AlterMemoryOptimizedTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                To change the memory-optimized setting on a table, the table needs to be dropped and recreated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotProduceUnterminatedSQLWithComments">
      <MemberSignature Language="C#" Value="public static string CannotProduceUnterminatedSQLWithComments (object operation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotProduceUnterminatedSQLWithComments(object operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.CannotProduceUnterminatedSQLWithComments(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotProduceUnterminatedSQLWithComments (operation As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotProduceUnterminatedSQLWithComments : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.CannotProduceUnterminatedSQLWithComments operation" />
      <MemberSignature Language="C#" Value="public static string CannotProduceUnterminatedSQLWithComments (object? operation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>
                Can't produce unterminated SQL with comments when generating migrations SQL for {operation}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompatibilityLevelTooLowForScalarCollections">
      <MemberSignature Language="C#" Value="public static string CompatibilityLevelTooLowForScalarCollections (object? compatibilityLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CompatibilityLevelTooLowForScalarCollections(object compatibilityLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.CompatibilityLevelTooLowForScalarCollections(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompatibilityLevelTooLowForScalarCollections (compatibilityLevel As Object) As String" />
      <MemberSignature Language="F#" Value="static member CompatibilityLevelTooLowForScalarCollections : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.CompatibilityLevelTooLowForScalarCollections compatibilityLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compatibilityLevel" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="compatibilityLevel">To be added.</param>
        <summary>
                EF Core's SQL Server compatibility level is set to {compatibilityLevel}; compatibility level 130 (SQL Server 2016) is the minimum for most forms of querying of JSON arrays.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsFunctionOnClient">
      <MemberSignature Language="C#" Value="public static string ContainsFunctionOnClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ContainsFunctionOnClient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.ContainsFunctionOnClient" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContainsFunctionOnClient As String" />
      <MemberSignature Language="F#" Value="static member ContainsFunctionOnClient : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.ContainsFunctionOnClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The 'Contains' method is not supported because the query has switched to client-evaluation. Inspect the log to determine which query expressions are triggering client-evaluation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnIdentityIncrementMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateColumnIdentityIncrementMismatch (object entityType1, object property1, object entityType2, object property2, object columnName, object table);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateColumnIdentityIncrementMismatch(object entityType1, object property1, object entityType2, object property2, object columnName, object table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateColumnIdentityIncrementMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateColumnIdentityIncrementMismatch (entityType1 As Object, property1 As Object, entityType2 As Object, property2 As Object, columnName As Object, table As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnIdentityIncrementMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateColumnIdentityIncrementMismatch (entityType1, property1, entityType2, property2, columnName, table)" />
      <MemberSignature Language="C#" Value="public static string DuplicateColumnIdentityIncrementMismatch (object? entityType1, object? property1, object? entityType2, object? property2, object? columnName, object? table);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property1" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property2" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnName" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="property1">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="property2">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}', but are configured with different identity increment values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnIdentitySeedMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateColumnIdentitySeedMismatch (object entityType1, object property1, object entityType2, object property2, object columnName, object table);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateColumnIdentitySeedMismatch(object entityType1, object property1, object entityType2, object property2, object columnName, object table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateColumnIdentitySeedMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateColumnIdentitySeedMismatch (entityType1 As Object, property1 As Object, entityType2 As Object, property2 As Object, columnName As Object, table As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnIdentitySeedMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateColumnIdentitySeedMismatch (entityType1, property1, entityType2, property2, columnName, table)" />
      <MemberSignature Language="C#" Value="public static string DuplicateColumnIdentitySeedMismatch (object? entityType1, object? property1, object? entityType2, object? property2, object? columnName, object? table);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property1" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property2" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnName" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="property1">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="property2">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}', but are configured with different identity seed values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnNameValueGenerationStrategyMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateColumnNameValueGenerationStrategyMismatch (object entityType1, object property1, object entityType2, object property2, object columnName, object table);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateColumnNameValueGenerationStrategyMismatch(object entityType1, object property1, object entityType2, object property2, object columnName, object table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateColumnNameValueGenerationStrategyMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateColumnNameValueGenerationStrategyMismatch (entityType1 As Object, property1 As Object, entityType2 As Object, property2 As Object, columnName As Object, table As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnNameValueGenerationStrategyMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateColumnNameValueGenerationStrategyMismatch (entityType1, property1, entityType2, property2, columnName, table)" />
      <MemberSignature Language="C#" Value="public static string DuplicateColumnNameValueGenerationStrategyMismatch (object? entityType1, object? property1, object? entityType2, object? property2, object? columnName, object? table);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" />
        <Parameter Name="property1" Type="System.Object" />
        <Parameter Name="entityType2" Type="System.Object" />
        <Parameter Name="property2" Type="System.Object" />
        <Parameter Name="columnName" Type="System.Object" />
        <Parameter Name="table" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="property1">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="property2">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}', but are configured with different value generation strategies.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnSequenceMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateColumnSequenceMismatch (object entityType1, object property1, object entityType2, object property2, object columnName, object table);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateColumnSequenceMismatch(object entityType1, object property1, object entityType2, object property2, object columnName, object table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateColumnSequenceMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateColumnSequenceMismatch (entityType1 As Object, property1 As Object, entityType2 As Object, property2 As Object, columnName As Object, table As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnSequenceMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateColumnSequenceMismatch (entityType1, property1, entityType2, property2, columnName, table)" />
      <MemberSignature Language="C#" Value="public static string DuplicateColumnSequenceMismatch (object? entityType1, object? property1, object? entityType2, object? property2, object? columnName, object? table);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property1" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property2" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnName" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="property1">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="property2">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}', but are configured with different hi-lo sequences.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateColumnSparsenessMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateColumnSparsenessMismatch (object? entityType1, object? property1, object? entityType2, object? property2, object? columnName, object? table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateColumnSparsenessMismatch(object entityType1, object property1, object entityType2, object property2, object columnName, object table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateColumnSparsenessMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateColumnSparsenessMismatch (entityType1 As Object, property1 As Object, entityType2 As Object, property2 As Object, columnName As Object, table As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateColumnSparsenessMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateColumnSparsenessMismatch (entityType1, property1, entityType2, property2, columnName, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType1" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property1" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property2" Type="System.Object" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnName" Type="System.Object" Index="4" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="5" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType1">To be added.</param>
        <param name="property1">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="property2">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}', but are configured with different sparseness.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateIndexClusteredMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateIndexClusteredMismatch (object index1, object entityType1, object index2, object entityType2, object table, object indexName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateIndexClusteredMismatch(object index1, object entityType1, object index2, object entityType2, object table, object indexName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexClusteredMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateIndexClusteredMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, indexName As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateIndexClusteredMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexClusteredMismatch (index1, entityType1, index2, entityType2, table, indexName)" />
      <MemberSignature Language="C#" Value="public static string DuplicateIndexClusteredMismatch (object? index1, object? entityType1, object? index2, object? entityType2, object? table, object? indexName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="indexName" Type="System.Object" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="indexName">To be added.</param>
        <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}', but have different clustered configurations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateIndexDataCompressionMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateIndexDataCompressionMismatch (object? index1, object? entityType1, object? index2, object? entityType2, object? table, object? indexName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateIndexDataCompressionMismatch(object index1, object entityType1, object index2, object entityType2, object table, object indexName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexDataCompressionMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateIndexDataCompressionMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, indexName As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateIndexDataCompressionMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexDataCompressionMismatch (index1, entityType1, index2, entityType2, table, indexName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="indexName" Type="System.Object" Index="5" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="indexName">To be added.</param>
        <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}', but have different data compression configurations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateIndexFillFactorMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateIndexFillFactorMismatch (object index1, object entityType1, object index2, object entityType2, object table, object indexName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateIndexFillFactorMismatch(object index1, object entityType1, object index2, object entityType2, object table, object indexName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexFillFactorMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateIndexFillFactorMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, indexName As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateIndexFillFactorMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexFillFactorMismatch (index1, entityType1, index2, entityType2, table, indexName)" />
      <MemberSignature Language="C#" Value="public static string DuplicateIndexFillFactorMismatch (object? index1, object? entityType1, object? index2, object? entityType2, object? table, object? indexName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="indexName" Type="System.Object" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="indexName">To be added.</param>
        <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}', but have different fill factor configurations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateIndexIncludedMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateIndexIncludedMismatch (object index1, object entityType1, object index2, object entityType2, object table, object indexName, object includedColumns1, object includedColumns2);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateIndexIncludedMismatch(object index1, object entityType1, object index2, object entityType2, object table, object indexName, object includedColumns1, object includedColumns2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexIncludedMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateIndexIncludedMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, indexName As Object, includedColumns1 As Object, includedColumns2 As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateIndexIncludedMismatch : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexIncludedMismatch (index1, entityType1, index2, entityType2, table, indexName, includedColumns1, includedColumns2)" />
      <MemberSignature Language="C#" Value="public static string DuplicateIndexIncludedMismatch (object? index1, object? entityType1, object? index2, object? entityType2, object? table, object? indexName, object? includedColumns1, object? includedColumns2);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="indexName" Type="System.Object" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="includedColumns1" Type="System.Object" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="includedColumns2" Type="System.Object" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="indexName">To be added.</param>
        <param name="includedColumns1">To be added.</param>
        <param name="includedColumns2">To be added.</param>
        <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}', but have different included columns: {includedColumns1} and {includedColumns2}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateIndexOnlineMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateIndexOnlineMismatch (object index1, object entityType1, object index2, object entityType2, object table, object indexName);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateIndexOnlineMismatch(object index1, object entityType1, object index2, object entityType2, object table, object indexName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexOnlineMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateIndexOnlineMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, indexName As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateIndexOnlineMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexOnlineMismatch (index1, entityType1, index2, entityType2, table, indexName)" />
      <MemberSignature Language="C#" Value="public static string DuplicateIndexOnlineMismatch (object? index1, object? entityType1, object? index2, object? entityType2, object? table, object? indexName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="indexName" Type="System.Object" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="indexName">To be added.</param>
        <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}', but have different online configurations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateIndexSortInTempDbMismatch">
      <MemberSignature Language="C#" Value="public static string DuplicateIndexSortInTempDbMismatch (object? index1, object? entityType1, object? index2, object? entityType2, object? table, object? indexName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateIndexSortInTempDbMismatch(object index1, object entityType1, object index2, object entityType2, object table, object indexName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexSortInTempDbMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateIndexSortInTempDbMismatch (index1 As Object, entityType1 As Object, index2 As Object, entityType2 As Object, table As Object, indexName As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateIndexSortInTempDbMismatch : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateIndexSortInTempDbMismatch (index1, entityType1, index2, entityType2, table, indexName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="index2" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="indexName" Type="System.Object" Index="5" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="index2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="indexName">To be added.</param>
        <summary>
                The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}', but have different sort in tempdb configurations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateKeyMismatchedClustering">
      <MemberSignature Language="C#" Value="public static string DuplicateKeyMismatchedClustering (object key1, object entityType1, object key2, object entityType2, object table, object keyName);" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateKeyMismatchedClustering(object key1, object entityType1, object key2, object entityType2, object table, object keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateKeyMismatchedClustering(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateKeyMismatchedClustering (key1 As Object, entityType1 As Object, key2 As Object, entityType2 As Object, table As Object, keyName As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateKeyMismatchedClustering : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.DuplicateKeyMismatchedClustering (key1, entityType1, key2, entityType2, table, keyName)" />
      <MemberSignature Language="C#" Value="public static string DuplicateKeyMismatchedClustering (object? key1, object? entityType1, object? key2, object? entityType2, object? table, object? keyName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType1" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="key2" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType2" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="table" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="keyName" Type="System.Object" Index="5" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="key1">To be added.</param>
        <param name="entityType1">To be added.</param>
        <param name="key2">To be added.</param>
        <param name="entityType2">To be added.</param>
        <param name="table">To be added.</param>
        <param name="keyName">To be added.</param>
        <summary>
                The keys {key1} on '{entityType1}' and {key2} on '{entityType2}' are both mapped to '{table}.{keyName}', but have different clustering configurations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeTextFunctionOnClient">
      <MemberSignature Language="C#" Value="public static string FreeTextFunctionOnClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FreeTextFunctionOnClient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.FreeTextFunctionOnClient" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FreeTextFunctionOnClient As String" />
      <MemberSignature Language="F#" Value="static member FreeTextFunctionOnClient : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.FreeTextFunctionOnClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The 'FreeText' method is not supported because the query has switched to client-evaluation. Inspect the log to determine which query expressions are triggering client-evaluation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionOnClient">
      <MemberSignature Language="C#" Value="public static string FunctionOnClient (object methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FunctionOnClient(object methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.FunctionOnClient(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FunctionOnClient (methodName As Object) As String" />
      <MemberSignature Language="F#" Value="static member FunctionOnClient : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.FunctionOnClient methodName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <summary>
                The '{methodName}' method is not supported because the query has switched to client-evaluation. Inspect the log to determine which query expressions are triggering client-evaluation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityBadType">
      <MemberSignature Language="C#" Value="public static string IdentityBadType (object property, object entityType, object propertyType);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentityBadType(object property, object entityType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IdentityBadType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentityBadType (property As Object, entityType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentityBadType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IdentityBadType (property, entityType, propertyType)" />
      <MemberSignature Language="C#" Value="public static string IdentityBadType (object? property, object? entityType, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                Identity value generation cannot be used for the property '{property}' on entity type '{entityType}' because the property type is '{propertyType}'. Identity value generation can only be used with signed integer properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePropertyDuplicated">
      <MemberSignature Language="C#" Value="public static string IncludePropertyDuplicated (object entityType, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludePropertyDuplicated(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyDuplicated(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludePropertyDuplicated (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludePropertyDuplicated : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyDuplicated (entityType, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                Include property '{entityType}.{property}' cannot be defined multiple times.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePropertyDuplicated">
      <MemberSignature Language="C#" Value="public static string IncludePropertyDuplicated (object? entityType, object? property, object? index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludePropertyDuplicated(object entityType, object property, object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyDuplicated(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludePropertyDuplicated (entityType As Object, property As Object, index As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludePropertyDuplicated : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyDuplicated (entityType, property, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="index" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                The include property '{entityType}.{property}' was specified multiple times for the index {index}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePropertyInIndex">
      <MemberSignature Language="C#" Value="public static string IncludePropertyInIndex (object entityType, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludePropertyInIndex(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyInIndex(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludePropertyInIndex (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludePropertyInIndex : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyInIndex (entityType, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                Include property '{entityType}.{property}' is already included in the index.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePropertyInIndex">
      <MemberSignature Language="C#" Value="public static string IncludePropertyInIndex (object? entityType, object? property, object? index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludePropertyInIndex(object entityType, object property, object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyInIndex(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludePropertyInIndex (entityType As Object, property As Object, index As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludePropertyInIndex : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyInIndex (entityType, property, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="index" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                The include property '{entityType}.{property}' is already part of the index {index}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePropertyNotFound">
      <MemberSignature Language="C#" Value="public static string IncludePropertyNotFound (object entityType, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludePropertyNotFound(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyNotFound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludePropertyNotFound (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludePropertyNotFound : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyNotFound (entityType, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                Include property '{entityType}.{property}' not found.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePropertyNotFound">
      <MemberSignature Language="C#" Value="public static string IncludePropertyNotFound (object? property, object? index, object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludePropertyNotFound(object property, object index, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyNotFound(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludePropertyNotFound (property As Object, index As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludePropertyNotFound : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncludePropertyNotFound (property, index, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="index" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="index">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The include property '{property}' specified on the index {index} was not found on entity type '{entityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleSqlOutputClauseMismatch">
      <MemberSignature Language="C#" Value="public static string IncompatibleSqlOutputClauseMismatch (object? table, object? entityType, object? otherEntityType, object? entityTypeWithSqlOutputClause, object? entityTypeWithoutSqlOutputClause);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncompatibleSqlOutputClauseMismatch(object table, object entityType, object otherEntityType, object entityTypeWithSqlOutputClause, object entityTypeWithoutSqlOutputClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncompatibleSqlOutputClauseMismatch(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncompatibleSqlOutputClauseMismatch (table As Object, entityType As Object, otherEntityType As Object, entityTypeWithSqlOutputClause As Object, entityTypeWithoutSqlOutputClause As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncompatibleSqlOutputClauseMismatch : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncompatibleSqlOutputClauseMismatch (table, entityType, otherEntityType, entityTypeWithSqlOutputClause, entityTypeWithoutSqlOutputClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityTypeWithSqlOutputClause" Type="System.Object" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityTypeWithoutSqlOutputClause" Type="System.Object" Index="4" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <param name="entityTypeWithSqlOutputClause">To be added.</param>
        <param name="entityTypeWithoutSqlOutputClause">To be added.</param>
        <summary>
                Cannot use table '{table}' for entity type '{entityType}' since it is being used for entity type '{otherEntityType}' and entity type '{entityTypeWithSqlOutputClause}' is configured to use the SQL OUTPUT clause, but entity type '{entityTypeWithoutSqlOutputClause}' is not.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleTableMemoryOptimizedMismatch">
      <MemberSignature Language="C#" Value="public static string IncompatibleTableMemoryOptimizedMismatch (object table, object entityType, object otherEntityType, object memoryOptimizedEntityType, object nonMemoryOptimizedEntityType);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncompatibleTableMemoryOptimizedMismatch(object table, object entityType, object otherEntityType, object memoryOptimizedEntityType, object nonMemoryOptimizedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncompatibleTableMemoryOptimizedMismatch(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncompatibleTableMemoryOptimizedMismatch (table As Object, entityType As Object, otherEntityType As Object, memoryOptimizedEntityType As Object, nonMemoryOptimizedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncompatibleTableMemoryOptimizedMismatch : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IncompatibleTableMemoryOptimizedMismatch (table, entityType, otherEntityType, memoryOptimizedEntityType, nonMemoryOptimizedEntityType)" />
      <MemberSignature Language="C#" Value="public static string IncompatibleTableMemoryOptimizedMismatch (object? table, object? entityType, object? otherEntityType, object? memoryOptimizedEntityType, object? nonMemoryOptimizedEntityType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="otherEntityType" Type="System.Object" />
        <Parameter Name="memoryOptimizedEntityType" Type="System.Object" />
        <Parameter Name="nonMemoryOptimizedEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <param name="memoryOptimizedEntityType">To be added.</param>
        <param name="nonMemoryOptimizedEntityType">To be added.</param>
        <summary>
                Cannot use table '{table}' for entity type '{entityType}' since it is being used for entity type '{otherEntityType}' and entity type '{memoryOptimizedEntityType}' is marked as memory-optimized, but entity type '{nonMemoryOptimizedEntityType}' is not.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexTableRequired">
      <MemberSignature Language="C#" Value="public static string IndexTableRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string IndexTableRequired" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IndexTableRequired" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IndexTableRequired As String" />
      <MemberSignature Language="F#" Value="static member IndexTableRequired : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.IndexTableRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                SQL Server requires the table name to be specified for index operations. Specify table name in calls to 'MigrationBuilder.RenameIndex' and 'DropIndex'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidColumnNameForFreeText">
      <MemberSignature Language="C#" Value="public static string InvalidColumnNameForFreeText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string InvalidColumnNameForFreeText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.InvalidColumnNameForFreeText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidColumnNameForFreeText As String" />
      <MemberSignature Language="F#" Value="static member InvalidColumnNameForFreeText : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.InvalidColumnNameForFreeText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The expression passed to the 'propertyReference' parameter of the 'FreeText' method is not a valid reference to a property. The expression must represent a reference to a full-text indexed property on the object referenced in the from clause: 'from e in context.Entities where EF.Functions.FreeText(e.SomeProperty, textToSearchFor) select e'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidTableToIncludeInScaffolding">
      <MemberSignature Language="C#" Value="public static string InvalidTableToIncludeInScaffolding (object table);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidTableToIncludeInScaffolding(object table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.InvalidTableToIncludeInScaffolding(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidTableToIncludeInScaffolding (table As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidTableToIncludeInScaffolding : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.InvalidTableToIncludeInScaffolding table" />
      <MemberSignature Language="C#" Value="public static string InvalidTableToIncludeInScaffolding (object? table);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <summary>
                The specified table '{table}' is not in a valid format. Specify tables using the format '[schema].[table]'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonValuePathExpressionsNotSupported">
      <MemberSignature Language="C#" Value="public static string JsonValuePathExpressionsNotSupported (object? compatibilityLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string JsonValuePathExpressionsNotSupported(object compatibilityLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.JsonValuePathExpressionsNotSupported(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JsonValuePathExpressionsNotSupported (compatibilityLevel As Object) As String" />
      <MemberSignature Language="F#" Value="static member JsonValuePathExpressionsNotSupported : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.JsonValuePathExpressionsNotSupported compatibilityLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compatibilityLevel" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="compatibilityLevel">To be added.</param>
        <summary>
                A non-constant array index or property name was used when navigating inside a JSON document, but EF Core's SQL Server compatibility level is set to {compatibilityLevel}; this is only supported with compatibility level 140 (SQL Server 2017) or higher.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogByteIdentityColumn">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogByteIdentityColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogByteIdentityColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogByteIdentityColumn" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogByteIdentityColumn As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogByteIdentityColumn : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogByteIdentityColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The property '{property}' on entity type '{entityType}' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDefaultDecimalTypeColumn">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogDefaultDecimalTypeColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogDefaultDecimalTypeColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogDefaultDecimalTypeColumn" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogDefaultDecimalTypeColumn As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogDefaultDecimalTypeColumn : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogDefaultDecimalTypeColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                No type was specified for the decimal column '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundColumn">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition LogFoundColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition LogFoundColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundColumn" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundColumn As FallbackEventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundColumn : Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found column with table: {tableName}, column name: {columnName}, ordinal: {ordinal}, data type: {dataType}, maximum length: {maxLength}, precision: {precision}, scale: {scale}, nullable: {isNullable}, identity: {isIdentity}, default value: {defaultValue}, computed value: {computedValue}
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundDefaultSchema">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogFoundDefaultSchema;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogFoundDefaultSchema" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundDefaultSchema" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundDefaultSchema As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundDefaultSchema : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundDefaultSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found default schema {defaultSchema}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundForeignKey">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogFoundForeignKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogFoundForeignKey" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundForeignKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundForeignKey As EventDefinition(Of String, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundForeignKey : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundForeignKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found foreign key on table: {tableName}, name: {foreignKeyName}, principal table: {principalTableName}, delete action: {deleteAction}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundIndex">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,bool&gt; LogFoundIndex;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, bool&gt; LogFoundIndex" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundIndex As EventDefinition(Of String, String, Boolean) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundIndex : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundIndex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found index with name: {indexName}, table: {tableName}, is unique: {isUnique}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundPrimaryKey">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogFoundPrimaryKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogFoundPrimaryKey" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundPrimaryKey As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundPrimaryKey : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundPrimaryKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found primary key with name: {primaryKeyName}, table: {tableName}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundSequence">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition LogFoundSequence;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition LogFoundSequence" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundSequence" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundSequence As FallbackEventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundSequence : Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundSequence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found sequence name: {name}, data type: {dataType}, cyclic: {isCyclic}, increment: {increment}, start: {start}, minimum: {min}, maximum: {max}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundTable">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogFoundTable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogFoundTable" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundTable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundTable As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundTable : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundTable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found table with name: {name}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundTypeAlias">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogFoundTypeAlias;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogFoundTypeAlias" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundTypeAlias" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundTypeAlias As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundTypeAlias : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundTypeAlias" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found type alias with name: {alias} which maps to underlying data type {dataType}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundUniqueConstraint">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogFoundUniqueConstraint;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogFoundUniqueConstraint" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundUniqueConstraint" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundUniqueConstraint As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundUniqueConstraint : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogFoundUniqueConstraint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found unique constraint with name: {uniqueConstraintName}, table: {tableName}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMissingSchema">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogMissingSchema;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogMissingSchema" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogMissingSchema" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogMissingSchema As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogMissingSchema : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogMissingSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unable to find a schema in the database matching the selected schema {schema}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMissingTable">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogMissingTable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogMissingTable" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogMissingTable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogMissingTable As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogMissingTable : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogMissingTable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unable to find a table in the database matching the selected table {table}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPrincipalColumnNotFound">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogPrincipalColumnNotFound;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogPrincipalColumnNotFound" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogPrincipalColumnNotFound" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogPrincipalColumnNotFound As EventDefinition(Of String, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogPrincipalColumnNotFound : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogPrincipalColumnNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                For foreign key {foreignKeyName} on table {tableName}, unable to find the column called {principalColumnName} on the foreign key's principal table, {principaltableName}. Skipping foreign key.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPrincipalTableNotInSelectionSet">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogPrincipalTableNotInSelectionSet;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogPrincipalTableNotInSelectionSet" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogPrincipalTableNotInSelectionSet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogPrincipalTableNotInSelectionSet As EventDefinition(Of String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogPrincipalTableNotInSelectionSet : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogPrincipalTableNotInSelectionSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                For foreign key {fkName} on table {tableName}, unable to model the end of the foreign key on principal table {principaltableName}. This is usually because the principal table was not included in the selection set.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogReflexiveConstraintIgnored">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogReflexiveConstraintIgnored;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogReflexiveConstraintIgnored" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogReflexiveConstraintIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogReflexiveConstraintIgnored As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogReflexiveConstraintIgnored : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.LogReflexiveConstraintIgnored" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Skipping foreign key '{foreignKeyName}' on table '{tableName}' since all of its columns reference themselves.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleIdentityColumns">
      <MemberSignature Language="C#" Value="public static string MultipleIdentityColumns (object properties, object table);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleIdentityColumns(object properties, object table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.MultipleIdentityColumns(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleIdentityColumns (properties As Object, table As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleIdentityColumns : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.MultipleIdentityColumns (properties, table)" />
      <MemberSignature Language="C#" Value="public static string MultipleIdentityColumns (object? properties, object? table);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Object" />
        <Parameter Name="table" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                The properties {properties} are configured to use 'Identity' value generation and are mapped to the same table '{table}', but only one column per table can be configured as 'Identity'. Call 'ValueGeneratedNever' in 'OnModelCreating' for properties that should not use 'Identity'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoInitialCatalog">
      <MemberSignature Language="C#" Value="public static string NoInitialCatalog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoInitialCatalog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.NoInitialCatalog" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoInitialCatalog As String" />
      <MemberSignature Language="F#" Value="static member NoInitialCatalog : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.NoInitialCatalog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The database name could not be determined. To use 'EnsureDeleted', the connection string must specify 'Initial Catalog'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonKeyValueGeneration">
      <MemberSignature Language="C#" Value="public static string NonKeyValueGeneration (object property, object entityType);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonKeyValueGeneration(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.NonKeyValueGeneration(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonKeyValueGeneration (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonKeyValueGeneration : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.NonKeyValueGeneration (property, entityType)" />
      <MemberSignature Language="C#" Value="public static string NonKeyValueGeneration (object? property, object? entityType);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' is configured to use 'SequenceHiLo' value generator, which is only intended for keys. If this was intentional, configure an alternate key on the property, otherwise call 'ValueGeneratedNever' or configure store generation for this property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSavepointRelease">
      <MemberSignature Language="C#" Value="public static string NoSavepointRelease { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoSavepointRelease" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.NoSavepointRelease" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoSavepointRelease As String" />
      <MemberSignature Language="F#" Value="static member NoSavepointRelease : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.NoSavepointRelease" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                SQL Server does not support releasing a savepoint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryingOrderedBinaryJsonCollectionsNotSupported">
      <MemberSignature Language="C#" Value="public static string QueryingOrderedBinaryJsonCollectionsNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string QueryingOrderedBinaryJsonCollectionsNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.QueryingOrderedBinaryJsonCollectionsNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property QueryingOrderedBinaryJsonCollectionsNotSupported As String" />
      <MemberSignature Language="F#" Value="static member QueryingOrderedBinaryJsonCollectionsNotSupported : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.QueryingOrderedBinaryJsonCollectionsNotSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The query is attempting to query a JSON collection of binary data in a context that requires preserving the ordering of the collection; this isn't supported by SQL Server.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesFailedBecauseOfComputedColumnWithFunction">
      <MemberSignature Language="C#" Value="public static string SaveChangesFailedBecauseOfComputedColumnWithFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SaveChangesFailedBecauseOfComputedColumnWithFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.SaveChangesFailedBecauseOfComputedColumnWithFunction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SaveChangesFailedBecauseOfComputedColumnWithFunction As String" />
      <MemberSignature Language="F#" Value="static member SaveChangesFailedBecauseOfComputedColumnWithFunction : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.SaveChangesFailedBecauseOfComputedColumnWithFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Could not save changes because the target table has computed column with a function that performs data access. Please configure your table accordingly, see https://aka.ms/efcore-docs-sqlserver-save-changes-and-output-clause for more information.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesFailedBecauseOfTriggers">
      <MemberSignature Language="C#" Value="public static string SaveChangesFailedBecauseOfTriggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SaveChangesFailedBecauseOfTriggers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.SaveChangesFailedBecauseOfTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SaveChangesFailedBecauseOfTriggers As String" />
      <MemberSignature Language="F#" Value="static member SaveChangesFailedBecauseOfTriggers : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.SaveChangesFailedBecauseOfTriggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Could not save changes because the target table has database triggers. Please configure your table accordingly, see https://aka.ms/efcore-docs-sqlserver-save-changes-and-output-clause for more information.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceBadType">
      <MemberSignature Language="C#" Value="public static string SequenceBadType (object property, object entityType, object propertyType);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SequenceBadType(object property, object entityType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.SequenceBadType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SequenceBadType (property As Object, entityType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SequenceBadType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.SequenceBadType (property, entityType, propertyType)" />
      <MemberSignature Language="C#" Value="public static string SequenceBadType (object? property, object? entityType, object? propertyType);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                SQL Server sequences cannot be used to generate values for the property '{property}' on entity type '{entityType}' because the property type is '{propertyType}'. Sequences can only be used with integer properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitQueryOffsetWithoutOrderBy">
      <MemberSignature Language="C#" Value="public static string SplitQueryOffsetWithoutOrderBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SplitQueryOffsetWithoutOrderBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.SplitQueryOffsetWithoutOrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SplitQueryOffsetWithoutOrderBy As String" />
      <MemberSignature Language="F#" Value="static member SplitQueryOffsetWithoutOrderBy : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.SplitQueryOffsetWithoutOrderBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The query uses 'Skip' without specifying ordering and uses split query mode. This generates incorrect results. Either provide ordering or run query in single query mode using `AsSingleQuery()`. See https://go.microsoft.com/fwlink/?linkid=2196526 for more information.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalAllEntitiesMappedToSameTableMustBeTemporal">
      <MemberSignature Language="C#" Value="public static string TemporalAllEntitiesMappedToSameTableMustBeTemporal (object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalAllEntitiesMappedToSameTableMustBeTemporal(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalAllEntitiesMappedToSameTableMustBeTemporal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalAllEntitiesMappedToSameTableMustBeTemporal (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalAllEntitiesMappedToSameTableMustBeTemporal : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalAllEntitiesMappedToSameTableMustBeTemporal entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Entity type '{entityType}' should be marked as temporal because it shares table mapping with another entity that has been marked as temporal. Alternatively, other entity types that share the same table must be non-temporal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalExpectedPeriodPropertyNotFound">
      <MemberSignature Language="C#" Value="public static string TemporalExpectedPeriodPropertyNotFound (object? entityType, object? propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalExpectedPeriodPropertyNotFound(object entityType, object propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalExpectedPeriodPropertyNotFound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalExpectedPeriodPropertyNotFound (entityType As Object, propertyName As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalExpectedPeriodPropertyNotFound : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalExpectedPeriodPropertyNotFound (entityType, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                Entity type '{entityType}' mapped to temporal table does not contain the expected period property: '{propertyName}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalMustDefinePeriodProperties">
      <MemberSignature Language="C#" Value="public static string TemporalMustDefinePeriodProperties (object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalMustDefinePeriodProperties(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalMustDefinePeriodProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalMustDefinePeriodProperties (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalMustDefinePeriodProperties : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalMustDefinePeriodProperties entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Entity type '{entityType}' mapped to temporal table must have a period start and a period end property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalNavigationExpansionBetweenTemporalAndNonTemporal">
      <MemberSignature Language="C#" Value="public static string TemporalNavigationExpansionBetweenTemporalAndNonTemporal (object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalNavigationExpansionBetweenTemporalAndNonTemporal(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalNavigationExpansionBetweenTemporalAndNonTemporal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalNavigationExpansionBetweenTemporalAndNonTemporal (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalNavigationExpansionBetweenTemporalAndNonTemporal : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalNavigationExpansionBetweenTemporalAndNonTemporal entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Temporal query is trying to use navigation to an entity '{entityType}' which itself doesn't map to temporal table. Either map the entity to temporal table or use join manually to access it.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalNavigationExpansionOnlySupportedForAsOf">
      <MemberSignature Language="C#" Value="public static string TemporalNavigationExpansionOnlySupportedForAsOf (object? operationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalNavigationExpansionOnlySupportedForAsOf(object operationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalNavigationExpansionOnlySupportedForAsOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalNavigationExpansionOnlySupportedForAsOf (operationName As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalNavigationExpansionOnlySupportedForAsOf : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalNavigationExpansionOnlySupportedForAsOf operationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationName" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="operationName">To be added.</param>
        <summary>
                Navigation expansion is only supported for '{operationName}' temporal operation. For other operations use join manually.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalNotSupportedForTableSplitting">
      <MemberSignature Language="C#" Value="public static string TemporalNotSupportedForTableSplitting (object? table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalNotSupportedForTableSplitting(object table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalNotSupportedForTableSplitting(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalNotSupportedForTableSplitting (table As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalNotSupportedForTableSplitting : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalNotSupportedForTableSplitting table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <summary>
                Temporal tables are not supported for table splitting scenario. Table: '{table}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalNotSupportedForTableSplittingWithInconsistentPeriodMapping">
      <MemberSignature Language="C#" Value="public static string TemporalNotSupportedForTableSplittingWithInconsistentPeriodMapping (object? periodType, object? entityType, object? periodProperty, object? periodColumn, object? expectedColumnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalNotSupportedForTableSplittingWithInconsistentPeriodMapping(object periodType, object entityType, object periodProperty, object periodColumn, object expectedColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalNotSupportedForTableSplittingWithInconsistentPeriodMapping(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalNotSupportedForTableSplittingWithInconsistentPeriodMapping (periodType As Object, entityType As Object, periodProperty As Object, periodColumn As Object, expectedColumnName As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalNotSupportedForTableSplittingWithInconsistentPeriodMapping : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalNotSupportedForTableSplittingWithInconsistentPeriodMapping (periodType, entityType, periodProperty, periodColumn, expectedColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="periodType" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="periodProperty" Type="System.Object" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="periodColumn" Type="System.Object" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="expectedColumnName" Type="System.Object" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="periodType">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="periodProperty">To be added.</param>
        <param name="periodColumn">To be added.</param>
        <param name="expectedColumnName">To be added.</param>
        <summary>
                When multiple temporal entities are mapped to the same table, their period {periodType} properties must map to the same column. Issue happens for entity type '{entityType}' with period property '{periodProperty}' which is mapped to column '{periodColumn}'. Expected period column name is '{expectedColumnName}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalOnlyOnRoot">
      <MemberSignature Language="C#" Value="public static string TemporalOnlyOnRoot (object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalOnlyOnRoot(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalOnlyOnRoot(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalOnlyOnRoot (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalOnlyOnRoot : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalOnlyOnRoot entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Only root entity type should be marked as temporal. Entity type: '{entityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalOnlySupportedForTPH">
      <MemberSignature Language="C#" Value="public static string TemporalOnlySupportedForTPH (object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalOnlySupportedForTPH(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalOnlySupportedForTPH(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalOnlySupportedForTPH (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalOnlySupportedForTPH : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalOnlySupportedForTPH entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Temporal tables are only supported for entities using Table-Per-Hierarchy inheritance mapping. Entity type: '{entityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalPeriodPropertyCantHaveDefaultValue">
      <MemberSignature Language="C#" Value="public static string TemporalPeriodPropertyCantHaveDefaultValue (object? entityType, object? propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalPeriodPropertyCantHaveDefaultValue(object entityType, object propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPeriodPropertyCantHaveDefaultValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalPeriodPropertyCantHaveDefaultValue (entityType As Object, propertyName As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalPeriodPropertyCantHaveDefaultValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPeriodPropertyCantHaveDefaultValue (entityType, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                Period property '{entityType}.{propertyName}' can't have a default value specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalPeriodPropertyMustBeInShadowState">
      <MemberSignature Language="C#" Value="public static string TemporalPeriodPropertyMustBeInShadowState (object? entityType, object? propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalPeriodPropertyMustBeInShadowState(object entityType, object propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPeriodPropertyMustBeInShadowState(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalPeriodPropertyMustBeInShadowState (entityType As Object, propertyName As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalPeriodPropertyMustBeInShadowState : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPeriodPropertyMustBeInShadowState (entityType, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                Period property '{entityType}.{propertyName}' must be a shadow property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalPeriodPropertyMustBeMappedToDatetime2">
      <MemberSignature Language="C#" Value="public static string TemporalPeriodPropertyMustBeMappedToDatetime2 (object? entityType, object? propertyName, object? columnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalPeriodPropertyMustBeMappedToDatetime2(object entityType, object propertyName, object columnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPeriodPropertyMustBeMappedToDatetime2(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalPeriodPropertyMustBeMappedToDatetime2 (entityType As Object, propertyName As Object, columnType As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalPeriodPropertyMustBeMappedToDatetime2 : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPeriodPropertyMustBeMappedToDatetime2 (entityType, propertyName, columnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="columnType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="columnType">To be added.</param>
        <summary>
                Period property '{entityType}.{propertyName}' must be mapped to a column of type '{columnType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalPeriodPropertyMustBeNonNullableDateTime">
      <MemberSignature Language="C#" Value="public static string TemporalPeriodPropertyMustBeNonNullableDateTime (object? entityType, object? propertyName, object? dateTimeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalPeriodPropertyMustBeNonNullableDateTime(object entityType, object propertyName, object dateTimeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPeriodPropertyMustBeNonNullableDateTime(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalPeriodPropertyMustBeNonNullableDateTime (entityType As Object, propertyName As Object, dateTimeType As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalPeriodPropertyMustBeNonNullableDateTime : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPeriodPropertyMustBeNonNullableDateTime (entityType, propertyName, dateTimeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dateTimeType" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="dateTimeType">To be added.</param>
        <summary>
                Period property '{entityType}.{propertyName}' must be non-nullable and of type '{dateTimeType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalPropertyMappedToPeriodColumnCantHaveDefaultValue">
      <MemberSignature Language="C#" Value="public static string TemporalPropertyMappedToPeriodColumnCantHaveDefaultValue (object? entityType, object? propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalPropertyMappedToPeriodColumnCantHaveDefaultValue(object entityType, object propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPropertyMappedToPeriodColumnCantHaveDefaultValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalPropertyMappedToPeriodColumnCantHaveDefaultValue (entityType As Object, propertyName As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalPropertyMappedToPeriodColumnCantHaveDefaultValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPropertyMappedToPeriodColumnCantHaveDefaultValue (entityType, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>
                Property '{entityType}.{propertyName}' is mapped to the period column and can't have default value specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalPropertyMappedToPeriodColumnMustBeValueGeneratedOnAddOrUpdate">
      <MemberSignature Language="C#" Value="public static string TemporalPropertyMappedToPeriodColumnMustBeValueGeneratedOnAddOrUpdate (object? entityType, object? propertyName, object? valueGeneratedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalPropertyMappedToPeriodColumnMustBeValueGeneratedOnAddOrUpdate(object entityType, object propertyName, object valueGeneratedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPropertyMappedToPeriodColumnMustBeValueGeneratedOnAddOrUpdate(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalPropertyMappedToPeriodColumnMustBeValueGeneratedOnAddOrUpdate (entityType As Object, propertyName As Object, valueGeneratedValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalPropertyMappedToPeriodColumnMustBeValueGeneratedOnAddOrUpdate : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalPropertyMappedToPeriodColumnMustBeValueGeneratedOnAddOrUpdate (entityType, propertyName, valueGeneratedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyName" Type="System.Object" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="valueGeneratedValue" Type="System.Object" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="valueGeneratedValue">To be added.</param>
        <summary>
                Property '{entityType}.{propertyName}' is mapped to the period column and must have ValueGenerated set to '{valueGeneratedValue}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporalSetOperationOnMismatchedSources">
      <MemberSignature Language="C#" Value="public static string TemporalSetOperationOnMismatchedSources (object? entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TemporalSetOperationOnMismatchedSources(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalSetOperationOnMismatchedSources(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TemporalSetOperationOnMismatchedSources (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member TemporalSetOperationOnMismatchedSources : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TemporalSetOperationOnMismatchedSources entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Set operation can't be applied on entity '{entityType}' because temporal operations on both arguments don't match.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransientExceptionDetected">
      <MemberSignature Language="C#" Value="public static string TransientExceptionDetected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TransientExceptionDetected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TransientExceptionDetected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransientExceptionDetected As String" />
      <MemberSignature Language="F#" Value="static member TransientExceptionDetected : string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.TransientExceptionDetected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnqualifiedDataType">
      <MemberSignature Language="C#" Value="public static string UnqualifiedDataType (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnqualifiedDataType(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.UnqualifiedDataType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnqualifiedDataType (dataType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnqualifiedDataType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.UnqualifiedDataType dataType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="dataType">To be added.</param>
        <summary>
                Data type '{dataType}' is not supported in this form. Either specify the length explicitly in the type name, for example as '{dataType}(16)', or remove the data type and use APIs such as HasMaxLength to allow EF choose the data type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnqualifiedDataTypeOnProperty">
      <MemberSignature Language="C#" Value="public static string UnqualifiedDataTypeOnProperty (object dataType, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnqualifiedDataTypeOnProperty(object dataType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.UnqualifiedDataTypeOnProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnqualifiedDataTypeOnProperty (dataType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnqualifiedDataTypeOnProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerStrings.UnqualifiedDataTypeOnProperty (dataType, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="property" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="dataType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                Data type '{dataType}' for property '{property}' is not supported in this form. Either specify the length explicitly in the type name, for example as '{dataType}(16)', or remove the data type and use APIs such as HasMaxLength to allow EF choose the data type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
