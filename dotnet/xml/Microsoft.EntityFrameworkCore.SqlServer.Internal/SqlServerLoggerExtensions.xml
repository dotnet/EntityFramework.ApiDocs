<Type Name="SqlServerLoggerExtensions" FullName="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions">
  <TypeSignature Language="C#" Value="public static class SqlServerLoggerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlServerLoggerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SqlServerLoggerExtensions" />
  <TypeSignature Language="F#" Value="type SqlServerLoggerExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ByteIdentityColumnWarning">
      <MemberSignature Language="C#" Value="public static void ByteIdentityColumnWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ByteIdentityColumnWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ByteIdentityColumnWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ByteIdentityColumnWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), property As IProperty)" />
      <MemberSignature Language="F#" Value="static member ByteIdentityColumnWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ByteIdentityColumnWarning (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnFound">
      <MemberSignature Language="C#" Value="public static void ColumnFound (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string tableName, string columnName, int ordinal, string dataTypeName, int maxLength, int precision, int scale, bool nullable, bool identity, string defaultValue, string computedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColumnFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string tableName, string columnName, int32 ordinal, string dataTypeName, int32 maxLength, int32 precision, int32 scale, bool nullable, bool identity, string defaultValue, string computedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ColumnFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ColumnFound (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), tableName As String, columnName As String, ordinal As Integer, dataTypeName As String, maxLength As Integer, precision As Integer, scale As Integer, nullable As Boolean, identity As Boolean, defaultValue As String, computedValue As String)" />
      <MemberSignature Language="F#" Value="static member ColumnFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string * string * int * string * int * int * int * bool * bool * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ColumnFound (diagnostics, tableName, columnName, ordinal, dataTypeName, maxLength, precision, scale, nullable, identity, defaultValue, computedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="tableName" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="columnName" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="ordinal" Type="System.Int32" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="dataTypeName" Type="System.String" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="maxLength" Type="System.Int32" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="precision" Type="System.Int32" Index="6" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="scale" Type="System.Int32" Index="7" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="nullable" Type="System.Boolean" Index="8" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="identity" Type="System.Boolean" Index="9" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="defaultValue" Type="System.String" Index="10" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="computedValue" Type="System.String" Index="11" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="ordinal">To be added.</param>
        <param name="dataTypeName">To be added.</param>
        <param name="maxLength">To be added.</param>
        <param name="precision">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="nullable">To be added.</param>
        <param name="identity">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="computedValue">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnFound">
      <MemberSignature Language="C#" Value="public static void ColumnFound (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string tableName, string columnName, int ordinal, string dataTypeName, int maxLength, int precision, int scale, bool nullable, bool identity, string defaultValue, string computedValue, bool? stored);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColumnFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string tableName, string columnName, int32 ordinal, string dataTypeName, int32 maxLength, int32 precision, int32 scale, bool nullable, bool identity, string defaultValue, string computedValue, valuetype System.Nullable`1&lt;bool&gt; stored) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ColumnFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ColumnFound (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), tableName As String, columnName As String, ordinal As Integer, dataTypeName As String, maxLength As Integer, precision As Integer, scale As Integer, nullable As Boolean, identity As Boolean, defaultValue As String, computedValue As String, stored As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member ColumnFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string * string * int * string * int * int * int * bool * bool * string * string * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ColumnFound (diagnostics, tableName, columnName, ordinal, dataTypeName, maxLength, precision, scale, nullable, identity, defaultValue, computedValue, stored)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="tableName" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="columnName" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="ordinal" Type="System.Int32" Index="3" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="dataTypeName" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="maxLength" Type="System.Int32" Index="5" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="precision" Type="System.Int32" Index="6" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="scale" Type="System.Int32" Index="7" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="nullable" Type="System.Boolean" Index="8" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="identity" Type="System.Boolean" Index="9" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="defaultValue" Type="System.String" Index="10" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="computedValue" Type="System.String" Index="11" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="stored" Type="System.Nullable&lt;System.Boolean&gt;" Index="12" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="columnName">To be added.</param>
        <param name="ordinal">To be added.</param>
        <param name="dataTypeName">To be added.</param>
        <param name="maxLength">To be added.</param>
        <param name="precision">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="nullable">To be added.</param>
        <param name="identity">To be added.</param>
        <param name="defaultValue">To be added.</param>
        <param name="computedValue">To be added.</param>
        <param name="stored">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingValueGenerationStrategiesWarning">
      <MemberSignature Language="C#" Value="public static void ConflictingValueGenerationStrategiesWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy sqlServerValueGenerationStrategy, string otherValueGenerationStrategy, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConflictingValueGenerationStrategiesWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, valuetype Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy sqlServerValueGenerationStrategy, string otherValueGenerationStrategy, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ConflictingValueGenerationStrategiesWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ConflictingValueGenerationStrategiesWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), sqlServerValueGenerationStrategy As SqlServerValueGenerationStrategy, otherValueGenerationStrategy As String, property As IProperty)" />
      <MemberSignature Language="F#" Value="static member ConflictingValueGenerationStrategiesWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy * string * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ConflictingValueGenerationStrategiesWarning (diagnostics, sqlServerValueGenerationStrategy, otherValueGenerationStrategy, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="sqlServerValueGenerationStrategy" Type="Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="otherValueGenerationStrategy" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="3" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="sqlServerValueGenerationStrategy">To be added.</param>
        <param name="otherValueGenerationStrategy">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalTypeDefaultWarning">
      <MemberSignature Language="C#" Value="public static void DecimalTypeDefaultWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecimalTypeDefaultWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.DecimalTypeDefaultWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DecimalTypeDefaultWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), property As IProperty)" />
      <MemberSignature Language="F#" Value="static member DecimalTypeDefaultWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.DecimalTypeDefaultWarning (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalTypeKeyWarning">
      <MemberSignature Language="C#" Value="public static void DecimalTypeKeyWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; diagnostics, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecimalTypeKeyWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; diagnostics, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.DecimalTypeKeyWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DecimalTypeKeyWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation), property As IProperty)" />
      <MemberSignature Language="F#" Value="static member DecimalTypeKeyWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.DecimalTypeKeyWarning (diagnostics, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSchemaFound">
      <MemberSignature Language="C#" Value="public static void DefaultSchemaFound (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string schemaName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DefaultSchemaFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string schemaName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.DefaultSchemaFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DefaultSchemaFound (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), schemaName As String)" />
      <MemberSignature Language="F#" Value="static member DefaultSchemaFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.DefaultSchemaFound (diagnostics, schemaName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="schemaName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="schemaName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyFound">
      <MemberSignature Language="C#" Value="public static void ForeignKeyFound (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string foreignKeyName, string tableName, string principalTableName, string onDeleteAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string foreignKeyName, string tableName, string principalTableName, string onDeleteAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ForeignKeyFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyFound (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), foreignKeyName As String, tableName As String, principalTableName As String, onDeleteAction As String)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string * string * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ForeignKeyFound (diagnostics, foreignKeyName, tableName, principalTableName, onDeleteAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="foreignKeyName" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="principalTableName" Type="System.String" />
        <Parameter Name="onDeleteAction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="foreignKeyName">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="principalTableName">To be added.</param>
        <param name="onDeleteAction">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyPrincipalColumnMissingWarning">
      <MemberSignature Language="C#" Value="public static void ForeignKeyPrincipalColumnMissingWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string foreignKeyName, string tableName, string principalColumnName, string principalTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyPrincipalColumnMissingWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string foreignKeyName, string tableName, string principalColumnName, string principalTableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ForeignKeyPrincipalColumnMissingWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyPrincipalColumnMissingWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), foreignKeyName As String, tableName As String, principalColumnName As String, principalTableName As String)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyPrincipalColumnMissingWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string * string * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ForeignKeyPrincipalColumnMissingWarning (diagnostics, foreignKeyName, tableName, principalColumnName, principalTableName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="foreignKeyName" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="principalColumnName" Type="System.String" />
        <Parameter Name="principalTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="foreignKeyName">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="principalColumnName">To be added.</param>
        <param name="principalTableName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyReferencesMissingPrincipalTableWarning">
      <MemberSignature Language="C#" Value="public static void ForeignKeyReferencesMissingPrincipalTableWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string foreignKeyName, string tableName, string principalTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForeignKeyReferencesMissingPrincipalTableWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string foreignKeyName, string tableName, string principalTableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ForeignKeyReferencesMissingPrincipalTableWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForeignKeyReferencesMissingPrincipalTableWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), foreignKeyName As String, tableName As String, principalTableName As String)" />
      <MemberSignature Language="F#" Value="static member ForeignKeyReferencesMissingPrincipalTableWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ForeignKeyReferencesMissingPrincipalTableWarning (diagnostics, foreignKeyName, tableName, principalTableName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="foreignKeyName" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="principalTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="foreignKeyName">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="principalTableName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexFound">
      <MemberSignature Language="C#" Value="public static void IndexFound (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string indexName, string tableName, bool unique);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IndexFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string indexName, string tableName, bool unique) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.IndexFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IndexFound (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), indexName As String, tableName As String, unique As Boolean)" />
      <MemberSignature Language="F#" Value="static member IndexFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.IndexFound (diagnostics, indexName, tableName, unique)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="unique" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="indexName">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="unique">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingSchemaWarning">
      <MemberSignature Language="C#" Value="public static void MissingSchemaWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string schemaName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MissingSchemaWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string schemaName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.MissingSchemaWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MissingSchemaWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), schemaName As String)" />
      <MemberSignature Language="F#" Value="static member MissingSchemaWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.MissingSchemaWarning (diagnostics, schemaName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="schemaName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="schemaName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingTableWarning">
      <MemberSignature Language="C#" Value="public static void MissingTableWarning (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MissingTableWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.MissingTableWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub MissingTableWarning (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), tableName As String)" />
      <MemberSignature Language="F#" Value="static member MissingTableWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.MissingTableWarning (diagnostics, tableName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="tableName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyFound">
      <MemberSignature Language="C#" Value="public static void PrimaryKeyFound (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string primaryKeyName, string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrimaryKeyFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string primaryKeyName, string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.PrimaryKeyFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub PrimaryKeyFound (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), primaryKeyName As String, tableName As String)" />
      <MemberSignature Language="F#" Value="static member PrimaryKeyFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.PrimaryKeyFound (diagnostics, primaryKeyName, tableName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="primaryKeyName" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="primaryKeyName">To be added.</param>
        <param name="tableName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflexiveConstraintIgnored">
      <MemberSignature Language="C#" Value="public static void ReflexiveConstraintIgnored (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string foreignKeyName, string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReflexiveConstraintIgnored(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string foreignKeyName, string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ReflexiveConstraintIgnored(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ReflexiveConstraintIgnored (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), foreignKeyName As String, tableName As String)" />
      <MemberSignature Language="F#" Value="static member ReflexiveConstraintIgnored : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.ReflexiveConstraintIgnored (diagnostics, foreignKeyName, tableName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="foreignKeyName" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="foreignKeyName">To be added.</param>
        <param name="tableName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceFound">
      <MemberSignature Language="C#" Value="public static void SequenceFound (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string sequenceName, string sequenceTypeName, bool cyclic, int increment, long start, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SequenceFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string sequenceName, string sequenceTypeName, bool cyclic, int32 increment, int64 start, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.SequenceFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.Boolean,System.Int32,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SequenceFound (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), sequenceName As String, sequenceTypeName As String, cyclic As Boolean, increment As Integer, start As Long, min As Long, max As Long)" />
      <MemberSignature Language="F#" Value="static member SequenceFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string * string * bool * int * int64 * int64 * int64 -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.SequenceFound (diagnostics, sequenceName, sequenceTypeName, cyclic, increment, start, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="sequenceName" Type="System.String" />
        <Parameter Name="sequenceTypeName" Type="System.String" />
        <Parameter Name="cyclic" Type="System.Boolean" />
        <Parameter Name="increment" Type="System.Int32" />
        <Parameter Name="start" Type="System.Int64" />
        <Parameter Name="min" Type="System.Int64" />
        <Parameter Name="max" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="sequenceName">To be added.</param>
        <param name="sequenceTypeName">To be added.</param>
        <param name="cyclic">To be added.</param>
        <param name="increment">To be added.</param>
        <param name="start">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableFound">
      <MemberSignature Language="C#" Value="public static void TableFound (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TableFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.TableFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TableFound (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), tableName As String)" />
      <MemberSignature Language="F#" Value="static member TableFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.TableFound (diagnostics, tableName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="tableName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeAliasFound">
      <MemberSignature Language="C#" Value="public static void TypeAliasFound (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string typeAliasName, string systemTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TypeAliasFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string typeAliasName, string systemTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.TypeAliasFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TypeAliasFound (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), typeAliasName As String, systemTypeName As String)" />
      <MemberSignature Language="F#" Value="static member TypeAliasFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.TypeAliasFound (diagnostics, typeAliasName, systemTypeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="typeAliasName" Type="System.String" />
        <Parameter Name="systemTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="typeAliasName">To be added.</param>
        <param name="systemTypeName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueConstraintFound">
      <MemberSignature Language="C#" Value="public static void UniqueConstraintFound (this Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; diagnostics, string uniqueConstraintName, string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniqueConstraintFound(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; diagnostics, string uniqueConstraintName, string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.UniqueConstraintFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub UniqueConstraintFound (diagnostics As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), uniqueConstraintName As String, tableName As String)" />
      <MemberSignature Language="F#" Value="static member UniqueConstraintFound : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServer.Internal.SqlServerLoggerExtensions.UniqueConstraintFound (diagnostics, uniqueConstraintName, tableName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostics" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" RefType="this" />
        <Parameter Name="uniqueConstraintName" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="diagnostics">To be added.</param>
        <param name="uniqueConstraintName">To be added.</param>
        <param name="tableName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
