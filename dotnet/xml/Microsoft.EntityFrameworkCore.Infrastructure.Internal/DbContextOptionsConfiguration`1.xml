<Type Name="DbContextOptionsConfiguration&lt;TContext&gt;" FullName="Microsoft.EntityFrameworkCore.Infrastructure.Internal.DbContextOptionsConfiguration&lt;TContext&gt;">
  <TypeSignature Language="C#" Value="public class DbContextOptionsConfiguration&lt;TContext&gt; : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsConfiguration&lt;TContext&gt; where TContext : DbContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbContextOptionsConfiguration`1&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsConfiguration`1&lt;!TContext&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.Internal.DbContextOptionsConfiguration`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DbContextOptionsConfiguration(Of TContext)&#xA;Implements IDbContextOptionsConfiguration(Of TContext)" />
  <TypeSignature Language="F#" Value="type DbContextOptionsConfiguration&lt;'Context (requires 'Context :&gt; DbContext)&gt; = class&#xA;    interface IDbContextOptionsConfiguration&lt;'Context (requires 'Context :&gt; DbContext)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TContext">
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsConfiguration&lt;TContext&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TContext">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbContextOptionsConfiguration (Action&lt;IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`2&lt;class System.IServiceProvider, class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.Internal.DbContextOptionsConfiguration`1.#ctor(System.Action{System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configure As Action(Of IServiceProvider, DbContextOptionsBuilder))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Infrastructure.Internal.DbContextOptionsConfiguration&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; : Action&lt;IServiceProvider, Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Internal.DbContextOptionsConfiguration&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt;" Usage="new Microsoft.EntityFrameworkCore.Infrastructure.Internal.DbContextOptionsConfiguration&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; configure" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configure" Type="System.Action&lt;System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="configure">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public virtual void Configure (IServiceProvider serviceProvider, Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Configure(class System.IServiceProvider serviceProvider, class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.Internal.DbContextOptionsConfiguration`1.Configure(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Configure (serviceProvider As IServiceProvider, optionsBuilder As DbContextOptionsBuilder)" />
      <MemberSignature Language="F#" Value="abstract member Configure : IServiceProvider * Microsoft.EntityFrameworkCore.DbContextOptionsBuilder -&gt; unit&#xA;override this.Configure : IServiceProvider * Microsoft.EntityFrameworkCore.DbContextOptionsBuilder -&gt; unit" Usage="dbContextOptionsConfiguration.Configure (serviceProvider, optionsBuilder)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsConfiguration`1.Configure(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">To be added.</param>
        <param name="optionsBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
