<Type Name="MemberInfoNameComparer" FullName="Microsoft.EntityFrameworkCore.Infrastructure.Internal.MemberInfoNameComparer">
  <TypeSignature Language="C#" Value="public sealed class MemberInfoNameComparer : System.Collections.Generic.IComparer&lt;System.Reflection.MemberInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MemberInfoNameComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;class System.Reflection.MemberInfo&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.Internal.MemberInfoNameComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MemberInfoNameComparer&#xA;Implements IComparer(Of MemberInfo)" />
  <TypeSignature Language="F#" Value="type MemberInfoNameComparer = class&#xA;    interface IComparer&lt;MemberInfo&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.Reflection.MemberInfo&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (System.Reflection.MemberInfo? x, System.Reflection.MemberInfo? y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(class System.Reflection.MemberInfo x, class System.Reflection.MemberInfo y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.Internal.MemberInfoNameComparer.Compare(System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As MemberInfo, y As MemberInfo) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Compare : System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; int&#xA;override this.Compare : System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; int" Usage="memberInfoNameComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Reflection.MemberInfo" />
        <Parameter Name="y" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Infrastructure.Internal.MemberInfoNameComparer Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Infrastructure.Internal.MemberInfoNameComparer Instance" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Infrastructure.Internal.MemberInfoNameComparer.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Instance As MemberInfoNameComparer " />
      <MemberSignature Language="F#" Value=" staticval mutable Instance : Microsoft.EntityFrameworkCore.Infrastructure.Internal.MemberInfoNameComparer" Usage="Microsoft.EntityFrameworkCore.Infrastructure.Internal.MemberInfoNameComparer.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.Internal.MemberInfoNameComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
