<Type Name="TableExpressionBase" FullName="Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase">
  <TypeSignature Language="C#" Value="public abstract class TableExpressionBase : System.Linq.Expressions.Expression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TableExpressionBase extends System.Linq.Expressions.Expression" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TableExpressionBase&#xA;Inherits Expression" />
  <TypeSignature Language="F#" Value="type TableExpressionBase = class&#xA;    inherit Expression" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.Expression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                A base class for SQL table expressions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TableExpressionBase (Remotion.Linq.Clauses.IQuerySource querySource, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Remotion.Linq.Clauses.IQuerySource querySource, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.#ctor(Remotion.Linq.Clauses.IQuerySource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (querySource As IQuerySource, alias As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase : Remotion.Linq.Clauses.IQuerySource * string -&gt; Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase" Usage="new Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase (querySource, alias)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <param name="alias"> The alias. </param>
        <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alias">
      <MemberSignature Language="C#" Value="public virtual string Alias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Alias" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.Alias" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Alias As String" />
      <MemberSignature Language="F#" Value="member this.Alias : string with get, set" Usage="Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.Alias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the alias.
            </summary>
        <value>
                The alias.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesQuerySource">
      <MemberSignature Language="C#" Value="public virtual bool HandlesQuerySource (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandlesQuerySource(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.HandlesQuerySource(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HandlesQuerySource (querySource As IQuerySource) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member HandlesQuerySource : Remotion.Linq.Clauses.IQuerySource -&gt; bool&#xA;override this.HandlesQuerySource : Remotion.Linq.Clauses.IQuerySource -&gt; bool" Usage="tableExpressionBase.HandlesQuerySource querySource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <summary>
                Determines whether or not this TableExpressionBase handles the given query source.
            </summary>
        <returns>
                true if the supplied query source is handled by this TableExpressionBase; otherwise false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.ExpressionType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As ExpressionType" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Linq.Expressions.ExpressionType" Usage="Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
        <value>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreProcessQuerySource">
      <MemberSignature Language="C#" Value="protected virtual Remotion.Linq.Clauses.IQuerySource PreProcessQuerySource (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Remotion.Linq.Clauses.IQuerySource PreProcessQuerySource(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.PreProcessQuerySource(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function PreProcessQuerySource (querySource As IQuerySource) As IQuerySource" />
      <MemberSignature Language="F#" Value="abstract member PreProcessQuerySource : Remotion.Linq.Clauses.IQuerySource -&gt; Remotion.Linq.Clauses.IQuerySource&#xA;override this.PreProcessQuerySource : Remotion.Linq.Clauses.IQuerySource -&gt; Remotion.Linq.Clauses.IQuerySource" Usage="tableExpressionBase.PreProcessQuerySource querySource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Remotion.Linq.Clauses.IQuerySource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="querySource"> The query source. </param>
        <summary>
                Pre-processes the given <see cref="T:Remotion.Linq.Clauses.IQuerySource" />.
            </summary>
        <returns> The query source after pre-processing. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySource">
      <MemberSignature Language="C#" Value="public virtual Remotion.Linq.Clauses.IQuerySource QuerySource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Remotion.Linq.Clauses.IQuerySource QuerySource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.QuerySource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuerySource As IQuerySource" />
      <MemberSignature Language="F#" Value="member this.QuerySource : Remotion.Linq.Clauses.IQuerySource with get, set" Usage="Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.QuerySource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Remotion.Linq.Clauses.IQuerySource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the query source.
            </summary>
        <value>
                The query source.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As Type" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
        <value>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.Type" /> that represents the static type of the expression.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="tableExpressionBase.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
        <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
        <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
        <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
