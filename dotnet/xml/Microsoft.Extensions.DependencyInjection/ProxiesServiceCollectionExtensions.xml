<Type Name="ProxiesServiceCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.ProxiesServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class ProxiesServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProxiesServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.ProxiesServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ProxiesServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type ProxiesServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                EntityFrameworkCore.Proxies extension methods for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEntityFrameworkProxies">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddEntityFrameworkProxies (this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddEntityFrameworkProxies(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.ProxiesServiceCollectionExtensions.AddEntityFrameworkProxies(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddEntityFrameworkProxies (serviceCollection As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddEntityFrameworkProxies : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.ProxiesServiceCollectionExtensions.AddEntityFrameworkProxies serviceCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="serviceCollection">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
        <summary>
                Adds the services required for proxy support in Entity Framework.
            </summary>
        <returns>
                The same service collection so that multiple calls can be chained.
            </returns>
        <remarks>
                Calling this method is no longer necessary when building most applications, including those that
                use dependency injection in ASP.NET or elsewhere.
                It is only needed when building the internal service provider for use with
                the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseInternalServiceProvider(System.IServiceProvider)" /> method.
                This is not recommend other than for some advanced scenarios.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
