<Type Name="SqliteExpression" FullName="Microsoft.EntityFrameworkCore.Sqlite.Query.Internal.SqliteExpression">
  <TypeSignature Language="C#" Value="public static class SqliteExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqliteExpression extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Sqlite.Query.Internal.SqliteExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteExpression" />
  <TypeSignature Language="F#" Value="type SqliteExpression = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Strftime">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression Strftime (Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, Type returnType, string format, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression timestring, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; modifiers = default, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression Strftime(class Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, class System.Type returnType, string format, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression timestring, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; modifiers, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping typeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Query.Internal.SqliteExpression.Strftime(Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory,System.Type,System.String,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression},Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Strftime (sqlExpressionFactory As ISqlExpressionFactory, returnType As Type, format As String, timestring As SqlExpression, Optional modifiers As IEnumerable(Of SqlExpression) = Nothing, Optional typeMapping As RelationalTypeMapping = Nothing) As SqlFunctionExpression" />
      <MemberSignature Language="F#" Value="static member Strftime : Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory * Type * string * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression * seq&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt; * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression" Usage="Microsoft.EntityFrameworkCore.Sqlite.Query.Internal.SqliteExpression.Strftime (sqlExpressionFactory, returnType, format, timestring, modifiers, typeMapping)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression Strftime (Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, Type returnType, string format, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression timestring, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt;? modifiers = default, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? typeMapping = default);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlExpressionFactory" Type="Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="timestring" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression" />
        <Parameter Name="modifiers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression&gt;" />
        <Parameter Name="typeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" />
      </Parameters>
      <Docs>
        <param name="sqlExpressionFactory">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="format">To be added.</param>
        <param name="timestring">To be added.</param>
        <param name="modifiers">To be added.</param>
        <param name="typeMapping">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
