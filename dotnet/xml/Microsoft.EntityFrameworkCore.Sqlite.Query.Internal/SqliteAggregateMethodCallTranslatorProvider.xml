<Type Name="SqliteAggregateMethodCallTranslatorProvider" FullName="Microsoft.EntityFrameworkCore.Sqlite.Query.Internal.SqliteAggregateMethodCallTranslatorProvider">
  <TypeSignature Language="C#" Value="public class SqliteAggregateMethodCallTranslatorProvider : Microsoft.EntityFrameworkCore.Query.RelationalAggregateMethodCallTranslatorProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqliteAggregateMethodCallTranslatorProvider extends Microsoft.EntityFrameworkCore.Query.RelationalAggregateMethodCallTranslatorProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Sqlite.Query.Internal.SqliteAggregateMethodCallTranslatorProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteAggregateMethodCallTranslatorProvider&#xA;Inherits RelationalAggregateMethodCallTranslatorProvider" />
  <TypeSignature Language="F#" Value="type SqliteAggregateMethodCallTranslatorProvider = class&#xA;    inherit RelationalAggregateMethodCallTranslatorProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.RelationalAggregateMethodCallTranslatorProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteAggregateMethodCallTranslatorProvider (Microsoft.EntityFrameworkCore.Query.RelationalAggregateMethodCallTranslatorProviderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.RelationalAggregateMethodCallTranslatorProviderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Query.Internal.SqliteAggregateMethodCallTranslatorProvider.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalAggregateMethodCallTranslatorProviderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As RelationalAggregateMethodCallTranslatorProviderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Sqlite.Query.Internal.SqliteAggregateMethodCallTranslatorProvider : Microsoft.EntityFrameworkCore.Query.RelationalAggregateMethodCallTranslatorProviderDependencies -&gt; Microsoft.EntityFrameworkCore.Sqlite.Query.Internal.SqliteAggregateMethodCallTranslatorProvider" Usage="new Microsoft.EntityFrameworkCore.Sqlite.Query.Internal.SqliteAggregateMethodCallTranslatorProvider dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.RelationalAggregateMethodCallTranslatorProviderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
