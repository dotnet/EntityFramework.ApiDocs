<Type Name="SqliteHistoryRepository" FullName="Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository">
  <TypeSignature Language="C#" Value="public class SqliteHistoryRepository : Microsoft.EntityFrameworkCore.Migrations.HistoryRepository" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqliteHistoryRepository extends Microsoft.EntityFrameworkCore.Migrations.HistoryRepository" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteHistoryRepository&#xA;Inherits HistoryRepository" />
  <TypeSignature Language="F#" Value="type SqliteHistoryRepository = class&#xA;    inherit HistoryRepository" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Migrations.HistoryRepository</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteHistoryRepository (Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.#ctor(Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As HistoryRepositoryDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository : Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies -&gt; Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository" Usage="new Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies" Index="0" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteHistoryRepository (Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options, Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer modelDiffer, Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator migrationsSqlGenerator, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider annotations, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options, class Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer modelDiffer, class Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator migrationsSqlGenerator, class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider annotations, class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.#ctor(Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (databaseCreator As IDatabaseCreator, rawSqlCommandBuilder As IRawSqlCommandBuilder, connection As IRelationalConnection, options As IDbContextOptions, modelDiffer As IMigrationsModelDiffer, migrationsSqlGenerator As IMigrationsSqlGenerator, annotations As IRelationalAnnotationProvider, sqlGenerationHelper As ISqlGenerationHelper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository : Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator * Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions * Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer * Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator * Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider * Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper -&gt; Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository" Usage="new Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository (databaseCreator, rawSqlCommandBuilder, connection, options, modelDiffer, migrationsSqlGenerator, annotations, sqlGenerationHelper)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="databaseCreator" Type="Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="rawSqlCommandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="modelDiffer" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="migrationsSqlGenerator" Type="Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator" Index="5" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="annotations" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" Index="6" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Index="7" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="databaseCreator">To be added.</param>
        <param name="rawSqlCommandBuilder">To be added.</param>
        <param name="connection">To be added.</param>
        <param name="options">To be added.</param>
        <param name="modelDiffer">To be added.</param>
        <param name="migrationsSqlGenerator">To be added.</param>
        <param name="annotations">To be added.</param>
        <param name="sqlGenerationHelper">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsSql">
      <MemberSignature Language="C#" Value="protected override string ExistsSql { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExistsSql" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.ExistsSql" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ExistsSql As String" />
      <MemberSignature Language="F#" Value="member this.ExistsSql : string" Usage="Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.ExistsSql" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBeginIfExistsScript">
      <MemberSignature Language="C#" Value="public override string GetBeginIfExistsScript (string migrationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetBeginIfExistsScript(string migrationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetBeginIfExistsScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBeginIfExistsScript (migrationId As String) As String" />
      <MemberSignature Language="F#" Value="override this.GetBeginIfExistsScript : string -&gt; string" Usage="sqliteHistoryRepository.GetBeginIfExistsScript migrationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migrationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="migrationId">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBeginIfNotExistsScript">
      <MemberSignature Language="C#" Value="public override string GetBeginIfNotExistsScript (string migrationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetBeginIfNotExistsScript(string migrationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetBeginIfNotExistsScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBeginIfNotExistsScript (migrationId As String) As String" />
      <MemberSignature Language="F#" Value="override this.GetBeginIfNotExistsScript : string -&gt; string" Usage="sqliteHistoryRepository.GetBeginIfNotExistsScript migrationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migrationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="migrationId">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateIfNotExistsScript">
      <MemberSignature Language="C#" Value="public override string GetCreateIfNotExistsScript ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetCreateIfNotExistsScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetCreateIfNotExistsScript" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateIfNotExistsScript () As String" />
      <MemberSignature Language="F#" Value="override this.GetCreateIfNotExistsScript : unit -&gt; string" Usage="sqliteHistoryRepository.GetCreateIfNotExistsScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEndIfScript">
      <MemberSignature Language="C#" Value="public override string GetEndIfScript ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetEndIfScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.GetEndIfScript" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEndIfScript () As String" />
      <MemberSignature Language="F#" Value="override this.GetEndIfScript : unit -&gt; string" Usage="sqliteHistoryRepository.GetEndIfScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpretExistsResult">
      <MemberSignature Language="C#" Value="protected override bool InterpretExistsResult (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool InterpretExistsResult(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SqliteHistoryRepository.InterpretExistsResult(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function InterpretExistsResult (value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.InterpretExistsResult : obj -&gt; bool" Usage="sqliteHistoryRepository.InterpretExistsResult value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
