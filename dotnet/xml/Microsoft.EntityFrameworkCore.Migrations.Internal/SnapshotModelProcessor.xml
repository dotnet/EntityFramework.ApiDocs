<Type Name="SnapshotModelProcessor" FullName="Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor">
  <TypeSignature Language="C#" Value="public class SnapshotModelProcessor : Microsoft.EntityFrameworkCore.Migrations.Internal.ISnapshotModelProcessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SnapshotModelProcessor extends System.Object implements class Microsoft.EntityFrameworkCore.Migrations.Internal.ISnapshotModelProcessor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Class SnapshotModelProcessor&#xA;Implements ISnapshotModelProcessor" />
  <TypeSignature Language="F#" Value="type SnapshotModelProcessor = class&#xA;    interface ISnapshotModelProcessor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Migrations.Internal.ISnapshotModelProcessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SnapshotModelProcessor (Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter operationReporter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter operationReporter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (operationReporter As IOperationReporter)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor : Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter -&gt; Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor" Usage="new Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor operationReporter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="operationReporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="operationReporter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SnapshotModelProcessor (Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter operationReporter, Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer modelRuntimeInitializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter operationReporter, class Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer modelRuntimeInitializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (operationReporter As IOperationReporter, modelRuntimeInitializer As IModelRuntimeInitializer)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor : Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter * Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer -&gt; Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor" Usage="new Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor (operationReporter, modelRuntimeInitializer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="operationReporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="modelRuntimeInitializer" Type="Microsoft.EntityFrameworkCore.Infrastructure.IModelRuntimeInitializer" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="operationReporter">To be added.</param>
        <param name="modelRuntimeInitializer">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SnapshotModelProcessor (Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter operationReporter, Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.IConventionSetBuilder conventionSetBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter operationReporter, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.IConventionSetBuilder conventionSetBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor.#ctor(Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter,Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.IConventionSetBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (operationReporter As IOperationReporter, conventionSetBuilder As IConventionSetBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor : Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter * Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.IConventionSetBuilder -&gt; Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor" Usage="new Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor (operationReporter, conventionSetBuilder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="operationReporter" Type="Microsoft.EntityFrameworkCore.Design.Internal.IOperationReporter" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="conventionSetBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.IConventionSetBuilder" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="operationReporter">To be added.</param>
        <param name="conventionSetBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel Process (Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IModel Process(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor.Process(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Process (model As IModel) As IModel" />
      <MemberSignature Language="F#" Value="abstract member Process : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel&#xA;override this.Process : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="snapshotModelProcessor.Process model" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.Internal.ISnapshotModelProcessor.Process(Microsoft.EntityFrameworkCore.Metadata.IModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel? Process (Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel? model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IModel Process(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.SnapshotModelProcessor.Process(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Process (model As IReadOnlyModel) As IModel" />
      <MemberSignature Language="F#" Value="abstract member Process : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel&#xA;override this.Process : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="snapshotModelProcessor.Process model" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Migrations.Internal.ISnapshotModelProcessor.Process(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
