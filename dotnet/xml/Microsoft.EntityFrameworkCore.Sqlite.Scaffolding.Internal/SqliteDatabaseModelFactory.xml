<Type Name="SqliteDatabaseModelFactory" FullName="Microsoft.EntityFrameworkCore.Sqlite.Scaffolding.Internal.SqliteDatabaseModelFactory">
  <TypeSignature Language="C#" Value="public class SqliteDatabaseModelFactory : Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqliteDatabaseModelFactory extends System.Object implements class Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Sqlite.Scaffolding.Internal.SqliteDatabaseModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteDatabaseModelFactory&#xA;Implements IDatabaseModelFactory" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type SqliteDatabaseModelFactory = class&#xA;    interface IDatabaseModelFactory" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="C#" Value="public class SqliteDatabaseModelFactory : Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactory" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqliteDatabaseModelFactory extends Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactory" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteDatabaseModelFactory&#xA;Inherits DatabaseModelFactory" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type SqliteDatabaseModelFactory = class&#xA;    inherit DatabaseModelFactory" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactory</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteDatabaseModelFactory (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; logger, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; logger, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Scaffolding.Internal.SqliteDatabaseModelFactory.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logger As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding), typeMappingSource As IRelationalTypeMappingSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Sqlite.Scaffolding.Internal.SqliteDatabaseModelFactory : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource -&gt; Microsoft.EntityFrameworkCore.Sqlite.Scaffolding.Internal.SqliteDatabaseModelFactory" Usage="new Microsoft.EntityFrameworkCore.Sqlite.Scaffolding.Internal.SqliteDatabaseModelFactory (logger, typeMappingSource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" />
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <param name="typeMappingSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create (System.Data.Common.DbConnection connection, Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create(class System.Data.Common.DbConnection connection, class Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Scaffolding.Internal.SqliteDatabaseModelFactory.Create(System.Data.Common.DbConnection,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Create (connection As DbConnection, options As DatabaseModelFactoryOptions) As DatabaseModel" />
      <MemberSignature Language="F#" Value="override this.Create : System.Data.Common.DbConnection * Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Usage="sqliteDatabaseModelFactory.Create (connection, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create (string connectionString, Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create(string connectionString, class Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Scaffolding.Internal.SqliteDatabaseModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Create (connectionString As String, options As DatabaseModelFactoryOptions) As DatabaseModel" />
      <MemberSignature Language="F#" Value="override this.Create : string * Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Usage="sqliteDatabaseModelFactory.Create (connectionString, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create (System.Data.Common.DbConnection connection, System.Collections.Generic.IEnumerable&lt;string&gt; tables, System.Collections.Generic.IEnumerable&lt;string&gt; schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create(class System.Data.Common.DbConnection connection, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tables, class System.Collections.Generic.IEnumerable`1&lt;string&gt; schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Scaffolding.Internal.SqliteDatabaseModelFactory.Create(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (connection As DbConnection, tables As IEnumerable(Of String), schemas As IEnumerable(Of String)) As DatabaseModel" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Data.Common.DbConnection * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel&#xA;override this.Create : System.Data.Common.DbConnection * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Usage="sqliteDatabaseModelFactory.Create (connection, tables, schemas)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory.Create(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="tables" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="schemas" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="tables">To be added.</param>
        <param name="schemas">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create (string connectionString, System.Collections.Generic.IEnumerable&lt;string&gt; tables, System.Collections.Generic.IEnumerable&lt;string&gt; schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create(string connectionString, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tables, class System.Collections.Generic.IEnumerable`1&lt;string&gt; schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Scaffolding.Internal.SqliteDatabaseModelFactory.Create(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (connectionString As String, tables As IEnumerable(Of String), schemas As IEnumerable(Of String)) As DatabaseModel" />
      <MemberSignature Language="F#" Value="abstract member Create : string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel&#xA;override this.Create : string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Usage="sqliteDatabaseModelFactory.Create (connectionString, tables, schemas)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory.Create(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="tables" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="schemas" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="tables">To be added.</param>
        <param name="schemas">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InferClrTypes">
      <MemberSignature Language="C#" Value="protected virtual void InferClrTypes (System.Data.Common.DbConnection connection, Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InferClrTypes(class System.Data.Common.DbConnection connection, class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Scaffolding.Internal.SqliteDatabaseModelFactory.InferClrTypes(System.Data.Common.DbConnection,Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InferClrTypes (connection As DbConnection, table As DatabaseTable)" />
      <MemberSignature Language="F#" Value="abstract member InferClrTypes : System.Data.Common.DbConnection * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable -&gt; unit&#xA;override this.InferClrTypes : System.Data.Common.DbConnection * Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable -&gt; unit" Usage="sqliteDatabaseModelFactory.InferClrTypes (connection, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseTable" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
