<Type Name="QueryableJsonProjectionInfo" FullName="Microsoft.EntityFrameworkCore.Query.Internal.QueryableJsonProjectionInfo">
  <TypeSignature Language="C#" Value="public readonly struct QueryableJsonProjectionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit QueryableJsonProjectionInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryableJsonProjectionInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure QueryableJsonProjectionInfo" />
  <TypeSignature Language="F#" Value="type QueryableJsonProjectionInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryableJsonProjectionInfo (System.Collections.Generic.Dictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,int&gt; propertyIndexMap, System.Collections.Generic.List&lt;(Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo, Microsoft.EntityFrameworkCore.Metadata.INavigation)&gt; childrenProjectionInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.Dictionary`2&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, int32&gt; propertyIndexMap, class System.Collections.Generic.List`1&lt;valuetype System.ValueTuple`2&lt;valuetype Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo, class Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt; childrenProjectionInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryableJsonProjectionInfo.#ctor(System.Collections.Generic.Dictionary{Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Int32},System.Collections.Generic.List{System.ValueTuple{Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo,Microsoft.EntityFrameworkCore.Metadata.INavigation}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyIndexMap As Dictionary(Of IProperty, Integer), childrenProjectionInfo As List(Of ValueTuple(Of JsonProjectionInfo, INavigation)))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.QueryableJsonProjectionInfo : System.Collections.Generic.Dictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, int&gt; * System.Collections.Generic.List&lt;ValueTuple&lt;Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo, Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Query.Internal.QueryableJsonProjectionInfo" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.QueryableJsonProjectionInfo (propertyIndexMap, childrenProjectionInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyIndexMap" Type="System.Collections.Generic.Dictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Int32&gt;" />
        <Parameter Name="childrenProjectionInfo" Type="System.Collections.Generic.List&lt;System.ValueTuple&lt;Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo,Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyIndexMap">To be added.</param>
        <param name="childrenProjectionInfo">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenProjectionInfo">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;(Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo JsonProjectionInfo, Microsoft.EntityFrameworkCore.Metadata.INavigation Navigation)&gt; ChildrenProjectionInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.ValueTuple`2&lt;valuetype Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo, class Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt; ChildrenProjectionInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.QueryableJsonProjectionInfo.ChildrenProjectionInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildrenProjectionInfo As IList(Of ValueTuple(Of JsonProjectionInfo, INavigation))" />
      <MemberSignature Language="F#" Value="member this.ChildrenProjectionInfo : System.Collections.Generic.IList&lt;ValueTuple&lt;Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo, Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.QueryableJsonProjectionInfo.ChildrenProjectionInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "JsonProjectionInfo", "Navigation" })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "JsonProjectionInfo", "Navigation" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.ValueTuple&lt;Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo,Microsoft.EntityFrameworkCore.Metadata.INavigation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Information needed to construct each child JSON entity.
                - JsonProjection info (same one we use for simple JSON projection),
                - navigation between parent and the child JSON entity.
            </summary>
        <value>To be added.</value>
        <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyIndexMap">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,int&gt; PropertyIndexMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, int32&gt; PropertyIndexMap" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.QueryableJsonProjectionInfo.PropertyIndexMap" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyIndexMap As IDictionary(Of IProperty, Integer)" />
      <MemberSignature Language="F#" Value="member this.PropertyIndexMap : System.Collections.Generic.IDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, int&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.QueryableJsonProjectionInfo.PropertyIndexMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Map between entity properties and corresponding column indexes.
            </summary>
        <value>To be added.</value>
        <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
