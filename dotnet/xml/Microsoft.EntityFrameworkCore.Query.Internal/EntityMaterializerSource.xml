<Type Name="EntityMaterializerSource" FullName="Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource">
  <TypeSignature Language="C#" Value="public class EntityMaterializerSource : Microsoft.EntityFrameworkCore.Query.IEntityMaterializerSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityMaterializerSource extends System.Object implements class Microsoft.EntityFrameworkCore.Query.IEntityMaterializerSource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityMaterializerSource&#xA;Implements IEntityMaterializerSource" />
  <TypeSignature Language="F#" Value="type EntityMaterializerSource = class&#xA;    interface IEntityMaterializerSource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IEntityMaterializerSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityMaterializerSource (Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSourceDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSourceDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSourceDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As EntityMaterializerSourceDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource : Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSourceDependencies -&gt; Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSourceDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaterializeExpression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression CreateMaterializeExpression (Microsoft.EntityFrameworkCore.Query.EntityMaterializerSourceParameters parameters, System.Linq.Expressions.Expression materializationContextExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression CreateMaterializeExpression(valuetype Microsoft.EntityFrameworkCore.Query.EntityMaterializerSourceParameters parameters, class System.Linq.Expressions.Expression materializationContextExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Query.EntityMaterializerSourceParameters,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMaterializeExpression (parameters As EntityMaterializerSourceParameters, materializationContextExpression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member CreateMaterializeExpression : Microsoft.EntityFrameworkCore.Query.EntityMaterializerSourceParameters * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression&#xA;override this.CreateMaterializeExpression : Microsoft.EntityFrameworkCore.Query.EntityMaterializerSourceParameters * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="entityMaterializerSource.CreateMaterializeExpression (parameters, materializationContextExpression)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IEntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Query.EntityMaterializerSourceParameters,System.Linq.Expressions.Expression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.EntityFrameworkCore.Query.EntityMaterializerSourceParameters" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="materializationContextExpression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <param name="materializationContextExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMaterializeExpression">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression CreateMaterializeExpression (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string entityInstanceName, System.Linq.Expressions.Expression materializationContextExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression CreateMaterializeExpression(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string entityInstanceName, class System.Linq.Expressions.Expression materializationContextExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMaterializeExpression (entityType As IEntityType, entityInstanceName As String, materializationContextExpression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member CreateMaterializeExpression : Microsoft.EntityFrameworkCore.Metadata.IEntityType * string * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression&#xA;override this.CreateMaterializeExpression : Microsoft.EntityFrameworkCore.Metadata.IEntityType * string * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="entityMaterializerSource.CreateMaterializeExpression (entityType, entityInstanceName, materializationContextExpression)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IEntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String,System.Linq.Expressions.Expression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[System.Obsolete("Use the overload that accepts an EntityMaterializerSourceParameters object.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the overload that accepts an EntityMaterializerSourceParameters object.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="entityInstanceName" Type="System.String" />
        <Parameter Name="materializationContextExpression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="entityInstanceName">To be added.</param>
        <param name="materializationContextExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSourceDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSourceDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As EntityMaterializerSourceDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSourceDependencies" Usage="Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSourceDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEmptyMaterializer">
      <MemberSignature Language="C#" Value="public virtual Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext,object&gt; GetEmptyMaterializer (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Func`2&lt;valuetype Microsoft.EntityFrameworkCore.Storage.MaterializationContext, object&gt; GetEmptyMaterializer(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource.GetEmptyMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEmptyMaterializer (entityType As IEntityType) As Func(Of MaterializationContext, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetEmptyMaterializer : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext, obj&gt;&#xA;override this.GetEmptyMaterializer : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext, obj&gt;" Usage="entityMaterializerSource.GetEmptyMaterializer entityType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IEntityMaterializerSource.GetEmptyMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaterializer">
      <MemberSignature Language="C#" Value="public virtual Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext,object&gt; GetMaterializer (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Func`2&lt;valuetype Microsoft.EntityFrameworkCore.Storage.MaterializationContext, object&gt; GetMaterializer(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource.GetMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMaterializer (entityType As IEntityType) As Func(Of MaterializationContext, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetMaterializer : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext, obj&gt;&#xA;override this.GetMaterializer : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext, obj&gt;" Usage="entityMaterializerSource.GetMaterializer entityType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IEntityMaterializerSource.GetMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOldBehavior31866">
      <MemberSignature Language="C#" Value="public static readonly bool UseOldBehavior31866;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool UseOldBehavior31866" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource.UseOldBehavior31866" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UseOldBehavior31866 As Boolean " />
      <MemberSignature Language="F#" Value=" staticval mutable UseOldBehavior31866 : bool" Usage="Microsoft.EntityFrameworkCore.Query.Internal.EntityMaterializerSource.UseOldBehavior31866" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
