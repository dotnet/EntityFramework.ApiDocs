<Type Name="ExpressionTreeFuncletizer+PathNode" FullName="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer+PathNode">
  <TypeSignature Language="C#" Value="public sealed class ExpressionTreeFuncletizer.PathNode : IEquatable&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ExpressionTreeFuncletizer/PathNode extends System.Object implements class System.IEquatable`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer/PathNode&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionTreeFuncletizer.PathNode&#xA;Implements IEquatable(Of ExpressionTreeFuncletizer.PathNode)" />
  <TypeSignature Language="F#" Value="type ExpressionTreeFuncletizer.PathNode = class&#xA;    interface IEquatable&lt;ExpressionTreeFuncletizer.PathNode&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer+PathNode&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.RequiredMember]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.RequiredMember&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Constructors of types with required members are not supported in this version of your compiler.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Constructors of types with required members are not supported in this version of your compiler.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.CompilerFeatureRequired("RequiredMembers")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CompilerFeatureRequired("RequiredMembers")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="&lt;Clone&gt;$">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode &lt;Clone&gt;$ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer/PathNode &lt;Clone&gt;$() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.&lt;Clone&gt;$" />
      <MemberSignature Language="VB.NET" Value="Public Function &lt;Clone&gt;$ () As ExpressionTreeFuncletizer.PathNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer+PathNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode&gt;? Children { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer/PathNode&gt; Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As IReadOnlyList(Of ExpressionTreeFuncletizer.PathNode)" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.RequiredMember]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.RequiredMember&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer+PathNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Children of this node which contain parameterizable fragments.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer/PathNode other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.Equals(Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ExpressionTreeFuncletizer.PathNode) As Boolean" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer+PathNode" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionType As Type" />
      <MemberSignature Language="F#" Value="member this.ExpressionType : Type with get, set" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.ExpressionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.RequiredMember]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.RequiredMember&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The type of the expression represented by this <see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode? left, Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer/PathNode left, class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer/PathNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.op_Equality(Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode,Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ExpressionTreeFuncletizer.PathNode, right As ExpressionTreeFuncletizer.PathNode) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer+PathNode" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer+PathNode" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode? left, Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode? right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer/PathNode left, class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer/PathNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.op_Inequality(Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode,Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ExpressionTreeFuncletizer.PathNode, right As ExpressionTreeFuncletizer.PathNode) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer+PathNode" />
        <Parameter Name="right" Type="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer+PathNode" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string? ParameterName { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterName As String" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                For nodes representing parameterizable roots, contains the preferred parameter name, generated based on the expression
                node type/contents.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathFromParent">
      <MemberSignature Language="C#" Value="public Func&lt;System.Linq.Expressions.Expression,System.Linq.Expressions.Expression&gt;? PathFromParent { get; init; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Linq.Expressions.Expression, class System.Linq.Expressions.Expression&gt; PathFromParent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.PathFromParent" />
      <MemberSignature Language="VB.NET" Value="Public Property PathFromParent As Func(Of Expression, Expression)" />
      <MemberSignature Language="F#" Value="member this.PathFromParent : Func&lt;System.Linq.Expressions.Expression, System.Linq.Expressions.Expression&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.PathFromParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Linq.Expressions.Expression,System.Linq.Expressions.Expression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A function that accepts the parent node, and returns an expression representing the path to this node from that parent
                node. The returned expression can then be used to generate C# code that traverses the expression tree.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionTreeFuncletizer.PathNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
