<Type Name="SplitQueryingEnumerable" FullName="Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryingEnumerable">
  <TypeSignature Language="C#" Value="public static class SplitQueryingEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SplitQueryingEnumerable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryingEnumerable" />
  <TypeSignature Language="VB.NET" Value="Public Class SplitQueryingEnumerable" />
  <TypeSignature Language="F#" Value="type SplitQueryingEnumerable = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryingEnumerable&lt;T&gt; Create&lt;T&gt; (Microsoft.EntityFrameworkCore.Query.RelationalQueryContext relationalQueryContext, Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandResolver relationalCommandResolver, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.ReaderColumn?&gt;? readerColumns, Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,System.Data.Common.DbDataReader,Microsoft.EntityFrameworkCore.Query.Internal.ResultContext,Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator,T&gt; shaper, Action&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator&gt;? relatedDataLoaders, Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator,System.Threading.Tasks.Task&gt;? relatedDataLoadersAsync, Type contextType, bool standAloneStateManager, bool detailedErrorsEnabled, bool threadSafetyChecksEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryingEnumerable`1&lt;!!T&gt; Create&lt;T&gt;(class Microsoft.EntityFrameworkCore.Query.RelationalQueryContext relationalQueryContext, class Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandResolver relationalCommandResolver, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt; readerColumns, class System.Func`5&lt;class Microsoft.EntityFrameworkCore.Query.QueryContext, class System.Data.Common.DbDataReader, class Microsoft.EntityFrameworkCore.Query.Internal.ResultContext, class Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator, !!T&gt; shaper, class System.Action`3&lt;class Microsoft.EntityFrameworkCore.Query.QueryContext, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy, class Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator&gt; relatedDataLoaders, class System.Func`4&lt;class Microsoft.EntityFrameworkCore.Query.QueryContext, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy, class Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator, class System.Threading.Tasks.Task&gt; relatedDataLoadersAsync, class System.Type contextType, bool standAloneStateManager, bool detailedErrorsEnabled, bool threadSafetyChecksEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryingEnumerable.Create``1(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext,Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandResolver,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.ReaderColumn},System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,System.Data.Common.DbDataReader,Microsoft.EntityFrameworkCore.Query.Internal.ResultContext,Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator,``0},System.Action{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator},System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator,System.Threading.Tasks.Task},System.Type,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T) (relationalQueryContext As RelationalQueryContext, relationalCommandResolver As RelationalCommandResolver, readerColumns As IReadOnlyList(Of ReaderColumn), shaper As Func(Of QueryContext, DbDataReader, ResultContext, SplitQueryResultCoordinator, T), relatedDataLoaders As Action(Of QueryContext, IExecutionStrategy, SplitQueryResultCoordinator), relatedDataLoadersAsync As Func(Of QueryContext, IExecutionStrategy, SplitQueryResultCoordinator, Task), contextType As Type, standAloneStateManager As Boolean, detailedErrorsEnabled As Boolean, threadSafetyChecksEnabled As Boolean) As SplitQueryingEnumerable(Of T)" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.EntityFrameworkCore.Query.RelationalQueryContext * Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandResolver * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt; * Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, System.Data.Common.DbDataReader, Microsoft.EntityFrameworkCore.Query.Internal.ResultContext, Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator, 'T&gt; * Action&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy, Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator&gt; * Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy, Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator, System.Threading.Tasks.Task&gt; * Type * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryingEnumerable&lt;'T&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryingEnumerable.Create (relationalQueryContext, relationalCommandResolver, readerColumns, shaper, relatedDataLoaders, relatedDataLoadersAsync, contextType, standAloneStateManager, detailedErrorsEnabled, threadSafetyChecksEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryingEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationalQueryContext" Type="Microsoft.EntityFrameworkCore.Query.RelationalQueryContext" />
        <Parameter Name="relationalCommandResolver" Type="Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandResolver" />
        <Parameter Name="readerColumns" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="shaper" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,System.Data.Common.DbDataReader,Microsoft.EntityFrameworkCore.Query.Internal.ResultContext,Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator,T&gt;" />
        <Parameter Name="relatedDataLoaders" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="relatedDataLoadersAsync" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,Microsoft.EntityFrameworkCore.Query.Internal.SplitQueryResultCoordinator,System.Threading.Tasks.Task&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 1, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1, 1, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="standAloneStateManager" Type="System.Boolean" />
        <Parameter Name="detailedErrorsEnabled" Type="System.Boolean" />
        <Parameter Name="threadSafetyChecksEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="relationalQueryContext">To be added.</param>
        <param name="relationalCommandResolver">To be added.</param>
        <param name="readerColumns">To be added.</param>
        <param name="shaper">To be added.</param>
        <param name="relatedDataLoaders">To be added.</param>
        <param name="relatedDataLoadersAsync">To be added.</param>
        <param name="contextType">To be added.</param>
        <param name="standAloneStateManager">To be added.</param>
        <param name="detailedErrorsEnabled">To be added.</param>
        <param name="threadSafetyChecksEnabled">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
