<Type Name="ExpressionPrinter" FullName="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter">
  <TypeSignature Language="C#" Value="public class ExpressionPrinter : System.Linq.Expressions.ExpressionVisitor, Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionPrinter extends System.Linq.Expressions.ExpressionVisitor implements class Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionPrinter&#xA;Inherits ExpressionVisitor&#xA;Implements IExpressionPrinter" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="F#" Value="type ExpressionPrinter = class&#xA;    inherit ExpressionVisitor&#xA;    interface IExpressionPrinter" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="C#" Value="public class ExpressionPrinter : Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase, Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionPrinter extends Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase implements class Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionPrinter&#xA;Inherits ExpressionVisitorBase&#xA;Implements IExpressionPrinter" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type ExpressionPrinter = class&#xA;    inherit ExpressionVisitorBase&#xA;    interface IExpressionPrinter" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.ExpressionVisitor</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionPrinter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionPrinter (System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter&gt; constantPrinters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter/IConstantPrinter&gt; constantPrinters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor(System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (constantPrinters As List(Of ExpressionPrinter.IConstantPrinter))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter&gt; -&gt; Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter constantPrinters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="constantPrinters" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter+IConstantPrinter&gt;" Index="0" FrameworkAlternate="efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="constantPrinters">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionPrinter (System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ConstantPrinterBase&gt; constantPrinters);" FrameworkAlternate="efcore-2.0;efcore-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter/ConstantPrinterBase&gt; constantPrinters) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor(System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ConstantPrinterBase})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (constantPrinters As List(Of ExpressionPrinter.ConstantPrinterBase))" FrameworkAlternate="efcore-2.0;efcore-2.1" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ConstantPrinterBase&gt; -&gt; Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter constantPrinters" FrameworkAlternate="efcore-2.0;efcore-2.1" />
      <MemberSignature Language="C#" Value="protected ExpressionPrinter (System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ConstantPrinterBase&gt; additionalConstantPrinters);" FrameworkAlternate="efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter/ConstantPrinterBase&gt; additionalConstantPrinters) cil managed" FrameworkAlternate="efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (additionalConstantPrinters As List(Of ExpressionPrinter.ConstantPrinterBase))" FrameworkAlternate="efcore-2.2" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ConstantPrinterBase&gt; -&gt; Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter additionalConstantPrinters" FrameworkAlternate="efcore-2.2" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="constantPrinters" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter+ConstantPrinterBase&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1" />
        <Parameter Name="additionalConstantPrinters" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter+ConstantPrinterBase&gt;" Index="0" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="constantPrinters">To be added.</param>
        <param name="additionalConstantPrinters">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="protected virtual void Append (string message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Append(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Append (message As String)" />
      <MemberSignature Language="F#" Value="abstract member Append : string -&gt; unit&#xA;override this.Append : string -&gt; unit" Usage="expressionPrinter.Append message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="protected static Action&lt;Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,string&gt; Append { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Action`2&lt;class Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder, string&gt; Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property Append As Action(Of IndentedStringBuilder, String)" />
      <MemberSignature Language="F#" Value="static member Append : Action&lt;Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder, string&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="protected virtual void AppendLine (string message = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AppendLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AppendLine (Optional message As String = &quot;&quot;)" />
      <MemberSignature Language="F#" Value="abstract member AppendLine : string -&gt; unit&#xA;override this.AppendLine : string -&gt; unit" Usage="expressionPrinter.AppendLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="protected static Action&lt;Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,string&gt; AppendLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Action`2&lt;class Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder, string&gt; AppendLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property AppendLine As Action(Of IndentedStringBuilder, String)" />
      <MemberSignature Language="F#" Value="static member AppendLine : Action&lt;Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder, string&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterLimit">
      <MemberSignature Language="C#" Value="public virtual int? CharacterLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; CharacterLimit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.CharacterLimit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CharacterLimit As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.CharacterLimit : Nullable&lt;int&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.CharacterLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstantPrinters">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ConstantPrinterBase&gt; ConstantPrinters;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter/ConstantPrinterBase&gt; ConstantPrinters" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ConstantPrinters" />
      <MemberSignature Language="VB.NET" Value="Protected ConstantPrinters As List(Of ExpressionPrinter.ConstantPrinterBase) " />
      <MemberSignature Language="F#" Value="val mutable ConstantPrinters : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ConstantPrinterBase&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.ConstantPrinters" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter+ConstantPrinterBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateUniqueQsreIds">
      <MemberSignature Language="C#" Value="public virtual bool GenerateUniqueQsreIds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateUniqueQsreIds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.GenerateUniqueQsreIds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GenerateUniqueQsreIds As Boolean" />
      <MemberSignature Language="F#" Value="member this.GenerateUniqueQsreIds : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.GenerateUniqueQsreIds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstantPrinters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter&gt; GetConstantPrinters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter/IConstantPrinter&gt; GetConstantPrinters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.GetConstantPrinters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetConstantPrinters () As List(Of ExpressionPrinter.IConstantPrinter)" />
      <MemberSignature Language="F#" Value="abstract member GetConstantPrinters : unit -&gt; System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter&gt;&#xA;override this.GetConstantPrinters : unit -&gt; System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter&gt;" Usage="expressionPrinter.GetConstantPrinters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter+IConstantPrinter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostProcess">
      <MemberSignature Language="C#" Value="protected virtual string PostProcess (string queryPlan);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string PostProcess(string queryPlan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PostProcess(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function PostProcess (queryPlan As String) As String" />
      <MemberSignature Language="F#" Value="abstract member PostProcess : string -&gt; string&#xA;override this.PostProcess : string -&gt; string" Usage="expressionPrinter.PostProcess queryPlan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryPlan" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="queryPlan">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public virtual string Print (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Print(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Print (expression As Expression) As String" />
      <MemberSignature Language="F#" Value="abstract member Print : System.Linq.Expressions.Expression -&gt; string&#xA;override this.Print : System.Linq.Expressions.Expression -&gt; string" Usage="expressionPrinter.Print expression" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print(System.Linq.Expressions.Expression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public virtual string Print (System.Linq.Expressions.Expression expression, bool removeFormatting = false, int? characterLimit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Print(class System.Linq.Expressions.Expression expression, bool removeFormatting, valuetype System.Nullable`1&lt;int32&gt; characterLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression,System.Boolean,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Print (expression As Expression, Optional removeFormatting As Boolean = false, Optional characterLimit As Nullable(Of Integer) = Nothing) As String" />
      <MemberSignature Language="F#" Value="abstract member Print : System.Linq.Expressions.Expression * bool * Nullable&lt;int&gt; -&gt; string&#xA;override this.Print : System.Linq.Expressions.Expression * bool * Nullable&lt;int&gt; -&gt; string" Usage="expressionPrinter.Print (expression, removeFormatting, characterLimit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print(System.Linq.Expressions.Expression,System.Boolean,System.Nullable{System.Int32})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1" />
        <Parameter Name="removeFormatting" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1" />
        <Parameter Name="characterLimit" Type="System.Nullable&lt;System.Int32&gt;" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="removeFormatting">To be added.</param>
        <param name="characterLimit">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public virtual string Print (System.Linq.Expressions.Expression expression, bool removeFormatting = false, int? characterLimit = default, bool printConnections = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Print(class System.Linq.Expressions.Expression expression, bool removeFormatting, valuetype System.Nullable`1&lt;int32&gt; characterLimit, bool printConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression,System.Boolean,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Print (expression As Expression, Optional removeFormatting As Boolean = false, Optional characterLimit As Nullable(Of Integer) = Nothing, Optional printConnections As Boolean = true) As String" />
      <MemberSignature Language="F#" Value="abstract member Print : System.Linq.Expressions.Expression * bool * Nullable&lt;int&gt; * bool -&gt; string&#xA;override this.Print : System.Linq.Expressions.Expression * bool * Nullable&lt;int&gt; * bool -&gt; string" Usage="expressionPrinter.Print (expression, removeFormatting, characterLimit, printConnections)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print(System.Linq.Expressions.Expression,System.Boolean,System.Nullable{System.Int32},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="removeFormatting" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="characterLimit" Type="System.Nullable&lt;System.Int32&gt;" Index="2" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="printConnections" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="removeFormatting">To be added.</param>
        <param name="characterLimit">To be added.</param>
        <param name="printConnections">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintConnections">
      <MemberSignature Language="C#" Value="public virtual bool PrintConnections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintConnections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PrintConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PrintConnections As Boolean" />
      <MemberSignature Language="F#" Value="member this.PrintConnections : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PrintConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDebug">
      <MemberSignature Language="C#" Value="public virtual string PrintDebug (System.Linq.Expressions.Expression expression, bool highlightNonreducibleNodes = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string PrintDebug(class System.Linq.Expressions.Expression expression, bool highlightNonreducibleNodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PrintDebug(System.Linq.Expressions.Expression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrintDebug (expression As Expression, Optional highlightNonreducibleNodes As Boolean = true) As String" />
      <MemberSignature Language="F#" Value="abstract member PrintDebug : System.Linq.Expressions.Expression * bool -&gt; string&#xA;override this.PrintDebug : System.Linq.Expressions.Expression * bool -&gt; string" Usage="expressionPrinter.PrintDebug (expression, highlightNonreducibleNodes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.PrintDebug(System.Linq.Expressions.Expression,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1" />
        <Parameter Name="highlightNonreducibleNodes" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="highlightNonreducibleNodes">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDebug">
      <MemberSignature Language="C#" Value="public virtual string PrintDebug (System.Linq.Expressions.Expression expression, bool highlightNonreducibleNodes = true, bool reduceBeforePrinting = true, bool generateUniqueQsreIds = true, bool printConnections = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string PrintDebug(class System.Linq.Expressions.Expression expression, bool highlightNonreducibleNodes, bool reduceBeforePrinting, bool generateUniqueQsreIds, bool printConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PrintDebug(System.Linq.Expressions.Expression,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrintDebug (expression As Expression, Optional highlightNonreducibleNodes As Boolean = true, Optional reduceBeforePrinting As Boolean = true, Optional generateUniqueQsreIds As Boolean = true, Optional printConnections As Boolean = true) As String" />
      <MemberSignature Language="F#" Value="abstract member PrintDebug : System.Linq.Expressions.Expression * bool * bool * bool * bool -&gt; string&#xA;override this.PrintDebug : System.Linq.Expressions.Expression * bool * bool * bool * bool -&gt; string" Usage="expressionPrinter.PrintDebug (expression, highlightNonreducibleNodes, reduceBeforePrinting, generateUniqueQsreIds, printConnections)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.PrintDebug(System.Linq.Expressions.Expression,System.Boolean,System.Boolean,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="highlightNonreducibleNodes" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="reduceBeforePrinting" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="generateUniqueQsreIds" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="printConnections" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="highlightNonreducibleNodes">To be added.</param>
        <param name="reduceBeforePrinting">To be added.</param>
        <param name="generateUniqueQsreIds">To be added.</param>
        <param name="printConnections">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFormatting">
      <MemberSignature Language="C#" Value="public virtual bool RemoveFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemoveFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.RemoveFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RemoveFormatting As Boolean" />
      <MemberSignature Language="F#" Value="member this.RemoveFormatting : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.RemoveFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringBuilder">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder StringBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder StringBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.StringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StringBuilder As IndentedStringBuilder" />
      <MemberSignature Language="F#" Value="member this.StringBuilder : Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.StringBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackedQuery">
      <MemberSignature Language="C#" Value="public bool TrackedQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackedQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.TrackedQuery" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrackedQuery As Boolean" />
      <MemberSignature Language="F#" Value="member this.TrackedQuery : bool" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.TrackedQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression Visit (System.Linq.Expressions.Expression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression Visit(class System.Linq.Expressions.Expression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Visit(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (node As Expression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.Visit node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression Visit (System.Linq.Expressions.Expression expression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression Visit(class System.Linq.Expressions.Expression expression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As Expression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.Visit expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="expression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBinary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitBinary (System.Linq.Expressions.BinaryExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitBinary(class System.Linq.Expressions.BinaryExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitBinary (node As BinaryExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitBinary : System.Linq.Expressions.BinaryExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitBinary node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitBinary (System.Linq.Expressions.BinaryExpression binaryExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitBinary(class System.Linq.Expressions.BinaryExpression binaryExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitBinary (binaryExpression As BinaryExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitBinary : System.Linq.Expressions.BinaryExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitBinary binaryExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.BinaryExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="binaryExpression" Type="System.Linq.Expressions.BinaryExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="binaryExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBlock">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitBlock (System.Linq.Expressions.BlockExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitBlock(class System.Linq.Expressions.BlockExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBlock(System.Linq.Expressions.BlockExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitBlock (node As BlockExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitBlock : System.Linq.Expressions.BlockExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitBlock node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitBlock (System.Linq.Expressions.BlockExpression blockExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitBlock(class System.Linq.Expressions.BlockExpression blockExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitBlock (blockExpression As BlockExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitBlock : System.Linq.Expressions.BlockExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitBlock blockExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.BlockExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="blockExpression" Type="System.Linq.Expressions.BlockExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="blockExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditional">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitConditional (System.Linq.Expressions.ConditionalExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitConditional(class System.Linq.Expressions.ConditionalExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitConditional (node As ConditionalExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitConditional : System.Linq.Expressions.ConditionalExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitConditional node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitConditional (System.Linq.Expressions.ConditionalExpression conditionalExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitConditional(class System.Linq.Expressions.ConditionalExpression conditionalExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitConditional (conditionalExpression As ConditionalExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitConditional : System.Linq.Expressions.ConditionalExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitConditional conditionalExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.ConditionalExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="conditionalExpression" Type="System.Linq.Expressions.ConditionalExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="conditionalExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConstant">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitConstant (System.Linq.Expressions.ConstantExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitConstant(class System.Linq.Expressions.ConstantExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitConstant (node As ConstantExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitConstant : System.Linq.Expressions.ConstantExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitConstant node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitConstant (System.Linq.Expressions.ConstantExpression constantExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitConstant(class System.Linq.Expressions.ConstantExpression constantExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitConstant (constantExpression As ConstantExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitConstant : System.Linq.Expressions.ConstantExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitConstant constantExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.ConstantExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="constantExpression" Type="System.Linq.Expressions.ConstantExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="constantExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDefault">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitDefault (System.Linq.Expressions.DefaultExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitDefault(class System.Linq.Expressions.DefaultExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitDefault(System.Linq.Expressions.DefaultExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitDefault (node As DefaultExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitDefault : System.Linq.Expressions.DefaultExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitDefault node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitDefault (System.Linq.Expressions.DefaultExpression defaultExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitDefault(class System.Linq.Expressions.DefaultExpression defaultExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitDefault (defaultExpression As DefaultExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitDefault : System.Linq.Expressions.DefaultExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitDefault defaultExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.DefaultExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="defaultExpression" Type="System.Linq.Expressions.DefaultExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="defaultExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitedQuerySources">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.List&lt;Remotion.Linq.Clauses.IQuerySource&gt; VisitedQuerySources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class Remotion.Linq.Clauses.IQuerySource&gt; VisitedQuerySources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitedQuerySources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VisitedQuerySources As List(Of IQuerySource)" />
      <MemberSignature Language="F#" Value="member this.VisitedQuerySources : System.Collections.Generic.List&lt;Remotion.Linq.Clauses.IQuerySource&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitedQuerySources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Remotion.Linq.Clauses.IQuerySource&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExtension">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression node);" FrameworkAlternate="efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExtension(class System.Linq.Expressions.Expression node) cil managed" FrameworkAlternate="efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitExtension(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitExtension (node As Expression) As Expression" FrameworkAlternate="efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitExtension : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitExtension node" FrameworkAlternate="efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression extensionExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExtension(class System.Linq.Expressions.Expression extensionExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitExtension (extensionExpression As Expression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitExtension : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitExtension extensionExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="extensionExpression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="extensionExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitGoto">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitGoto (System.Linq.Expressions.GotoExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitGoto(class System.Linq.Expressions.GotoExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitGoto(System.Linq.Expressions.GotoExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitGoto (node As GotoExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitGoto : System.Linq.Expressions.GotoExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitGoto node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitGoto (System.Linq.Expressions.GotoExpression gotoExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitGoto(class System.Linq.Expressions.GotoExpression gotoExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitGoto (gotoExpression As GotoExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitGoto : System.Linq.Expressions.GotoExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitGoto gotoExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.GotoExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="gotoExpression" Type="System.Linq.Expressions.GotoExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="gotoExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIndex">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitIndex (System.Linq.Expressions.IndexExpression indexExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitIndex(class System.Linq.Expressions.IndexExpression indexExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitIndex(System.Linq.Expressions.IndexExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitIndex (indexExpression As IndexExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitIndex : System.Linq.Expressions.IndexExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitIndex indexExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexExpression" Type="System.Linq.Expressions.IndexExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="indexExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLabel">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitLabel (System.Linq.Expressions.LabelExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitLabel(class System.Linq.Expressions.LabelExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLabel(System.Linq.Expressions.LabelExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitLabel (node As LabelExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitLabel : System.Linq.Expressions.LabelExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitLabel node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitLabel (System.Linq.Expressions.LabelExpression labelExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitLabel(class System.Linq.Expressions.LabelExpression labelExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitLabel (labelExpression As LabelExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitLabel : System.Linq.Expressions.LabelExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitLabel labelExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.LabelExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="labelExpression" Type="System.Linq.Expressions.LabelExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="labelExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLambda&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitLambda&lt;T&gt; (System.Linq.Expressions.Expression&lt;T&gt; node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitLambda&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;!!T&gt; node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda``1(System.Linq.Expressions.Expression{``0})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitLambda(Of T) (node As Expression(Of T)) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitLambda : System.Linq.Expressions.Expression&lt;'T&gt; -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitLambda node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitLambda&lt;T&gt; (System.Linq.Expressions.Expression&lt;T&gt; lambdaExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitLambda&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;!!T&gt; lambdaExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitLambda(Of T) (lambdaExpression As Expression(Of T)) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitLambda : System.Linq.Expressions.Expression&lt;'T&gt; -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitLambda lambdaExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.Expression&lt;T&gt;" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="lambdaExpression" Type="System.Linq.Expressions.Expression&lt;T&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="node">To be added.</param>
        <param name="lambdaExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMember">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMember (System.Linq.Expressions.MemberExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMember(class System.Linq.Expressions.MemberExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMember(System.Linq.Expressions.MemberExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMember (node As MemberExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitMember : System.Linq.Expressions.MemberExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitMember node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMember (System.Linq.Expressions.MemberExpression memberExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMember(class System.Linq.Expressions.MemberExpression memberExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMember (memberExpression As MemberExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitMember : System.Linq.Expressions.MemberExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitMember memberExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.MemberExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="memberExpression" Type="System.Linq.Expressions.MemberExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="memberExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMemberInit">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMemberInit (System.Linq.Expressions.MemberInitExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMemberInit(class System.Linq.Expressions.MemberInitExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMemberInit (node As MemberInitExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitMemberInit : System.Linq.Expressions.MemberInitExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitMemberInit node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMemberInit (System.Linq.Expressions.MemberInitExpression memeberInitExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMemberInit(class System.Linq.Expressions.MemberInitExpression memeberInitExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMemberInit (memeberInitExpression As MemberInitExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitMemberInit : System.Linq.Expressions.MemberInitExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitMemberInit memeberInitExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.MemberInitExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="memeberInitExpression" Type="System.Linq.Expressions.MemberInitExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="memeberInitExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMethodCall">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMethodCall (System.Linq.Expressions.MethodCallExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMethodCall(class System.Linq.Expressions.MethodCallExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMethodCall (node As MethodCallExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitMethodCall : System.Linq.Expressions.MethodCallExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitMethodCall node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMethodCall (System.Linq.Expressions.MethodCallExpression methodCallExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMethodCall(class System.Linq.Expressions.MethodCallExpression methodCallExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMethodCall (methodCallExpression As MethodCallExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitMethodCall : System.Linq.Expressions.MethodCallExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitMethodCall methodCallExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.MethodCallExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="methodCallExpression" Type="System.Linq.Expressions.MethodCallExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="methodCallExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitNew">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitNew (System.Linq.Expressions.NewExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitNew(class System.Linq.Expressions.NewExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNew(System.Linq.Expressions.NewExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitNew (node As NewExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitNew : System.Linq.Expressions.NewExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitNew node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitNew (System.Linq.Expressions.NewExpression newExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitNew(class System.Linq.Expressions.NewExpression newExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitNew (newExpression As NewExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitNew : System.Linq.Expressions.NewExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitNew newExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.NewExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="newExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitNewArray">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitNewArray (System.Linq.Expressions.NewArrayExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitNewArray(class System.Linq.Expressions.NewArrayExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitNewArray (node As NewArrayExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitNewArray : System.Linq.Expressions.NewArrayExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitNewArray node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitNewArray (System.Linq.Expressions.NewArrayExpression newArrayExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitNewArray(class System.Linq.Expressions.NewArrayExpression newArrayExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitNewArray (newArrayExpression As NewArrayExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitNewArray : System.Linq.Expressions.NewArrayExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitNewArray newArrayExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.NewArrayExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="newArrayExpression" Type="System.Linq.Expressions.NewArrayExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="newArrayExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParameter">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitParameter (System.Linq.Expressions.ParameterExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitParameter(class System.Linq.Expressions.ParameterExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitParameter (node As ParameterExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitParameter : System.Linq.Expressions.ParameterExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitParameter node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitParameter (System.Linq.Expressions.ParameterExpression parameterExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitParameter(class System.Linq.Expressions.ParameterExpression parameterExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitParameter (parameterExpression As ParameterExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitParameter : System.Linq.Expressions.ParameterExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitParameter parameterExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.ParameterExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="parameterExpression" Type="System.Linq.Expressions.ParameterExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="parameterExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTry">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitTry (System.Linq.Expressions.TryExpression node);" FrameworkAlternate="efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitTry(class System.Linq.Expressions.TryExpression node) cil managed" FrameworkAlternate="efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitTry(System.Linq.Expressions.TryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitTry (node As TryExpression) As Expression" FrameworkAlternate="efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitTry : System.Linq.Expressions.TryExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitTry node" FrameworkAlternate="efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitTry (System.Linq.Expressions.TryExpression tryExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitTry(class System.Linq.Expressions.TryExpression tryExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitTry (tryExpression As TryExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitTry : System.Linq.Expressions.TryExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitTry tryExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.TryExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="tryExpression" Type="System.Linq.Expressions.TryExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="tryExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeBinary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitTypeBinary (System.Linq.Expressions.TypeBinaryExpression typeBinaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitTypeBinary(class System.Linq.Expressions.TypeBinaryExpression typeBinaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitTypeBinary (typeBinaryExpression As TypeBinaryExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitTypeBinary : System.Linq.Expressions.TypeBinaryExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitTypeBinary typeBinaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeBinaryExpression" Type="System.Linq.Expressions.TypeBinaryExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="typeBinaryExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUnary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitUnary (System.Linq.Expressions.UnaryExpression node);" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitUnary(class System.Linq.Expressions.UnaryExpression node) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitUnary (node As UnaryExpression) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="F#" Value="override this.VisitUnary : System.Linq.Expressions.UnaryExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitUnary node" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitUnary (System.Linq.Expressions.UnaryExpression unaryExpression);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitUnary(class System.Linq.Expressions.UnaryExpression unaryExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitUnary (unaryExpression As UnaryExpression) As Expression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="override this.VisitUnary : System.Linq.Expressions.UnaryExpression -&gt; System.Linq.Expressions.Expression" Usage="expressionPrinter.VisitUnary unaryExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.UnaryExpression" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="unaryExpression" Type="System.Linq.Expressions.UnaryExpression" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="unaryExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
