<Type Name="CompiledQuery&lt;TContext,TResult&gt;" FullName="Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery&lt;TContext,TResult&gt;">
  <TypeSignature Language="C#" Value="public class CompiledQuery&lt;TContext,TResult&gt; : Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryBase&lt;TContext,TResult&gt; where TContext : DbContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompiledQuery`2&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TResult&gt; extends Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryBase`2&lt;!TContext, !TResult&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2" />
  <TypeSignature Language="VB.NET" Value="Public Class CompiledQuery(Of TContext, TResult)&#xA;Inherits CompiledQueryBase(Of TContext, TResult)" />
  <TypeSignature Language="F#" Value="type CompiledQuery&lt;'Context, 'Result (requires 'Context :&gt; DbContext)&gt; = class&#xA;    inherit CompiledQueryBase&lt;'Context, 'Result (requires 'Context :&gt; DbContext)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TContext">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryBase&lt;TContext,TResult&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TContext">TContext</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TResult">TResult</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TContext">To be added.</typeparam>
    <typeparam name="TResult">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompiledQuery (System.Linq.Expressions.LambdaExpression queryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.LambdaExpression queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.#ctor(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queryExpression As LambdaExpression)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery&lt;'Context, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; : System.Linq.Expressions.LambdaExpression -&gt; Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery&lt;'Context, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery&lt;'Context, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; queryExpression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="queryExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCompiledQuery">
      <MemberSignature Language="C#" Value="protected override Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt; CreateCompiledQuery (Microsoft.EntityFrameworkCore.Query.Internal.IQueryCompiler queryCompiler, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.QueryContext, !TResult&gt; CreateCompiledQuery(class Microsoft.EntityFrameworkCore.Query.Internal.IQueryCompiler queryCompiler, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.CreateCompiledQuery(Microsoft.EntityFrameworkCore.Query.Internal.IQueryCompiler,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCompiledQuery (queryCompiler As IQueryCompiler, expression As Expression) As Func(Of QueryContext, TResult)" />
      <MemberSignature Language="F#" Value="override this.CreateCompiledQuery : Microsoft.EntityFrameworkCore.Query.Internal.IQueryCompiler * System.Linq.Expressions.Expression -&gt; Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, 'Result&gt;" Usage="compiledQuery.CreateCompiledQuery (queryCompiler, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryCompiler" Type="Microsoft.EntityFrameworkCore.Query.Internal.IQueryCompiler" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="queryCompiler">To be added.</param>
        <param name="expression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual TResult Execute (TContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute(!TContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute (context As TContext) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context -&gt; 'Result&#xA;override this.Execute : 'Context -&gt; 'Result" Usage="compiledQuery.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="TContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1&gt; (TContext context, TParam1 param1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1&gt;(!TContext context, !!TParam1 param1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``1(`0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1) (context As TContext, param1 As TParam1) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" />
        <Parameter Name="param1" Type="TParam1" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2&gt; (TContext context, TParam1 param1, TParam2 param2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``2(`0,``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2) (context As TContext, param1 As TParam1, param2 As TParam2) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" />
        <Parameter Name="param1" Type="TParam1" />
        <Parameter Name="param2" Type="TParam2" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``3(`0,``0,``1,``2)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" />
        <Parameter Name="param1" Type="TParam1" />
        <Parameter Name="param2" Type="TParam2" />
        <Parameter Name="param3" Type="TParam3" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``4(`0,``0,``1,``2,``3)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" />
        <Parameter Name="param1" Type="TParam1" />
        <Parameter Name="param2" Type="TParam2" />
        <Parameter Name="param3" Type="TParam3" />
        <Parameter Name="param4" Type="TParam4" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4, TParam5 param5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4, TParam5&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4, !!TParam5 param5) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``5(`0,``0,``1,``2,``3,``4)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4, TParam5) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4, param5 As TParam5) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4, param5)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" />
        <Parameter Name="param1" Type="TParam1" />
        <Parameter Name="param2" Type="TParam2" />
        <Parameter Name="param3" Type="TParam3" />
        <Parameter Name="param4" Type="TParam4" />
        <Parameter Name="param5" Type="TParam5" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <typeparam name="TParam5">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <param name="param5">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4, TParam5 param5, TParam6 param6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4, TParam5, TParam6&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4, !!TParam5 param5, !!TParam6 param6) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``6(`0,``0,``1,``2,``3,``4,``5)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4, TParam5, TParam6) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4, param5 As TParam5, param6 As TParam6) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4, param5, param6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param1" Type="TParam1" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param2" Type="TParam2" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param3" Type="TParam3" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param4" Type="TParam4" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param5" Type="TParam5" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param6" Type="TParam6" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <typeparam name="TParam5">To be added.</typeparam>
        <typeparam name="TParam6">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <param name="param5">To be added.</param>
        <param name="param6">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4, TParam5 param5, TParam6 param6, TParam7 param7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4, !!TParam5 param5, !!TParam6 param6, !!TParam7 param7) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``7(`0,``0,``1,``2,``3,``4,``5,``6)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4, param5 As TParam5, param6 As TParam6, param7 As TParam7) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4, param5, param6, param7)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param1" Type="TParam1" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param2" Type="TParam2" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param3" Type="TParam3" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param4" Type="TParam4" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param5" Type="TParam5" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param6" Type="TParam6" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param7" Type="TParam7" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <typeparam name="TParam5">To be added.</typeparam>
        <typeparam name="TParam6">To be added.</typeparam>
        <typeparam name="TParam7">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <param name="param5">To be added.</param>
        <param name="param6">To be added.</param>
        <param name="param7">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4, TParam5 param5, TParam6 param6, TParam7 param7, TParam8 param8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4, !!TParam5 param5, !!TParam6 param6, !!TParam7 param7, !!TParam8 param8) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``8(`0,``0,``1,``2,``3,``4,``5,``6,``7)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4, param5 As TParam5, param6 As TParam6, param7 As TParam7, param8 As TParam8) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4, param5, param6, param7, param8)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param1" Type="TParam1" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param2" Type="TParam2" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param3" Type="TParam3" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param4" Type="TParam4" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param5" Type="TParam5" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param6" Type="TParam6" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param7" Type="TParam7" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param8" Type="TParam8" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <typeparam name="TParam5">To be added.</typeparam>
        <typeparam name="TParam6">To be added.</typeparam>
        <typeparam name="TParam7">To be added.</typeparam>
        <typeparam name="TParam8">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <param name="param5">To be added.</param>
        <param name="param6">To be added.</param>
        <param name="param7">To be added.</param>
        <param name="param8">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4, TParam5 param5, TParam6 param6, TParam7 param7, TParam8 param8, TParam9 param9);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4, !!TParam5 param5, !!TParam6 param6, !!TParam7 param7, !!TParam8 param8, !!TParam9 param9) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``9(`0,``0,``1,``2,``3,``4,``5,``6,``7,``8)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4, param5 As TParam5, param6 As TParam6, param7 As TParam7, param8 As TParam8, param9 As TParam9) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4, param5, param6, param7, param8, param9)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param1" Type="TParam1" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param2" Type="TParam2" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param3" Type="TParam3" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param4" Type="TParam4" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param5" Type="TParam5" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param6" Type="TParam6" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param7" Type="TParam7" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param8" Type="TParam8" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param9" Type="TParam9" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <typeparam name="TParam5">To be added.</typeparam>
        <typeparam name="TParam6">To be added.</typeparam>
        <typeparam name="TParam7">To be added.</typeparam>
        <typeparam name="TParam8">To be added.</typeparam>
        <typeparam name="TParam9">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <param name="param5">To be added.</param>
        <param name="param6">To be added.</param>
        <param name="param7">To be added.</param>
        <param name="param8">To be added.</param>
        <param name="param9">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4, TParam5 param5, TParam6 param6, TParam7 param7, TParam8 param8, TParam9 param9, TParam10 param10);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4, !!TParam5 param5, !!TParam6 param6, !!TParam7 param7, !!TParam8 param8, !!TParam9 param9, !!TParam10 param10) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``10(`0,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4, param5 As TParam5, param6 As TParam6, param7 As TParam7, param8 As TParam8, param9 As TParam9, param10 As TParam10) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param1" Type="TParam1" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param2" Type="TParam2" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param3" Type="TParam3" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param4" Type="TParam4" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param5" Type="TParam5" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param6" Type="TParam6" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param7" Type="TParam7" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param8" Type="TParam8" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param9" Type="TParam9" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param10" Type="TParam10" Index="10" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <typeparam name="TParam5">To be added.</typeparam>
        <typeparam name="TParam6">To be added.</typeparam>
        <typeparam name="TParam7">To be added.</typeparam>
        <typeparam name="TParam8">To be added.</typeparam>
        <typeparam name="TParam9">To be added.</typeparam>
        <typeparam name="TParam10">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <param name="param5">To be added.</param>
        <param name="param6">To be added.</param>
        <param name="param7">To be added.</param>
        <param name="param8">To be added.</param>
        <param name="param9">To be added.</param>
        <param name="param10">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4, TParam5 param5, TParam6 param6, TParam7 param7, TParam8 param8, TParam9 param9, TParam10 param10, TParam11 param11);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4, !!TParam5 param5, !!TParam6 param6, !!TParam7 param7, !!TParam8 param8, !!TParam9 param9, !!TParam10 param10, !!TParam11 param11) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``11(`0,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4, param5 As TParam5, param6 As TParam6, param7 As TParam7, param8 As TParam8, param9 As TParam9, param10 As TParam10, param11 As TParam11) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 * 'TParam11 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 * 'TParam11 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param1" Type="TParam1" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param2" Type="TParam2" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param3" Type="TParam3" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param4" Type="TParam4" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param5" Type="TParam5" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param6" Type="TParam6" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param7" Type="TParam7" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param8" Type="TParam8" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param9" Type="TParam9" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param10" Type="TParam10" Index="10" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param11" Type="TParam11" Index="11" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <typeparam name="TParam5">To be added.</typeparam>
        <typeparam name="TParam6">To be added.</typeparam>
        <typeparam name="TParam7">To be added.</typeparam>
        <typeparam name="TParam8">To be added.</typeparam>
        <typeparam name="TParam9">To be added.</typeparam>
        <typeparam name="TParam10">To be added.</typeparam>
        <typeparam name="TParam11">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <param name="param5">To be added.</param>
        <param name="param6">To be added.</param>
        <param name="param7">To be added.</param>
        <param name="param8">To be added.</param>
        <param name="param9">To be added.</param>
        <param name="param10">To be added.</param>
        <param name="param11">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4, TParam5 param5, TParam6 param6, TParam7 param7, TParam8 param8, TParam9 param9, TParam10 param10, TParam11 param11, TParam12 param12);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4, !!TParam5 param5, !!TParam6 param6, !!TParam7 param7, !!TParam8 param8, !!TParam9 param9, !!TParam10 param10, !!TParam11 param11, !!TParam12 param12) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``12(`0,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4, param5 As TParam5, param6 As TParam6, param7 As TParam7, param8 As TParam8, param9 As TParam9, param10 As TParam10, param11 As TParam11, param12 As TParam12) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 * 'TParam11 * 'TParam12 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 * 'TParam11 * 'TParam12 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param1" Type="TParam1" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param2" Type="TParam2" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param3" Type="TParam3" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param4" Type="TParam4" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param5" Type="TParam5" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param6" Type="TParam6" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param7" Type="TParam7" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param8" Type="TParam8" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param9" Type="TParam9" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param10" Type="TParam10" Index="10" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param11" Type="TParam11" Index="11" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param12" Type="TParam12" Index="12" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <typeparam name="TParam5">To be added.</typeparam>
        <typeparam name="TParam6">To be added.</typeparam>
        <typeparam name="TParam7">To be added.</typeparam>
        <typeparam name="TParam8">To be added.</typeparam>
        <typeparam name="TParam9">To be added.</typeparam>
        <typeparam name="TParam10">To be added.</typeparam>
        <typeparam name="TParam11">To be added.</typeparam>
        <typeparam name="TParam12">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <param name="param5">To be added.</param>
        <param name="param6">To be added.</param>
        <param name="param7">To be added.</param>
        <param name="param8">To be added.</param>
        <param name="param9">To be added.</param>
        <param name="param10">To be added.</param>
        <param name="param11">To be added.</param>
        <param name="param12">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4, TParam5 param5, TParam6 param6, TParam7 param7, TParam8 param8, TParam9 param9, TParam10 param10, TParam11 param11, TParam12 param12, TParam13 param13);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4, !!TParam5 param5, !!TParam6 param6, !!TParam7 param7, !!TParam8 param8, !!TParam9 param9, !!TParam10 param10, !!TParam11 param11, !!TParam12 param12, !!TParam13 param13) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``13(`0,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4, param5 As TParam5, param6 As TParam6, param7 As TParam7, param8 As TParam8, param9 As TParam9, param10 As TParam10, param11 As TParam11, param12 As TParam12, param13 As TParam13) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 * 'TParam11 * 'TParam12 * 'TParam13 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 * 'TParam11 * 'TParam12 * 'TParam13 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param1" Type="TParam1" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param2" Type="TParam2" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param3" Type="TParam3" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param4" Type="TParam4" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param5" Type="TParam5" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param6" Type="TParam6" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param7" Type="TParam7" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param8" Type="TParam8" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param9" Type="TParam9" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param10" Type="TParam10" Index="10" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param11" Type="TParam11" Index="11" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param12" Type="TParam12" Index="12" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param13" Type="TParam13" Index="13" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <typeparam name="TParam5">To be added.</typeparam>
        <typeparam name="TParam6">To be added.</typeparam>
        <typeparam name="TParam7">To be added.</typeparam>
        <typeparam name="TParam8">To be added.</typeparam>
        <typeparam name="TParam9">To be added.</typeparam>
        <typeparam name="TParam10">To be added.</typeparam>
        <typeparam name="TParam11">To be added.</typeparam>
        <typeparam name="TParam12">To be added.</typeparam>
        <typeparam name="TParam13">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <param name="param5">To be added.</param>
        <param name="param6">To be added.</param>
        <param name="param7">To be added.</param>
        <param name="param8">To be added.</param>
        <param name="param9">To be added.</param>
        <param name="param10">To be added.</param>
        <param name="param11">To be added.</param>
        <param name="param12">To be added.</param>
        <param name="param13">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4, TParam5 param5, TParam6 param6, TParam7 param7, TParam8 param8, TParam9 param9, TParam10 param10, TParam11 param11, TParam12 param12, TParam13 param13, TParam14 param14);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4, !!TParam5 param5, !!TParam6 param6, !!TParam7 param7, !!TParam8 param8, !!TParam9 param9, !!TParam10 param10, !!TParam11 param11, !!TParam12 param12, !!TParam13 param13, !!TParam14 param14) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``14(`0,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4, param5 As TParam5, param6 As TParam6, param7 As TParam7, param8 As TParam8, param9 As TParam9, param10 As TParam10, param11 As TParam11, param12 As TParam12, param13 As TParam13, param14 As TParam14) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 * 'TParam11 * 'TParam12 * 'TParam13 * 'TParam14 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 * 'TParam11 * 'TParam12 * 'TParam13 * 'TParam14 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param1" Type="TParam1" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param2" Type="TParam2" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param3" Type="TParam3" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param4" Type="TParam4" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param5" Type="TParam5" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param6" Type="TParam6" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param7" Type="TParam7" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param8" Type="TParam8" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param9" Type="TParam9" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param10" Type="TParam10" Index="10" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param11" Type="TParam11" Index="11" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param12" Type="TParam12" Index="12" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param13" Type="TParam13" Index="13" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param14" Type="TParam14" Index="14" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <typeparam name="TParam5">To be added.</typeparam>
        <typeparam name="TParam6">To be added.</typeparam>
        <typeparam name="TParam7">To be added.</typeparam>
        <typeparam name="TParam8">To be added.</typeparam>
        <typeparam name="TParam9">To be added.</typeparam>
        <typeparam name="TParam10">To be added.</typeparam>
        <typeparam name="TParam11">To be added.</typeparam>
        <typeparam name="TParam12">To be added.</typeparam>
        <typeparam name="TParam13">To be added.</typeparam>
        <typeparam name="TParam14">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <param name="param5">To be added.</param>
        <param name="param6">To be added.</param>
        <param name="param7">To be added.</param>
        <param name="param8">To be added.</param>
        <param name="param9">To be added.</param>
        <param name="param10">To be added.</param>
        <param name="param11">To be added.</param>
        <param name="param12">To be added.</param>
        <param name="param13">To be added.</param>
        <param name="param14">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult Execute&lt;TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15&gt; (TContext context, TParam1 param1, TParam2 param2, TParam3 param3, TParam4 param4, TParam5 param5, TParam6 param6, TParam7 param7, TParam8 param8, TParam9 param9, TParam10 param10, TParam11 param11, TParam12 param12, TParam13 param13, TParam14 param14, TParam15 param15);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Execute&lt;TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15&gt;(!TContext context, !!TParam1 param1, !!TParam2 param2, !!TParam3 param3, !!TParam4 param4, !!TParam5 param5, !!TParam6 param6, !!TParam7 param7, !!TParam8 param8, !!TParam9 param9, !!TParam10 param10, !!TParam11 param11, !!TParam12 param12, !!TParam13 param13, !!TParam14 param14, !!TParam15 param15) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.Execute``15(`0,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Execute(Of TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15) (context As TContext, param1 As TParam1, param2 As TParam2, param3 As TParam3, param4 As TParam4, param5 As TParam5, param6 As TParam6, param7 As TParam7, param8 As TParam8, param9 As TParam9, param10 As TParam10, param11 As TParam11, param12 As TParam12, param13 As TParam13, param14 As TParam14, param15 As TParam15) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 * 'TParam11 * 'TParam12 * 'TParam13 * 'TParam14 * 'TParam15 -&gt; 'Result&#xA;override this.Execute : 'Context * 'TParam1 * 'TParam2 * 'TParam3 * 'TParam4 * 'TParam5 * 'TParam6 * 'TParam7 * 'TParam8 * 'TParam9 * 'TParam10 * 'TParam11 * 'TParam12 * 'TParam13 * 'TParam14 * 'TParam15 -&gt; 'Result" Usage="compiledQuery.Execute (context, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TParam15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param1" Type="TParam1" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param2" Type="TParam2" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param3" Type="TParam3" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param4" Type="TParam4" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param5" Type="TParam5" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param6" Type="TParam6" Index="6" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param7" Type="TParam7" Index="7" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param8" Type="TParam8" Index="8" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param9" Type="TParam9" Index="9" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param10" Type="TParam10" Index="10" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param11" Type="TParam11" Index="11" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param12" Type="TParam12" Index="12" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param13" Type="TParam13" Index="13" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param14" Type="TParam14" Index="14" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="param15" Type="TParam15" Index="15" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <typeparam name="TParam2">To be added.</typeparam>
        <typeparam name="TParam3">To be added.</typeparam>
        <typeparam name="TParam4">To be added.</typeparam>
        <typeparam name="TParam5">To be added.</typeparam>
        <typeparam name="TParam6">To be added.</typeparam>
        <typeparam name="TParam7">To be added.</typeparam>
        <typeparam name="TParam8">To be added.</typeparam>
        <typeparam name="TParam9">To be added.</typeparam>
        <typeparam name="TParam10">To be added.</typeparam>
        <typeparam name="TParam11">To be added.</typeparam>
        <typeparam name="TParam12">To be added.</typeparam>
        <typeparam name="TParam13">To be added.</typeparam>
        <typeparam name="TParam14">To be added.</typeparam>
        <typeparam name="TParam15">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="param1">To be added.</param>
        <param name="param2">To be added.</param>
        <param name="param3">To be added.</param>
        <param name="param4">To be added.</param>
        <param name="param5">To be added.</param>
        <param name="param6">To be added.</param>
        <param name="param7">To be added.</param>
        <param name="param8">To be added.</param>
        <param name="param9">To be added.</param>
        <param name="param10">To be added.</param>
        <param name="param11">To be added.</param>
        <param name="param12">To be added.</param>
        <param name="param13">To be added.</param>
        <param name="param14">To be added.</param>
        <param name="param15">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync&lt;TParam1&gt;">
      <MemberSignature Language="C#" Value="public virtual TResult ExecuteAsync&lt;TParam1&gt; (TContext context, System.Threading.CancellationToken cancellationToken, TParam1 param1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult ExecuteAsync&lt;TParam1&gt;(!TContext context, valuetype System.Threading.CancellationToken cancellationToken, !!TParam1 param1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQuery`2.ExecuteAsync``1(`0,System.Threading.CancellationToken,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteAsync(Of TParam1) (context As TContext, cancellationToken As CancellationToken, param1 As TParam1) As TResult" />
      <MemberSignature Language="F#" Value="abstract member ExecuteAsync : 'Context * System.Threading.CancellationToken * 'TParam1 -&gt; 'Result&#xA;override this.ExecuteAsync : 'Context * System.Threading.CancellationToken * 'TParam1 -&gt; 'Result" Usage="compiledQuery.ExecuteAsync (context, cancellationToken, param1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParam1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="TContext" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="param1" Type="TParam1" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="TParam1">To be added.</typeparam>
        <param name="context">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="param1">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
