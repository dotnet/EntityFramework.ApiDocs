<Type Name="QueryOptimizer" FullName="Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer">
  <TypeSignature Language="C#" Value="public class QueryOptimizer : Remotion.Linq.Transformations.SubQueryFromClauseFlattener, Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryOptimizer extends Remotion.Linq.Transformations.SubQueryFromClauseFlattener implements class Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryOptimizer&#xA;Inherits SubQueryFromClauseFlattener&#xA;Implements IQueryOptimizer" />
  <TypeSignature Language="F#" Value="type QueryOptimizer = class&#xA;    inherit SubQueryFromClauseFlattener&#xA;    interface IQueryOptimizer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Remotion.Linq.Transformations.SubQueryFromClauseFlattener</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryOptimizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlattenSubQuery">
      <MemberSignature Language="C#" Value="protected override void FlattenSubQuery (Remotion.Linq.Clauses.Expressions.SubQueryExpression subQueryExpression, Remotion.Linq.Clauses.IFromClause fromClause, Remotion.Linq.QueryModel queryModel, int destinationIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FlattenSubQuery(class Remotion.Linq.Clauses.Expressions.SubQueryExpression subQueryExpression, class Remotion.Linq.Clauses.IFromClause fromClause, class Remotion.Linq.QueryModel queryModel, int32 destinationIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression,Remotion.Linq.Clauses.IFromClause,Remotion.Linq.QueryModel,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FlattenSubQuery (subQueryExpression As SubQueryExpression, fromClause As IFromClause, queryModel As QueryModel, destinationIndex As Integer)" />
      <MemberSignature Language="F#" Value="override this.FlattenSubQuery : Remotion.Linq.Clauses.Expressions.SubQueryExpression * Remotion.Linq.Clauses.IFromClause * Remotion.Linq.QueryModel * int -&gt; unit" Usage="queryOptimizer.FlattenSubQuery (subQueryExpression, fromClause, queryModel, destinationIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subQueryExpression" Type="Remotion.Linq.Clauses.Expressions.SubQueryExpression" />
        <Parameter Name="fromClause" Type="Remotion.Linq.Clauses.IFromClause" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="subQueryExpression">To be added.</param>
        <param name="fromClause">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="destinationIndex">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optimize">
      <MemberSignature Language="C#" Value="public virtual void Optimize (Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optimize(class Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.Optimize(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Remotion.Linq.QueryModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optimize (queryCompilationContext As QueryCompilationContext, queryModel As QueryModel)" />
      <MemberSignature Language="F#" Value="abstract member Optimize : Microsoft.EntityFrameworkCore.Query.QueryCompilationContext * Remotion.Linq.QueryModel -&gt; unit&#xA;override this.Optimize : Microsoft.EntityFrameworkCore.Query.QueryCompilationContext * Remotion.Linq.QueryModel -&gt; unit" Usage="queryOptimizer.Optimize (queryCompilationContext, queryModel)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Remotion.Linq.QueryModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryCompilationContext" Type="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="queryCompilationContext">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optimize">
      <MemberSignature Language="C#" Value="public virtual void Optimize (System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; queryAnnotations, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optimize(class System.Collections.Generic.IReadOnlyCollection`1&lt;class Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; queryAnnotations, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optimize (queryAnnotations As IReadOnlyCollection(Of IQueryAnnotation), queryModel As QueryModel)" />
      <MemberSignature Language="F#" Value="abstract member Optimize : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; * Remotion.Linq.QueryModel -&gt; unit&#xA;override this.Optimize : System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt; * Remotion.Linq.QueryModel -&gt; unit" Usage="queryOptimizer.Optimize (queryAnnotations, queryModel)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryAnnotations" Type="System.Collections.Generic.IReadOnlyCollection&lt;Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation&gt;" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="queryAnnotations">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitGroupJoinClause">
      <MemberSignature Language="C#" Value="public override void VisitGroupJoinClause (Remotion.Linq.Clauses.GroupJoinClause groupJoinClause, Remotion.Linq.QueryModel queryModel, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitGroupJoinClause(class Remotion.Linq.Clauses.GroupJoinClause groupJoinClause, class Remotion.Linq.QueryModel queryModel, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub VisitGroupJoinClause (groupJoinClause As GroupJoinClause, queryModel As QueryModel, index As Integer)" />
      <MemberSignature Language="F#" Value="override this.VisitGroupJoinClause : Remotion.Linq.Clauses.GroupJoinClause * Remotion.Linq.QueryModel * int -&gt; unit" Usage="queryOptimizer.VisitGroupJoinClause (groupJoinClause, queryModel, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupJoinClause" Type="Remotion.Linq.Clauses.GroupJoinClause" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="index" Type="System.Int32" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="groupJoinClause">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitJoinClause">
      <MemberSignature Language="C#" Value="public override void VisitJoinClause (Remotion.Linq.Clauses.JoinClause joinClause, Remotion.Linq.QueryModel queryModel, Remotion.Linq.Clauses.GroupJoinClause groupJoinClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitJoinClause(class Remotion.Linq.Clauses.JoinClause joinClause, class Remotion.Linq.QueryModel queryModel, class Remotion.Linq.Clauses.GroupJoinClause groupJoinClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub VisitJoinClause (joinClause As JoinClause, queryModel As QueryModel, groupJoinClause As GroupJoinClause)" />
      <MemberSignature Language="F#" Value="override this.VisitJoinClause : Remotion.Linq.Clauses.JoinClause * Remotion.Linq.QueryModel * Remotion.Linq.Clauses.GroupJoinClause -&gt; unit" Usage="queryOptimizer.VisitJoinClause (joinClause, queryModel, groupJoinClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinClause" Type="Remotion.Linq.Clauses.JoinClause" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="groupJoinClause" Type="Remotion.Linq.Clauses.GroupJoinClause" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="joinClause">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="groupJoinClause">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitJoinClause">
      <MemberSignature Language="C#" Value="public override void VisitJoinClause (Remotion.Linq.Clauses.JoinClause joinClause, Remotion.Linq.QueryModel queryModel, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitJoinClause(class Remotion.Linq.Clauses.JoinClause joinClause, class Remotion.Linq.QueryModel queryModel, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub VisitJoinClause (joinClause As JoinClause, queryModel As QueryModel, index As Integer)" />
      <MemberSignature Language="F#" Value="override this.VisitJoinClause : Remotion.Linq.Clauses.JoinClause * Remotion.Linq.QueryModel * int -&gt; unit" Usage="queryOptimizer.VisitJoinClause (joinClause, queryModel, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinClause" Type="Remotion.Linq.Clauses.JoinClause" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="joinClause">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitResultOperator">
      <MemberSignature Language="C#" Value="public override void VisitResultOperator (Remotion.Linq.Clauses.ResultOperatorBase resultOperator, Remotion.Linq.QueryModel queryModel, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitResultOperator(class Remotion.Linq.Clauses.ResultOperatorBase resultOperator, class Remotion.Linq.QueryModel queryModel, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub VisitResultOperator (resultOperator As ResultOperatorBase, queryModel As QueryModel, index As Integer)" />
      <MemberSignature Language="F#" Value="override this.VisitResultOperator : Remotion.Linq.Clauses.ResultOperatorBase * Remotion.Linq.QueryModel * int -&gt; unit" Usage="queryOptimizer.VisitResultOperator (resultOperator, queryModel, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultOperator" Type="Remotion.Linq.Clauses.ResultOperatorBase" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resultOperator">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
