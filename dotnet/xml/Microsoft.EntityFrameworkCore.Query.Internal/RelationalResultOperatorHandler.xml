<Type Name="RelationalResultOperatorHandler" FullName="Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler">
  <TypeSignature Language="C#" Value="public class RelationalResultOperatorHandler : Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalResultOperatorHandler extends System.Object implements class Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalResultOperatorHandler&#xA;Implements IResultOperatorHandler" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="F#" Value="type RelationalResultOperatorHandler = class&#xA;    interface IResultOperatorHandler" FrameworkAlternate="efcore-1.0;efcore-1.1" />
  <TypeSignature Language="C#" Value="public class RelationalResultOperatorHandler : Microsoft.EntityFrameworkCore.Query.IRelationalResultOperatorHandler, Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalResultOperatorHandler extends System.Object implements class Microsoft.EntityFrameworkCore.Query.IRelationalResultOperatorHandler, class Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalResultOperatorHandler&#xA;Implements IRelationalResultOperatorHandler, IResultOperatorHandler" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type RelationalResultOperatorHandler = class&#xA;    interface IRelationalResultOperatorHandler&#xA;    interface IResultOperatorHandler" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IRelationalResultOperatorHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalResultOperatorHandler (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory sqlTranslatingExpressionVisitorFactory, Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory selectExpressionFactory, Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler resultOperatorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory sqlTranslatingExpressionVisitorFactory, class Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory selectExpressionFactory, class Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler resultOperatorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (model As IModel, sqlTranslatingExpressionVisitorFactory As ISqlTranslatingExpressionVisitorFactory, selectExpressionFactory As ISelectExpressionFactory, resultOperatorHandler As IResultOperatorHandler)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory * Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory * Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler -&gt; Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler (model, sqlTranslatingExpressionVisitorFactory, selectExpressionFactory, resultOperatorHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="sqlTranslatingExpressionVisitorFactory" Type="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="selectExpressionFactory" Type="Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="resultOperatorHandler" Type="Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="sqlTranslatingExpressionVisitorFactory">To be added.</param>
        <param name="selectExpressionFactory">To be added.</param>
        <param name="resultOperatorHandler">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalResultOperatorHandler (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider relationalAnnotationProvider, Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory sqlTranslatingExpressionVisitorFactory, Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory selectExpressionFactory, Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler resultOperatorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider relationalAnnotationProvider, class Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory sqlTranslatingExpressionVisitorFactory, class Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory selectExpressionFactory, class Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler resultOperatorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (model As IModel, relationalAnnotationProvider As IRelationalAnnotationProvider, sqlTranslatingExpressionVisitorFactory As ISqlTranslatingExpressionVisitorFactory, selectExpressionFactory As ISelectExpressionFactory, resultOperatorHandler As ResultOperatorHandler)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider * Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory * Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory * Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler -&gt; Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler (model, relationalAnnotationProvider, sqlTranslatingExpressionVisitorFactory, selectExpressionFactory, resultOperatorHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="relationalAnnotationProvider" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="sqlTranslatingExpressionVisitorFactory" Type="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="selectExpressionFactory" Type="Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="resultOperatorHandler" Type="Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="relationalAnnotationProvider">To be added.</param>
        <param name="sqlTranslatingExpressionVisitorFactory">To be added.</param>
        <param name="selectExpressionFactory">To be added.</param>
        <param name="resultOperatorHandler">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleResultOperator">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression HandleResultOperator (Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor entityQueryModelVisitor, Remotion.Linq.Clauses.ResultOperatorBase resultOperator, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression HandleResultOperator(class Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor entityQueryModelVisitor, class Remotion.Linq.Clauses.ResultOperatorBase resultOperator, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HandleResultOperator (entityQueryModelVisitor As EntityQueryModelVisitor, resultOperator As ResultOperatorBase, queryModel As QueryModel) As Expression" />
      <MemberSignature Language="F#" Value="abstract member HandleResultOperator : Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor * Remotion.Linq.Clauses.ResultOperatorBase * Remotion.Linq.QueryModel -&gt; System.Linq.Expressions.Expression&#xA;override this.HandleResultOperator : Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor * Remotion.Linq.Clauses.ResultOperatorBase * Remotion.Linq.QueryModel -&gt; System.Linq.Expressions.Expression" Usage="relationalResultOperatorHandler.HandleResultOperator (entityQueryModelVisitor, resultOperator, queryModel)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityQueryModelVisitor" Type="Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" />
        <Parameter Name="resultOperator" Type="Remotion.Linq.Clauses.ResultOperatorBase" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="entityQueryModelVisitor">To be added.</param>
        <param name="resultOperator">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareSelectExpressionForAggregate">
      <MemberSignature Language="C#" Value="protected static void PrepareSelectExpressionForAggregate (Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void PrepareSelectExpressionForAggregate(class Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression selectExpression, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler.PrepareSelectExpressionForAggregate(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,Remotion.Linq.QueryModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub PrepareSelectExpressionForAggregate (selectExpression As SelectExpression, queryModel As QueryModel)" />
      <MemberSignature Language="F#" Value="static member PrepareSelectExpressionForAggregate : Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression * Remotion.Linq.QueryModel -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler.PrepareSelectExpressionForAggregate (selectExpression, queryModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression" Index="0" FrameworkAlternate="efcore-2.2" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" Index="1" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
