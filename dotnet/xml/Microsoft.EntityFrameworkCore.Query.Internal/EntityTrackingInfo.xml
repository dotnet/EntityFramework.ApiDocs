<Type Name="EntityTrackingInfo" FullName="Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo">
  <TypeSignature Language="C#" Value="public class EntityTrackingInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityTrackingInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityTrackingInfo" />
  <TypeSignature Language="F#" Value="type EntityTrackingInfo = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityTrackingInfo (Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext, Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression querySourceReferenceExpression, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext, class Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression querySourceReferenceExpression, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.#ctor(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queryCompilationContext As QueryCompilationContext, querySourceReferenceExpression As QuerySourceReferenceExpression, entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo : Microsoft.EntityFrameworkCore.Query.QueryCompilationContext * Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo (queryCompilationContext, querySourceReferenceExpression, entityType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queryCompilationContext" Type="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" />
        <Parameter Name="querySourceReferenceExpression" Type="Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="queryCompilationContext">To be added.</param>
        <param name="querySourceReferenceExpression">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncludedEntities">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IncludedEntity&gt; GetIncludedEntities (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo/IncludedEntity&gt; GetIncludedEntities(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.GetIncludedEntities(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIncludedEntities (entity As Object) As IEnumerable(Of EntityTrackingInfo.IncludedEntity)" />
      <MemberSignature Language="F#" Value="abstract member GetIncludedEntities : obj -&gt; seq&lt;Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IncludedEntity&gt;&#xA;override this.GetIncludedEntities : obj -&gt; seq&lt;Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IncludedEntity&gt;" Usage="entityTrackingInfo.GetIncludedEntities entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo+IncludedEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncludedEntities">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IncludedEntity&gt; GetIncludedEntities (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo/IncludedEntity&gt; GetIncludedEntities(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.GetIncludedEntities(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIncludedEntities (stateManager As IStateManager, entity As Object) As IEnumerable(Of EntityTrackingInfo.IncludedEntity)" />
      <MemberSignature Language="F#" Value="abstract member GetIncludedEntities : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * obj -&gt; seq&lt;Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IncludedEntity&gt;&#xA;override this.GetIncludedEntities : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * obj -&gt; seq&lt;Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IncludedEntity&gt;" Usage="entityTrackingInfo.GetIncludedEntities (stateManager, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo+IncludedEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" Index="0" FrameworkAlternate="efcore-1.1" />
        <Parameter Name="entity" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="entity">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnumerableTarget">
      <MemberSignature Language="C#" Value="public virtual bool IsEnumerableTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnumerableTarget" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IsEnumerableTarget" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsEnumerableTarget As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsEnumerableTarget : bool" Usage="Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IsEnumerableTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySource">
      <MemberSignature Language="C#" Value="public virtual Remotion.Linq.Clauses.IQuerySource QuerySource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Remotion.Linq.Clauses.IQuerySource QuerySource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.QuerySource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QuerySource As IQuerySource" />
      <MemberSignature Language="F#" Value="member this.QuerySource : Remotion.Linq.Clauses.IQuerySource" Usage="Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.QuerySource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Remotion.Linq.Clauses.IQuerySource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuerySourceReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression QuerySourceReferenceExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression QuerySourceReferenceExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.QuerySourceReferenceExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QuerySourceReferenceExpression As QuerySourceReferenceExpression" />
      <MemberSignature Language="F#" Value="member this.QuerySourceReferenceExpression : Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression" Usage="Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.QuerySourceReferenceExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTracking">
      <MemberSignature Language="C#" Value="public virtual void StartTracking (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, object entity, in Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartTracking(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, object entity, [in]valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.StartTracking(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StartTracking (stateManager As IStateManager, entity As Object, valueBuffer As ValueBuffer)" />
      <MemberSignature Language="F#" Value="abstract member StartTracking : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * obj * ValueBuffer -&gt; unit&#xA;override this.StartTracking : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * obj * ValueBuffer -&gt; unit" Usage="entityTrackingInfo.StartTracking (stateManager, entity, valueBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
