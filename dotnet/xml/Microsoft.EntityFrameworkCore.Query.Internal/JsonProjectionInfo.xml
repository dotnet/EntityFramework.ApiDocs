<Type Name="JsonProjectionInfo" FullName="Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo">
  <TypeSignature Language="C#" Value="public readonly struct JsonProjectionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonProjectionInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonProjectionInfo" />
  <TypeSignature Language="F#" Value="type JsonProjectionInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonProjectionInfo (int jsonColumnIndex, System.Collections.Generic.List&lt;(Microsoft.EntityFrameworkCore.Metadata.IProperty?, int?, int?)&gt; keyAccessInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 jsonColumnIndex, class System.Collections.Generic.List`1&lt;valuetype System.ValueTuple`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, valuetype System.Nullable`1&lt;int32&gt;, valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; keyAccessInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo.#ctor(System.Int32,System.Collections.Generic.List{System.ValueTuple{Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Nullable{System.Int32},System.Nullable{System.Int32}}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (jsonColumnIndex As Integer, keyAccessInfo As List(Of ValueTuple(Of IProperty, Nullable(Of Integer), Nullable(Of Integer))))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo : int * System.Collections.Generic.List&lt;ValueTuple&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Nullable&lt;int&gt;, Nullable&lt;int&gt;&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo (jsonColumnIndex, keyAccessInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="jsonColumnIndex" Type="System.Int32" />
        <Parameter Name="keyAccessInfo" Type="System.Collections.Generic.List&lt;System.ValueTuple&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Nullable&lt;System.Int32&gt;,System.Nullable&lt;System.Int32&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="jsonColumnIndex">To be added.</param>
        <param name="keyAccessInfo">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonColumnIndex">
      <MemberSignature Language="C#" Value="public int JsonColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 JsonColumnIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo.JsonColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JsonColumnIndex As Integer" />
      <MemberSignature Language="F#" Value="member this.JsonColumnIndex : int" Usage="Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo.JsonColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Projection index for json column name.
            </summary>
        <value>To be added.</value>
        <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyAccessInfo">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;(Microsoft.EntityFrameworkCore.Metadata.IProperty? KeyProperty, int? ConstantKeyValue, int? KeyProjectionIndex)&gt; KeyAccessInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;valuetype System.ValueTuple`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, valuetype System.Nullable`1&lt;int32&gt;, valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; KeyAccessInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo.KeyAccessInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyAccessInfo As List(Of ValueTuple(Of IProperty, Nullable(Of Integer), Nullable(Of Integer)))" />
      <MemberSignature Language="F#" Value="member this.KeyAccessInfo : System.Collections.Generic.List&lt;ValueTuple&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Nullable&lt;int&gt;, Nullable&lt;int&gt;&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.JsonProjectionInfo.KeyAccessInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "KeyProperty", "ConstantKeyValue", "KeyProjectionIndex" })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "KeyProperty", "ConstantKeyValue", "KeyProjectionIndex" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.ValueTuple&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Nullable&lt;System.Int32&gt;,System.Nullable&lt;System.Int32&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Information needed to construct key values for the initial JSON entity:
                - for key properties of the owner entity we store IProperty under KeyProperty
                and projection index of the key in the KeyProjectionIndex, ConstantKeyValue is null,
                - for constant array element access we store the value directly in ConstantKeyValue
                KeyProperty and KeyProjectionIndex are null,
                - for non-constant array element access we store it's projection index in KeyProjectionIndex
                KeyProperty and ConstantKeyValue are null.
            </summary>
        <value>To be added.</value>
        <remarks>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
