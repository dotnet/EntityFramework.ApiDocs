<Type Name="RelationalCommandCache" FullName="Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache">
  <TypeSignature Language="C#" Value="public class RelationalCommandCache" FrameworkAlternate="efcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalCommandCache extends System.Object" FrameworkAlternate="efcore-3.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalCommandCache" FrameworkAlternate="efcore-3.1" />
  <TypeSignature Language="F#" Value="type RelationalCommandCache = class" FrameworkAlternate="efcore-3.1" />
  <TypeSignature Language="C#" Value="public class RelationalCommandCache : Microsoft.EntityFrameworkCore.Query.IPrintableExpression" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalCommandCache extends System.Object implements class Microsoft.EntityFrameworkCore.Query.IPrintableExpression" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalCommandCache&#xA;Implements IPrintableExpression" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type RelationalCommandCache = class&#xA;    interface IPrintableExpression" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IPrintableExpression</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalCommandCache (Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache, Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory querySqlGeneratorFactory, Microsoft.EntityFrameworkCore.Query.IRelationalParameterBasedSqlProcessorFactory relationalParameterBasedSqlProcessorFactory, System.Linq.Expressions.Expression queryExpression, bool useRelationalNulls);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache, class Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory querySqlGeneratorFactory, class Microsoft.EntityFrameworkCore.Query.IRelationalParameterBasedSqlProcessorFactory relationalParameterBasedSqlProcessorFactory, class System.Linq.Expressions.Expression queryExpression, bool useRelationalNulls) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory,Microsoft.EntityFrameworkCore.Query.IRelationalParameterBasedSqlProcessorFactory,System.Linq.Expressions.Expression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memoryCache As IMemoryCache, querySqlGeneratorFactory As IQuerySqlGeneratorFactory, relationalParameterBasedSqlProcessorFactory As IRelationalParameterBasedSqlProcessorFactory, queryExpression As Expression, useRelationalNulls As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache : Microsoft.Extensions.Caching.Memory.IMemoryCache * Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory * Microsoft.EntityFrameworkCore.Query.IRelationalParameterBasedSqlProcessorFactory * System.Linq.Expressions.Expression * bool -&gt; Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache (memoryCache, querySqlGeneratorFactory, relationalParameterBasedSqlProcessorFactory, queryExpression, useRelationalNulls)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memoryCache" Type="Microsoft.Extensions.Caching.Memory.IMemoryCache" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="querySqlGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="relationalParameterBasedSqlProcessorFactory" Type="Microsoft.EntityFrameworkCore.Query.IRelationalParameterBasedSqlProcessorFactory" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="useRelationalNulls" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="memoryCache">To be added.</param>
        <param name="querySqlGeneratorFactory">To be added.</param>
        <param name="relationalParameterBasedSqlProcessorFactory">To be added.</param>
        <param name="queryExpression">To be added.</param>
        <param name="useRelationalNulls">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalCommandCache (Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache, Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory querySqlGeneratorFactory, Microsoft.EntityFrameworkCore.Query.IRelationalParameterBasedSqlProcessorFactory relationalParameterBasedSqlProcessorFactory, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt; readerColumns, bool useRelationalNulls);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache, class Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory querySqlGeneratorFactory, class Microsoft.EntityFrameworkCore.Query.IRelationalParameterBasedSqlProcessorFactory relationalParameterBasedSqlProcessorFactory, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt; readerColumns, bool useRelationalNulls) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory,Microsoft.EntityFrameworkCore.Query.IRelationalParameterBasedSqlProcessorFactory,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.ReaderColumn},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memoryCache As IMemoryCache, querySqlGeneratorFactory As IQuerySqlGeneratorFactory, relationalParameterBasedSqlProcessorFactory As IRelationalParameterBasedSqlProcessorFactory, selectExpression As SelectExpression, readerColumns As IReadOnlyList(Of ReaderColumn), useRelationalNulls As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache : Microsoft.Extensions.Caching.Memory.IMemoryCache * Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory * Microsoft.EntityFrameworkCore.Query.IRelationalParameterBasedSqlProcessorFactory * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache (memoryCache, querySqlGeneratorFactory, relationalParameterBasedSqlProcessorFactory, selectExpression, readerColumns, useRelationalNulls)" />
      <MemberSignature Language="C#" Value="public RelationalCommandCache (Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache, Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory querySqlGeneratorFactory, Microsoft.EntityFrameworkCore.Query.IRelationalParameterBasedSqlProcessorFactory relationalParameterBasedSqlProcessorFactory, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt;? readerColumns, bool useRelationalNulls);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memoryCache" Type="Microsoft.Extensions.Caching.Memory.IMemoryCache" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="querySqlGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="relationalParameterBasedSqlProcessorFactory" Type="Microsoft.EntityFrameworkCore.Query.IRelationalParameterBasedSqlProcessorFactory" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="readerColumns" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt;" Index="4" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="useRelationalNulls" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="memoryCache">To be added.</param>
        <param name="querySqlGeneratorFactory">To be added.</param>
        <param name="relationalParameterBasedSqlProcessorFactory">To be added.</param>
        <param name="selectExpression">To be added.</param>
        <param name="readerColumns">To be added.</param>
        <param name="useRelationalNulls">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalCommandCache (Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache, Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory querySqlGeneratorFactory, bool useRelationalNulls, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache, class Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory sqlExpressionFactory, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory querySqlGeneratorFactory, bool useRelationalNulls, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory,System.Boolean,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memoryCache As IMemoryCache, sqlExpressionFactory As ISqlExpressionFactory, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, querySqlGeneratorFactory As IQuerySqlGeneratorFactory, useRelationalNulls As Boolean, selectExpression As SelectExpression)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache : Microsoft.Extensions.Caching.Memory.IMemoryCache * Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory * bool * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache (memoryCache, sqlExpressionFactory, parameterNameGeneratorFactory, querySqlGeneratorFactory, useRelationalNulls, selectExpression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memoryCache" Type="Microsoft.Extensions.Caching.Memory.IMemoryCache" Index="0" FrameworkAlternate="efcore-3.1" />
        <Parameter Name="sqlExpressionFactory" Type="Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory" Index="1" FrameworkAlternate="efcore-3.1" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Index="2" FrameworkAlternate="efcore-3.1" />
        <Parameter Name="querySqlGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Query.IQuerySqlGeneratorFactory" Index="3" FrameworkAlternate="efcore-3.1" />
        <Parameter Name="useRelationalNulls" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-3.1" />
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" Index="5" FrameworkAlternate="efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="memoryCache">To be added.</param>
        <param name="sqlExpressionFactory">To be added.</param>
        <param name="parameterNameGeneratorFactory">To be added.</param>
        <param name="querySqlGeneratorFactory">To be added.</param>
        <param name="useRelationalNulls">To be added.</param>
        <param name="selectExpression">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationalCommand">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IRelationalCommand GetRelationalCommand (System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand GetRelationalCommand(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache.GetRelationalCommand(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelationalCommand (parameters As IReadOnlyDictionary(Of String, Object)) As IRelationalCommand" />
      <MemberSignature Language="F#" Value="abstract member GetRelationalCommand : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommand&#xA;override this.GetRelationalCommand : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" Usage="relationalCommandCache.GetRelationalCommand parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationalCommandTemplate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate GetRelationalCommandTemplate (System.Collections.Generic.IReadOnlyDictionary&lt;string,object?&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate GetRelationalCommandTemplate(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache.GetRelationalCommandTemplate(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelationalCommandTemplate (parameters As IReadOnlyDictionary(Of String, Object)) As IRelationalCommandTemplate" />
      <MemberSignature Language="F#" Value="abstract member GetRelationalCommandTemplate : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate&#xA;override this.GetRelationalCommandTemplate : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate" Usage="relationalCommandCache.GetRelationalCommandTemplate parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print">
      <MemberSignature Language="C#" Value="void IPrintableExpression.Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache.Microsoft#EntityFrameworkCore#Query#IPrintableExpression#Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Sub Print (expressionPrinter As ExpressionPrinter) Implements IPrintableExpression.Print" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit&#xA;override this.Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="relationalCommandCache.Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print expressionPrinter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.IPrintableExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt; ReaderColumns { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt; ReaderColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache.ReaderColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReaderColumns As IReadOnlyList(Of ReaderColumn)" />
      <MemberSignature Language="F#" Value="member this.ReaderColumns : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache.ReaderColumns" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt;? ReaderColumns { get; }" FrameworkAlternate="efcore-6.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.ReaderColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
