<Type Name="PrecompiledQueryContext&lt;T&gt;+IncludablePrecompiledQueryContext&lt;TEntity,TProperty&gt;" FullName="Microsoft.EntityFrameworkCore.Query.Internal.PrecompiledQueryContext&lt;T&gt;+IncludablePrecompiledQueryContext&lt;TEntity,TProperty&gt;">
  <TypeSignature Language="C#" Value="public class PrecompiledQueryContext&lt;T&gt;.IncludablePrecompiledQueryContext&lt;TEntity,TProperty&gt; : Microsoft.EntityFrameworkCore.Query.Internal.PrecompiledQueryContext&lt;TEntity&gt;, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TEntity,TProperty&gt;, System.Collections.Generic.IEnumerable&lt;TEntity&gt;, System.Linq.IQueryable&lt;TEntity&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit PrecompiledQueryContext`1/IncludablePrecompiledQueryContext`2&lt;T, TEntity, TProperty&gt; extends Microsoft.EntityFrameworkCore.Query.Internal.PrecompiledQueryContext`1&lt;!TEntity&gt; implements class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!TEntity, !TProperty&gt;, class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt;, class System.Collections.IEnumerable, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!TEntity&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.PrecompiledQueryContext`1.IncludablePrecompiledQueryContext`2" />
  <TypeSignature Language="VB.NET" Value="Public Class PrecompiledQueryContext(Of T).IncludablePrecompiledQueryContext(Of TEntity, TProperty)&#xA;Inherits PrecompiledQueryContext(Of TEntity)&#xA;Implements IEnumerable(Of TEntity), IIncludableQueryable(Of TEntity, TProperty), IQueryable(Of TEntity)" />
  <TypeSignature Language="F#" Value="type PrecompiledQueryContext&lt;'T&gt;.IncludablePrecompiledQueryContext&lt;'Entity, 'Property&gt; = class&#xA;    inherit PrecompiledQueryContext&lt;'Entity&gt;&#xA;    interface IIncludableQueryable&lt;'Entity, 'Property&gt;&#xA;    interface IQueryable&lt;'Entity&gt;&#xA;    interface seq&lt;'Entity&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
    <TypeParameter Name="TEntity">
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
    <TypeParameter Name="TProperty">
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.Internal.PrecompiledQueryContext&lt;TEntity&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TEntity</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TEntity,TProperty&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;TEntity&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TEntity">To be added.</typeparam>
    <typeparam name="TProperty">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IncludablePrecompiledQueryContext (Microsoft.EntityFrameworkCore.DbContext dbContext, Microsoft.EntityFrameworkCore.Query.QueryContext queryContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.DbContext dbContext, class Microsoft.EntityFrameworkCore.Query.QueryContext queryContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.PrecompiledQueryContext`1.IncludablePrecompiledQueryContext`2.#ctor(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Query.QueryContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dbContext As DbContext, queryContext As QueryContext)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.PrecompiledQueryContext&lt;'T&gt;.IncludablePrecompiledQueryContext&lt;'Entity, 'Property&gt; : Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Query.QueryContext -&gt; Microsoft.EntityFrameworkCore.Query.Internal.PrecompiledQueryContext&lt;'T&gt;.IncludablePrecompiledQueryContext&lt;'Entity, 'Property&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.PrecompiledQueryContext&lt;'T&gt;.IncludablePrecompiledQueryContext&lt;'Entity, 'Property&gt; (dbContext, queryContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dbContext" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="queryContext" Type="Microsoft.EntityFrameworkCore.Query.QueryContext" />
      </Parameters>
      <Docs>
        <param name="dbContext">To be added.</param>
        <param name="queryContext">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
