<Type Name="TpcTablesExpression" FullName="Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression">
  <TypeSignature Language="C#" Value="public sealed class TpcTablesExpression : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TpcTablesExpression extends Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TpcTablesExpression&#xA;Inherits TableExpressionBase" />
  <TypeSignature Language="F#" Value="type TpcTablesExpression = class&#xA;    inherit TableExpressionBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TpcTablesExpression (string? alias, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt; subSelectExpressions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt; subSelectExpressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alias As String, entityType As IEntityType, subSelectExpressions As IReadOnlyList(Of SelectExpression))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression : string * Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt; -&gt; Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression (alias, entityType, subSelectExpressions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alias" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="subSelectExpressions" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt;" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="alias">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="subSelectExpressions">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TpcTablesExpression (string? alias, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt; subSelectExpressions, Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression discriminatorColumn, System.Collections.Generic.List&lt;string&gt; discriminatorValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt; subSelectExpressions, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression discriminatorColumn, class System.Collections.Generic.List`1&lt;string&gt; discriminatorValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression},Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression,System.Collections.Generic.List{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alias As String, entityType As IEntityType, subSelectExpressions As IReadOnlyList(Of SelectExpression), discriminatorColumn As ColumnExpression, discriminatorValues As List(Of String))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression : string * Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt; * Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression * System.Collections.Generic.List&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression (alias, entityType, subSelectExpressions, discriminatorColumn, discriminatorValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alias" Type="System.String" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="subSelectExpressions" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt;" Index="2" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="discriminatorColumn" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" Index="3" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="discriminatorValues" Type="System.Collections.Generic.List&lt;System.String&gt;" Index="4" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="alias">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="subSelectExpressions">To be added.</param>
        <param name="discriminatorColumn">To be added.</param>
        <param name="discriminatorValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alias">
      <MemberSignature Language="C#" Value="public override string? Alias { get; }" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Alias" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.Alias" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Alias As String" />
      <MemberSignature Language="F#" Value="member this.Alias : string" Usage="Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.Alias" />
      <MemberSignature Language="C#" Value="public override string Alias { get; }" FrameworkAlternate="efcore-9.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Clone (string? alias, System.Linq.Expressions.ExpressionVisitor cloningExpressionVisitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase Clone(string alias, class System.Linq.Expressions.ExpressionVisitor cloningExpressionVisitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.Clone(System.String,System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone (alias As String, cloningExpressionVisitor As ExpressionVisitor) As TableExpressionBase" />
      <MemberSignature Language="F#" Value="override this.Clone : string * System.Linq.Expressions.ExpressionVisitor -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Usage="tpcTablesExpression.Clone (alias, cloningExpressionVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="cloningExpressionVisitor" Type="System.Linq.Expressions.ExpressionVisitor" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="alias">To be added.</param>
        <param name="cloningExpressionVisitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CreateWithAnnotations">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase CreateWithAnnotations (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase CreateWithAnnotations(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.CreateWithAnnotations(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateWithAnnotations (annotations As IEnumerable(Of IAnnotation)) As TableExpressionBase" />
      <MemberSignature Language="F#" Value="override this.CreateWithAnnotations : seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; -&gt; Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase" Usage="tpcTablesExpression.CreateWithAnnotations annotations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotations" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="annotations">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscriminatorColumn">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression DiscriminatorColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression DiscriminatorColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.DiscriminatorColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DiscriminatorColumn As ColumnExpression" />
      <MemberSignature Language="F#" Value="member this.DiscriminatorColumn : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" Usage="Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.DiscriminatorColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscriminatorValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DiscriminatorValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DiscriminatorValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.DiscriminatorValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DiscriminatorValues As List(Of String)" />
      <MemberSignature Language="F#" Value="member this.DiscriminatorValues : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.DiscriminatorValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityType As IEntityType" />
      <MemberSignature Language="F#" Value="member this.EntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.EntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tpcTablesExpression.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tpcTablesExpression.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="protected override void Print (Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Print(class Microsoft.EntityFrameworkCore.Query.ExpressionPrinter expressionPrinter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.Print(Microsoft.EntityFrameworkCore.Query.ExpressionPrinter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Print (expressionPrinter As ExpressionPrinter)" />
      <MemberSignature Language="F#" Value="override this.Print : Microsoft.EntityFrameworkCore.Query.ExpressionPrinter -&gt; unit" Usage="tpcTablesExpression.Print expressionPrinter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrinter" Type="Microsoft.EntityFrameworkCore.Query.ExpressionPrinter" />
      </Parameters>
      <Docs>
        <param name="expressionPrinter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prune">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression Prune (System.Collections.Generic.IReadOnlyList&lt;string&gt; discriminatorValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression Prune(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; discriminatorValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.Prune(System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Prune (discriminatorValues As IReadOnlyList(Of String)) As TpcTablesExpression" />
      <MemberSignature Language="F#" Value="member this.Prune : System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression" Usage="tpcTablesExpression.Prune discriminatorValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="discriminatorValues" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="discriminatorValues">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quote">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression Quote ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression Quote() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.Quote" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Quote () As Expression" />
      <MemberSignature Language="F#" Value="override this.Quote : unit -&gt; System.Linq.Expressions.Expression" Usage="tpcTablesExpression.Quote " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SelectExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt; SelectExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt; SelectExpressions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.SelectExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectExpressions As IReadOnlyList(Of SelectExpression)" />
      <MemberSignature Language="F#" Value="member this.SelectExpressions : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.SelectExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="tpcTablesExpression.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAlias">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression WithAlias (string newAlias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression WithAlias(string newAlias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.WithAlias(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithAlias (newAlias As String) As TpcTablesExpression" />
      <MemberSignature Language="F#" Value="override this.WithAlias : string -&gt; Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression" Usage="tpcTablesExpression.WithAlias newAlias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.PreserveBaseOverrides]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.PreserveBaseOverrides&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAlias" Type="System.String" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="newAlias">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WithAnnotations">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression WithAnnotations (System.Collections.Generic.IReadOnlyDictionary&lt;string,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression WithAnnotations(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; annotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression.WithAnnotations(System.Collections.Generic.IReadOnlyDictionary{System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function WithAnnotations (annotations As IReadOnlyDictionary(Of String, IAnnotation)) As TpcTablesExpression" />
      <MemberSignature Language="F#" Value="override this.WithAnnotations : System.Collections.Generic.IReadOnlyDictionary&lt;string, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt; -&gt; Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression" Usage="tpcTablesExpression.WithAnnotations annotations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-9.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.PreserveBaseOverrides]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.PreserveBaseOverrides&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.TpcTablesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotations" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation&gt;" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="annotations">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
