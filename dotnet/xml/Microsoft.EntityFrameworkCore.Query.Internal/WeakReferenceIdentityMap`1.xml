<Type Name="WeakReferenceIdentityMap&lt;TKey&gt;" FullName="Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap&lt;TKey&gt;">
  <TypeSignature Language="C#" Value="public class WeakReferenceIdentityMap&lt;TKey&gt; : Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WeakReferenceIdentityMap`1&lt;TKey&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1" />
  <TypeSignature Language="VB.NET" Value="Public Class WeakReferenceIdentityMap(Of TKey)&#xA;Implements IWeakReferenceIdentityMap" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
  <TypeSignature Language="F#" Value="type WeakReferenceIdentityMap&lt;'Key&gt; = class&#xA;    interface IWeakReferenceIdentityMap" />
  <TypeSignature Language="C#" Value="public sealed class WeakReferenceIdentityMap&lt;TKey&gt; : Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WeakReferenceIdentityMap`1&lt;TKey&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WeakReferenceIdentityMap(Of TKey)&#xA;Implements IWeakReferenceIdentityMap" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">To be added.</typeparam>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakReferenceIdentityMap (Microsoft.EntityFrameworkCore.Metadata.IKey key, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory&lt;TKey&gt; principalKeyValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IKey key, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1&lt;!TKey&gt; principalKeyValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As IKey, principalKeyValueFactory As IPrincipalKeyValueFactory(Of TKey))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap&lt;'Key&gt; : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory&lt;'Key&gt; -&gt; Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap&lt;'Key&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap&lt;'Key&gt; (key, principalKeyValueFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
        <Parameter Name="principalKeyValueFactory" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="principalKeyValueFactory">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (valueBuffer As ValueBuffer, entity As Object)" />
      <MemberSignature Language="F#" Value="abstract member Add : Microsoft.EntityFrameworkCore.Storage.ValueBuffer * obj -&gt; unit&#xA;override this.Add : Microsoft.EntityFrameworkCore.Storage.ValueBuffer * obj -&gt; unit" Usage="weakReferenceIdentityMap.Add (valueBuffer, entity)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="entity" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="entity">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (in Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add([in]valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; valueBuffer, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ByRef valueBuffer As ValueBuffer, entity As Object)" />
      <MemberSignature Language="F#" Value="member this.Add : ValueBuffer * obj -&gt; unit" Usage="weakReferenceIdentityMap.Add (valueBuffer, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" RefType="ref" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entity" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="entity">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectGarbage">
      <MemberSignature Language="C#" Value="public virtual void CollectGarbage ();" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CollectGarbage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CollectGarbage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CollectGarbage ()" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="F#" Value="abstract member CollectGarbage : unit -&gt; unit&#xA;override this.CollectGarbage : unit -&gt; unit" Usage="weakReferenceIdentityMap.CollectGarbage " />
      <MemberSignature Language="C#" Value="public void CollectGarbage ();" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollectGarbage ()" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CollectGarbage</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIncludeKeyComparer">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer CreateIncludeKeyComparer (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer CreateIncludeKeyComparer(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIncludeKeyComparer (navigation As INavigation, entry As InternalEntityEntry) As IIncludeKeyComparer" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="F#" Value="abstract member CreateIncludeKeyComparer : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer&#xA;override this.CreateIncludeKeyComparer : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer" Usage="weakReferenceIdentityMap.CreateIncludeKeyComparer (navigation, entry)" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer CreateIncludeKeyComparer (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateIncludeKeyComparer (navigation As INavigation, entry As InternalEntityEntry) As IIncludeKeyComparer" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIncludeKeyComparer">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer CreateIncludeKeyComparer (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer CreateIncludeKeyComparer(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIncludeKeyComparer (navigation As INavigation, valueBuffer As ValueBuffer) As IIncludeKeyComparer" />
      <MemberSignature Language="F#" Value="abstract member CreateIncludeKeyComparer : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Storage.ValueBuffer -&gt; Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer&#xA;override this.CreateIncludeKeyComparer : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Storage.ValueBuffer -&gt; Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer" Usage="weakReferenceIdentityMap.CreateIncludeKeyComparer (navigation, valueBuffer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIncludeKeyComparer">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer CreateIncludeKeyComparer (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, in Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer CreateIncludeKeyComparer(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, [in]valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateIncludeKeyComparer (navigation As INavigation, ByRef valueBuffer As ValueBuffer) As IIncludeKeyComparer" />
      <MemberSignature Language="F#" Value="member this.CreateIncludeKeyComparer : Microsoft.EntityFrameworkCore.Metadata.INavigation * ValueBuffer -&gt; Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer" Usage="weakReferenceIdentityMap.CreateIncludeKeyComparer (navigation, valueBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" RefType="ref" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IKey Key { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IKey Key" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Key As IKey" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="F#" Value="member this.Key : Microsoft.EntityFrameworkCore.Metadata.IKey" Usage="Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap&lt;'Key&gt;.Key" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IKey Key { get; }" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As IKey" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Key</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add">
      <MemberSignature Language="C#" Value="void IWeakReferenceIdentityMap.Add (in Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add([in]valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Microsoft#EntityFrameworkCore#Query#Internal#IWeakReferenceIdentityMap#Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer@|System.Runtime.InteropServices.InAttribute,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (valueBuffer As ValueBuffer, entity As Object) Implements IWeakReferenceIdentityMap.Add" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add : ValueBuffer * obj -&gt; unit&#xA;override this.Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add : ValueBuffer * obj -&gt; unit" Usage="weakReferenceIdentityMap.Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add (valueBuffer, entity)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="entity" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="entity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer IWeakReferenceIdentityMap.CreateIncludeKeyComparer (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, in Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, [in]valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Microsoft#EntityFrameworkCore#Query#Internal#IWeakReferenceIdentityMap#CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Function CreateIncludeKeyComparer (navigation As INavigation, valueBuffer As ValueBuffer) As IIncludeKeyComparer Implements IWeakReferenceIdentityMap.CreateIncludeKeyComparer" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer : Microsoft.EntityFrameworkCore.Metadata.INavigation * ValueBuffer -&gt; Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer&#xA;override this.Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer : Microsoft.EntityFrameworkCore.Metadata.INavigation * ValueBuffer -&gt; Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer" Usage="weakReferenceIdentityMap.Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer (navigation, valueBuffer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity">
      <MemberSignature Language="C#" Value="WeakReference&lt;object&gt; IWeakReferenceIdentityMap.TryGetEntity (in Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, bool throwOnNullKey, out bool hasNullKey);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.WeakReference`1&lt;object&gt; Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity([in]valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, bool throwOnNullKey, [out] bool&amp; hasNullKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Microsoft#EntityFrameworkCore#Query#Internal#IWeakReferenceIdentityMap#TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer@|System.Runtime.InteropServices.InAttribute,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Function TryGetEntity (valueBuffer As ValueBuffer, throwOnNullKey As Boolean, ByRef hasNullKey As Boolean) As WeakReference(Of Object) Implements IWeakReferenceIdentityMap.TryGetEntity" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity : ValueBuffer * bool * bool -&gt; WeakReference&lt;obj&gt;&#xA;override this.Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity : ValueBuffer * bool * bool -&gt; WeakReference&lt;obj&gt;" Usage="weakReferenceIdentityMap.Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity (valueBuffer, throwOnNullKey, hasNullKey)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer@,System.Boolean,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.WeakReference&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="throwOnNullKey" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="hasNullKey" Type="System.Boolean" RefType="out" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="throwOnNullKey">To be added.</param>
        <param name="hasNullKey">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalKeyValueFactory">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory&lt;TKey&gt; PrincipalKeyValueFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1&lt;!TKey&gt; PrincipalKeyValueFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.PrincipalKeyValueFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property PrincipalKeyValueFactory As IPrincipalKeyValueFactory(Of TKey)" />
      <MemberSignature Language="F#" Value="member this.PrincipalKeyValueFactory : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory&lt;'Key&gt;" Usage="Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap&lt;'Key&gt;.PrincipalKeyValueFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntity">
      <MemberSignature Language="C#" Value="public virtual WeakReference&lt;object&gt; TryGetEntity (Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, out bool hasNullKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.WeakReference`1&lt;object&gt; TryGetEntity(valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, [out] bool&amp; hasNullKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetEntity (valueBuffer As ValueBuffer, ByRef hasNullKey As Boolean) As WeakReference(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntity : Microsoft.EntityFrameworkCore.Storage.ValueBuffer * bool -&gt; WeakReference&lt;obj&gt;&#xA;override this.TryGetEntity : Microsoft.EntityFrameworkCore.Storage.ValueBuffer * bool -&gt; WeakReference&lt;obj&gt;" Usage="weakReferenceIdentityMap.TryGetEntity (valueBuffer, hasNullKey)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.WeakReference&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="hasNullKey" Type="System.Boolean" RefType="out" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="hasNullKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntity">
      <MemberSignature Language="C#" Value="public virtual WeakReference&lt;object&gt; TryGetEntity (Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, bool throwOnNullKey, out bool hasNullKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.WeakReference`1&lt;object&gt; TryGetEntity(valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, bool throwOnNullKey, [out] bool&amp; hasNullKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetEntity (valueBuffer As ValueBuffer, throwOnNullKey As Boolean, ByRef hasNullKey As Boolean) As WeakReference(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntity : Microsoft.EntityFrameworkCore.Storage.ValueBuffer * bool * bool -&gt; WeakReference&lt;obj&gt;&#xA;override this.TryGetEntity : Microsoft.EntityFrameworkCore.Storage.ValueBuffer * bool * bool -&gt; WeakReference&lt;obj&gt;" Usage="weakReferenceIdentityMap.TryGetEntity (valueBuffer, throwOnNullKey, hasNullKey)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.WeakReference&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="throwOnNullKey" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="hasNullKey" Type="System.Boolean" RefType="out" Index="2" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="throwOnNullKey">To be added.</param>
        <param name="hasNullKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntity">
      <MemberSignature Language="C#" Value="public WeakReference&lt;object&gt; TryGetEntity (in Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, bool throwOnNullKey, out bool hasNullKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.WeakReference`1&lt;object&gt; TryGetEntity([in]valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; valueBuffer, bool throwOnNullKey, [out] bool&amp; hasNullKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer@,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntity (ByRef valueBuffer As ValueBuffer, throwOnNullKey As Boolean, ByRef hasNullKey As Boolean) As WeakReference(Of Object)" />
      <MemberSignature Language="F#" Value="member this.TryGetEntity : ValueBuffer * bool * bool -&gt; WeakReference&lt;obj&gt;" Usage="weakReferenceIdentityMap.TryGetEntity (valueBuffer, throwOnNullKey, hasNullKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.WeakReference&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" RefType="ref" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="throwOnNullKey" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="hasNullKey" Type="System.Boolean" RefType="out" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="throwOnNullKey">To be added.</param>
        <param name="hasNullKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
