<Type Name="StoredProcedure" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure">
  <TypeSignature Language="C#" Value="public class StoredProcedure : Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable, Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure, Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure, Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StoredProcedure extends Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure, class Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure, class Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure, class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure" />
  <TypeSignature Language="VB.NET" Value="Public Class StoredProcedure&#xA;Inherits ConventionAnnotatable&#xA;Implements IConventionStoredProcedure, IMutableStoredProcedure, IRuntimeStoredProcedure" />
  <TypeSignature Language="F#" Value="type StoredProcedure = class&#xA;    inherit ConventionAnnotatable&#xA;    interface IRuntimeStoredProcedure&#xA;    interface IStoredProcedure&#xA;    interface IReadOnlyStoredProcedure&#xA;    interface IReadOnlyAnnotatable&#xA;    interface IAnnotatable&#xA;    interface IMutableStoredProcedure&#xA;    interface IMutableAnnotatable&#xA;    interface IConventionStoredProcedure&#xA;    interface IConventionAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.ConventionAnnotatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StoredProcedure (Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.#ctor(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IMutableEntityType, configurationSource As ConfigurationSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure (entityType, configurationSource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOriginalValueParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter AddOriginalValueParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter AddOriginalValueParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.AddOriginalValueParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddOriginalValueParameter (propertyName As String) As StoredProcedureParameter" />
      <MemberSignature Language="F#" Value="abstract member AddOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter&#xA;override this.AddOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter" Usage="storedProcedure.AddOriginalValueParameter propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter AddParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter AddParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.AddParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddParameter (propertyName As String) As StoredProcedureParameter" />
      <MemberSignature Language="F#" Value="abstract member AddParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter&#xA;override this.AddParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter" Usage="storedProcedure.AddParameter propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResultColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn AddResultColumn (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn AddResultColumn(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.AddResultColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddResultColumn (propertyName As String) As StoredProcedureResultColumn" />
      <MemberSignature Language="F#" Value="abstract member AddResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn&#xA;override this.AddResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn" Usage="storedProcedure.AddResultColumn propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRowsAffectedParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter AddRowsAffectedParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter AddRowsAffectedParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.AddRowsAffectedParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddRowsAffectedParameter () As StoredProcedureParameter" />
      <MemberSignature Language="F#" Value="abstract member AddRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter&#xA;override this.AddRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter" Usage="storedProcedure.AddRowsAffectedParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn AddRowsAffectedResultColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn AddRowsAffectedResultColumn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.AddRowsAffectedResultColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddRowsAffectedResultColumn () As StoredProcedureResultColumn" />
      <MemberSignature Language="F#" Value="abstract member AddRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn&#xA;override this.AddRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn" Usage="storedProcedure.AddRowsAffectedResultColumn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Builder">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalStoredProcedureBuilder Builder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalStoredProcedureBuilder Builder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Builder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Builder As InternalStoredProcedureBuilder" />
      <MemberSignature Language="F#" Value="member this.Builder : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalStoredProcedureBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Builder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalStoredProcedureBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.DebugView" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DebugView As DebugView" />
      <MemberSignature Language="F#" Value="member this.DebugView : Microsoft.EntityFrameworkCore.Infrastructure.DebugView" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.DebugView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.DebugView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType EntityType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EntityType As IMutableEntityType" />
      <MemberSignature Language="F#" Value="member this.EntityType : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.EntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FindDeclaredStoredProcedure">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure? FindDeclaredStoredProcedure (Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure FindDeclaredStoredProcedure(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType, valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.FindDeclaredStoredProcedure(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType,Microsoft.EntityFrameworkCore.Metadata.StoreObjectType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindDeclaredStoredProcedure (entityType As IReadOnlyEntityType, sprocType As StoreObjectType) As IStoredProcedure" />
      <MemberSignature Language="F#" Value="static member FindDeclaredStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType * Microsoft.EntityFrameworkCore.Metadata.StoreObjectType -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.FindDeclaredStoredProcedure (entityType, sprocType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" />
        <Parameter Name="sprocType" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="sprocType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindOriginalValueParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter? FindOriginalValueParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter FindOriginalValueParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.FindOriginalValueParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindOriginalValueParameter (propertyName As String) As StoredProcedureParameter" />
      <MemberSignature Language="F#" Value="abstract member FindOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter&#xA;override this.FindOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter" Usage="storedProcedure.FindOriginalValueParameter propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter? FindParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter FindParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.FindParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindParameter (propertyName As String) As StoredProcedureParameter" />
      <MemberSignature Language="F#" Value="abstract member FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter&#xA;override this.FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter" Usage="storedProcedure.FindParameter propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindResultColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn? FindResultColumn (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn FindResultColumn(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.FindResultColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindResultColumn (propertyName As String) As StoredProcedureResultColumn" />
      <MemberSignature Language="F#" Value="abstract member FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn&#xA;override this.FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn" Usage="storedProcedure.FindResultColumn propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindRowsAffectedParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter? FindRowsAffectedParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter FindRowsAffectedParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.FindRowsAffectedParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindRowsAffectedParameter () As StoredProcedureParameter" />
      <MemberSignature Language="F#" Value="abstract member FindRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter&#xA;override this.FindRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter" Usage="storedProcedure.FindRowsAffectedParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn? FindRowsAffectedResultColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn FindRowsAffectedResultColumn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.FindRowsAffectedResultColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindRowsAffectedResultColumn () As StoredProcedureResultColumn" />
      <MemberSignature Language="F#" Value="abstract member FindRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn&#xA;override this.FindRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn" Usage="storedProcedure.FindRowsAffectedResultColumn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindStoredProcedure">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure? FindStoredProcedure (Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure FindStoredProcedure(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType, valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.FindStoredProcedure(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType,Microsoft.EntityFrameworkCore.Metadata.StoreObjectType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindStoredProcedure (entityType As IReadOnlyEntityType, sprocType As StoreObjectType) As IStoredProcedure" />
      <MemberSignature Language="F#" Value="static member FindStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType * Microsoft.EntityFrameworkCore.Metadata.StoreObjectType -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.FindStoredProcedure (entityType, sprocType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" />
        <Parameter Name="sprocType" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="sprocType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSource">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource GetConfigurationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource GetConfigurationSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.GetConfigurationSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSource () As ConfigurationSource" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSource : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&#xA;override this.GetConfigurationSource : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" Usage="storedProcedure.GetConfigurationSource " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.GetConfigurationSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetNameConfigurationSource">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetNameConfigurationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetNameConfigurationSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.GetNameConfigurationSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNameConfigurationSource () As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="abstract member GetNameConfigurationSource : unit -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;&#xA;override this.GetNameConfigurationSource : unit -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="storedProcedure.GetNameConfigurationSource " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.GetNameConfigurationSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaConfigurationSource">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetSchemaConfigurationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetSchemaConfigurationSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.GetSchemaConfigurationSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSchemaConfigurationSource () As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaConfigurationSource : unit -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;&#xA;override this.GetSchemaConfigurationSource : unit -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="storedProcedure.GetSchemaConfigurationSource " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.GetSchemaConfigurationSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoredProcedureConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetStoredProcedureConfigurationSource (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetStoredProcedureConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.GetStoredProcedureConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.StoreObjectType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStoredProcedureConfigurationSource (entityType As IConventionEntityType, sprocType As StoreObjectType) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetStoredProcedureConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.StoreObjectType -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.GetStoredProcedureConfigurationSource (entityType, sprocType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="sprocType" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="sprocType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInModel">
      <MemberSignature Language="C#" Value="public virtual bool IsInModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.IsInModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsInModel As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsInModel : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.IsInModel" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable.IsInModel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether the function is read-only.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRowsAffectedReturned">
      <MemberSignature Language="C#" Value="public virtual bool IsRowsAffectedReturned { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRowsAffectedReturned" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.IsRowsAffectedReturned" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsRowsAffectedReturned As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsRowsAffectedReturned : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.IsRowsAffectedReturned" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.IsRowsAffectedReturned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddOriginalValueParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter IConventionStoredProcedure.AddOriginalValueParameter (string propertyName, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddOriginalValueParameter(string propertyName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#AddOriginalValueParameter(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function AddOriginalValueParameter (propertyName As String, fromDataAnnotation As Boolean) As IConventionStoredProcedureParameter Implements IConventionStoredProcedure.AddOriginalValueParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddOriginalValueParameter : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddOriginalValueParameter : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddOriginalValueParameter (propertyName, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddOriginalValueParameter(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter IConventionStoredProcedure.AddParameter (string propertyName, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddParameter(string propertyName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#AddParameter(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function AddParameter (propertyName As String, fromDataAnnotation As Boolean) As IConventionStoredProcedureParameter Implements IConventionStoredProcedure.AddParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddParameter : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddParameter : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddParameter (propertyName, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddParameter(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn IConventionStoredProcedure.AddResultColumn (string propertyName, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddResultColumn(string propertyName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#AddResultColumn(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function AddResultColumn (propertyName As String, fromDataAnnotation As Boolean) As IConventionStoredProcedureResultColumn Implements IConventionStoredProcedure.AddResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddResultColumn : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddResultColumn : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddResultColumn (propertyName, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddResultColumn(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter IConventionStoredProcedure.AddRowsAffectedParameter (bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedParameter(bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#AddRowsAffectedParameter(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function AddRowsAffectedParameter (fromDataAnnotation As Boolean) As IConventionStoredProcedureParameter Implements IConventionStoredProcedure.AddRowsAffectedParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedParameter : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedParameter : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedParameter fromDataAnnotation" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedParameter(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn IConventionStoredProcedure.AddRowsAffectedResultColumn (bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedResultColumn(bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#AddRowsAffectedResultColumn(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function AddRowsAffectedResultColumn (fromDataAnnotation As Boolean) As IConventionStoredProcedureResultColumn Implements IConventionStoredProcedure.AddRowsAffectedResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedResultColumn : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedResultColumn : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedResultColumn fromDataAnnotation" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.AddRowsAffectedResultColumn(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Builder">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Builder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Builder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#Builder" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Builder As IConventionStoredProcedureBuilder Implements IConventionStoredProcedure.Builder" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Builder : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Builder" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Builder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionStoredProcedureBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.EntityType">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#EntityType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property EntityType As IConventionEntityType Implements IConventionStoredProcedure.EntityType" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.EntityType : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.EntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindOriginalValueParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter IConventionStoredProcedure.FindOriginalValueParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindOriginalValueParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#FindOriginalValueParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindOriginalValueParameter (propertyName As String) As IConventionStoredProcedureParameter Implements IConventionStoredProcedure.FindOriginalValueParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindOriginalValueParameter propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindOriginalValueParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter IConventionStoredProcedure.FindParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#FindParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindParameter (propertyName As String) As IConventionStoredProcedureParameter Implements IConventionStoredProcedure.FindParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindParameter propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn IConventionStoredProcedure.FindResultColumn (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindResultColumn(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#FindResultColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindResultColumn (propertyName As String) As IConventionStoredProcedureResultColumn Implements IConventionStoredProcedure.FindResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindResultColumn propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindResultColumn(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter IConventionStoredProcedure.FindRowsAffectedParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#FindRowsAffectedParameter" />
      <MemberSignature Language="VB.NET" Value="Function FindRowsAffectedParameter () As IConventionStoredProcedureParameter Implements IConventionStoredProcedure.FindRowsAffectedParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedParameter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn IConventionStoredProcedure.FindRowsAffectedResultColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedResultColumn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#FindRowsAffectedResultColumn" />
      <MemberSignature Language="VB.NET" Value="Function FindRowsAffectedResultColumn () As IConventionStoredProcedureResultColumn Implements IConventionStoredProcedure.FindRowsAffectedResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedResultColumn " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.FindRowsAffectedResultColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Parameters">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#Parameters" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parameters As IReadOnlyList(Of IConventionStoredProcedureParameter) Implements IConventionStoredProcedure.Parameters" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Parameters : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.ResultColumns">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.ResultColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.ResultColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#ResultColumns" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ResultColumns As IReadOnlyList(Of IConventionStoredProcedureResultColumn) Implements IConventionStoredProcedure.ResultColumns" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.ResultColumns : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.ResultColumns" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.ResultColumns</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedureResultColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetIsRowsAffectedReturned">
      <MemberSignature Language="C#" Value="bool IConventionStoredProcedure.SetIsRowsAffectedReturned (bool rowsAffectedReturned, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetIsRowsAffectedReturned(bool rowsAffectedReturned, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#SetIsRowsAffectedReturned(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function SetIsRowsAffectedReturned (rowsAffectedReturned As Boolean, fromDataAnnotation As Boolean) As Boolean Implements IConventionStoredProcedure.SetIsRowsAffectedReturned" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetIsRowsAffectedReturned : bool * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetIsRowsAffectedReturned : bool * bool -&gt; bool" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetIsRowsAffectedReturned (rowsAffectedReturned, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetIsRowsAffectedReturned(System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowsAffectedReturned" Type="System.Boolean" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowsAffectedReturned">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetName">
      <MemberSignature Language="C#" Value="string IConventionStoredProcedure.SetName (string name, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetName(string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#SetName(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function SetName (name As String, fromDataAnnotation As Boolean) As String Implements IConventionStoredProcedure.SetName" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetName : string * bool -&gt; string&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetName : string * bool -&gt; string" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetName (name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetName(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetSchema">
      <MemberSignature Language="C#" Value="string IConventionStoredProcedure.SetSchema (string schema, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetSchema(string schema, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IConventionStoredProcedure#SetSchema(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function SetSchema (schema As String, fromDataAnnotation As Boolean) As String Implements IConventionStoredProcedure.SetSchema" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetSchema : string * bool -&gt; string&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetSchema : string * bool -&gt; string" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetSchema (schema, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure.SetSchema(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddOriginalValueParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter IMutableStoredProcedure.AddOriginalValueParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddOriginalValueParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#AddOriginalValueParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function AddOriginalValueParameter (propertyName As String) As IMutableStoredProcedureParameter Implements IMutableStoredProcedure.AddOriginalValueParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddOriginalValueParameter propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddOriginalValueParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter IMutableStoredProcedure.AddParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#AddParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function AddParameter (propertyName As String) As IMutableStoredProcedureParameter Implements IMutableStoredProcedure.AddParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddParameter propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn IMutableStoredProcedure.AddResultColumn (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddResultColumn(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#AddResultColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function AddResultColumn (propertyName As String) As IMutableStoredProcedureResultColumn Implements IMutableStoredProcedure.AddResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddResultColumn propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddResultColumn(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter IMutableStoredProcedure.AddRowsAffectedParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#AddRowsAffectedParameter" />
      <MemberSignature Language="VB.NET" Value="Function AddRowsAffectedParameter () As IMutableStoredProcedureParameter Implements IMutableStoredProcedure.AddRowsAffectedParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedParameter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn IMutableStoredProcedure.AddRowsAffectedResultColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedResultColumn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#AddRowsAffectedResultColumn" />
      <MemberSignature Language="VB.NET" Value="Function AddRowsAffectedResultColumn () As IMutableStoredProcedureResultColumn Implements IMutableStoredProcedure.AddRowsAffectedResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedResultColumn " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.AddRowsAffectedResultColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindOriginalValueParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter IMutableStoredProcedure.FindOriginalValueParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindOriginalValueParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#FindOriginalValueParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindOriginalValueParameter (propertyName As String) As IMutableStoredProcedureParameter Implements IMutableStoredProcedure.FindOriginalValueParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindOriginalValueParameter propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindOriginalValueParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter IMutableStoredProcedure.FindParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#FindParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindParameter (propertyName As String) As IMutableStoredProcedureParameter Implements IMutableStoredProcedure.FindParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindParameter propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn IMutableStoredProcedure.FindResultColumn (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindResultColumn(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#FindResultColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindResultColumn (propertyName As String) As IMutableStoredProcedureResultColumn Implements IMutableStoredProcedure.FindResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindResultColumn propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindResultColumn(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter IMutableStoredProcedure.FindRowsAffectedParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#FindRowsAffectedParameter" />
      <MemberSignature Language="VB.NET" Value="Function FindRowsAffectedParameter () As IMutableStoredProcedureParameter Implements IMutableStoredProcedure.FindRowsAffectedParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedParameter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn IMutableStoredProcedure.FindRowsAffectedResultColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedResultColumn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#FindRowsAffectedResultColumn" />
      <MemberSignature Language="VB.NET" Value="Function FindRowsAffectedResultColumn () As IMutableStoredProcedureResultColumn Implements IMutableStoredProcedure.FindRowsAffectedResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedResultColumn " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.FindRowsAffectedResultColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.Parameters">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#Parameters" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parameters As IReadOnlyList(Of IMutableStoredProcedureParameter) Implements IMutableStoredProcedure.Parameters" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.Parameters : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.ResultColumns">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.ResultColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.ResultColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IMutableStoredProcedure#ResultColumns" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ResultColumns As IReadOnlyList(Of IMutableStoredProcedureResultColumn) Implements IMutableStoredProcedure.ResultColumns" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.ResultColumns : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.ResultColumns" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.ResultColumns</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedureResultColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure.StoreStoredProcedure">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure.StoreStoredProcedure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure.StoreStoredProcedure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#Internal#IRuntimeStoredProcedure#StoreStoredProcedure" />
      <MemberSignature Language="VB.NET" Value=" Property StoreStoredProcedure As IStoreStoredProcedure Implements IRuntimeStoredProcedure.StoreStoredProcedure" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure.StoreStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure.StoreStoredProcedure" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure.StoreStoredProcedure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.EntityType">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyStoredProcedure#EntityType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property EntityType As IReadOnlyEntityType Implements IReadOnlyStoredProcedure.EntityType" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.EntityType : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.EntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindOriginalValueParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter IReadOnlyStoredProcedure.FindOriginalValueParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindOriginalValueParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyStoredProcedure#FindOriginalValueParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindOriginalValueParameter (propertyName As String) As IReadOnlyStoredProcedureParameter Implements IReadOnlyStoredProcedure.FindOriginalValueParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindOriginalValueParameter propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindOriginalValueParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter IReadOnlyStoredProcedure.FindParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyStoredProcedure#FindParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindParameter (propertyName As String) As IReadOnlyStoredProcedureParameter Implements IReadOnlyStoredProcedure.FindParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindParameter propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn IReadOnlyStoredProcedure.FindResultColumn (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindResultColumn(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyStoredProcedure#FindResultColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindResultColumn (propertyName As String) As IReadOnlyStoredProcedureResultColumn Implements IReadOnlyStoredProcedure.FindResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindResultColumn propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindResultColumn(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter IReadOnlyStoredProcedure.FindRowsAffectedParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyStoredProcedure#FindRowsAffectedParameter" />
      <MemberSignature Language="VB.NET" Value="Function FindRowsAffectedParameter () As IReadOnlyStoredProcedureParameter Implements IReadOnlyStoredProcedure.FindRowsAffectedParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedParameter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn IReadOnlyStoredProcedure.FindRowsAffectedResultColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedResultColumn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyStoredProcedure#FindRowsAffectedResultColumn" />
      <MemberSignature Language="VB.NET" Value="Function FindRowsAffectedResultColumn () As IReadOnlyStoredProcedureResultColumn Implements IReadOnlyStoredProcedure.FindRowsAffectedResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedResultColumn " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.FindRowsAffectedResultColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.Parameters">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyStoredProcedure#Parameters" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parameters As IReadOnlyList(Of IReadOnlyStoredProcedureParameter) Implements IReadOnlyStoredProcedure.Parameters" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.Parameters : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.ResultColumns">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.ResultColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.ResultColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IReadOnlyStoredProcedure#ResultColumns" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ResultColumns As IReadOnlyList(Of IReadOnlyStoredProcedureResultColumn) Implements IReadOnlyStoredProcedure.ResultColumns" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.ResultColumns : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.ResultColumns" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedure.ResultColumns</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyStoredProcedureResultColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.EntityType">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IEntityType Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedure#EntityType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property EntityType As IEntityType Implements IStoredProcedure.EntityType" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.EntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.EntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindOriginalValueParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter IStoredProcedure.FindOriginalValueParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindOriginalValueParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedure#FindOriginalValueParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindOriginalValueParameter (propertyName As String) As IStoredProcedureParameter Implements IStoredProcedure.FindOriginalValueParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindOriginalValueParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindOriginalValueParameter propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindOriginalValueParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter IStoredProcedure.FindParameter (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindParameter(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedure#FindParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindParameter (propertyName As String) As IStoredProcedureParameter Implements IStoredProcedure.FindParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindParameter propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn IStoredProcedure.FindResultColumn (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindResultColumn(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedure#FindResultColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindResultColumn (propertyName As String) As IStoredProcedureResultColumn Implements IStoredProcedure.FindResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindResultColumn propertyName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindResultColumn(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter IStoredProcedure.FindRowsAffectedParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedure#FindRowsAffectedParameter" />
      <MemberSignature Language="VB.NET" Value="Function FindRowsAffectedParameter () As IStoredProcedureParameter Implements IStoredProcedure.FindRowsAffectedParameter" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedParameter : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedParameter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedResultColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn IStoredProcedure.FindRowsAffectedResultColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedResultColumn() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedure#FindRowsAffectedResultColumn" />
      <MemberSignature Language="VB.NET" Value="Function FindRowsAffectedResultColumn () As IStoredProcedureResultColumn Implements IStoredProcedure.FindRowsAffectedResultColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedResultColumn : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn" Usage="storedProcedure.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedResultColumn " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.FindRowsAffectedResultColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Name">
      <MemberSignature Language="C#" Value="string Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedure#Name" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Name As String Implements IStoredProcedure.Name" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Name : string" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Parameters">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedure#Parameters" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parameters As IReadOnlyList(Of IStoredProcedureParameter) Implements IStoredProcedure.Parameters" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Parameters : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.ResultColumns">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.ResultColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.ResultColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedure#ResultColumns" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ResultColumns As IReadOnlyList(Of IStoredProcedureResultColumn) Implements IStoredProcedure.ResultColumns" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.ResultColumns : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.ResultColumns" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.ResultColumns</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.StoreStoredProcedure">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.StoreStoredProcedure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.StoreStoredProcedure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedure#StoreStoredProcedure" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property StoreStoredProcedure As IStoreStoredProcedure Implements IStoredProcedure.StoreStoredProcedure" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.StoreStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.StoreStoredProcedure" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure.StoreStoredProcedure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string? Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parameters As IReadOnlyList(Of StoredProcedureParameter)" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStoredProcedure">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure? RemoveStoredProcedure (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure RemoveStoredProcedure(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.RemoveStoredProcedure(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.StoreObjectType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveStoredProcedure (entityType As IConventionEntityType, sprocType As StoreObjectType) As IConventionStoredProcedure" />
      <MemberSignature Language="F#" Value="static member RemoveStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.StoreObjectType -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.RemoveStoredProcedure (entityType, sprocType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionStoredProcedure</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="sprocType" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="sprocType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStoredProcedure">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure? RemoveStoredProcedure (Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure RemoveStoredProcedure(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.RemoveStoredProcedure(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.StoreObjectType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveStoredProcedure (entityType As IMutableEntityType, sprocType As StoreObjectType) As IMutableStoredProcedure" />
      <MemberSignature Language="F#" Value="static member RemoveStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Microsoft.EntityFrameworkCore.Metadata.StoreObjectType -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.RemoveStoredProcedure (entityType, sprocType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
        <Parameter Name="sprocType" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="sprocType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn&gt; ResultColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn&gt; ResultColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.ResultColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ResultColumns As IReadOnlyList(Of StoredProcedureResultColumn)" />
      <MemberSignature Language="F#" Value="member this.ResultColumns : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.ResultColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureResultColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public virtual string? Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Schema" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Schema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Schema As String" />
      <MemberSignature Language="F#" Value="member this.Schema : string with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.Schema" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IMutableStoredProcedure.Schema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SetIsRowsAffectedReturned">
      <MemberSignature Language="C#" Value="public virtual bool SetIsRowsAffectedReturned (bool rowsAffectedReturned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetIsRowsAffectedReturned(bool rowsAffectedReturned) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetIsRowsAffectedReturned(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetIsRowsAffectedReturned (rowsAffectedReturned As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member SetIsRowsAffectedReturned : bool -&gt; bool&#xA;override this.SetIsRowsAffectedReturned : bool -&gt; bool" Usage="storedProcedure.SetIsRowsAffectedReturned rowsAffectedReturned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowsAffectedReturned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowsAffectedReturned">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public virtual string? SetName (string? name, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SetName(string name, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetName(System.String,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetName (name As String, configurationSource As ConfigurationSource) As String" />
      <MemberSignature Language="F#" Value="abstract member SetName : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; string&#xA;override this.SetName : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; string" Usage="storedProcedure.SetName (name, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public virtual void SetName (string? name, string? schema, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource, bool skipOverrides = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetName(string name, string schema, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource, bool skipOverrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetName(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetName (name As String, schema As String, configurationSource As ConfigurationSource, Optional skipOverrides As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member SetName : string * string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource * bool -&gt; unit&#xA;override this.SetName : string * string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource * bool -&gt; unit" Usage="storedProcedure.SetName (name, schema, configurationSource, skipOverrides)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
        <Parameter Name="skipOverrides" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <param name="skipOverrides">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemovedFromModel">
      <MemberSignature Language="C#" Value="public virtual void SetRemovedFromModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRemovedFromModel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetRemovedFromModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRemovedFromModel ()" />
      <MemberSignature Language="F#" Value="abstract member SetRemovedFromModel : unit -&gt; unit&#xA;override this.SetRemovedFromModel : unit -&gt; unit" Usage="storedProcedure.SetRemovedFromModel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSchema">
      <MemberSignature Language="C#" Value="public virtual string? SetSchema (string? schema, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SetSchema(string schema, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetSchema(System.String,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetSchema (schema As String, configurationSource As ConfigurationSource) As String" />
      <MemberSignature Language="F#" Value="abstract member SetSchema : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; string&#xA;override this.SetSchema : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; string" Usage="storedProcedure.SetSchema (schema, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="schema">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStoredProcedure">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure SetStoredProcedure (Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure SetStoredProcedure(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetStoredProcedure(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.StoreObjectType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetStoredProcedure (entityType As IMutableEntityType, sprocType As StoreObjectType) As StoredProcedure" />
      <MemberSignature Language="F#" Value="static member SetStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Microsoft.EntityFrameworkCore.Metadata.StoreObjectType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetStoredProcedure (entityType, sprocType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
        <Parameter Name="sprocType" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="sprocType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStoredProcedure">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure? SetStoredProcedure (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure SetStoredProcedure(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetStoredProcedure(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.StoreObjectType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetStoredProcedure (entityType As IConventionEntityType, sprocType As StoreObjectType, fromDataAnnotation As Boolean) As StoredProcedure" />
      <MemberSignature Language="F#" Value="static member SetStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.StoreObjectType * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetStoredProcedure (entityType, sprocType, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="sprocType" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectType" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="sprocType">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStoredProcedure">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure SetStoredProcedure (Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType, string? name, string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure SetStoredProcedure(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetStoredProcedure(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.StoreObjectType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetStoredProcedure (entityType As IMutableEntityType, sprocType As StoreObjectType, name As String, schema As String) As StoredProcedure" />
      <MemberSignature Language="F#" Value="static member SetStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Microsoft.EntityFrameworkCore.Metadata.StoreObjectType * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetStoredProcedure (entityType, sprocType, name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />
        <Parameter Name="sprocType" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="sprocType">To be added.</param>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStoredProcedure">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure? SetStoredProcedure (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType, string? name, string? schema, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure SetStoredProcedure(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectType sprocType, string name, string schema, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetStoredProcedure(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.StoreObjectType,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetStoredProcedure (entityType As IConventionEntityType, sprocType As StoreObjectType, name As String, schema As String, fromDataAnnotation As Boolean) As StoredProcedure" />
      <MemberSignature Language="F#" Value="static member SetStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.StoreObjectType * string * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.SetStoredProcedure (entityType, sprocType, name, schema, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="sprocType" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="sprocType">To be added.</param>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="storedProcedure.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateConfigurationSource">
      <MemberSignature Language="C#" Value="public virtual void UpdateConfigurationSource (Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateConfigurationSource(valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedure.UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateConfigurationSource (configurationSource As ConfigurationSource)" />
      <MemberSignature Language="F#" Value="abstract member UpdateConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; unit&#xA;override this.UpdateConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; unit" Usage="storedProcedure.UpdateConfigurationSource configurationSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
