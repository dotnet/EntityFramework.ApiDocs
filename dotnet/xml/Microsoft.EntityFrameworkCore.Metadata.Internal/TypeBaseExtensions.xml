<Type Name="TypeBaseExtensions" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions">
  <TypeSignature Language="C#" Value="public static class TypeBaseExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TypeBaseExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TypeBaseExtensions" />
  <TypeSignature Language="F#" Value="type TypeBaseExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsTypeBase">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase AsTypeBase (this Microsoft.EntityFrameworkCore.Metadata.ITypeBase entityType, string methodName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase AsTypeBase(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase entityType, string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.AsTypeBase(Microsoft.EntityFrameworkCore.Metadata.ITypeBase,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsTypeBase (entityType As ITypeBase, Optional methodName As String = &quot;&quot;) As TypeBase" />
      <MemberSignature Language="F#" Value="static member AsTypeBase : Microsoft.EntityFrameworkCore.Metadata.ITypeBase * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.AsTypeBase (entityType, methodName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="methodName" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.CallerMemberName]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CallerMemberName&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="methodName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public static string DisplayName (this Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DisplayName(class Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.DisplayName(Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayName (entityType As TypeBase) As String" />
      <MemberSignature Language="F#" Value="static member DisplayName : Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase -&gt; string" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.DisplayName entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public static string DisplayName (this Microsoft.EntityFrameworkCore.Metadata.ITypeBase type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DisplayName(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.DisplayName(Microsoft.EntityFrameworkCore.Metadata.ITypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DisplayName (type As ITypeBase) As String" />
      <MemberSignature Language="F#" Value="static member DisplayName : Microsoft.EntityFrameworkCore.Metadata.ITypeBase -&gt; string" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.DisplayName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" RefType="this" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindClrMember">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo FindClrMember (this Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo FindClrMember(class Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.FindClrMember(Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindClrMember (type As TypeBase, name As String) As MemberInfo" />
      <MemberSignature Language="F#" Value="static member FindClrMember : Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase * string -&gt; System.Reflection.MemberInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.FindClrMember (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="name">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIndexerPropertyInfo">
      <MemberSignature Language="C#" Value="public static System.Reflection.PropertyInfo FindIndexerPropertyInfo (this Microsoft.EntityFrameworkCore.Metadata.ITypeBase type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.PropertyInfo FindIndexerPropertyInfo(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.FindIndexerPropertyInfo(Microsoft.EntityFrameworkCore.Metadata.ITypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindIndexerPropertyInfo (type As ITypeBase) As PropertyInfo" />
      <MemberSignature Language="F#" Value="static member FindIndexerPropertyInfo : Microsoft.EntityFrameworkCore.Metadata.ITypeBase -&gt; System.Reflection.PropertyInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.FindIndexerPropertyInfo type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComplexProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IComplexProperty GetComplexProperty (this Microsoft.EntityFrameworkCore.Metadata.ITypeBase type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty GetComplexProperty(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetComplexProperty(Microsoft.EntityFrameworkCore.Metadata.ITypeBase,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComplexProperty (type As ITypeBase, name As String) As IComplexProperty" />
      <MemberSignature Language="F#" Value="static member GetComplexProperty : Microsoft.EntityFrameworkCore.Metadata.ITypeBase * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetComplexProperty (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IComplexProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="name">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOwnedName">
      <MemberSignature Language="C#" Value="public static string GetOwnedName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type, string simpleName, string ownershipNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetOwnedName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type, string simpleName, string ownershipNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetOwnedName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOwnedName (type As IReadOnlyTypeBase, simpleName As String, ownershipNavigation As String) As String" />
      <MemberSignature Language="F#" Value="static member GetOwnedName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase * string * string -&gt; string" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetOwnedName (type, simpleName, ownershipNavigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="simpleName" Type="System.String" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="ownershipNavigation" Type="System.String" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="simpleName">To be added.</param>
        <param name="ownershipNavigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeFields">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyDictionary&lt;string,System.Reflection.FieldInfo&gt; GetRuntimeFields (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.Reflection.FieldInfo&gt; GetRuntimeFields(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetRuntimeFields(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeFields (type As IReadOnlyTypeBase) As IReadOnlyDictionary(Of String, FieldInfo)" />
      <MemberSignature Language="F#" Value="static member GetRuntimeFields : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, System.Reflection.FieldInfo&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetRuntimeFields type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Reflection.FieldInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeFields">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyDictionary&lt;string,System.Reflection.FieldInfo&gt; GetRuntimeFields (this Microsoft.EntityFrameworkCore.Metadata.ITypeBase type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.Reflection.FieldInfo&gt; GetRuntimeFields(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetRuntimeFields(Microsoft.EntityFrameworkCore.Metadata.ITypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeFields (type As ITypeBase) As IReadOnlyDictionary(Of String, FieldInfo)" />
      <MemberSignature Language="F#" Value="static member GetRuntimeFields : Microsoft.EntityFrameworkCore.Metadata.ITypeBase -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, System.Reflection.FieldInfo&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetRuntimeFields type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Reflection.FieldInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyDictionary&lt;string,System.Reflection.PropertyInfo&gt; GetRuntimeProperties (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.Reflection.PropertyInfo&gt; GetRuntimeProperties(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetRuntimeProperties(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeProperties (type As IReadOnlyTypeBase) As IReadOnlyDictionary(Of String, PropertyInfo)" />
      <MemberSignature Language="F#" Value="static member GetRuntimeProperties : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, System.Reflection.PropertyInfo&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetRuntimeProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyDictionary&lt;string,System.Reflection.PropertyInfo&gt; GetRuntimeProperties (this Microsoft.EntityFrameworkCore.Metadata.ITypeBase type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class System.Reflection.PropertyInfo&gt; GetRuntimeProperties(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetRuntimeProperties(Microsoft.EntityFrameworkCore.Metadata.ITypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeProperties (type As ITypeBase) As IReadOnlyDictionary(Of String, PropertyInfo)" />
      <MemberSignature Language="F#" Value="static member GetRuntimeProperties : Microsoft.EntityFrameworkCore.Metadata.ITypeBase -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;string, System.Reflection.PropertyInfo&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.GetRuntimeProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasClrType">
      <MemberSignature Language="C#" Value="public static bool HasClrType (this Microsoft.EntityFrameworkCore.Metadata.ITypeBase type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasClrType(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.HasClrType(Microsoft.EntityFrameworkCore.Metadata.ITypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasClrType (type As ITypeBase) As Boolean" />
      <MemberSignature Language="F#" Value="static member HasClrType : Microsoft.EntityFrameworkCore.Metadata.ITypeBase -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.HasClrType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" RefType="this" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbstract">
      <MemberSignature Language="C#" Value="public static bool IsAbstract (this Microsoft.EntityFrameworkCore.Metadata.ITypeBase type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAbstract(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.IsAbstract(Microsoft.EntityFrameworkCore.Metadata.ITypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsAbstract (type As ITypeBase) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAbstract : Microsoft.EntityFrameworkCore.Metadata.ITypeBase -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.IsAbstract type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" RefType="this" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortName">
      <MemberSignature Language="C#" Value="public static string ShortName (this Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ShortName(class Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.ShortName(Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ShortName (entityType As TypeBase) As String" />
      <MemberSignature Language="F#" Value="static member ShortName : Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase -&gt; string" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.ShortName entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
