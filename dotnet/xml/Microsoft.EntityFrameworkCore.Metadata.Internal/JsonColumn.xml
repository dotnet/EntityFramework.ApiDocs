<Type Name="JsonColumn" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn">
  <TypeSignature Language="C#" Value="public class JsonColumn : Microsoft.EntityFrameworkCore.Metadata.Internal.Column" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonColumn extends Microsoft.EntityFrameworkCore.Metadata.Internal.Column implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IColumn, class Microsoft.EntityFrameworkCore.Metadata.IColumnBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonColumn&#xA;Inherits Column" />
  <TypeSignature Language="F#" Value="type JsonColumn = class&#xA;    inherit Column&#xA;    interface IColumn&#xA;    interface IColumnBase&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Internal.Column</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IColumn</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IColumnBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonColumn (string name, string type, Microsoft.EntityFrameworkCore.Metadata.Internal.Table table, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer provierValueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string type, class Microsoft.EntityFrameworkCore.Metadata.Internal.Table table, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer provierValueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Table,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As String, table As Table, provierValueComparer As ValueComparer)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn : string * string * Microsoft.EntityFrameworkCore.Metadata.Internal.Table * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn (name, type, table, provierValueComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="type" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Table" Index="2" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="provierValueComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="3" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <param name="table">To be added.</param>
        <param name="provierValueComparer">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonColumn (string name, string type, Microsoft.EntityFrameworkCore.Metadata.Internal.Table table, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? storeTypeMapping = default, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer? providerValueComparer = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string type, class Microsoft.EntityFrameworkCore.Metadata.Internal.Table table, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping storeTypeMapping, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer providerValueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Table,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As String, table As Table, Optional storeTypeMapping As RelationalTypeMapping = Nothing, Optional providerValueComparer As ValueComparer = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn : string * string * Microsoft.EntityFrameworkCore.Metadata.Internal.Table * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn (name, type, table, storeTypeMapping, providerValueComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="type" Type="System.String" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Table" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="storeTypeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="providerValueComparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Index="4" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <param name="table">To be added.</param>
        <param name="storeTypeMapping">To be added.</param>
        <param name="providerValueComparer">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultStoreTypeMapping">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetDefaultStoreTypeMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetDefaultStoreTypeMapping() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.GetDefaultStoreTypeMapping" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDefaultStoreTypeMapping () As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.GetDefaultStoreTypeMapping : unit -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="jsonColumn.GetDefaultStoreTypeMapping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.Collation">
      <MemberSignature Language="C#" Value="string? Microsoft.EntityFrameworkCore.Metadata.IColumn.Collation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.EntityFrameworkCore.Metadata.IColumn.Collation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#Collation" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Collation As String Implements IColumn.Collation" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.Collation : string" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.Collation" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.Collation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.Comment">
      <MemberSignature Language="C#" Value="string? Microsoft.EntityFrameworkCore.Metadata.IColumn.Comment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.EntityFrameworkCore.Metadata.IColumn.Comment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#Comment" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Comment As String Implements IColumn.Comment" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.Comment : string" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.Comment" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.Comment</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.ComputedColumnSql">
      <MemberSignature Language="C#" Value="string? Microsoft.EntityFrameworkCore.Metadata.IColumn.ComputedColumnSql { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.EntityFrameworkCore.Metadata.IColumn.ComputedColumnSql" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#ComputedColumnSql" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ComputedColumnSql As String Implements IColumn.ComputedColumnSql" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.ComputedColumnSql : string" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.ComputedColumnSql" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.ComputedColumnSql</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValue">
      <MemberSignature Language="C#" Value="object? Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#DefaultValue" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DefaultValue As Object Implements IColumn.DefaultValue" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValue : obj" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValueSql">
      <MemberSignature Language="C#" Value="string? Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValueSql { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValueSql" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#DefaultValueSql" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DefaultValueSql As String Implements IColumn.DefaultValueSql" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValueSql : string" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValueSql" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.DefaultValueSql</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.FindColumnMapping">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IColumnMapping IColumn.FindColumnMapping (Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IColumnMapping Microsoft.EntityFrameworkCore.Metadata.IColumn.FindColumnMapping(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#FindColumnMapping(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType)" />
      <MemberSignature Language="VB.NET" Value="Function FindColumnMapping (entityType As IReadOnlyEntityType) As IColumnMapping Implements IColumn.FindColumnMapping" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.IColumn.FindColumnMapping : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMapping&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.IColumn.FindColumnMapping : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMapping" Usage="jsonColumn.Microsoft.EntityFrameworkCore.Metadata.IColumn.FindColumnMapping entityType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IColumn.FindColumnMapping(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.IsFixedLength">
      <MemberSignature Language="C#" Value="bool? Microsoft.EntityFrameworkCore.Metadata.IColumn.IsFixedLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Microsoft.EntityFrameworkCore.Metadata.IColumn.IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#IsFixedLength" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedLength As Nullable(Of Boolean) Implements IColumn.IsFixedLength" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.IsFixedLength : Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.IsFixedLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.IsFixedLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.IsRowVersion">
      <MemberSignature Language="C#" Value="bool Microsoft.EntityFrameworkCore.Metadata.IColumn.IsRowVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.EntityFrameworkCore.Metadata.IColumn.IsRowVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#IsRowVersion" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsRowVersion As Boolean Implements IColumn.IsRowVersion" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.IsRowVersion : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.IsRowVersion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.IsRowVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.IsStored">
      <MemberSignature Language="C#" Value="bool? Microsoft.EntityFrameworkCore.Metadata.IColumn.IsStored { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Microsoft.EntityFrameworkCore.Metadata.IColumn.IsStored" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#IsStored" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsStored As Nullable(Of Boolean) Implements IColumn.IsStored" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.IsStored : Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.IsStored" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.IsStored</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.IsUnicode">
      <MemberSignature Language="C#" Value="bool? Microsoft.EntityFrameworkCore.Metadata.IColumn.IsUnicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Microsoft.EntityFrameworkCore.Metadata.IColumn.IsUnicode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#IsUnicode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsUnicode As Nullable(Of Boolean) Implements IColumn.IsUnicode" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.IsUnicode : Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.IsUnicode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.IsUnicode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.MaxLength">
      <MemberSignature Language="C#" Value="int? Microsoft.EntityFrameworkCore.Metadata.IColumn.MaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Microsoft.EntityFrameworkCore.Metadata.IColumn.MaxLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#MaxLength" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MaxLength As Nullable(Of Integer) Implements IColumn.MaxLength" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.MaxLength : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.MaxLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.MaxLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.Order">
      <MemberSignature Language="C#" Value="int? Microsoft.EntityFrameworkCore.Metadata.IColumn.Order { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Microsoft.EntityFrameworkCore.Metadata.IColumn.Order" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#Order" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Order As Nullable(Of Integer) Implements IColumn.Order" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.Order : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.Order" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.Order</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.Precision">
      <MemberSignature Language="C#" Value="int? Microsoft.EntityFrameworkCore.Metadata.IColumn.Precision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Microsoft.EntityFrameworkCore.Metadata.IColumn.Precision" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#Precision" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Precision As Nullable(Of Integer) Implements IColumn.Precision" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.Precision : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.Precision" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumn.Scale">
      <MemberSignature Language="C#" Value="int? Microsoft.EntityFrameworkCore.Metadata.IColumn.Scale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Microsoft.EntityFrameworkCore.Metadata.IColumn.Scale" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumn#Scale" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Scale As Nullable(Of Integer) Implements IColumn.Scale" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumn.Scale : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumn.Scale" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumn.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IColumnBase.ProviderValueComparer">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer Microsoft.EntityFrameworkCore.Metadata.IColumnBase.ProviderValueComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer Microsoft.EntityFrameworkCore.Metadata.IColumnBase.ProviderValueComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.JsonColumn.Microsoft#EntityFrameworkCore#Metadata#IColumnBase#ProviderValueComparer" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ProviderValueComparer As ValueComparer Implements IColumnBase.ProviderValueComparer" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IColumnBase.ProviderValueComparer : Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Usage="Microsoft.EntityFrameworkCore.Metadata.IColumnBase.ProviderValueComparer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IColumnBase.ProviderValueComparer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
