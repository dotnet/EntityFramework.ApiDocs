<Type Name="SqlQueryColumn" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn">
  <TypeSignature Language="C#" Value="public class SqlQueryColumn : Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnBase, Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn" FrameworkAlternate="efcore-5.0;efcore-6.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlQueryColumn extends Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IColumnBase, class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlQueryColumn&#xA;Inherits ColumnBase&#xA;Implements ISqlQueryColumn" FrameworkAlternate="efcore-5.0;efcore-6.0" />
  <TypeSignature Language="F#" Value="type SqlQueryColumn = class&#xA;    inherit ColumnBase&#xA;    interface ISqlQueryColumn&#xA;    interface IColumnBase&#xA;    interface IAnnotatable" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlQueryColumn extends Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IColumnBase, class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="F#" Value="type SqlQueryColumn = class&#xA;    inherit ColumnBase&#xA;    interface ISqlQueryColumn&#xA;    interface IColumnBase&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="C#" Value="public class SqlQueryColumn : Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnBase&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumnMapping&gt;, Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlQueryColumn extends Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnBase`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumnMapping&gt; implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IColumnBase, class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlQueryColumn&#xA;Inherits ColumnBase(Of SqlQueryColumnMapping)&#xA;Implements ISqlQueryColumn" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type SqlQueryColumn = class&#xA;    inherit ColumnBase&lt;SqlQueryColumnMapping&gt;&#xA;    interface ISqlQueryColumn&#xA;    interface IColumnBase&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnBase&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumnMapping&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TColumnMappingBase">Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumnMapping</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IColumnBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlQueryColumn (string name, string type, Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery sqlQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string type, class Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery sqlQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As String, sqlQuery As SqlQuery)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn : string * string * Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn (name, type, sqlQuery)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="type" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="sqlQuery" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <param name="sqlQuery">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlQueryColumn (string name, string type, Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery sqlQuery, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? storeTypeMapping = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string type, class Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery sqlQuery, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping storeTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As String, sqlQuery As SqlQuery, Optional storeTypeMapping As RelationalTypeMapping = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn : string * string * Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn (name, type, sqlQuery, storeTypeMapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="type" Type="System.String" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="sqlQuery" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="storeTypeMapping" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Index="3" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <param name="sqlQuery">To be added.</param>
        <param name="storeTypeMapping">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.PropertyMappings">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt; Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.PropertyMappings { get; }" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt; Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.PropertyMappings" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn.Microsoft#EntityFrameworkCore#Metadata#ISqlQueryColumn#PropertyMappings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property PropertyMappings As IEnumerable(Of ISqlQueryColumnMapping) Implements ISqlQueryColumn.PropertyMappings" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.PropertyMappings : seq&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.PropertyMappings" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt; Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.PropertyMappings { get; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt; Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.PropertyMappings" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property PropertyMappings As IReadOnlyList(Of ISqlQueryColumnMapping) Implements ISqlQueryColumn.PropertyMappings" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.PropertyMappings : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.PropertyMappings" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.PropertyMappings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.SqlQuery">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.ISqlQuery Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.SqlQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.ISqlQuery Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.SqlQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn.Microsoft#EntityFrameworkCore#Metadata#ISqlQueryColumn#SqlQuery" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SqlQuery As ISqlQuery Implements ISqlQueryColumn.SqlQuery" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.SqlQuery : Microsoft.EntityFrameworkCore.Metadata.ISqlQuery" Usage="Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.SqlQuery" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.SqlQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ISqlQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SqlQuery">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ISqlQuery SqlQuery { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.ISqlQuery SqlQuery" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn.SqlQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SqlQuery As ISqlQuery" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.SqlQuery : Microsoft.EntityFrameworkCore.Metadata.ISqlQuery" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn.SqlQuery" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery SqlQuery { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery SqlQuery" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SqlQuery As SqlQuery" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.SqlQuery : Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn.SqlQuery" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-5.0">P:Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumn.SqlQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-5.0">Microsoft.EntityFrameworkCore.Metadata.ISqlQuery</ReturnType>
        <ReturnType FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sqlQueryColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
