<Type Name="RelationalModel" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel">
  <TypeSignature Language="C#" Value="public class RelationalModel : Microsoft.EntityFrameworkCore.Infrastructure.Annotatable, Microsoft.EntityFrameworkCore.Metadata.IRelationalModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalModel extends Microsoft.EntityFrameworkCore.Infrastructure.Annotatable implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IRelationalModel" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalModel&#xA;Inherits Annotatable&#xA;Implements IRelationalModel" />
  <TypeSignature Language="F#" Value="type RelationalModel = class&#xA;    inherit Annotatable&#xA;    interface IRelationalModel&#xA;    interface IAnnotatable" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalModel extends Microsoft.EntityFrameworkCore.Infrastructure.Annotatable implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IRelationalModel" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="F#" Value="type RelationalModel = class&#xA;    inherit Annotatable&#xA;    interface IRelationalModel&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.Annotatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IRelationalModel</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalModel (Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (model As IModel)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel model" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IModel Add (Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider relationalAnnotationProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IModel Add(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider relationalAnnotationProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Add(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (model As IConventionModel, relationalAnnotationProvider As IRelationalAnnotationProvider) As IModel" />
      <MemberSignature Language="F#" Value="static member Add : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Add (model, relationalAnnotationProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="relationalAnnotationProvider" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="relationalAnnotationProvider">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IModel Add (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider? relationalAnnotationProvider, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IModel Add(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider relationalAnnotationProvider, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Add(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (model As IModel, relationalAnnotationProvider As IRelationalAnnotationProvider, designTime As Boolean) As IModel" />
      <MemberSignature Language="F#" Value="static member Add : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Add (model, relationalAnnotationProvider, designTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="relationalAnnotationProvider" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="relationalAnnotationProvider">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IModel Add (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider relationalAnnotationProvider, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource relationalTypeMappingSource, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IModel Add(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider relationalAnnotationProvider, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource relationalTypeMappingSource, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Add(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (model As IModel, relationalAnnotationProvider As IRelationalAnnotationProvider, relationalTypeMappingSource As IRelationalTypeMappingSource, designTime As Boolean) As IModel" />
      <MemberSignature Language="F#" Value="static member Add : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Add (model, relationalAnnotationProvider, relationalTypeMappingSource, designTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="relationalAnnotationProvider" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" Index="1" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="relationalTypeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Index="2" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="relationalAnnotationProvider">To be added.</param>
        <param name="relationalTypeMappingSource">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IRelationalModel Create (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider? relationalAnnotationProvider, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IRelationalModel Create(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider relationalAnnotationProvider, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Create(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (model As IModel, relationalAnnotationProvider As IRelationalAnnotationProvider, designTime As Boolean) As IRelationalModel" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Create (model, relationalAnnotationProvider, designTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IRelationalModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="relationalAnnotationProvider" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="relationalAnnotationProvider">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IRelationalModel Create (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider relationalAnnotationProvider, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource relationalTypeMappingSource, bool designTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IRelationalModel Create(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider relationalAnnotationProvider, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource relationalTypeMappingSource, bool designTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Create(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (model As IModel, relationalAnnotationProvider As IRelationalAnnotationProvider, relationalTypeMappingSource As IRelationalTypeMappingSource, designTime As Boolean) As IRelationalModel" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Create (model, relationalAnnotationProvider, relationalTypeMappingSource, designTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IRelationalModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="relationalAnnotationProvider" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" Index="1" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="relationalTypeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Index="2" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="designTime" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="relationalAnnotationProvider">To be added.</param>
        <param name="relationalTypeMappingSource">To be added.</param>
        <param name="designTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.DebugView" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DebugView As DebugView" />
      <MemberSignature Language="F#" Value="member this.DebugView : Microsoft.EntityFrameworkCore.Infrastructure.DebugView" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.DebugView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.DebugView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTables">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;string,Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase&gt; DefaultTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase&gt; DefaultTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.DefaultTables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultTables As SortedDictionary(Of String, TableBase)" />
      <MemberSignature Language="F#" Value="member this.DefaultTables : System.Collections.Generic.SortedDictionary&lt;string, Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.DefaultTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFunction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoreFunction FindFunction (string name, string schema, System.Collections.Generic.IReadOnlyList&lt;string&gt; parameters);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IStoreFunction FindFunction(string name, string schema, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.FindFunction(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFunction (name As String, schema As String, parameters As IReadOnlyList(Of String)) As IStoreFunction" />
      <MemberSignature Language="F#" Value="abstract member FindFunction : string * string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreFunction&#xA;override this.FindFunction : string * string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreFunction" Usage="relationalModel.FindFunction (name, schema, parameters)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoreFunction? FindFunction (string name, string? schema, System.Collections.Generic.IReadOnlyList&lt;string&gt; parameters);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.FindFunction(System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoreFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FindQuery">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ISqlQuery FindQuery (string name);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.ISqlQuery FindQuery(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.FindQuery(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindQuery (name As String) As ISqlQuery" />
      <MemberSignature Language="F#" Value="abstract member FindQuery : string -&gt; Microsoft.EntityFrameworkCore.Metadata.ISqlQuery&#xA;override this.FindQuery : string -&gt; Microsoft.EntityFrameworkCore.Metadata.ISqlQuery" Usage="relationalModel.FindQuery name" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ISqlQuery? FindQuery (string name);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.FindQuery(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ISqlQuery</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FindStoredProcedure">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure? FindStoredProcedure (string name, string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure FindStoredProcedure(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.FindStoredProcedure(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindStoredProcedure (name As String, schema As String) As IStoreStoredProcedure" />
      <MemberSignature Language="F#" Value="abstract member FindStoredProcedure : string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure&#xA;override this.FindStoredProcedure : string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure" Usage="relationalModel.FindStoredProcedure (name, schema)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.FindStoredProcedure(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="schema" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FindTable">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ITable FindTable (string name, string schema);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.ITable FindTable(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.FindTable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindTable (name As String, schema As String) As ITable" />
      <MemberSignature Language="F#" Value="abstract member FindTable : string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.ITable&#xA;override this.FindTable : string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.ITable" Usage="relationalModel.FindTable (name, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ITable? FindTable (string name, string? schema);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.FindTable(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ITable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FindView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IView FindView (string name, string schema);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IView FindView(string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.FindView(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindView (name As String, schema As String) As IView" />
      <MemberSignature Language="F#" Value="abstract member FindView : string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IView&#xA;override this.FindView : string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IView" Usage="relationalModel.FindView (name, schema)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IView? FindView (string name, string? schema);" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.FindView(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Functions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;(string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;),Microsoft.EntityFrameworkCore.Metadata.Internal.StoreFunction&gt; Functions { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2&lt;valuetype System.ValueTuple`3&lt;string, string, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt;, class Microsoft.EntityFrameworkCore.Metadata.Internal.StoreFunction&gt; Functions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Functions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Functions As SortedDictionary(Of ValueTuple(Of String, String, IReadOnlyList(Of String)), StoreFunction)" />
      <MemberSignature Language="F#" Value="member this.Functions : System.Collections.Generic.SortedDictionary&lt;ValueTuple&lt;string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt;, Microsoft.EntityFrameworkCore.Metadata.Internal.StoreFunction&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Functions" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;(string, string?, System.Collections.Generic.IReadOnlyList&lt;string&gt;),Microsoft.EntityFrameworkCore.Metadata.Internal.StoreFunction&gt; Functions { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;System.ValueTuple&lt;System.String,System.String,System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;,Microsoft.EntityFrameworkCore.Metadata.Internal.StoreFunction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Functions">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreFunction&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Functions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoreFunction&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Functions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Microsoft#EntityFrameworkCore#Metadata#IRelationalModel#Functions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Functions As IEnumerable(Of IStoreFunction) Implements IRelationalModel.Functions" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Functions : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreFunction&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Functions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Functions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreFunction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Queries">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQuery&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Queries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ISqlQuery&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Queries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Microsoft#EntityFrameworkCore#Metadata#IRelationalModel#Queries" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Queries As IEnumerable(Of ISqlQuery) Implements IRelationalModel.Queries" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Queries : seq&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQuery&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Queries" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Queries</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQuery&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.StoredProcedures">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.StoredProcedures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.StoredProcedures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Microsoft#EntityFrameworkCore#Metadata#IRelationalModel#StoredProcedures" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property StoredProcedures As IEnumerable(Of IStoreStoredProcedure) Implements IRelationalModel.StoredProcedures" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.StoredProcedures : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.StoredProcedures" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.StoredProcedures</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Tables">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ITable&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ITable&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Tables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Microsoft#EntityFrameworkCore#Metadata#IRelationalModel#Tables" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Tables As IEnumerable(Of ITable) Implements IRelationalModel.Tables" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Tables : seq&lt;Microsoft.EntityFrameworkCore.Metadata.ITable&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Tables" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Tables</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ITable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Views">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IView&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Views { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IView&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Views" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Microsoft#EntityFrameworkCore#Metadata#IRelationalModel#Views" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Views As IEnumerable(Of IView) Implements IRelationalModel.Views" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Views : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IView&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Views" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Views</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IView&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Model" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Model As IModel" />
      <MemberSignature Language="F#" Value="member this.Model : Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Model" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IRelationalModel.Model</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Queries">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;string,Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery&gt; Queries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery&gt; Queries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Queries" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Queries As SortedDictionary(Of String, SqlQuery)" />
      <MemberSignature Language="F#" Value="member this.Queries : System.Collections.Generic.SortedDictionary&lt;string, Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Queries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoredProcedures">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;(string, string?),Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure&gt; StoredProcedures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2&lt;valuetype System.ValueTuple`2&lt;string, string&gt;, class Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure&gt; StoredProcedures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.StoredProcedures" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StoredProcedures As SortedDictionary(Of ValueTuple(Of String, String), StoreStoredProcedure)" />
      <MemberSignature Language="F#" Value="member this.StoredProcedures : System.Collections.Generic.SortedDictionary&lt;ValueTuple&lt;string, string&gt;, Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.StoredProcedures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;System.ValueTuple&lt;System.String,System.String&gt;,Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;(string, string),Microsoft.EntityFrameworkCore.Metadata.Internal.Table&gt; Tables { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2&lt;valuetype System.ValueTuple`2&lt;string, string&gt;, class Microsoft.EntityFrameworkCore.Metadata.Internal.Table&gt; Tables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Tables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Tables As SortedDictionary(Of ValueTuple(Of String, String), Table)" />
      <MemberSignature Language="F#" Value="member this.Tables : System.Collections.Generic.SortedDictionary&lt;ValueTuple&lt;string, string&gt;, Microsoft.EntityFrameworkCore.Metadata.Internal.Table&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Tables" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;(string, string?),Microsoft.EntityFrameworkCore.Metadata.Internal.Table&gt; Tables { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;System.ValueTuple&lt;System.String,System.String&gt;,Microsoft.EntityFrameworkCore.Metadata.Internal.Table&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToReferentialAction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Migrations.ReferentialAction ToReferentialAction (Microsoft.EntityFrameworkCore.DeleteBehavior deleteBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Migrations.ReferentialAction ToReferentialAction(valuetype Microsoft.EntityFrameworkCore.DeleteBehavior deleteBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.ToReferentialAction(Microsoft.EntityFrameworkCore.DeleteBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToReferentialAction (deleteBehavior As DeleteBehavior) As ReferentialAction" />
      <MemberSignature Language="F#" Value="static member ToReferentialAction : Microsoft.EntityFrameworkCore.DeleteBehavior -&gt; Microsoft.EntityFrameworkCore.Migrations.ReferentialAction" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.ToReferentialAction deleteBehavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.ReferentialAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deleteBehavior" Type="Microsoft.EntityFrameworkCore.DeleteBehavior" />
      </Parameters>
      <Docs>
        <param name="deleteBehavior">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Views">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;(string, string),Microsoft.EntityFrameworkCore.Metadata.Internal.View&gt; Views { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2&lt;valuetype System.ValueTuple`2&lt;string, string&gt;, class Microsoft.EntityFrameworkCore.Metadata.Internal.View&gt; Views" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Views" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Views As SortedDictionary(Of ValueTuple(Of String, String), View)" />
      <MemberSignature Language="F#" Value="member this.Views : System.Collections.Generic.SortedDictionary&lt;ValueTuple&lt;string, string&gt;, Microsoft.EntityFrameworkCore.Metadata.Internal.View&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel.Views" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;(string, string?),Microsoft.EntityFrameworkCore.Metadata.Internal.View&gt; Views { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;System.ValueTuple&lt;System.String,System.String&gt;,Microsoft.EntityFrameworkCore.Metadata.Internal.View&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
