<Type Name="NamedListComparer" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.NamedListComparer">
  <TypeSignature Language="C#" Value="public sealed class NamedListComparer : System.Collections.Generic.IComparer&lt;(string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;)&gt;, System.Collections.Generic.IEqualityComparer&lt;(string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;)&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NamedListComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;valuetype System.ValueTuple`3&lt;string, string, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt;&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;valuetype System.ValueTuple`3&lt;string, string, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.NamedListComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NamedListComparer&#xA;Implements IComparer(Of ValueTuple(Of String, String, IReadOnlyList(Of String))), IEqualityComparer(Of ValueTuple(Of String, String, IReadOnlyList(Of String)))" />
  <TypeSignature Language="F#" Value="type NamedListComparer = class&#xA;    interface IComparer&lt;ValueTuple&lt;string, string, IReadOnlyList&lt;string&gt;&gt;&gt;&#xA;    interface IEqualityComparer&lt;ValueTuple&lt;string, string, IReadOnlyList&lt;string&gt;&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.ValueTuple&lt;System.String,System.String,System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.ValueTuple&lt;System.String,System.String,System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare ((string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;) x, (string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;) y);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(valuetype System.ValueTuple`3&lt;string, string, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt; x, valuetype System.ValueTuple`3&lt;string, string, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt; y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NamedListComparer.Compare(System.ValueTuple{System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String}},System.ValueTuple{System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As ValueTuple(Of String, String, IReadOnlyList(Of String)), y As ValueTuple(Of String, String, IReadOnlyList(Of String))) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Compare : ValueTuple&lt;string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; * ValueTuple&lt;string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; -&gt; int&#xA;override this.Compare : ValueTuple&lt;string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; * ValueTuple&lt;string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; -&gt; int" Usage="namedListComparer.Compare (x, y)" />
      <MemberSignature Language="C#" Value="public int Compare ((string, string?, System.Collections.Generic.IReadOnlyList&lt;string&gt;) x, (string, string?, System.Collections.Generic.IReadOnlyList&lt;string&gt;) y);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.ValueTuple&lt;System.String,System.String,System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;" />
        <Parameter Name="y" Type="System.ValueTuple&lt;System.String,System.String,System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals ((string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;) x, (string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;) y);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.ValueTuple`3&lt;string, string, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt; x, valuetype System.ValueTuple`3&lt;string, string, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt; y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NamedListComparer.Equals(System.ValueTuple{System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String}},System.ValueTuple{System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As ValueTuple(Of String, String, IReadOnlyList(Of String)), y As ValueTuple(Of String, String, IReadOnlyList(Of String))) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : ValueTuple&lt;string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; * ValueTuple&lt;string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; -&gt; bool" Usage="namedListComparer.Equals (x, y)" />
      <MemberSignature Language="C#" Value="public bool Equals ((string, string?, System.Collections.Generic.IReadOnlyList&lt;string&gt;) x, (string, string?, System.Collections.Generic.IReadOnlyList&lt;string&gt;) y);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.ValueTuple&lt;System.String,System.String,System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;" />
        <Parameter Name="y" Type="System.ValueTuple&lt;System.String,System.String,System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ((string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;) obj);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(valuetype System.ValueTuple`3&lt;string, string, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt;&gt; obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NamedListComparer.GetHashCode(System.ValueTuple{System.String,System.String,System.Collections.Generic.IReadOnlyList{System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As ValueTuple(Of String, String, IReadOnlyList(Of String))) As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : ValueTuple&lt;string, string, System.Collections.Generic.IReadOnlyList&lt;string&gt;&gt; -&gt; int" Usage="namedListComparer.GetHashCode obj" />
      <MemberSignature Language="C#" Value="public int GetHashCode ((string, string?, System.Collections.Generic.IReadOnlyList&lt;string&gt;) obj);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.ValueTuple&lt;System.String,System.String,System.Collections.Generic.IReadOnlyList&lt;System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Metadata.Internal.NamedListComparer Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Metadata.Internal.NamedListComparer Instance" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.Internal.NamedListComparer.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Instance As NamedListComparer " />
      <MemberSignature Language="F#" Value=" staticval mutable Instance : Microsoft.EntityFrameworkCore.Metadata.Internal.NamedListComparer" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.NamedListComparer.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.NamedListComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
