<Type Name="SqlQueryMapping" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping">
  <TypeSignature Language="C#" Value="public class SqlQueryMapping : Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase, Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping" FrameworkAlternate="efcore-5.0;efcore-6.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlQueryMapping extends Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping, class Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlQueryMapping&#xA;Inherits TableMappingBase&#xA;Implements ISqlQueryMapping" FrameworkAlternate="efcore-5.0;efcore-6.0" />
  <TypeSignature Language="F#" Value="type SqlQueryMapping = class&#xA;    inherit TableMappingBase&#xA;    interface ISqlQueryMapping&#xA;    interface ITableMappingBase&#xA;    interface IAnnotatable" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlQueryMapping extends Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping, class Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="F#" Value="type SqlQueryMapping = class&#xA;    inherit TableMappingBase&#xA;    interface ISqlQueryMapping&#xA;    interface ITableMappingBase&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="C#" Value="public class SqlQueryMapping : Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumnMapping&gt;, Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlQueryMapping extends Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumnMapping&gt; implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping, class Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlQueryMapping&#xA;Inherits TableMappingBase(Of SqlQueryColumnMapping)&#xA;Implements ISqlQueryMapping" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type SqlQueryMapping = class&#xA;    inherit TableMappingBase&lt;SqlQueryColumnMapping&gt;&#xA;    interface ISqlQueryMapping&#xA;    interface ITableMappingBase&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" FrameworkAlternate="efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumnMapping&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TColumnMapping">Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryColumnMapping</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlQueryMapping (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery sqlQuery, bool includesDerivedTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery sqlQuery, bool includesDerivedTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IEntityType, sqlQuery As SqlQuery, includesDerivedTypes As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping (entityType, sqlQuery, includesDerivedTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="sqlQuery" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQuery" />
        <Parameter Name="includesDerivedTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="sqlQuery">To be added.</param>
        <param name="includesDerivedTypes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultSqlQueryMapping">
      <MemberSignature Language="C#" Value="public virtual bool IsDefaultSqlQueryMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultSqlQueryMapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping.IsDefaultSqlQueryMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsDefaultSqlQueryMapping As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDefaultSqlQueryMapping : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping.IsDefaultSqlQueryMapping" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping.IsDefaultSqlQueryMapping</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping.ColumnMappings">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt; Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping.ColumnMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt; Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping.ColumnMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping.Microsoft#EntityFrameworkCore#Metadata#ISqlQueryMapping#ColumnMappings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ColumnMappings As IEnumerable(Of ISqlQueryColumnMapping) Implements ISqlQueryMapping.ColumnMappings" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping.ColumnMappings : seq&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping.ColumnMappings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping.ColumnMappings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SqlQuery">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ISqlQuery SqlQuery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.ISqlQuery SqlQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping.SqlQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SqlQuery As ISqlQuery" />
      <MemberSignature Language="F#" Value="member this.SqlQuery : Microsoft.EntityFrameworkCore.Metadata.ISqlQuery" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping.SqlQuery" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ISqlQueryMapping.SqlQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ISqlQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.SqlQueryMapping.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sqlQueryMapping.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
