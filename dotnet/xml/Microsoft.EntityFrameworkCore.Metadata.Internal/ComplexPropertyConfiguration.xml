<Type Name="ComplexPropertyConfiguration" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration">
  <TypeSignature Language="C#" Value="public class ComplexPropertyConfiguration : Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComplexPropertyConfiguration extends Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class ComplexPropertyConfiguration&#xA;Inherits AnnotatableBase" />
  <TypeSignature Language="F#" Value="type ComplexPropertyConfiguration = class&#xA;    inherit AnnotatableBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComplexPropertyConfiguration (Type clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clrType As Type)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration : Type -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration clrType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clrType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual void Apply (Microsoft.EntityFrameworkCore.Metadata.IMutableComplexProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply(class Microsoft.EntityFrameworkCore.Metadata.IMutableComplexProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration.Apply(Microsoft.EntityFrameworkCore.Metadata.IMutableComplexProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Apply (property As IMutableComplexProperty)" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.IMutableComplexProperty -&gt; unit&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.IMutableComplexProperty -&gt; unit" Usage="complexPropertyConfiguration.Apply property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableComplexProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrType">
      <MemberSignature Language="C#" Value="public virtual Type ClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration.ClrType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ClrType : Type" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyConfiguration.ClrType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
