<Type Name="StoreStoredProcedure" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure">
  <TypeSignature Language="C#" Value="public class StoreStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase, Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StoreStoredProcedure extends Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure, class Microsoft.EntityFrameworkCore.Metadata.ITableBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure" />
  <TypeSignature Language="VB.NET" Value="Public Class StoreStoredProcedure&#xA;Inherits TableBase&#xA;Implements IStoreStoredProcedure" />
  <TypeSignature Language="F#" Value="type StoreStoredProcedure = class&#xA;    inherit TableBase&#xA;    interface IStoreStoredProcedure&#xA;    interface ITableBase&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ITableBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StoreStoredProcedure (Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure sproc, Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure sproc, class Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sproc As IRuntimeStoredProcedure, model As RelationalModel)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure * Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure (sproc, model)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sproc" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel" Index="1" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="sproc">To be added.</param>
        <param name="model">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StoreStoredProcedure (string name, string? schema, Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string schema, class Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, schema As String, model As RelationalModel)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure : string * string * Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure (name, schema, model)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="model">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public virtual void AddParameter (Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddParameter(class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.AddParameter(Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddParameter (parameter As IStoreStoredProcedureParameter)" />
      <MemberSignature Language="F#" Value="abstract member AddParameter : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter -&gt; unit&#xA;override this.AddParameter : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter -&gt; unit" Usage="storeStoredProcedure.AddParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResultColumn">
      <MemberSignature Language="C#" Value="public virtual void AddResultColumn (Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResultColumn(class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.AddResultColumn(Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddResultColumn (column As IStoreStoredProcedureResultColumn)" />
      <MemberSignature Language="F#" Value="abstract member AddResultColumn : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn -&gt; unit&#xA;override this.AddResultColumn : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn -&gt; unit" Usage="storeStoredProcedure.AddResultColumn column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStoredProcedure">
      <MemberSignature Language="C#" Value="public virtual void AddStoredProcedure (Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure storedProcedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStoredProcedure(class Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure storedProcedure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.AddStoredProcedure(Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStoredProcedure (storedProcedure As IRuntimeStoredProcedure)" />
      <MemberSignature Language="F#" Value="abstract member AddStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure -&gt; unit&#xA;override this.AddStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure -&gt; unit" Usage="storeStoredProcedure.AddStoredProcedure storedProcedure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storedProcedure" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeStoredProcedure" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="storedProcedure">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.DebugView" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DebugView As DebugView" />
      <MemberSignature Language="F#" Value="member this.DebugView : Microsoft.EntityFrameworkCore.Infrastructure.DebugView" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.DebugView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.DebugView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindColumn">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Metadata.IColumnBase? FindColumn (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.IColumnBase FindColumn(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.FindColumn(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindColumn (property As IProperty) As IColumnBase" />
      <MemberSignature Language="F#" Value="override this.FindColumn : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnBase" Usage="storeStoredProcedure.FindColumn property" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.ITableBase.FindColumn(Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IColumnBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FindParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter? FindParameter (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter FindParameter(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.FindParameter(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindParameter (property As IProperty) As IStoreStoredProcedureParameter" />
      <MemberSignature Language="F#" Value="abstract member FindParameter : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter&#xA;override this.FindParameter : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter" Usage="storeStoredProcedure.FindParameter property" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.FindParameter(Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter? FindParameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter FindParameter(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.FindParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindParameter (name As String) As IStoreStoredProcedureParameter" />
      <MemberSignature Language="F#" Value="abstract member FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter&#xA;override this.FindParameter : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter" Usage="storeStoredProcedure.FindParameter name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.FindParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindResultColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn? FindResultColumn (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn FindResultColumn(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.FindResultColumn(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindResultColumn (property As IProperty) As IStoreStoredProcedureResultColumn" />
      <MemberSignature Language="F#" Value="abstract member FindResultColumn : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn&#xA;override this.FindResultColumn : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn" Usage="storeStoredProcedure.FindResultColumn property" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.FindResultColumn(Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FindResultColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn? FindResultColumn (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn FindResultColumn(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.FindResultColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindResultColumn (name As String) As IStoreStoredProcedureResultColumn" />
      <MemberSignature Language="F#" Value="abstract member FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn&#xA;override this.FindResultColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn" Usage="storeStoredProcedure.FindResultColumn name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.FindResultColumn(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.EntityTypeMappings">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.EntityTypeMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.EntityTypeMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoreStoredProcedure#EntityTypeMappings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property EntityTypeMappings As IEnumerable(Of IStoredProcedureMapping) Implements IStoreStoredProcedure.EntityTypeMappings" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.EntityTypeMappings : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.EntityTypeMappings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.EntityTypeMappings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.Parameters">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoreStoredProcedure#Parameters" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parameters As IReadOnlyList(Of IStoreStoredProcedureParameter) Implements IStoreStoredProcedure.Parameters" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.Parameters : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.ResultColumns">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.ResultColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.ResultColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoreStoredProcedure#ResultColumns" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ResultColumns As IEnumerable(Of IStoreStoredProcedureResultColumn) Implements IStoreStoredProcedure.ResultColumns" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.ResultColumns : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.ResultColumns" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.ResultColumns</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.StoredProcedures">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.StoredProcedures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt; Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.StoredProcedures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.Microsoft#EntityFrameworkCore#Metadata#IStoreStoredProcedure#StoredProcedures" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property StoredProcedures As IEnumerable(Of IStoredProcedure) Implements IStoreStoredProcedure.StoredProcedures" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.StoredProcedures : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.StoredProcedures" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure.StoredProcedures</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter&gt; Parameters { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Parameters As List(Of IStoreStoredProcedureParameter)" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn&gt; ResultColumns { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn&gt; ResultColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.ResultColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ResultColumns As List(Of IStoreStoredProcedureResultColumn)" />
      <MemberSignature Language="F#" Value="member this.ResultColumns : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.ResultColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureResultColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureReturnValue? ReturnValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureReturnValue ReturnValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReturnValue As IStoreStoredProcedureReturnValue" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureReturnValue with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureReturnValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoredProcedures">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt; StoredProcedures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedSet`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt; StoredProcedures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.StoredProcedures" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StoredProcedures As SortedSet(Of IStoredProcedure)" />
      <MemberSignature Language="F#" Value="member this.StoredProcedures : System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.StoredProcedures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="storeStoredProcedure.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
