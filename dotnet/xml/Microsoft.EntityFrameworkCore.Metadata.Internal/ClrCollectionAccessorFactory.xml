<Type Name="ClrCollectionAccessorFactory" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory">
  <TypeSignature Language="C#" Value="public class ClrCollectionAccessorFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClrCollectionAccessorFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ClrCollectionAccessorFactory" />
  <TypeSignature Language="F#" Value="type ClrCollectionAccessorFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="efcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClrCollectionAccessorFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor Create (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor Create(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.Create(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (navigation As INavigation) As IClrCollectionAccessor" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor&#xA;override this.Create : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor" Usage="clrCollectionAccessorFactory.Create navigation" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor Create (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor Create(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor&#xA;override this.Create : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor" Usage="clrCollectionAccessorFactory.Create navigation" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor Create (Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor Create(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.Create(Microsoft.EntityFrameworkCore.Metadata.INavigationBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (navigation As INavigationBase) As IClrCollectionAccessor" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.INavigationBase -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor&#xA;override this.Create : Microsoft.EntityFrameworkCore.Metadata.INavigationBase -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor" Usage="clrCollectionAccessorFactory.Create navigation" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor? Create (Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual void Create (Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation, out Type entityType, out Type propertyType, out Type elementType, out System.Linq.Expressions.Expression? getCollection, out System.Linq.Expressions.Expression? setCollection, out System.Linq.Expressions.Expression? setCollectionForMaterialization, out System.Linq.Expressions.Expression? createAndSetCollection, out System.Linq.Expressions.Expression? createCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(class Microsoft.EntityFrameworkCore.Metadata.INavigationBase navigation, [out] class System.Type&amp; entityType, [out] class System.Type&amp; propertyType, [out] class System.Type&amp; elementType, [out] class System.Linq.Expressions.Expression&amp; getCollection, [out] class System.Linq.Expressions.Expression&amp; setCollection, [out] class System.Linq.Expressions.Expression&amp; setCollectionForMaterialization, [out] class System.Linq.Expressions.Expression&amp; createAndSetCollection, [out] class System.Linq.Expressions.Expression&amp; createCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.Create(Microsoft.EntityFrameworkCore.Metadata.INavigationBase,System.Type@,System.Type@,System.Type@,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Create (navigation As INavigationBase, ByRef entityType As Type, ByRef propertyType As Type, ByRef elementType As Type, ByRef getCollection As Expression, ByRef setCollection As Expression, ByRef setCollectionForMaterialization As Expression, ByRef createAndSetCollection As Expression, ByRef createCollection As Expression)" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.INavigationBase * Type * Type * Type * Expression * Expression * Expression * Expression * Expression -&gt; unit&#xA;override this.Create : Microsoft.EntityFrameworkCore.Metadata.INavigationBase * Type * Type * Type * Expression * Expression * Expression * Expression * Expression -&gt; unit" Usage="clrCollectionAccessorFactory.Create (navigation, entityType, propertyType, elementType, getCollection, setCollection, setCollectionForMaterialization, createAndSetCollection, createCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigationBase" Index="0" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="entityType" Type="System.Type" RefType="out" Index="1" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="propertyType" Type="System.Type" RefType="out" Index="2" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="elementType" Type="System.Type" RefType="out" Index="3" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="getCollection" Type="System.Linq.Expressions.Expression" RefType="out" Index="4" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="setCollection" Type="System.Linq.Expressions.Expression" RefType="out" Index="5" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="setCollectionForMaterialization" Type="System.Linq.Expressions.Expression" RefType="out" Index="6" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="createAndSetCollection" Type="System.Linq.Expressions.Expression" RefType="out" Index="7" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="createCollection" Type="System.Linq.Expressions.Expression" RefType="out" Index="8" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <param name="elementType">To be added.</param>
        <param name="getCollection">To be added.</param>
        <param name="setCollection">To be added.</param>
        <param name="setCollectionForMaterialization">To be added.</param>
        <param name="createAndSetCollection">To be added.</param>
        <param name="createCollection">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAndSet&lt;TEntity,TCollection,TConcreteCollection&gt;">
      <MemberSignature Language="C#" Value="public static TCollection CreateAndSet&lt;TEntity,TCollection,TConcreteCollection&gt; (TEntity entity, Action&lt;TEntity,TCollection&gt; setterDelegate) where TEntity : class where TCollection : class where TConcreteCollection : TCollection, new();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TCollection CreateAndSet&lt;class TEntity, class TCollection, .ctor (!!TCollection) TConcreteCollection&gt;(!!TEntity entity, class System.Action`2&lt;!!TEntity, !!TCollection&gt; setterDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.CreateAndSet``3(``0,System.Action{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAndSet(Of TEntity As Class, TCollection As Class, TConcreteCollection As Class) (entity As TEntity, setterDelegate As Action(Of TEntity, TCollection)) As TCollection" />
      <MemberSignature Language="F#" Value="static member CreateAndSet : 'Entity * Action&lt;'Entity, 'Collection (requires 'Entity : null and 'Collection : null)&gt; -&gt; 'Collection (requires 'Entity : null and 'Collection : null)" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.CreateAndSet (entity, setterDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TCollection">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TConcreteCollection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>TCollection</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="setterDelegate" Type="System.Action&lt;TEntity,TCollection&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TCollection">To be added.</typeparam>
        <typeparam name="TConcreteCollection">To be added.</typeparam>
        <param name="entity">To be added.</param>
        <param name="setterDelegate">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAndSetHashSet&lt;TEntity,TCollection,TElement&gt;">
      <MemberSignature Language="C#" Value="public static TCollection CreateAndSetHashSet&lt;TEntity,TCollection,TElement&gt; (TEntity entity, Action&lt;TEntity,TCollection&gt; setterDelegate) where TEntity : class where TCollection : class where TElement : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TCollection CreateAndSetHashSet&lt;class TEntity, class TCollection, class TElement&gt;(!!TEntity entity, class System.Action`2&lt;!!TEntity, !!TCollection&gt; setterDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.CreateAndSetHashSet``3(``0,System.Action{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAndSetHashSet(Of TEntity As Class, TCollection As Class, TElement As Class) (entity As TEntity, setterDelegate As Action(Of TEntity, TCollection)) As TCollection" />
      <MemberSignature Language="F#" Value="static member CreateAndSetHashSet : 'Entity * Action&lt;'Entity, 'Collection (requires 'Entity : null and 'Collection : null)&gt; -&gt; 'Collection (requires 'Entity : null and 'Collection : null and 'Element : null)" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.CreateAndSetHashSet (entity, setterDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TCollection">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TElement">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="setterDelegate" Type="System.Action&lt;TEntity,TCollection&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TCollection">To be added.</typeparam>
        <typeparam name="TElement">To be added.</typeparam>
        <param name="entity">To be added.</param>
        <param name="setterDelegate">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAndSetObservableHashSet&lt;TEntity,TCollection,TElement&gt;">
      <MemberSignature Language="C#" Value="public static TCollection CreateAndSetObservableHashSet&lt;TEntity,TCollection,TElement&gt; (TEntity entity, Action&lt;TEntity,TCollection&gt; setterDelegate) where TEntity : class where TCollection : class where TElement : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TCollection CreateAndSetObservableHashSet&lt;class TEntity, class TCollection, class TElement&gt;(!!TEntity entity, class System.Action`2&lt;!!TEntity, !!TCollection&gt; setterDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.CreateAndSetObservableHashSet``3(``0,System.Action{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAndSetObservableHashSet(Of TEntity As Class, TCollection As Class, TElement As Class) (entity As TEntity, setterDelegate As Action(Of TEntity, TCollection)) As TCollection" />
      <MemberSignature Language="F#" Value="static member CreateAndSetObservableHashSet : 'Entity * Action&lt;'Entity, 'Collection (requires 'Entity : null and 'Collection : null)&gt; -&gt; 'Collection (requires 'Entity : null and 'Collection : null and 'Element : null)" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.CreateAndSetObservableHashSet (entity, setterDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TCollection">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TElement">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="setterDelegate" Type="System.Action&lt;TEntity,TCollection&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TCollection">To be added.</typeparam>
        <typeparam name="TElement">To be added.</typeparam>
        <param name="entity">To be added.</param>
        <param name="setterDelegate">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory Instance" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Instance As ClrCollectionAccessorFactory " />
      <MemberSignature Language="F#" Value=" staticval mutable Instance : Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
