<Type Name="PropertyBaseExtensions" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions">
  <TypeSignature Language="C#" Value="public static class PropertyBaseExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PropertyBaseExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module PropertyBaseExtensions" />
  <TypeSignature Language="F#" Value="type PropertyBaseExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsPropertyBase">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase AsPropertyBase (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, string methodName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase AsPropertyBase(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.AsPropertyBase(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsPropertyBase (propertyBase As IPropertyBase, Optional methodName As String = &quot;&quot;) As PropertyBase" />
      <MemberSignature Language="F#" Value="static member AsPropertyBase : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.AsPropertyBase (propertyBase, methodName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="methodName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.CallerMemberName]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CallerMemberName&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="methodName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateIndexes">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes CalculateIndexes (this Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes CalculateIndexes(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.CalculateIndexes(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CalculateIndexes (entityType As IEntityType, propertyBase As IPropertyBase) As PropertyIndexes" />
      <MemberSignature Language="F#" Value="static member CalculateIndexes : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.CalculateIndexes (entityType, propertyBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGetter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter GetGetter (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter GetGetter(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetGetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGetter (propertyBase As IPropertyBase) As IClrPropertyGetter" />
      <MemberSignature Language="F#" Value="static member GetGetter : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetGetter propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentifyingMemberInfo">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo GetIdentifyingMemberInfo (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo GetIdentifyingMemberInfo(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetIdentifyingMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIdentifyingMemberInfo (propertyBase As IPropertyBase) As MemberInfo" />
      <MemberSignature Language="F#" Value="static member GetIdentifyingMemberInfo : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; System.Reflection.MemberInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetIdentifyingMemberInfo propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentifyingMemberInfo">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo? GetIdentifyingMemberInfo (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo GetIdentifyingMemberInfo(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetIdentifyingMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIdentifyingMemberInfo (propertyBase As IReadOnlyPropertyBase) As MemberInfo" />
      <MemberSignature Language="F#" Value="static member GetIdentifyingMemberInfo : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase -&gt; System.Reflection.MemberInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetIdentifyingMemberInfo propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndex">
      <MemberSignature Language="C#" Value="public static int GetIndex (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIndex(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIndex (property As IPropertyBase) As Integer" />
      <MemberSignature Language="F#" Value="static member GetIndex : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetIndex property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMemberInfo">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo GetMemberInfo (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, bool forConstruction, bool forSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo GetMemberInfo(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, bool forConstruction, bool forSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMemberInfo (propertyBase As IPropertyBase, forConstruction As Boolean, forSet As Boolean) As MemberInfo" />
      <MemberSignature Language="F#" Value="static member GetMemberInfo : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * bool * bool -&gt; System.Reflection.MemberInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetMemberInfo (propertyBase, forConstruction, forSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="forConstruction" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="forSet" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="forConstruction">To be added.</param>
        <param name="forSet">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOriginalValueIndex">
      <MemberSignature Language="C#" Value="public static int GetOriginalValueIndex (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetOriginalValueIndex(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetOriginalValueIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOriginalValueIndex (propertyBase As IPropertyBase) As Integer" />
      <MemberSignature Language="F#" Value="static member GetOriginalValueIndex : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetOriginalValueIndex propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyAccessors">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors GetPropertyAccessors (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors GetPropertyAccessors(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyAccessors(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPropertyAccessors (propertyBase As IPropertyBase) As PropertyAccessors" />
      <MemberSignature Language="F#" Value="static member GetPropertyAccessors : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyAccessors propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyIndexes">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes GetPropertyIndexes (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes GetPropertyIndexes(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPropertyIndexes (propertyBase As IPropertyBase) As PropertyIndexes" />
      <MemberSignature Language="F#" Value="static member GetPropertyIndexes : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyIndexes propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyInfo">
      <MemberSignature Language="C#" Value="public static System.Reflection.PropertyInfo GetPropertyInfo (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.PropertyInfo GetPropertyInfo(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPropertyInfo (propertyBase As IPropertyBase) As PropertyInfo" />
      <MemberSignature Language="F#" Value="static member GetPropertyInfo : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; System.Reflection.PropertyInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyInfo propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="0" FrameworkAlternate="efcore-1.0" RefType="this" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipIndex">
      <MemberSignature Language="C#" Value="public static int GetRelationshipIndex (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetRelationshipIndex(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetRelationshipIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRelationshipIndex (propertyBase As IPropertyBase) As Integer" />
      <MemberSignature Language="F#" Value="static member GetRelationshipIndex : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetRelationshipIndex propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSetter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter GetSetter (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter GetSetter(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetSetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSetter (propertyBase As IPropertyBase) As IClrPropertySetter" />
      <MemberSignature Language="F#" Value="static member GetSetter : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetSetter propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShadowIndex">
      <MemberSignature Language="C#" Value="public static int GetShadowIndex (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetShadowIndex(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetShadowIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetShadowIndex (propertyBase As IPropertyBase) As Integer" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member GetShadowIndex : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetShadowIndex propertyBase" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreGeneratedIndex">
      <MemberSignature Language="C#" Value="public static int GetStoreGeneratedIndex (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStoreGeneratedIndex(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetStoreGeneratedIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStoreGeneratedIndex (propertyBase As IPropertyBase) As Integer" />
      <MemberSignature Language="F#" Value="static member GetStoreGeneratedIndex : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetStoreGeneratedIndex propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIndexerProperty">
      <MemberSignature Language="C#" Value="public static bool IsIndexerProperty (this Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIndexerProperty(class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.IsIndexerProperty(Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsIndexerProperty (propertyBase As PropertyBase) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsIndexerProperty : Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.IsIndexerProperty propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShadowProperty">
      <MemberSignature Language="C#" Value="public static bool IsShadowProperty (this Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsShadowProperty(class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.IsShadowProperty(Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsShadowProperty (propertyBase As PropertyBase) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsShadowProperty : Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.IsShadowProperty propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIndexes">
      <MemberSignature Language="C#" Value="public static void SetIndexes (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIndexes(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.SetIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIndexes (propertyBase As IPropertyBase, indexes As PropertyIndexes)" />
      <MemberSignature Language="F#" Value="static member SetIndexes : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.SetIndexes (propertyBase, indexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="indexes" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="indexes">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetMemberInfo">
      <MemberSignature Language="C#" Value="public static bool TryGetMemberInfo (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, bool forConstruction, bool forSet, out System.Reflection.MemberInfo memberInfo, out string errorMessage);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetMemberInfo(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, bool forConstruction, bool forSet, [out] class System.Reflection.MemberInfo&amp; memberInfo, [out] string&amp; errorMessage) cil managed" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TryGetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean,System.Reflection.MemberInfo@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryGetMemberInfo (propertyBase As IPropertyBase, forConstruction As Boolean, forSet As Boolean, ByRef memberInfo As MemberInfo, ByRef errorMessage As String) As Boolean" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="static member TryGetMemberInfo : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * bool * bool * MemberInfo * string -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TryGetMemberInfo (propertyBase, forConstruction, forSet, memberInfo, errorMessage)" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public static bool TryGetMemberInfo (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, bool forConstruction, bool forSet, out System.Reflection.MemberInfo? memberInfo, out string? errorMessage);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public static bool TryGetMemberInfo (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, bool forMaterialization, bool forSet, out System.Reflection.MemberInfo? memberInfo, out string? errorMessage);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetMemberInfo(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, bool forMaterialization, bool forSet, [out] class System.Reflection.MemberInfo&amp; memberInfo, [out] string&amp; errorMessage) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryGetMemberInfo (propertyBase As IPropertyBase, forMaterialization As Boolean, forSet As Boolean, ByRef memberInfo As MemberInfo, ByRef errorMessage As String) As Boolean" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member TryGetMemberInfo : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * bool * bool * MemberInfo * string -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TryGetMemberInfo (propertyBase, forMaterialization, forSet, memberInfo, errorMessage)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="forConstruction" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="forMaterialization" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="forSet" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" RefType="out" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="forConstruction">To be added.</param>
        <param name="forMaterialization">To be added.</param>
        <param name="forSet">To be added.</param>
        <param name="memberInfo">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySetIndexes">
      <MemberSignature Language="C#" Value="public static void TrySetIndexes (this Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TrySetIndexes(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TrySetIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TrySetIndexes (propertyBase As IPropertyBase, indexes As PropertyIndexes)" />
      <MemberSignature Language="F#" Value="static member TrySetIndexes : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TrySetIndexes (propertyBase, indexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" RefType="this" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0" />
        <Parameter Name="indexes" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="indexes">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
