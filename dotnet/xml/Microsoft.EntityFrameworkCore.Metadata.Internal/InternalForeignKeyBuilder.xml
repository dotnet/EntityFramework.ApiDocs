<Type Name="InternalForeignKeyBuilder" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder">
  <TypeSignature Language="C#" Value="public class InternalForeignKeyBuilder : Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder&gt;, Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InternalForeignKeyBuilder extends Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder&gt; implements class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class InternalForeignKeyBuilder&#xA;Inherits AnnotatableBuilder(Of ForeignKey, InternalModelBuilder)&#xA;Implements IConventionForeignKeyBuilder" />
  <TypeSignature Language="F#" Value="type InternalForeignKeyBuilder = class&#xA;    inherit AnnotatableBuilder&lt;ForeignKey, InternalModelBuilder&gt;&#xA;    interface IConventionForeignKeyBuilder&#xA;    interface IConventionAnnotatableBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableBuilder&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TMetadata">Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TModelBuilder">Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionAnnotatableBuilder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalForeignKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (foreignKey As ForeignKey, modelBuilder As InternalModelBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder (foreignKey, modelBuilder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey" />
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="modelBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToDeclaringTypeDefinition">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder AddToDeclaringTypeDefinition (Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder AddToDeclaringTypeDefinition(valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.AddToDeclaringTypeDefinition(Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddToDeclaringTypeDefinition (configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddToDeclaringTypeDefinition : Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.AddToDeclaringTypeDefinition : Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.AddToDeclaringTypeDefinition configurationSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreCompatible">
      <MemberSignature Language="C#" Value="public static bool AreCompatible (System.Reflection.MemberInfo? navigationToPrincipalProperty, System.Reflection.MemberInfo? navigationToDependentProperty, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, bool shouldThrow, out bool? shouldInvert, out bool? shouldBeUnique);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreCompatible(class System.Reflection.MemberInfo navigationToPrincipalProperty, class System.Reflection.MemberInfo navigationToDependentProperty, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, bool shouldThrow, [out] valuetype System.Nullable`1&lt;bool&gt;&amp; shouldInvert, [out] valuetype System.Nullable`1&lt;bool&gt;&amp; shouldBeUnique) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.AreCompatible(System.Reflection.MemberInfo,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Boolean,System.Nullable{System.Boolean}@,System.Nullable{System.Boolean}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreCompatible (navigationToPrincipalProperty As MemberInfo, navigationToDependentProperty As MemberInfo, principalEntityType As EntityType, dependentEntityType As EntityType, shouldThrow As Boolean, ByRef shouldInvert As Nullable(Of Boolean), ByRef shouldBeUnique As Nullable(Of Boolean)) As Boolean" />
      <MemberSignature Language="F#" Value="static member AreCompatible : System.Reflection.MemberInfo * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * bool * Nullable * Nullable -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.AreCompatible (navigationToPrincipalProperty, navigationToDependentProperty, principalEntityType, dependentEntityType, shouldThrow, shouldInvert, shouldBeUnique)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipalProperty" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationToDependentProperty" Type="System.Reflection.MemberInfo" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="shouldThrow" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="shouldInvert" Type="System.Nullable&lt;System.Boolean&gt;" RefType="out" Index="5" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="shouldBeUnique" Type="System.Nullable&lt;System.Boolean&gt;" RefType="out" Index="6" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipalProperty">To be added.</param>
        <param name="navigationToDependentProperty">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="shouldThrow">To be added.</param>
        <param name="shouldInvert">To be added.</param>
        <param name="shouldBeUnique">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreCompatible">
      <MemberSignature Language="C#" Value="public static bool AreCompatible (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, System.Reflection.MemberInfo navigationToPrincipal, System.Reflection.MemberInfo navigationToDependent, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; dependentProperties, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; principalProperties, bool? isUnique, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreCompatible(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, class System.Reflection.MemberInfo navigationToPrincipal, class System.Reflection.MemberInfo navigationToDependent, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; dependentProperties, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; principalProperties, valuetype System.Nullable`1&lt;bool&gt; isUnique, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.AreCompatible(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.MemberInfo,System.Reflection.MemberInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{System.Boolean},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreCompatible (principalEntityType As EntityType, dependentEntityType As EntityType, navigationToPrincipal As MemberInfo, navigationToDependent As MemberInfo, dependentProperties As IReadOnlyList(Of Property), principalProperties As IReadOnlyList(Of Property), isUnique As Nullable(Of Boolean), configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="static member AreCompatible : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * System.Reflection.MemberInfo * System.Reflection.MemberInfo * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Nullable&lt;bool&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.AreCompatible (principalEntityType, dependentEntityType, navigationToPrincipal, navigationToDependent, dependentProperties, principalProperties, isUnique, configurationSource)" />
      <MemberSignature Language="C#" Value="public static bool AreCompatible (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, System.Reflection.MemberInfo? navigationToPrincipal, System.Reflection.MemberInfo? navigationToDependent, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;? dependentProperties, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;? principalProperties, bool? isUnique, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="navigationToPrincipal" Type="System.Reflection.MemberInfo" />
        <Parameter Name="navigationToDependent" Type="System.Reflection.MemberInfo" />
        <Parameter Name="dependentProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="principalProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="isUnique" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="navigationToPrincipal">To be added.</param>
        <param name="navigationToDependent">To be added.</param>
        <param name="dependentProperties">To be added.</param>
        <param name="principalProperties">To be added.</param>
        <param name="isUnique">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder Attach (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder Attach(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Attach(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Attach (entityTypeBuilder As InternalEntityTypeBuilder) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member Attach : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.Attach : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.Attach entityTypeBuilder" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? Attach (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInvert">
      <MemberSignature Language="C#" Value="public virtual bool CanInvert (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; newForeignKeyProperties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInvert(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; newForeignKeyProperties, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanInvert(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInvert (newForeignKeyProperties As IReadOnlyList(Of Property), configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanInvert : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanInvert : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanInvert (newForeignKeyProperties, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual bool CanInvert (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;? newForeignKeyProperties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newForeignKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="newForeignKeyProperties">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetDeleteBehavior">
      <MemberSignature Language="C#" Value="public virtual bool CanSetDeleteBehavior (Microsoft.EntityFrameworkCore.DeleteBehavior? deleteBehavior, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetDeleteBehavior(valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.DeleteBehavior&gt; deleteBehavior, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetDeleteBehavior(System.Nullable{Microsoft.EntityFrameworkCore.DeleteBehavior},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetDeleteBehavior (deleteBehavior As Nullable(Of DeleteBehavior), configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetDeleteBehavior : Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetDeleteBehavior : Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetDeleteBehavior (deleteBehavior, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deleteBehavior" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt;" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="deleteBehavior">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetEntityTypes">
      <MemberSignature Language="C#" Value="public virtual bool CanSetEntityTypes (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetEntityTypes(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetEntityTypes(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetEntityTypes (principalEntityType As EntityType, dependentEntityType As EntityType, configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetEntityTypes : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetEntityTypes : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetEntityTypes (principalEntityType, dependentEntityType, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetEntityTypes">
      <MemberSignature Language="C#" Value="public virtual bool CanSetEntityTypes (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource, out bool shouldResetToPrincipal, out bool shouldResetToDependent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetEntityTypes(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource, [out] bool&amp; shouldResetToPrincipal, [out] bool&amp; shouldResetToDependent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetEntityTypes(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource},System.Boolean@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetEntityTypes (principalEntityType As EntityType, dependentEntityType As EntityType, configurationSource As Nullable(Of ConfigurationSource), ByRef shouldResetToPrincipal As Boolean, ByRef shouldResetToDependent As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetEntityTypes : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; * bool * bool -&gt; bool&#xA;override this.CanSetEntityTypes : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; * bool * bool -&gt; bool" Usage="internalForeignKeyBuilder.CanSetEntityTypes (principalEntityType, dependentEntityType, configurationSource, shouldResetToPrincipal, shouldResetToDependent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Index="2" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="shouldResetToPrincipal" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="shouldResetToDependent" Type="System.Boolean" RefType="out" Index="4" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <param name="shouldResetToPrincipal">To be added.</param>
        <param name="shouldResetToDependent">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetForeignKey">
      <MemberSignature Language="C#" Value="public virtual bool CanSetForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetForeignKey (properties As IReadOnlyList(Of Property), configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetForeignKey (properties, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual bool CanSetForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;? properties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetForeignKey">
      <MemberSignature Language="C#" Value="public virtual bool CanSetForeignKey (System.Collections.Generic.IReadOnlyList&lt;string&gt; propertyNames, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; propertyNames, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetForeignKey(System.Collections.Generic.IReadOnlyList{System.String},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetForeignKey (propertyNames As IReadOnlyList(Of String), configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetForeignKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetForeignKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetForeignKey (propertyNames, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual bool CanSetForeignKey (System.Collections.Generic.IReadOnlyList&lt;string&gt;? propertyNames, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyNames">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetIsOwnership">
      <MemberSignature Language="C#" Value="public virtual bool CanSetIsOwnership (bool? ownership, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetIsOwnership(valuetype System.Nullable`1&lt;bool&gt; ownership, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetIsOwnership(System.Nullable{System.Boolean},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetIsOwnership (ownership As Nullable(Of Boolean), configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetIsOwnership : Nullable&lt;bool&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetIsOwnership : Nullable&lt;bool&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetIsOwnership (ownership, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownership" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="ownership">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetIsRequired">
      <MemberSignature Language="C#" Value="public virtual bool CanSetIsRequired (bool? required, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetIsRequired(valuetype System.Nullable`1&lt;bool&gt; required, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetIsRequired(System.Nullable{System.Boolean},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetIsRequired (required As Nullable(Of Boolean), configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetIsRequired : Nullable&lt;bool&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetIsRequired : Nullable&lt;bool&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetIsRequired (required, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="required" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="required">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetIsRequiredDependent">
      <MemberSignature Language="C#" Value="public virtual bool CanSetIsRequiredDependent (bool? required, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetIsRequiredDependent(valuetype System.Nullable`1&lt;bool&gt; required, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetIsRequiredDependent(System.Nullable{System.Boolean},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetIsRequiredDependent (required As Nullable(Of Boolean), configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetIsRequiredDependent : Nullable&lt;bool&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetIsRequiredDependent : Nullable&lt;bool&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetIsRequiredDependent (required, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="required" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="required">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetIsUnique">
      <MemberSignature Language="C#" Value="public virtual bool CanSetIsUnique (bool? unique, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetIsUnique(valuetype System.Nullable`1&lt;bool&gt; unique, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetIsUnique(System.Nullable{System.Boolean},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetIsUnique (unique As Nullable(Of Boolean), configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetIsUnique : Nullable&lt;bool&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetIsUnique : Nullable&lt;bool&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetIsUnique (unique, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unique" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="unique">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetNavigation">
      <MemberSignature Language="C#" Value="public virtual bool CanSetNavigation (System.Reflection.MemberInfo property, bool pointsToPrincipal, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetNavigation(class System.Reflection.MemberInfo property, bool pointsToPrincipal, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetNavigation(System.Reflection.MemberInfo,System.Boolean,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetNavigation (property As MemberInfo, pointsToPrincipal As Boolean, configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetNavigation : System.Reflection.MemberInfo * bool * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetNavigation : System.Reflection.MemberInfo * bool * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetNavigation (property, pointsToPrincipal, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual bool CanSetNavigation (System.Reflection.MemberInfo? property, bool pointsToPrincipal, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Reflection.MemberInfo" />
        <Parameter Name="pointsToPrincipal" Type="System.Boolean" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="pointsToPrincipal">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetNavigation">
      <MemberSignature Language="C#" Value="public virtual bool CanSetNavigation (string name, bool pointsToPrincipal, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetNavigation(string name, bool pointsToPrincipal, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetNavigation(System.String,System.Boolean,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetNavigation (name As String, pointsToPrincipal As Boolean, configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetNavigation : string * bool * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetNavigation : string * bool * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetNavigation (name, pointsToPrincipal, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual bool CanSetNavigation (string? name, bool pointsToPrincipal, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pointsToPrincipal" Type="System.Boolean" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="pointsToPrincipal">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetNavigations">
      <MemberSignature Language="C#" Value="public virtual bool CanSetNavigations (System.Reflection.MemberInfo navigationToPrincipal, System.Reflection.MemberInfo navigationToDependent, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetNavigations(class System.Reflection.MemberInfo navigationToPrincipal, class System.Reflection.MemberInfo navigationToDependent, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetNavigations(System.Reflection.MemberInfo,System.Reflection.MemberInfo,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetNavigations (navigationToPrincipal As MemberInfo, navigationToDependent As MemberInfo, configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetNavigations : System.Reflection.MemberInfo * System.Reflection.MemberInfo * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetNavigations : System.Reflection.MemberInfo * System.Reflection.MemberInfo * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetNavigations (navigationToPrincipal, navigationToDependent, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual bool CanSetNavigations (System.Reflection.MemberInfo? navigationToPrincipal, System.Reflection.MemberInfo? navigationToDependent, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipal" Type="System.Reflection.MemberInfo" />
        <Parameter Name="navigationToDependent" Type="System.Reflection.MemberInfo" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipal">To be added.</param>
        <param name="navigationToDependent">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetNavigations">
      <MemberSignature Language="C#" Value="public virtual bool CanSetNavigations (string navigationToPrincipalName, string navigationToDependentName, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetNavigations(string navigationToPrincipalName, string navigationToDependentName, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetNavigations(System.String,System.String,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetNavigations (navigationToPrincipalName As String, navigationToDependentName As String, configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetNavigations : string * string * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetNavigations : string * string * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetNavigations (navigationToPrincipalName, navigationToDependentName, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual bool CanSetNavigations (string? navigationToPrincipalName, string? navigationToDependentName, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipalName" Type="System.String" />
        <Parameter Name="navigationToDependentName" Type="System.String" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipalName">To be added.</param>
        <param name="navigationToDependentName">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetPrincipalKey">
      <MemberSignature Language="C#" Value="public virtual bool CanSetPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetPrincipalKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetPrincipalKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetPrincipalKey (properties As IReadOnlyList(Of Property), configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetPrincipalKey (properties, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual bool CanSetPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;? properties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetPrincipalKey">
      <MemberSignature Language="C#" Value="public virtual bool CanSetPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;string&gt; propertyNames, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetPrincipalKey(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; propertyNames, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.CanSetPrincipalKey(System.Collections.Generic.IReadOnlyList{System.String},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanSetPrincipalKey (propertyNames As IReadOnlyList(Of String), configurationSource As Nullable(Of ConfigurationSource)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanSetPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool&#xA;override this.CanSetPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; bool" Usage="internalForeignKeyBuilder.CanSetPrincipalKey (propertyNames, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual bool CanSetPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;string&gt;? propertyNames, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyNames">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder DependentEntityType (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder DependentEntityType(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.DependentEntityType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DependentEntityType (dependentEntityType As EntityType, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member DependentEntityType : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.DependentEntityType : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.DependentEntityType (dependentEntityType, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? DependentEntityType (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="dependentEntityType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder DependentEntityType (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder dependentEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder DependentEntityType(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder dependentEntityTypeBuilder, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.DependentEntityType(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DependentEntityType (dependentEntityTypeBuilder As InternalEntityTypeBuilder, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member DependentEntityType : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.DependentEntityType : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.DependentEntityType (dependentEntityTypeBuilder, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="dependentEntityTypeBuilder">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder DependentEntityType (string dependentTypeName, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder DependentEntityType(string dependentTypeName, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.DependentEntityType(System.String,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DependentEntityType (dependentTypeName As String, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member DependentEntityType : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.DependentEntityType : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.DependentEntityType (dependentTypeName, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentTypeName" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="dependentTypeName">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder DependentEntityType (Type dependentType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder DependentEntityType(class System.Type dependentType, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.DependentEntityType(System.Type,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DependentEntityType (dependentType As Type, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member DependentEntityType : Type * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.DependentEntityType : Type * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.DependentEntityType (dependentType, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentType" Type="System.Type" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="dependentType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindCompatibleClrMember">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo? FindCompatibleClrMember (string navigationName, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType sourceType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType targetType, bool shouldThrow = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo FindCompatibleClrMember(string navigationName, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType sourceType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType targetType, bool shouldThrow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.FindCompatibleClrMember(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindCompatibleClrMember (navigationName As String, sourceType As EntityType, targetType As EntityType, Optional shouldThrow As Boolean = false) As MemberInfo" />
      <MemberSignature Language="F#" Value="static member FindCompatibleClrMember : string * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * bool -&gt; System.Reflection.MemberInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.FindCompatibleClrMember (navigationName, sourceType, targetType, shouldThrow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationName" Type="System.String" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sourceType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="targetType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="shouldThrow" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigationName">To be added.</param>
        <param name="sourceType">To be added.</param>
        <param name="targetType">To be added.</param>
        <param name="shouldThrow">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindCurrentForeignKeyBuilder">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder FindCurrentForeignKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.MemberIdentity? navigationToPrincipal, Microsoft.EntityFrameworkCore.Metadata.MemberIdentity? navigationToDependent, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; dependentProperties, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; principalProperties);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder FindCurrentForeignKeyBuilder(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt; navigationToPrincipal, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt; navigationToDependent, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; dependentProperties, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; principalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.FindCurrentForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.MemberIdentity},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.MemberIdentity},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindCurrentForeignKeyBuilder (principalEntityType As EntityType, dependentEntityType As EntityType, navigationToPrincipal As Nullable(Of MemberIdentity), navigationToDependent As Nullable(Of MemberIdentity), dependentProperties As IReadOnlyList(Of Property), principalProperties As IReadOnlyList(Of Property)) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="static member FindCurrentForeignKeyBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.FindCurrentForeignKeyBuilder (principalEntityType, dependentEntityType, navigationToPrincipal, navigationToDependent, dependentProperties, principalProperties)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? FindCurrentForeignKeyBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.MemberIdentity? navigationToPrincipal, Microsoft.EntityFrameworkCore.Metadata.MemberIdentity? navigationToDependent, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;? dependentProperties, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;? principalProperties);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="navigationToPrincipal" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt;" />
        <Parameter Name="navigationToDependent" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt;" />
        <Parameter Name="dependentProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="principalProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="navigationToPrincipal">To be added.</param>
        <param name="navigationToDependent">To be added.</param>
        <param name="dependentProperties">To be added.</param>
        <param name="principalProperties">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEntityTypes">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasEntityTypes (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasEntityTypes(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasEntityTypes(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasEntityTypes (principalEntityType As EntityType, dependentEntityType As EntityType, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasEntityTypes : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasEntityTypes : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasEntityTypes (principalEntityType, dependentEntityType, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasEntityTypes (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasForeignKey (properties As IReadOnlyList(Of Property), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasForeignKey (properties, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;? properties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; properties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;class System.Reflection.MemberInfo&gt; properties, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{System.Reflection.MemberInfo},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasForeignKey (properties As IReadOnlyList(Of MemberInfo), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasForeignKey (properties, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;? properties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;string&gt; propertyNames, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; propertyNames, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasForeignKey (propertyNames As IReadOnlyList(Of String), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasForeignKey (propertyNames, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;string&gt;? propertyNames, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="propertyNames">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasForeignKey (properties As IReadOnlyList(Of Property), dependentEntityType As EntityType, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasForeignKey (properties, dependentEntityType, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;? properties, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; properties, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;class System.Reflection.MemberInfo&gt; properties, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{System.Reflection.MemberInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasForeignKey (properties As IReadOnlyList(Of MemberInfo), dependentEntityType As EntityType, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasForeignKey (properties, dependentEntityType, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;? properties, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasForeignKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;string&gt; propertyNames, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; propertyNames, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasForeignKey (propertyNames As IReadOnlyList(Of String), dependentEntityType As EntityType, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasForeignKey (propertyNames, dependentEntityType, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;string&gt;? propertyNames, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="propertyNames">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNavigation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigation (System.Reflection.MemberInfo property, bool pointsToPrincipal, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigation(class System.Reflection.MemberInfo property, bool pointsToPrincipal, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasNavigation(System.Reflection.MemberInfo,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNavigation (property As MemberInfo, pointsToPrincipal As Boolean, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasNavigation : System.Reflection.MemberInfo * bool * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasNavigation : System.Reflection.MemberInfo * bool * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasNavigation (property, pointsToPrincipal, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasNavigation (System.Reflection.MemberInfo? property, bool pointsToPrincipal, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Reflection.MemberInfo" />
        <Parameter Name="pointsToPrincipal" Type="System.Boolean" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="pointsToPrincipal">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNavigation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigation (string name, bool pointsToPrincipal, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigation(string name, bool pointsToPrincipal, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasNavigation(System.String,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNavigation (name As String, pointsToPrincipal As Boolean, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasNavigation : string * bool * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasNavigation : string * bool * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasNavigation (name, pointsToPrincipal, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasNavigation (string? name, bool pointsToPrincipal, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pointsToPrincipal" Type="System.Boolean" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="pointsToPrincipal">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNavigations">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigations (Microsoft.EntityFrameworkCore.Metadata.MemberIdentity? navigationToPrincipal, Microsoft.EntityFrameworkCore.Metadata.MemberIdentity? navigationToDependent, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigations(valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt; navigationToPrincipal, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt; navigationToDependent, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasNavigations(System.Nullable{Microsoft.EntityFrameworkCore.Metadata.MemberIdentity},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.MemberIdentity},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNavigations (navigationToPrincipal As Nullable(Of MemberIdentity), navigationToDependent As Nullable(Of MemberIdentity), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasNavigations : Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasNavigations : Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt; * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasNavigations (navigationToPrincipal, navigationToDependent, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasNavigations (Microsoft.EntityFrameworkCore.Metadata.MemberIdentity? navigationToPrincipal, Microsoft.EntityFrameworkCore.Metadata.MemberIdentity? navigationToDependent, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipal" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt;" />
        <Parameter Name="navigationToDependent" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.MemberIdentity&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipal">To be added.</param>
        <param name="navigationToDependent">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNavigations">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigations (System.Reflection.MemberInfo navigationToPrincipal, System.Reflection.MemberInfo navigationToDependent, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigations(class System.Reflection.MemberInfo navigationToPrincipal, class System.Reflection.MemberInfo navigationToDependent, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasNavigations(System.Reflection.MemberInfo,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNavigations (navigationToPrincipal As MemberInfo, navigationToDependent As MemberInfo, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasNavigations : System.Reflection.MemberInfo * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasNavigations : System.Reflection.MemberInfo * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasNavigations (navigationToPrincipal, navigationToDependent, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasNavigations (System.Reflection.MemberInfo? navigationToPrincipal, System.Reflection.MemberInfo? navigationToDependent, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipal" Type="System.Reflection.MemberInfo" />
        <Parameter Name="navigationToDependent" Type="System.Reflection.MemberInfo" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipal">To be added.</param>
        <param name="navigationToDependent">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNavigations">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigations (string navigationToPrincipalName, string navigationToDependentName, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigations(string navigationToPrincipalName, string navigationToDependentName, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasNavigations(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNavigations (navigationToPrincipalName As String, navigationToDependentName As String, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasNavigations : string * string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasNavigations : string * string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasNavigations (navigationToPrincipalName, navigationToDependentName, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasNavigations (string? navigationToPrincipalName, string? navigationToDependentName, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipalName" Type="System.String" />
        <Parameter Name="navigationToDependentName" Type="System.String" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipalName">To be added.</param>
        <param name="navigationToDependentName">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNavigations">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigations (System.Reflection.MemberInfo navigationToPrincipal, System.Reflection.MemberInfo navigationToDependent, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigations(class System.Reflection.MemberInfo navigationToPrincipal, class System.Reflection.MemberInfo navigationToDependent, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasNavigations(System.Reflection.MemberInfo,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNavigations (navigationToPrincipal As MemberInfo, navigationToDependent As MemberInfo, principalEntityType As EntityType, dependentEntityType As EntityType, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasNavigations : System.Reflection.MemberInfo * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasNavigations : System.Reflection.MemberInfo * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasNavigations (navigationToPrincipal, navigationToDependent, principalEntityType, dependentEntityType, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasNavigations (System.Reflection.MemberInfo? navigationToPrincipal, System.Reflection.MemberInfo? navigationToDependent, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipal" Type="System.Reflection.MemberInfo" />
        <Parameter Name="navigationToDependent" Type="System.Reflection.MemberInfo" />
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipal">To be added.</param>
        <param name="navigationToDependent">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNavigations">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigations (string navigationToPrincipalName, string navigationToDependentName, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasNavigations(string navigationToPrincipalName, string navigationToDependentName, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasNavigations(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNavigations (navigationToPrincipalName As String, navigationToDependentName As String, principalEntityType As EntityType, dependentEntityType As EntityType, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasNavigations : string * string * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasNavigations : string * string * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasNavigations (navigationToPrincipalName, navigationToDependentName, principalEntityType, dependentEntityType, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasNavigations (string? navigationToPrincipalName, string? navigationToDependentName, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType dependentEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipalName" Type="System.String" />
        <Parameter Name="navigationToDependentName" Type="System.String" />
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipalName">To be added.</param>
        <param name="navigationToDependentName">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrincipalKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasPrincipalKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasPrincipalKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasPrincipalKey (properties As IReadOnlyList(Of Property), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasPrincipalKey (properties, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;? properties, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrincipalKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; members, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasPrincipalKey(class System.Collections.Generic.IReadOnlyList`1&lt;class System.Reflection.MemberInfo&gt; members, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasPrincipalKey(System.Collections.Generic.IReadOnlyList{System.Reflection.MemberInfo},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasPrincipalKey (members As IReadOnlyList(Of MemberInfo), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasPrincipalKey (members, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;? members, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="members" Type="System.Collections.Generic.IReadOnlyList&lt;System.Reflection.MemberInfo&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="members">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrincipalKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;string&gt; propertyNames, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder HasPrincipalKey(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; propertyNames, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.HasPrincipalKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasPrincipalKey (propertyNames As IReadOnlyList(Of String), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.HasPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.HasPrincipalKey (propertyNames, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;string&gt;? propertyNames, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="propertyNames">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOwnership">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder IsOwnership (bool? ownership, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder IsOwnership(valuetype System.Nullable`1&lt;bool&gt; ownership, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.IsOwnership(System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsOwnership (ownership As Nullable(Of Boolean), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member IsOwnership : Nullable&lt;bool&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.IsOwnership : Nullable&lt;bool&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.IsOwnership (ownership, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? IsOwnership (bool? ownership, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownership" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="ownership">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder IsRequired (bool? required, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder IsRequired(valuetype System.Nullable`1&lt;bool&gt; required, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.IsRequired(System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsRequired (required As Nullable(Of Boolean), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member IsRequired : Nullable&lt;bool&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.IsRequired : Nullable&lt;bool&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.IsRequired (required, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? IsRequired (bool? required, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="required" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="required">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredDependent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder IsRequiredDependent (bool? required, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder IsRequiredDependent(valuetype System.Nullable`1&lt;bool&gt; required, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.IsRequiredDependent(System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsRequiredDependent (required As Nullable(Of Boolean), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member IsRequiredDependent : Nullable&lt;bool&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.IsRequiredDependent : Nullable&lt;bool&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.IsRequiredDependent (required, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? IsRequiredDependent (bool? required, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="required" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="required">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnique">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder IsUnique (bool? unique, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder IsUnique(valuetype System.Nullable`1&lt;bool&gt; unique, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.IsUnique(System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsUnique (unique As Nullable(Of Boolean), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member IsUnique : Nullable&lt;bool&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.IsUnique : Nullable&lt;bool&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.IsUnique (unique, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? IsUnique (bool? unique, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unique" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="unique">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDeclaringTypeShared">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? MakeDeclaringTypeShared (Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder MakeDeclaringTypeShared(valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.MakeDeclaringTypeShared(System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MakeDeclaringTypeShared (configurationSource As Nullable(Of ConfigurationSource)) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member MakeDeclaringTypeShared : Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.MakeDeclaringTypeShared : Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.MakeDeclaringTypeShared configurationSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationSource" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanInvert">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanInvert (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; newForeignKeyProperties, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanInvert(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; newForeignKeyProperties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanInvert(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanInvert (newForeignKeyProperties As IReadOnlyList(Of IConventionProperty), fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanInvert" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanInvert : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanInvert : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanInvert (newForeignKeyProperties, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanInvert (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;? newForeignKeyProperties, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanInvert (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty?&gt;? newForeignKeyProperties, bool fromDataAnnotation);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanInvert(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newForeignKeyProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="newForeignKeyProperties">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetEntityTypes">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetEntityTypes (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType dependentEntityType, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetEntityTypes(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType dependentEntityType, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetEntityTypes(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetEntityTypes (principalEntityType As IConventionEntityType, dependentEntityType As IConventionEntityType, fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetEntityTypes" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetEntityTypes : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetEntityTypes : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetEntityTypes (principalEntityType, dependentEntityType, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetEntityTypes (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType? principalEntityType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType? dependentEntityType, bool fromDataAnnotation);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetEntityTypes(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetForeignKey (properties As IReadOnlyList(Of IConventionProperty), fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetForeignKey" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey (properties, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty?&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetForeignKey (System.Collections.Generic.IReadOnlyList&lt;string&gt; properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetForeignKey(System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetForeignKey (properties As IReadOnlyList(Of String), fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetForeignKey" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey (properties, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetForeignKey (System.Collections.Generic.IReadOnlyList&lt;string&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetForeignKey (System.Collections.Generic.IReadOnlyList&lt;string?&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetForeignKey(System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsOwnership">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetIsOwnership (bool? ownership, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsOwnership(valuetype System.Nullable`1&lt;bool&gt; ownership, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetIsOwnership(System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetIsOwnership (ownership As Nullable(Of Boolean), fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetIsOwnership" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsOwnership : Nullable&lt;bool&gt; * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsOwnership : Nullable&lt;bool&gt; * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsOwnership (ownership, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsOwnership(System.Nullable{System.Boolean},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownership" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownership">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequired">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetIsRequired (bool? required, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequired(valuetype System.Nullable`1&lt;bool&gt; required, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetIsRequired(System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetIsRequired (required As Nullable(Of Boolean), fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetIsRequired" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequired : Nullable&lt;bool&gt; * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequired : Nullable&lt;bool&gt; * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequired (required, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequired(System.Nullable{System.Boolean},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="required" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="required">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequiredDependent">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetIsRequiredDependent (bool? required, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequiredDependent(valuetype System.Nullable`1&lt;bool&gt; required, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetIsRequiredDependent(System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetIsRequiredDependent (required As Nullable(Of Boolean), fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetIsRequiredDependent" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequiredDependent : Nullable&lt;bool&gt; * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequiredDependent : Nullable&lt;bool&gt; * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequiredDependent (required, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsRequiredDependent(System.Nullable{System.Boolean},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="required" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="required">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsUnique">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetIsUnique (bool? unique, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsUnique(valuetype System.Nullable`1&lt;bool&gt; unique, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetIsUnique(System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetIsUnique (unique As Nullable(Of Boolean), fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetIsUnique" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsUnique : Nullable&lt;bool&gt; * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsUnique : Nullable&lt;bool&gt; * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsUnique (unique, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetIsUnique(System.Nullable{System.Boolean},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unique" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="unique">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetNavigation (System.Reflection.MemberInfo property, bool pointsToPrincipal, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation(class System.Reflection.MemberInfo property, bool pointsToPrincipal, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetNavigation(System.Reflection.MemberInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetNavigation (property As MemberInfo, pointsToPrincipal As Boolean, fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetNavigation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation : System.Reflection.MemberInfo * bool * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation : System.Reflection.MemberInfo * bool * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation (property, pointsToPrincipal, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetNavigation (System.Reflection.MemberInfo? property, bool pointsToPrincipal, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation(System.Reflection.MemberInfo,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Reflection.MemberInfo" />
        <Parameter Name="pointsToPrincipal" Type="System.Boolean" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="pointsToPrincipal">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetNavigation (string name, bool pointsToPrincipal, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation(string name, bool pointsToPrincipal, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetNavigation(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetNavigation (name As String, pointsToPrincipal As Boolean, fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetNavigation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation : string * bool * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation : string * bool * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation (name, pointsToPrincipal, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetNavigation (string? name, bool pointsToPrincipal, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigation(System.String,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pointsToPrincipal" Type="System.Boolean" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="pointsToPrincipal">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetNavigations (System.Reflection.MemberInfo navigationToPrincipal, System.Reflection.MemberInfo navigationToDependent, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations(class System.Reflection.MemberInfo navigationToPrincipal, class System.Reflection.MemberInfo navigationToDependent, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetNavigations(System.Reflection.MemberInfo,System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetNavigations (navigationToPrincipal As MemberInfo, navigationToDependent As MemberInfo, fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetNavigations" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations : System.Reflection.MemberInfo * System.Reflection.MemberInfo * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations : System.Reflection.MemberInfo * System.Reflection.MemberInfo * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations (navigationToPrincipal, navigationToDependent, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetNavigations (System.Reflection.MemberInfo? navigationToPrincipal, System.Reflection.MemberInfo? navigationToDependent, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations(System.Reflection.MemberInfo,System.Reflection.MemberInfo,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipal" Type="System.Reflection.MemberInfo" />
        <Parameter Name="navigationToDependent" Type="System.Reflection.MemberInfo" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipal">To be added.</param>
        <param name="navigationToDependent">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetNavigations (string navigationToPrincipalName, string navigationToDependentName, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations(string navigationToPrincipalName, string navigationToDependentName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetNavigations(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetNavigations (navigationToPrincipalName As String, navigationToDependentName As String, fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetNavigations" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations : string * string * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations : string * string * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations (navigationToPrincipalName, navigationToDependentName, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetNavigations (string? navigationToPrincipalName, string? navigationToDependentName, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetNavigations(System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipalName" Type="System.String" />
        <Parameter Name="navigationToDependentName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipalName">To be added.</param>
        <param name="navigationToDependentName">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetOnDelete">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetOnDelete (Microsoft.EntityFrameworkCore.DeleteBehavior? deleteBehavior, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetOnDelete(valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.DeleteBehavior&gt; deleteBehavior, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetOnDelete(System.Nullable{Microsoft.EntityFrameworkCore.DeleteBehavior},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetOnDelete (deleteBehavior As Nullable(Of DeleteBehavior), fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetOnDelete" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetOnDelete : Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt; * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetOnDelete : Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt; * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetOnDelete (deleteBehavior, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetOnDelete(System.Nullable{Microsoft.EntityFrameworkCore.DeleteBehavior},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deleteBehavior" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deleteBehavior">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetPrincipalKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetPrincipalKey (properties As IReadOnlyList(Of IConventionProperty), fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetPrincipalKey" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey (properties, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty?&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey">
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;string&gt; properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#CanSetPrincipalKey(System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function CanSetPrincipalKey (properties As IReadOnlyList(Of String), fromDataAnnotation As Boolean) As Boolean Implements IConventionForeignKeyBuilder.CanSetPrincipalKey" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; bool&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; bool" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey (properties, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;string&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="bool IConventionForeignKeyBuilder.CanSetPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;string?&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.CanSetPrincipalKey(System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasAnnotation">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasAnnotation (string? name, object? value, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasAnnotation(string name, object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasAnnotation(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasAnnotation (name As String, value As Object, fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasAnnotation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasAnnotation : string * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasAnnotation : string * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasAnnotation (name, value, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasAnnotation(System.String,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasEntityTypes">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.HasEntityTypes (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType dependentEntityType, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasEntityTypes(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType dependentEntityType, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasEntityTypes(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasEntityTypes (principalEntityType As IConventionEntityType, dependentEntityType As IConventionEntityType, fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasEntityTypes" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasEntityTypes : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasEntityTypes : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasEntityTypes (principalEntityType, dependentEntityType, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasEntityTypes (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType dependentEntityType, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasEntityTypes (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType? principalEntityType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType? dependentEntityType, bool fromDataAnnotation);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasEntityTypes(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasForeignKey (properties As IReadOnlyList(Of IConventionProperty), fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasForeignKey" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey (properties, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty?&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;string&gt; properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasForeignKey(System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasForeignKey (properties As IReadOnlyList(Of String), fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasForeignKey" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey (properties, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;string&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasForeignKey (System.Collections.Generic.IReadOnlyList&lt;string?&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.HasNavigation (System.Reflection.MemberInfo property, bool pointsToPrincipal, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation(class System.Reflection.MemberInfo property, bool pointsToPrincipal, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasNavigation(System.Reflection.MemberInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasNavigation (property As MemberInfo, pointsToPrincipal As Boolean, fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasNavigation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation : System.Reflection.MemberInfo * bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation : System.Reflection.MemberInfo * bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation (property, pointsToPrincipal, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasNavigation (System.Reflection.MemberInfo? property, bool pointsToPrincipal, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation(System.Reflection.MemberInfo,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Reflection.MemberInfo" />
        <Parameter Name="pointsToPrincipal" Type="System.Boolean" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="pointsToPrincipal">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.HasNavigation (string name, bool pointsToPrincipal, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation(string name, bool pointsToPrincipal, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasNavigation(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasNavigation (name As String, pointsToPrincipal As Boolean, fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasNavigation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation : string * bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation : string * bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation (name, pointsToPrincipal, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasNavigation (string? name, bool pointsToPrincipal, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigation(System.String,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pointsToPrincipal" Type="System.Boolean" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="pointsToPrincipal">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.HasNavigations (System.Reflection.MemberInfo navigationToPrincipal, System.Reflection.MemberInfo navigationToDependent, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations(class System.Reflection.MemberInfo navigationToPrincipal, class System.Reflection.MemberInfo navigationToDependent, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasNavigations(System.Reflection.MemberInfo,System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasNavigations (navigationToPrincipal As MemberInfo, navigationToDependent As MemberInfo, fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasNavigations" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations : System.Reflection.MemberInfo * System.Reflection.MemberInfo * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations : System.Reflection.MemberInfo * System.Reflection.MemberInfo * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations (navigationToPrincipal, navigationToDependent, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasNavigations (System.Reflection.MemberInfo? navigationToPrincipal, System.Reflection.MemberInfo? navigationToDependent, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations(System.Reflection.MemberInfo,System.Reflection.MemberInfo,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipal" Type="System.Reflection.MemberInfo" />
        <Parameter Name="navigationToDependent" Type="System.Reflection.MemberInfo" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipal">To be added.</param>
        <param name="navigationToDependent">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.HasNavigations (string navigationToPrincipalName, string navigationToDependentName, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations(string navigationToPrincipalName, string navigationToDependentName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasNavigations(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasNavigations (navigationToPrincipalName As String, navigationToDependentName As String, fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasNavigations" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations : string * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations : string * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations (navigationToPrincipalName, navigationToDependentName, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasNavigations (string? navigationToPrincipalName, string? navigationToDependentName, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNavigations(System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationToPrincipalName" Type="System.String" />
        <Parameter Name="navigationToDependentName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigationToPrincipalName">To be added.</param>
        <param name="navigationToDependentName">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNoAnnotation">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasNoAnnotation (string? name, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNoAnnotation(string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasNoAnnotation(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasNoAnnotation (name As String, fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasNoAnnotation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNoAnnotation : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNoAnnotation : string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNoAnnotation (name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNoAnnotation(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNonNullAnnotation">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasNonNullAnnotation (string? name, object? value, bool fromDataAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNonNullAnnotation(string name, object value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasNonNullAnnotation(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasNonNullAnnotation (name As String, value As Object, fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasNonNullAnnotation" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNonNullAnnotation : string * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNonNullAnnotation : string * obj * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNonNullAnnotation (name, value, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasNonNullAnnotation(System.String,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasPrincipalKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasPrincipalKey (properties As IReadOnlyList(Of IConventionProperty), fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasPrincipalKey" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey (properties, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty?&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;string&gt; properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#HasPrincipalKey(System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function HasPrincipalKey (properties As IReadOnlyList(Of String), fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.HasPrincipalKey" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey : System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey (properties, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;string&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.HasPrincipalKey (System.Collections.Generic.IReadOnlyList&lt;string?&gt;? properties, bool fromDataAnnotation);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.HasPrincipalKey(System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsOwnership">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.IsOwnership (bool? ownership, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsOwnership(valuetype System.Nullable`1&lt;bool&gt; ownership, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#IsOwnership(System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsOwnership (ownership As Nullable(Of Boolean), fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.IsOwnership" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsOwnership : Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsOwnership : Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsOwnership (ownership, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.IsOwnership (bool? ownership, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsOwnership(System.Nullable{System.Boolean},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownership" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownership">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequired">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.IsRequired (bool? required, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequired(valuetype System.Nullable`1&lt;bool&gt; required, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#IsRequired(System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsRequired (required As Nullable(Of Boolean), fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.IsRequired" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequired : Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequired : Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequired (required, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.IsRequired (bool? required, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequired(System.Nullable{System.Boolean},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="required" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="required">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequiredDependent">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.IsRequiredDependent (bool? required, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequiredDependent(valuetype System.Nullable`1&lt;bool&gt; required, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#IsRequiredDependent(System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsRequiredDependent (required As Nullable(Of Boolean), fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.IsRequiredDependent" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequiredDependent : Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequiredDependent : Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequiredDependent (required, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.IsRequiredDependent (bool? required, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsRequiredDependent(System.Nullable{System.Boolean},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="required" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="required">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsUnique">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.IsUnique (bool? unique, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsUnique(valuetype System.Nullable`1&lt;bool&gt; unique, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#IsUnique(System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsUnique (unique As Nullable(Of Boolean), fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.IsUnique" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsUnique : Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsUnique : Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsUnique (unique, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.IsUnique (bool? unique, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.IsUnique(System.Nullable{System.Boolean},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unique" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="unique">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.Metadata">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#Metadata" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Metadata As IConventionForeignKey Implements IConventionForeignKeyBuilder.Metadata" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.Metadata : Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.Metadata" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.Metadata</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.OnDelete">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder IConventionForeignKeyBuilder.OnDelete (Microsoft.EntityFrameworkCore.DeleteBehavior? deleteBehavior, bool fromDataAnnotation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.OnDelete(valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.DeleteBehavior&gt; deleteBehavior, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.Microsoft#EntityFrameworkCore#Metadata#Builders#IConventionForeignKeyBuilder#OnDelete(System.Nullable{Microsoft.EntityFrameworkCore.DeleteBehavior},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OnDelete (deleteBehavior As Nullable(Of DeleteBehavior), fromDataAnnotation As Boolean) As IConventionForeignKeyBuilder Implements IConventionForeignKeyBuilder.OnDelete" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.OnDelete : Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.OnDelete : Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="internalForeignKeyBuilder.Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.OnDelete (deleteBehavior, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? IConventionForeignKeyBuilder.OnDelete (Microsoft.EntityFrameworkCore.DeleteBehavior? deleteBehavior, bool fromDataAnnotation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder.OnDelete(System.Nullable{Microsoft.EntityFrameworkCore.DeleteBehavior},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deleteBehavior" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deleteBehavior">To be added.</param>
        <param name="fromDataAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDelete">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder OnDelete (Microsoft.EntityFrameworkCore.DeleteBehavior? deleteBehavior, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder OnDelete(valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.DeleteBehavior&gt; deleteBehavior, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.OnDelete(System.Nullable{Microsoft.EntityFrameworkCore.DeleteBehavior},Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnDelete (deleteBehavior As Nullable(Of DeleteBehavior), configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnDelete : Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.OnDelete : Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt; * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.OnDelete (deleteBehavior, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? OnDelete (Microsoft.EntityFrameworkCore.DeleteBehavior? deleteBehavior, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deleteBehavior" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.DeleteBehavior&gt;" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="deleteBehavior">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder PrincipalEntityType (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder PrincipalEntityType(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.PrincipalEntityType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrincipalEntityType (principalEntityType As EntityType, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member PrincipalEntityType : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.PrincipalEntityType : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.PrincipalEntityType (principalEntityType, configurationSource)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? PrincipalEntityType (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder PrincipalEntityType (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder principalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder PrincipalEntityType(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder principalEntityTypeBuilder, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.PrincipalEntityType(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrincipalEntityType (principalEntityTypeBuilder As InternalEntityTypeBuilder, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member PrincipalEntityType : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.PrincipalEntityType : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.PrincipalEntityType (principalEntityTypeBuilder, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="principalEntityTypeBuilder">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder PrincipalEntityType (string principalTypeName, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder PrincipalEntityType(string principalTypeName, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.PrincipalEntityType(System.String,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrincipalEntityType (principalTypeName As String, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member PrincipalEntityType : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.PrincipalEntityType : string * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.PrincipalEntityType (principalTypeName, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalTypeName" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="principalTypeName">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalEntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder PrincipalEntityType (Type principalType, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder PrincipalEntityType(class System.Type principalType, valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.PrincipalEntityType(System.Type,Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrincipalEntityType (principalType As Type, configurationSource As ConfigurationSource) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member PrincipalEntityType : Type * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.PrincipalEntityType : Type * Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.PrincipalEntityType (principalType, configurationSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalType" Type="System.Type" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="principalType">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReuniquifyImplicitProperties">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder ReuniquifyImplicitProperties (bool force);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder ReuniquifyImplicitProperties(bool force) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.ReuniquifyImplicitProperties(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReuniquifyImplicitProperties (force As Boolean) As InternalForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member ReuniquifyImplicitProperties : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder&#xA;override this.ReuniquifyImplicitProperties : bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder" Usage="internalForeignKeyBuilder.ReuniquifyImplicitProperties force" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder? ReuniquifyImplicitProperties (bool force);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="force">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowForConflictingNavigation">
      <MemberSignature Language="C#" Value="public static void ThrowForConflictingNavigation (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, string newInverseName, bool newToPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowForConflictingNavigation(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, string newInverseName, bool newToPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.ThrowForConflictingNavigation(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowForConflictingNavigation (foreignKey As IForeignKey, newInverseName As String, newToPrincipal As Boolean)" />
      <MemberSignature Language="F#" Value="static member ThrowForConflictingNavigation : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.ThrowForConflictingNavigation (foreignKey, newInverseName, newToPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="newInverseName" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="newToPrincipal" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="newInverseName">To be added.</param>
        <param name="newToPrincipal">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowForConflictingNavigation">
      <MemberSignature Language="C#" Value="public static void ThrowForConflictingNavigation (Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey, string newInverseName, bool newToPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowForConflictingNavigation(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey, string newInverseName, bool newToPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.ThrowForConflictingNavigation(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowForConflictingNavigation (foreignKey As IReadOnlyForeignKey, newInverseName As String, newToPrincipal As Boolean)" />
      <MemberSignature Language="F#" Value="static member ThrowForConflictingNavigation : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.ThrowForConflictingNavigation (foreignKey, newInverseName, newToPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="newInverseName" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="newToPrincipal" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="newInverseName">To be added.</param>
        <param name="newToPrincipal">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowForConflictingNavigation">
      <MemberSignature Language="C#" Value="public static void ThrowForConflictingNavigation (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, Microsoft.EntityFrameworkCore.Metadata.IEntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.IEntityType dependentEntityType, string navigationToDependent, string navigationToPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowForConflictingNavigation(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Metadata.IEntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.IEntityType dependentEntityType, string navigationToDependent, string navigationToPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.ThrowForConflictingNavigation(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowForConflictingNavigation (foreignKey As IForeignKey, principalEntityType As IEntityType, dependentEntityType As IEntityType, navigationToDependent As String, navigationToPrincipal As String)" />
      <MemberSignature Language="F#" Value="static member ThrowForConflictingNavigation : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.IEntityType * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.ThrowForConflictingNavigation (foreignKey, principalEntityType, dependentEntityType, navigationToDependent, navigationToPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="navigationToDependent" Type="System.String" Index="3" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="navigationToPrincipal" Type="System.String" Index="4" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="navigationToDependent">To be added.</param>
        <param name="navigationToPrincipal">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowForConflictingNavigation">
      <MemberSignature Language="C#" Value="public static void ThrowForConflictingNavigation (Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType principalEntityType, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType dependentEntityType, string? navigationToDependent, string? navigationToPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowForConflictingNavigation(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType principalEntityType, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType dependentEntityType, string navigationToDependent, string navigationToPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.ThrowForConflictingNavigation(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey,Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType,Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowForConflictingNavigation (foreignKey As IReadOnlyForeignKey, principalEntityType As IReadOnlyEntityType, dependentEntityType As IReadOnlyEntityType, navigationToDependent As String, navigationToPrincipal As String)" />
      <MemberSignature Language="F#" Value="static member ThrowForConflictingNavigation : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType * string * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalForeignKeyBuilder.ThrowForConflictingNavigation (foreignKey, principalEntityType, dependentEntityType, navigationToDependent, navigationToPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="dependentEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationToDependent" Type="System.String" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="navigationToPrincipal" Type="System.String" Index="4" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="navigationToDependent">To be added.</param>
        <param name="navigationToPrincipal">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
