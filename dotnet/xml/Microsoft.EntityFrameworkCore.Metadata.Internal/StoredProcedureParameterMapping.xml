<Type Name="StoredProcedureParameterMapping" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping">
  <TypeSignature Language="C#" Value="public class StoredProcedureParameterMapping : Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnMappingBase, Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StoredProcedureParameterMapping extends Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnMappingBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase, class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class StoredProcedureParameterMapping&#xA;Inherits ColumnMappingBase&#xA;Implements IStoredProcedureParameterMapping" />
  <TypeSignature Language="F#" Value="type StoredProcedureParameterMapping = class&#xA;    inherit ColumnMappingBase&#xA;    interface IStoredProcedureParameterMapping&#xA;    interface IColumnMappingBase&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnMappingBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StoredProcedureParameterMapping (Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter parameter, Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedureParameter storeParameter, Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping storedProcedureMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter parameter, class Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedureParameter storeParameter, class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping storedProcedureMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping.#ctor(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter,Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedureParameter,Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As IProperty, parameter As IStoredProcedureParameter, storeParameter As StoreStoredProcedureParameter, storedProcedureMapping As StoredProcedureMapping)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter * Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedureParameter * Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping (property, parameter, storeParameter, storedProcedureMapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="parameter" Type="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter" />
        <Parameter Name="storeParameter" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedureParameter" />
        <Parameter Name="storedProcedureMapping" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="parameter">To be added.</param>
        <param name="storeParameter">To be added.</param>
        <param name="storedProcedureMapping">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping.DebugView" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DebugView As DebugView" />
      <MemberSignature Language="F#" Value="member this.DebugView : Microsoft.EntityFrameworkCore.Infrastructure.DebugView" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping.DebugView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.DebugView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeMapping">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetTypeMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetTypeMapping() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping.GetTypeMapping" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTypeMapping () As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.GetTypeMapping : unit -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="storedProcedureParameterMapping.GetTypeMapping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping.StoreParameter">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping.StoreParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping.StoreParameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedureParameterMapping#StoreParameter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property StoreParameter As IStoreStoredProcedureParameter Implements IStoredProcedureParameterMapping.StoreParameter" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping.StoreParameter : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping.StoreParameter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping.StoreParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter Parameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter Parameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping.Parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parameter As IStoredProcedureParameter" />
      <MemberSignature Language="F#" Value="member this.Parameter : Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping.Parameter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping.Parameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoredProcedureMapping">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping StoredProcedureMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping StoredProcedureMapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping.StoredProcedureMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StoredProcedureMapping As IStoredProcedureMapping" />
      <MemberSignature Language="F#" Value="member this.StoredProcedureMapping : Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping.StoredProcedureMapping" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping.StoredProcedureMapping</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureParameterMapping.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="storedProcedureParameterMapping.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
