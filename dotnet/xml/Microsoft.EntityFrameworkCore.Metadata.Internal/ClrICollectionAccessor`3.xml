<Type Name="ClrICollectionAccessor&lt;TEntity,TCollection,TElement&gt;" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;TEntity,TCollection,TElement&gt;">
  <TypeSignature Language="C#" Value="public class ClrICollectionAccessor&lt;TEntity,TCollection,TElement&gt; : Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor where TEntity : class where TCollection : class, ICollection&lt;TElement&gt;" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClrICollectionAccessor`3&lt;class TEntity, class (class System.Collections.Generic.ICollection`1&lt;!TElement&gt;) TCollection, TElement&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3" />
  <TypeSignature Language="VB.NET" Value="Public Class ClrICollectionAccessor(Of TEntity, TCollection, TElement)&#xA;Implements IClrCollectionAccessor" />
  <TypeSignature Language="F#" Value="type ClrICollectionAccessor&lt;'Entity, 'Collection, 'Element (requires 'Entity : null and 'Collection : null and 'Collection :&gt; ICollection&lt;'Element&gt;)&gt; = class&#xA;    interface IClrCollectionAccessor" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="C#" Value="public class ClrICollectionAccessor&lt;TEntity,TCollection,TElement&gt; : Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor where TEntity : class where TCollection : class, IEnumerable&lt;TElement&gt;" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClrICollectionAccessor`3&lt;class TEntity, class (class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;) TCollection, TElement&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="F#" Value="type ClrICollectionAccessor&lt;'Entity, #seq&lt;'Element&gt;, 'Element (requires 'Entity : null)&gt; = class&#xA;    interface IClrCollectionAccessor" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="C#" Value="public class ClrICollectionAccessor&lt;TEntity,TCollection,TElement&gt; : Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor where TEntity : class where TCollection : class, IEnumerable&lt;TElement&gt; where TElement : class" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClrICollectionAccessor`3&lt;class TEntity, class (class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;) TCollection, class TElement&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type ClrICollectionAccessor&lt;'Entity, #seq&lt;'Element&gt;, 'Element (requires 'Entity : null and 'Element : null)&gt; = class&#xA;    interface IClrCollectionAccessor" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TCollection">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>System.Collections.Generic.ICollection&lt;TElement&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TEntity">To be added.</typeparam>
    <typeparam name="TCollection">To be added.</typeparam>
    <typeparam name="TElement">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClrICollectionAccessor (string propertyName, Func&lt;TEntity,TCollection&gt; getCollection, Action&lt;TEntity,TCollection&gt; setCollection, Func&lt;TEntity,Action&lt;TEntity,TCollection&gt;,TCollection&gt; createAndSetCollection, Func&lt;TCollection&gt; createCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Func`2&lt;!TEntity, !TCollection&gt; getCollection, class System.Action`2&lt;!TEntity, !TCollection&gt; setCollection, class System.Func`3&lt;!TEntity, class System.Action`2&lt;!TEntity, !TCollection&gt;, !TCollection&gt; createAndSetCollection, class System.Func`1&lt;!TCollection&gt; createCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.#ctor(System.String,System.Func{`0,`1},System.Action{`0,`1},System.Func{`0,System.Action{`0,`1},`1},System.Func{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, getCollection As Func(Of TEntity, TCollection), setCollection As Action(Of TEntity, TCollection), createAndSetCollection As Func(Of TEntity, Action(Of TEntity, TCollection), TCollection), createCollection As Func(Of TCollection))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, 'Collection, 'Element (requires 'Entity : null and 'Collection : null and 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Element&gt;)&gt; : string * Func&lt;'Entity, 'Collection (requires 'Entity : null and 'Collection : null and 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Element&gt;)&gt; * Action&lt;'Entity, 'Collection (requires 'Entity : null and 'Collection : null and 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Element&gt;)&gt; * Func&lt;'Entity, Action&lt;'Entity, 'Collection&gt;, 'Collection (requires 'Entity : null and 'Collection : null and 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Element&gt;)&gt; * Func&lt;'Collection (requires 'Collection : null and 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Element&gt;)&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, 'Collection, 'Element (requires 'Entity : null and 'Collection : null and 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Element&gt;)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, 'Collection, 'Element (requires 'Entity : null and 'Collection : null and 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Element&gt;)&gt; (propertyName, getCollection, setCollection, createAndSetCollection, createCollection)" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, #seq&lt;'Element&gt;, 'Element (requires 'Entity : null)&gt; : string * Func&lt;'Entity, #seq&lt;'Element&gt; (requires 'Entity : null)&gt; * Action&lt;'Entity, #seq&lt;'Element&gt; (requires 'Entity : null)&gt; * Func&lt;'Entity, Action&lt;'Entity, #seq&lt;'Element&gt;&gt;, #seq&lt;'Element&gt; (requires 'Entity : null)&gt; * Func&lt;#seq&lt;'Element&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, #seq&lt;'Element&gt;, 'Element (requires 'Entity : null)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, #System.Collections.Generic.seq&lt;'Element&gt;, 'Element (requires 'Entity : null)&gt; (propertyName, getCollection, setCollection, createAndSetCollection, createCollection)" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="getCollection" Type="System.Func&lt;TEntity,TCollection&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="setCollection" Type="System.Action&lt;TEntity,TCollection&gt;" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="createAndSetCollection" Type="System.Func&lt;TEntity,System.Action&lt;TEntity,TCollection&gt;,TCollection&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="createCollection" Type="System.Func&lt;TCollection&gt;" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="getCollection">To be added.</param>
        <param name="setCollection">To be added.</param>
        <param name="createAndSetCollection">To be added.</param>
        <param name="createCollection">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClrICollectionAccessor (string propertyName, Func&lt;TEntity,TCollection&gt; getCollection, Action&lt;TEntity,TCollection&gt; setCollection, Action&lt;TEntity,TCollection&gt; setCollectionForMaterialization, Func&lt;TEntity,Action&lt;TEntity,TCollection&gt;,TCollection&gt; createAndSetCollection, Func&lt;TCollection&gt; createCollection);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Func`2&lt;!TEntity, !TCollection&gt; getCollection, class System.Action`2&lt;!TEntity, !TCollection&gt; setCollection, class System.Action`2&lt;!TEntity, !TCollection&gt; setCollectionForMaterialization, class System.Func`3&lt;!TEntity, class System.Action`2&lt;!TEntity, !TCollection&gt;, !TCollection&gt; createAndSetCollection, class System.Func`1&lt;!TCollection&gt; createCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.#ctor(System.String,System.Func{`0,`1},System.Action{`0,`1},System.Action{`0,`1},System.Func{`0,System.Action{`0,`1},`1},System.Func{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, getCollection As Func(Of TEntity, TCollection), setCollection As Action(Of TEntity, TCollection), setCollectionForMaterialization As Action(Of TEntity, TCollection), createAndSetCollection As Func(Of TEntity, Action(Of TEntity, TCollection), TCollection), createCollection As Func(Of TCollection))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, #seq&lt;'Element&gt;, 'Element (requires 'Entity : null and 'Element : null)&gt; : string * Func&lt;'Entity, #seq&lt;'Element&gt; (requires 'Entity : null)&gt; * Action&lt;'Entity, #seq&lt;'Element&gt; (requires 'Entity : null)&gt; * Action&lt;'Entity, #seq&lt;'Element&gt; (requires 'Entity : null)&gt; * Func&lt;'Entity, Action&lt;'Entity, #seq&lt;'Element&gt;&gt;, #seq&lt;'Element&gt; (requires 'Entity : null)&gt; * Func&lt;#seq&lt;'Element&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, #seq&lt;'Element&gt;, 'Element (requires 'Entity : null and 'Element : null)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, #System.Collections.Generic.seq&lt;'Element&gt;, 'Element (requires 'Entity : null and 'Element : null)&gt; (propertyName, getCollection, setCollection, setCollectionForMaterialization, createAndSetCollection, createCollection)" />
      <MemberSignature Language="C#" Value="public ClrICollectionAccessor (string propertyName, Func&lt;TEntity,TCollection&gt; getCollection, Action&lt;TEntity,TCollection&gt;? setCollection, Action&lt;TEntity,TCollection&gt;? setCollectionForMaterialization, Func&lt;TEntity,Action&lt;TEntity,TCollection&gt;,TCollection&gt;? createAndSetCollection, Func&lt;TCollection&gt;? createCollection);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public ClrICollectionAccessor (string propertyName, Func&lt;TEntity,TCollection&gt;? getCollection, Action&lt;TEntity,TCollection&gt;? setCollection, Action&lt;TEntity,TCollection&gt;? setCollectionForMaterialization, Func&lt;TEntity,Action&lt;TEntity,TCollection&gt;,TCollection&gt;? createAndSetCollection, Func&lt;TCollection&gt;? createCollection);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="getCollection" Type="System.Func&lt;TEntity,TCollection&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="setCollection" Type="System.Action&lt;TEntity,TCollection&gt;" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="setCollectionForMaterialization" Type="System.Action&lt;TEntity,TCollection&gt;" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="createAndSetCollection" Type="System.Func&lt;TEntity,System.Action&lt;TEntity,TCollection&gt;,TCollection&gt;" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="createCollection" Type="System.Func&lt;TCollection&gt;" Index="5" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="getCollection">To be added.</param>
        <param name="setCollection">To be added.</param>
        <param name="setCollectionForMaterialization">To be added.</param>
        <param name="createAndSetCollection">To be added.</param>
        <param name="createCollection">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (instance As Object, value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; bool&#xA;override this.Add : obj * obj -&gt; bool" Usage="clrICollectionAccessor.Add (instance, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="instance">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (object entity, object value, bool forMaterialization);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(object entity, object value, bool forMaterialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Add(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (entity As Object, value As Object, forMaterialization As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj * bool -&gt; bool&#xA;override this.Add : obj * obj * bool -&gt; bool" Usage="clrICollectionAccessor.Add (entity, value, forMaterialization)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.Add(System.Object,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="forMaterialization" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="value">To be added.</param>
        <param name="forMaterialization">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (object instance, System.Collections.Generic.IEnumerable&lt;object&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(object instance, class System.Collections.Generic.IEnumerable`1&lt;object&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (instance As Object, values As IEnumerable(Of Object))" />
      <MemberSignature Language="F#" Value="abstract member AddRange : obj * seq&lt;obj&gt; -&gt; unit&#xA;override this.AddRange : obj * seq&lt;obj&gt; -&gt; unit" Usage="clrICollectionAccessor.AddRange (instance, values)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="instance">To be added.</param>
        <param name="values">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStandalone">
      <MemberSignature Language="C#" Value="public virtual bool AddStandalone (object collection, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddStandalone(object collection, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.AddStandalone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddStandalone (collection As Object, value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AddStandalone : obj * obj -&gt; bool&#xA;override this.AddStandalone : obj * obj -&gt; bool" Usage="clrICollectionAccessor.AddStandalone (collection, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.AddStandalone(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="collection">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionType">
      <MemberSignature Language="C#" Value="public virtual Type CollectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CollectionType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.CollectionType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CollectionType As Type" />
      <MemberSignature Language="F#" Value="member this.CollectionType : Type" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, 'Collection, 'Element (requires 'Entity : null and 'Collection : null and 'Collection :&gt; System.Collections.Generic.ICollection&lt;'Element&gt;)&gt;.CollectionType" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="F#" Value="member this.CollectionType : Type" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, #System.Collections.Generic.seq&lt;'Element&gt;, 'Element (requires 'Entity : null)&gt;.CollectionType" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="member this.CollectionType : Type" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor&lt;'Entity, #System.Collections.Generic.seq&lt;'Element&gt;, 'Element (requires 'Entity : null and 'Element : null)&gt;.CollectionType" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">P:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.CollectionType</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.CollectionType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object instance, object value);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object instance, object value) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Contains(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (instance As Object, value As Object) As Boolean" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj * obj -&gt; bool&#xA;override this.Contains : obj * obj -&gt; bool" Usage="clrICollectionAccessor.Contains (instance, value)" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public virtual bool Contains (object entity, object value);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object entity, object value) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (entity As Object, value As Object) As Boolean" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj * obj -&gt; bool&#xA;override this.Contains : obj * obj -&gt; bool" Usage="clrICollectionAccessor.Contains (entity, value)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Contains(System.Object,System.Object)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.Contains(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" />
      </Parameters>
      <Docs>
        <param name="instance">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsStandalone">
      <MemberSignature Language="C#" Value="public virtual bool ContainsStandalone (object collection, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsStandalone(object collection, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.ContainsStandalone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsStandalone (collection As Object, value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ContainsStandalone : obj * obj -&gt; bool&#xA;override this.ContainsStandalone : obj * obj -&gt; bool" Usage="clrICollectionAccessor.ContainsStandalone (collection, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.ContainsStandalone(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="collection">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual object Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Create" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create () As Object" />
      <MemberSignature Language="F#" Value="abstract member Create : unit -&gt; obj&#xA;override this.Create : unit -&gt; obj" Usage="clrICollectionAccessor.Create " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.Create</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual object Create (System.Collections.Generic.IEnumerable&lt;object&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(class System.Collections.Generic.IEnumerable`1&lt;object&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Create(System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (values As IEnumerable(Of Object)) As Object" />
      <MemberSignature Language="F#" Value="abstract member Create : seq&lt;obj&gt; -&gt; obj&#xA;override this.Create : seq&lt;obj&gt; -&gt; obj" Usage="clrICollectionAccessor.Create values" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create(System.Collections.Generic.IEnumerable{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreate">
      <MemberSignature Language="C#" Value="public virtual object GetOrCreate (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOrCreate(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.GetOrCreate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrCreate (instance As Object) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetOrCreate : obj -&gt; obj&#xA;override this.GetOrCreate : obj -&gt; obj" Usage="clrICollectionAccessor.GetOrCreate instance" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.GetOrCreate(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="instance">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreate">
      <MemberSignature Language="C#" Value="public virtual object GetOrCreate (object entity, bool forMaterialization);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOrCreate(object entity, bool forMaterialization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.GetOrCreate(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrCreate (entity As Object, forMaterialization As Boolean) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetOrCreate : obj * bool -&gt; obj&#xA;override this.GetOrCreate : obj * bool -&gt; obj" Usage="clrICollectionAccessor.GetOrCreate (entity, forMaterialization)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.GetOrCreate(System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="forMaterialization" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="forMaterialization">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object instance, object value);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object instance, object value) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Remove(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (instance As Object, value As Object)" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj * obj -&gt; unit&#xA;override this.Remove : obj * obj -&gt; unit" Usage="clrICollectionAccessor.Remove (instance, value)" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public virtual bool Remove (object entity, object value);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(object entity, object value) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Remove (entity As Object, value As Object) As Boolean" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj * obj -&gt; bool&#xA;override this.Remove : obj * obj -&gt; bool" Usage="clrICollectionAccessor.Remove (entity, value)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Remove(System.Object,System.Object)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.Remove(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" />
      </Parameters>
      <Docs>
        <param name="instance">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStandalone">
      <MemberSignature Language="C#" Value="public virtual bool RemoveStandalone (object? collection, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveStandalone(object collection, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.RemoveStandalone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveStandalone (collection As Object, value As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member RemoveStandalone : obj * obj -&gt; bool&#xA;override this.RemoveStandalone : obj * obj -&gt; bool" Usage="clrICollectionAccessor.RemoveStandalone (collection, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor.RemoveStandalone(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Object" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="collection">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
