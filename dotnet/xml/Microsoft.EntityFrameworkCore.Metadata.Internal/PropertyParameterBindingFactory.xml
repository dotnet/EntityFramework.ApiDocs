<Type Name="PropertyParameterBindingFactory" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyParameterBindingFactory">
  <TypeSignature Language="C#" Value="public class PropertyParameterBindingFactory : Microsoft.EntityFrameworkCore.Metadata.Internal.IPropertyParameterBindingFactory" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyParameterBindingFactory extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Internal.IPropertyParameterBindingFactory" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyParameterBindingFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyParameterBindingFactory&#xA;Implements IPropertyParameterBindingFactory" />
  <TypeSignature Language="F#" Value="type PropertyParameterBindingFactory = class&#xA;    interface IPropertyParameterBindingFactory" />
  <TypeSignature Language="C#" Value="public class PropertyParameterBindingFactory : Microsoft.EntityFrameworkCore.Metadata.IPropertyParameterBindingFactory" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyParameterBindingFactory extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.IPropertyParameterBindingFactory" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Internal.IPropertyParameterBindingFactory</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IPropertyParameterBindingFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyParameterBindingFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyParameterBindingFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ParameterBinding? FindParameter (Microsoft.EntityFrameworkCore.Metadata.IComplexType complexType, Type parameterType, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.ParameterBinding FindParameter(class Microsoft.EntityFrameworkCore.Metadata.IComplexType complexType, class System.Type parameterType, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyParameterBindingFactory.FindParameter(Microsoft.EntityFrameworkCore.Metadata.IComplexType,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindParameter (complexType As IComplexType, parameterType As Type, parameterName As String) As ParameterBinding" />
      <MemberSignature Language="F#" Value="abstract member FindParameter : Microsoft.EntityFrameworkCore.Metadata.IComplexType * Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.ParameterBinding&#xA;override this.FindParameter : Microsoft.EntityFrameworkCore.Metadata.IComplexType * Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.ParameterBinding" Usage="propertyParameterBindingFactory.FindParameter (complexType, parameterType, parameterName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IPropertyParameterBindingFactory.FindParameter(Microsoft.EntityFrameworkCore.Metadata.IComplexType,System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ParameterBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="complexType" Type="Microsoft.EntityFrameworkCore.Metadata.IComplexType" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="parameterType" Type="System.Type" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="parameterName" Type="System.String" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="complexType">To be added.</param>
        <param name="parameterType">To be added.</param>
        <param name="parameterName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ParameterBinding FindParameter (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Type parameterType, string parameterName);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.ParameterBinding FindParameter(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class System.Type parameterType, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyParameterBindingFactory.FindParameter(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindParameter (entityType As IEntityType, parameterType As Type, parameterName As String) As ParameterBinding" />
      <MemberSignature Language="F#" Value="abstract member FindParameter : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.ParameterBinding&#xA;override this.FindParameter : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.ParameterBinding" Usage="propertyParameterBindingFactory.FindParameter (entityType, parameterType, parameterName)" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ParameterBinding? FindParameter (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Type parameterType, string parameterName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IPropertyParameterBindingFactory.FindParameter(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ParameterBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="parameterType" Type="System.Type" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="parameterName" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="parameterType">To be added.</param>
        <param name="parameterName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryBindParameter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBinding TryBindParameter (Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, Type parameterType, string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBinding TryBindParameter(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, class System.Type parameterType, string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyParameterBindingFactory.TryBindParameter(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryBindParameter (entityType As IMutableEntityType, parameterType As Type, parameterName As String) As ParameterBinding" />
      <MemberSignature Language="F#" Value="abstract member TryBindParameter : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBinding&#xA;override this.TryBindParameter : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBinding" Usage="propertyParameterBindingFactory.TryBindParameter (entityType, parameterType, parameterName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Internal.IPropertyParameterBindingFactory.TryBindParameter(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="parameterType" Type="System.Type" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="parameterName" Type="System.String" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="parameterType">To be added.</param>
        <param name="parameterName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
