<Type Name="SkipNavigationExtensions" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.SkipNavigationExtensions">
  <TypeSignature Language="C#" Value="public static class SkipNavigationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SkipNavigationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.SkipNavigationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SkipNavigationExtensions" />
  <TypeSignature Language="F#" Value="type SkipNavigationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateMemberIdentity">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.MemberIdentity CreateMemberIdentity (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation? navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Metadata.MemberIdentity CreateMemberIdentity(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.SkipNavigationExtensions.CreateMemberIdentity(Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateMemberIdentity (navigation As IReadOnlySkipNavigation) As MemberIdentity" />
      <MemberSignature Language="F#" Value="static member CreateMemberIdentity : Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.MemberIdentity" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.SkipNavigationExtensions.CreateMemberIdentity navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.MemberIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlySkipNavigation" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMemberIdentity">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.MemberIdentity CreateMemberIdentity (this Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Metadata.MemberIdentity CreateMemberIdentity(class Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.SkipNavigationExtensions.CreateMemberIdentity(Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateMemberIdentity (navigation As ISkipNavigation) As MemberIdentity" />
      <MemberSignature Language="F#" Value="static member CreateMemberIdentity : Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.MemberIdentity" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.SkipNavigationExtensions.CreateMemberIdentity navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.MemberIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation" Index="0" FrameworkAlternate="efcore-5.0" RefType="this" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
