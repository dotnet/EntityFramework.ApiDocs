<Type Name="ParameterBindingFactories" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBindingFactories">
  <TypeSignature Language="C#" Value="public class ParameterBindingFactories : Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParameterBindingFactories extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories" FrameworkAlternate="efcore-2.1;efcore-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBindingFactories" />
  <TypeSignature Language="VB.NET" Value="Public Class ParameterBindingFactories&#xA;Implements IParameterBindingFactories" />
  <TypeSignature Language="F#" Value="type ParameterBindingFactories = class&#xA;    interface IParameterBindingFactories" />
  <TypeSignature Language="C#" Value="public class ParameterBindingFactories : Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactories" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParameterBindingFactories extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactories" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-2.1;efcore-2.2">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactories</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterBindingFactories (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactory&gt; registeredFactories, Microsoft.EntityFrameworkCore.Internal.IRegisteredServices registeredServices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactory&gt; registeredFactories, class Microsoft.EntityFrameworkCore.Internal.IRegisteredServices registeredServices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBindingFactories.#ctor(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactory},Microsoft.EntityFrameworkCore.Internal.IRegisteredServices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (registeredFactories As IEnumerable(Of IParameterBindingFactory), registeredServices As IRegisteredServices)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBindingFactories : seq&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactory&gt; * Microsoft.EntityFrameworkCore.Internal.IRegisteredServices -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBindingFactories" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBindingFactories (registeredFactories, registeredServices)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registeredFactories" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactory&gt;" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="registeredServices" Type="Microsoft.EntityFrameworkCore.Internal.IRegisteredServices" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="registeredFactories">To be added.</param>
        <param name="registeredServices">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterBindingFactories (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory&gt; registeredFactories, Microsoft.EntityFrameworkCore.Internal.IRegisteredServices registeredServices);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory&gt; registeredFactories, class Microsoft.EntityFrameworkCore.Internal.IRegisteredServices registeredServices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBindingFactories.#ctor(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory},Microsoft.EntityFrameworkCore.Internal.IRegisteredServices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (registeredFactories As IEnumerable(Of IParameterBindingFactory), registeredServices As IRegisteredServices)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBindingFactories : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory&gt; * Microsoft.EntityFrameworkCore.Internal.IRegisteredServices -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBindingFactories" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBindingFactories (registeredFactories, registeredServices)" />
      <MemberSignature Language="C#" Value="public ParameterBindingFactories (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory&gt;? registeredFactories, Microsoft.EntityFrameworkCore.Internal.IRegisteredServices registeredServices);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registeredFactories" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory&gt;" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="registeredServices" Type="Microsoft.EntityFrameworkCore.Internal.IRegisteredServices" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="registeredFactories">To be added.</param>
        <param name="registeredServices">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFactory">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactory FindFactory (Type type, string name);" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactory FindFactory(class System.Type type, string name) cil managed" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ParameterBindingFactories.FindFactory(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFactory (type As Type, name As String) As IParameterBindingFactory" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="abstract member FindFactory : Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactory&#xA;override this.FindFactory : Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactory" Usage="parameterBindingFactories.FindFactory (type, name)" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory FindFactory (Type parameterType, string parameterName);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory FindFactory(class System.Type parameterType, string parameterName) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFactory (parameterType As Type, parameterName As String) As IParameterBindingFactory" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member FindFactory : Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory&#xA;override this.FindFactory : Type * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory" Usage="parameterBindingFactories.FindFactory (parameterType, parameterName)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory? FindFactory (Type parameterType, string parameterName);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-2.1;efcore-2.2">M:Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactories.FindFactory(System.Type,System.String)</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">M:Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactories.FindFactory(System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.1;efcore-2.2">Microsoft.EntityFrameworkCore.Metadata.Internal.IParameterBindingFactory</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.IParameterBindingFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="parameterType" Type="System.Type" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="parameterName" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="parameterType">To be added.</param>
        <param name="name">To be added.</param>
        <param name="parameterName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
