<Type Name="IRuntimeForeignKey" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeForeignKey">
  <TypeSignature Language="C#" Value="public interface IRuntimeForeignKey : Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRuntimeForeignKey implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeForeignKey" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRuntimeForeignKey&#xA;Implements IForeignKey" />
  <TypeSignature Language="F#" Value="type IRuntimeForeignKey = interface&#xA;    interface IForeignKey&#xA;    interface IReadOnlyForeignKey&#xA;    interface IReadOnlyAnnotatable&#xA;    interface IAnnotatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRuntimeForeignKey implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IForeignKey</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DependentKeyValueFactory">
      <MemberSignature Language="C#" Value="public object DependentKeyValueFactory { get; set; }" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".property instance object DependentKeyValueFactory" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeForeignKey.DependentKeyValueFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property DependentKeyValueFactory As Object" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.DependentKeyValueFactory : obj with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeForeignKey.DependentKeyValueFactory" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory DependentKeyValueFactory { get; set; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory DependentKeyValueFactory" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Property DependentKeyValueFactory As IDependentKeyValueFactory" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.DependentKeyValueFactory : Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeForeignKey.DependentKeyValueFactory" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-6.0">System.Object</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.ChangeTracking.IDependentKeyValueFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentsMapFactory">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap&gt; DependentsMapFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap&gt; DependentsMapFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeForeignKey.DependentsMapFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property DependentsMapFactory As Func(Of IDependentsMap)" />
      <MemberSignature Language="F#" Value="member this.DependentsMapFactory : Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeForeignKey.DependentsMapFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
