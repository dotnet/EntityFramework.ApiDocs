<Type Name="TableMappingBase&lt;TColumnMapping&gt;" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;TColumnMapping&gt;">
  <TypeSignature Language="C#" Value="public class TableMappingBase&lt;TColumnMapping&gt; : Microsoft.EntityFrameworkCore.Infrastructure.Annotatable, Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase where TColumnMapping : class, IColumnMappingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableMappingBase`1&lt;class (class Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase) TColumnMapping&gt; extends Microsoft.EntityFrameworkCore.Infrastructure.Annotatable implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TableMappingBase(Of TColumnMapping)&#xA;Inherits Annotatable&#xA;Implements ITableMappingBase" />
  <TypeSignature Language="F#" Value="type TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; IColumnMappingBase)&gt; = class&#xA;    inherit Annotatable&#xA;    interface ITableMappingBase&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TColumnMapping">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.Annotatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TColumnMapping">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableMappingBase (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase table, bool includesDerivedTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase table, bool includesDerivedTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IEntityType, table As TableBase, includesDerivedTypes As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt; : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt; (entityType, table, includesDerivedTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase" Index="1" FrameworkAlternate="efcore-7.0" />
        <Parameter Name="includesDerivedTypes" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-7.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="table">To be added.</param>
        <param name="includesDerivedTypes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableMappingBase (Microsoft.EntityFrameworkCore.Metadata.ITypeBase typeBase, Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase table, bool includesDerivedTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.ITypeBase typeBase, class Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase table, bool includesDerivedTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.ITypeBase,Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeBase As ITypeBase, table As TableBase, includesDerivedTypes As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt; : Microsoft.EntityFrameworkCore.Metadata.ITypeBase * Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt; (typeBase, table, includesDerivedTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeBase" Type="Microsoft.EntityFrameworkCore.Metadata.ITypeBase" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="includesDerivedTypes" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="typeBase">To be added.</param>
        <param name="table">To be added.</param>
        <param name="includesDerivedTypes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColumnMapping">
      <MemberSignature Language="C#" Value="public virtual bool AddColumnMapping (TColumnMapping columnMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddColumnMapping(!TColumnMapping columnMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.AddColumnMapping(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddColumnMapping (columnMapping As TColumnMapping) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AddColumnMapping : 'ColumnMapping -&gt; bool&#xA;override this.AddColumnMapping : 'ColumnMapping -&gt; bool" Usage="tableMappingBase.AddColumnMapping columnMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnMapping" Type="TColumnMapping" />
      </Parameters>
      <Docs>
        <param name="columnMapping">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMappings">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.List&lt;TColumnMapping&gt; ColumnMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;!TColumnMapping&gt; ColumnMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.ColumnMappings" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ColumnMappings As List(Of TColumnMapping)" />
      <MemberSignature Language="F#" Value="member this.ColumnMappings : System.Collections.Generic.List&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt;.ColumnMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TColumnMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntityType As IEntityType" />
      <MemberSignature Language="F#" Value="member this.EntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt;.EntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IncludesDerivedTypes">
      <MemberSignature Language="C#" Value="public virtual bool IncludesDerivedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludesDerivedTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.IncludesDerivedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IncludesDerivedTypes As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludesDerivedTypes : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt;.IncludesDerivedTypes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.IncludesDerivedTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSharedTablePrincipal">
      <MemberSignature Language="C#" Value="public virtual bool? IsSharedTablePrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSharedTablePrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.IsSharedTablePrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsSharedTablePrincipal As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsSharedTablePrincipal : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt;.IsSharedTablePrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsSplitEntityTypePrincipal">
      <MemberSignature Language="C#" Value="public virtual bool? IsSplitEntityTypePrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSplitEntityTypePrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.IsSplitEntityTypePrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsSplitEntityTypePrincipal As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsSplitEntityTypePrincipal : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt;.IsSplitEntityTypePrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt; Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt; Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.Microsoft#EntityFrameworkCore#Metadata#ITableMappingBase#ColumnMappings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ColumnMappings As IEnumerable(Of IColumnMappingBase) Implements ITableMappingBase.ColumnMappings" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.ITableBase Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.ITableBase Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.Microsoft#EntityFrameworkCore#Metadata#ITableMappingBase#Table" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Table As ITableBase Implements ITableMappingBase.Table" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table : Microsoft.EntityFrameworkCore.Metadata.ITableBase" Usage="Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ITableBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase Table" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.Table" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Table As TableBase" />
      <MemberSignature Language="F#" Value="member this.Table : Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt;.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tableMappingBase.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeBase">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ITypeBase TypeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.ITypeBase TypeBase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1.TypeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeBase As ITypeBase" />
      <MemberSignature Language="F#" Value="member this.TypeBase : Microsoft.EntityFrameworkCore.Metadata.ITypeBase" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;'ColumnMapping (requires 'ColumnMapping : null and 'ColumnMapping :&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase)&gt;.TypeBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.TypeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ITypeBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
