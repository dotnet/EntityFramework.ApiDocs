<Type Name="ClrAccessorFactory&lt;TAccessor&gt;" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory&lt;TAccessor&gt;">
  <TypeSignature Language="C#" Value="public abstract class ClrAccessorFactory&lt;TAccessor&gt; where TAccessor : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ClrAccessorFactory`1&lt;class TAccessor&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ClrAccessorFactory(Of TAccessor)" />
  <TypeSignature Language="F#" Value="type ClrAccessorFactory&lt;'Accessor (requires 'Accessor : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TAccessor">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TAccessor">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClrAccessorFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual TAccessor Create (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TAccessor Create(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (property As IPropertyBase) As TAccessor" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Accessor&#xA;override this.Create : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Accessor" Usage="clrAccessorFactory.Create property" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public abstract TAccessor Create (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (property As IPropertyBase) As TAccessor" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Accessor" Usage="clrAccessorFactory.Create property" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual TAccessor Create (System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TAccessor Create(class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.Create(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (memberInfo As MemberInfo) As TAccessor" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Reflection.MemberInfo -&gt; 'Accessor&#xA;override this.Create : System.Reflection.MemberInfo -&gt; 'Accessor" Usage="clrAccessorFactory.Create memberInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="protected virtual TAccessor Create (System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TAccessor Create(class System.Reflection.MemberInfo memberInfo, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.Create(System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Create (memberInfo As MemberInfo, propertyBase As IPropertyBase) As TAccessor" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Accessor&#xA;override this.Create : System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Accessor" Usage="clrAccessorFactory.Create (memberInfo, propertyBase)" />
      <MemberSignature Language="C#" Value="protected virtual TAccessor Create (System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase? propertyBase);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual TAccessor Create (System.Reflection.PropertyInfo property);" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TAccessor Create(class System.Reflection.PropertyInfo property) cil managed" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.Create(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (property As PropertyInfo) As TAccessor" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Reflection.PropertyInfo -&gt; 'Accessor&#xA;override this.Create : System.Reflection.PropertyInfo -&gt; 'Accessor" Usage="clrAccessorFactory.Create property" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="C#" Value="public virtual TAccessor Create (System.Reflection.PropertyInfo propertyInfo);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TAccessor Create(class System.Reflection.PropertyInfo propertyInfo) cil managed" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (propertyInfo As PropertyInfo) As TAccessor" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Reflection.PropertyInfo -&gt; 'Accessor&#xA;override this.Create : System.Reflection.PropertyInfo -&gt; 'Accessor" Usage="clrAccessorFactory.Create propertyInfo" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Reflection.PropertyInfo" Index="0" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="propertyInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt;">
      <MemberSignature Language="C#" Value="protected abstract TAccessor CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt; (System.Reflection.PropertyInfo property) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TAccessor CreateGeneric&lt;class TEntity, TValue, TNonNullableEnumValue&gt;(class System.Reflection.PropertyInfo property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.CreateGeneric``3(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateGeneric(Of TEntity As Class, TValue As Class, TNonNullableEnumValue As Class) (property As PropertyInfo) As TAccessor" />
      <MemberSignature Language="F#" Value="abstract member CreateGeneric : System.Reflection.PropertyInfo -&gt; 'Accessor (requires 'Entity : null)" Usage="clrAccessorFactory.CreateGeneric property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TValue" />
        <TypeParameter Name="TNonNullableEnumValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="System.Reflection.PropertyInfo" Index="0" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <typeparam name="TNonNullableEnumValue">To be added.</typeparam>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt;">
      <MemberSignature Language="C#" Value="protected abstract TAccessor CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt; (System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) where TEntity : class;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TAccessor CreateGeneric&lt;class TEntity, TValue, TNonNullableEnumValue&gt;(class System.Reflection.MemberInfo memberInfo, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.CreateGeneric``3(System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateGeneric(Of TEntity As Class, TValue As Class, TNonNullableEnumValue As Class) (memberInfo As MemberInfo, propertyBase As IPropertyBase) As TAccessor" />
      <MemberSignature Language="F#" Value="abstract member CreateGeneric : System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Accessor (requires 'Entity : null)" Usage="clrAccessorFactory.CreateGeneric (memberInfo, propertyBase)" />
      <MemberSignature Language="C#" Value="protected abstract TAccessor CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt; (System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase? propertyBase) where TEntity : class;" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TValue" />
        <TypeParameter Name="TNonNullableEnumValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <typeparam name="TNonNullableEnumValue">To be added.</typeparam>
        <param name="memberInfo">To be added.</param>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt;">
      <MemberSignature Language="C#" Value="protected abstract TAccessor CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt; (System.Reflection.PropertyInfo propertyInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TAccessor CreateGeneric&lt;class TEntity, TValue, TNonNullableEnumValue&gt;(class System.Reflection.PropertyInfo propertyInfo, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.CreateGeneric``3(System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateGeneric(Of TEntity As Class, TValue As Class, TNonNullableEnumValue As Class) (propertyInfo As PropertyInfo, propertyBase As IPropertyBase) As TAccessor" />
      <MemberSignature Language="F#" Value="abstract member CreateGeneric : System.Reflection.PropertyInfo * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Accessor (requires 'Entity : null)" Usage="clrAccessorFactory.CreateGeneric (propertyInfo, propertyBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TValue" />
        <TypeParameter Name="TNonNullableEnumValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <typeparam name="TNonNullableEnumValue">To be added.</typeparam>
        <param name="propertyInfo">To be added.</param>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric&lt;TEntity,TStructuralType,TValue,TNonNullableEnumValue&gt;">
      <MemberSignature Language="C#" Value="protected abstract TAccessor CreateGeneric&lt;TEntity,TStructuralType,TValue,TNonNullableEnumValue&gt; (System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase? propertyBase) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TAccessor CreateGeneric&lt;class TEntity, TStructuralType, TValue, TNonNullableEnumValue&gt;(class System.Reflection.MemberInfo memberInfo, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.CreateGeneric``4(System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateGeneric(Of TEntity As Class, TStructuralType As Class, TValue As Class, TNonNullableEnumValue As Class) (memberInfo As MemberInfo, propertyBase As IPropertyBase) As TAccessor" />
      <MemberSignature Language="F#" Value="abstract member CreateGeneric : System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Accessor (requires 'Entity : null)" Usage="clrAccessorFactory.CreateGeneric (memberInfo, propertyBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TStructuralType" />
        <TypeParameter Name="TValue" />
        <TypeParameter Name="TNonNullableEnumValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TStructuralType">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <typeparam name="TNonNullableEnumValue">To be added.</typeparam>
        <param name="memberInfo">To be added.</param>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
