<Type Name="MetadataExtensions" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions">
  <TypeSignature Language="C#" Value="public static class MetadataExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MetadataExtensions" FrameworkAlternate="efcore-1.0" />
  <TypeSignature Language="F#" Value="type MetadataExtensions = class" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataExtensions" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsConcreteMetadataType&lt;TInterface,TConcrete&gt;">
      <MemberSignature Language="C#" Value="public static TConcrete AsConcreteMetadataType&lt;TInterface,TConcrete&gt; (this TInterface interface, string methodName) where TConcrete : class;" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TConcrete AsConcreteMetadataType&lt;TInterface, class TConcrete&gt;(!!TInterface interface, string methodName) cil managed" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsConcreteMetadataType(Of TInterface, TConcrete) (interface As TInterface, methodName As String) As TConcrete" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="F#" Value="static member AsConcreteMetadataType : 'Interface * string -&gt; 'Concrete (requires 'Concrete : null)" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType (interface, methodName)" FrameworkAlternate="efcore-1.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0">TConcrete</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInterface" Index="0" FrameworkAlternate="efcore-1.0" />
        <TypeParameter Name="TConcrete" Index="1" FrameworkAlternate="efcore-1.0">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="interface" Type="TInterface" Index="0" FrameworkAlternate="efcore-1.0" RefType="this" />
        <Parameter Name="methodName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <typeparam name="TInterface">To be added.</typeparam>
        <typeparam name="TConcrete">To be added.</typeparam>
        <param name="interface">To be added.</param>
        <param name="methodName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
