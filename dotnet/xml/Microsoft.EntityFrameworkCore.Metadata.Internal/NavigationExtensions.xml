<Type Name="NavigationExtensions" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions">
  <TypeSignature Language="C#" Value="public static class NavigationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NavigationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module NavigationExtensions" />
  <TypeSignature Language="F#" Value="type NavigationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsNavigation">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation AsNavigation (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, string methodName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation AsNavigation(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.AsNavigation(Microsoft.EntityFrameworkCore.Metadata.INavigation,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsNavigation (navigation As INavigation, Optional methodName As String = &quot;&quot;) As Navigation" />
      <MemberSignature Language="F#" Value="static member AsNavigation : Microsoft.EntityFrameworkCore.Metadata.INavigation * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.AsNavigation (navigation, methodName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="methodName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.CallerMemberName]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CallerMemberName&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="methodName">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMemberIdentity">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.MemberIdentity CreateMemberIdentity (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Metadata.MemberIdentity CreateMemberIdentity(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.CreateMemberIdentity(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateMemberIdentity (navigation As INavigation) As MemberIdentity" />
      <MemberSignature Language="F#" Value="static member CreateMemberIdentity : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.MemberIdentity" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.CreateMemberIdentity navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.MemberIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMemberIdentity">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.MemberIdentity CreateMemberIdentity (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation? navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.EntityFrameworkCore.Metadata.MemberIdentity CreateMemberIdentity(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.CreateMemberIdentity(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateMemberIdentity (navigation As IReadOnlyNavigation) As MemberIdentity" />
      <MemberSignature Language="F#" Value="static member CreateMemberIdentity : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.MemberIdentity" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.CreateMemberIdentity navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.MemberIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionAccessor">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor GetCollectionAccessor (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor GetCollectionAccessor(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.GetCollectionAccessor(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollectionAccessor (navigation As INavigation) As IClrCollectionAccessor" />
      <MemberSignature Language="F#" Value="static member GetCollectionAccessor : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.GetCollectionAccessor navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManyToManyLoader">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Internal.ICollectionLoader GetManyToManyLoader (this Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Internal.ICollectionLoader GetManyToManyLoader(class Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.GetManyToManyLoader(Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManyToManyLoader (navigation As ISkipNavigation) As ICollectionLoader" />
      <MemberSignature Language="F#" Value="static member GetManyToManyLoader : Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation -&gt; Microsoft.EntityFrameworkCore.Internal.ICollectionLoader" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.GetManyToManyLoader navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.ICollectionLoader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.ISkipNavigation" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDebugString">
      <MemberSignature Language="C#" Value="public static string ToDebugString (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, bool singleLine = true, string indent = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToDebugString(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, bool singleLine, string indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDebugString (navigation As INavigation, Optional singleLine As Boolean = true, Optional indent As String = &quot;&quot;) As String" />
      <MemberSignature Language="F#" Value="static member ToDebugString : Microsoft.EntityFrameworkCore.Metadata.INavigation * bool * string -&gt; string" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.ToDebugString (navigation, singleLine, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="singleLine" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="indent" Type="System.String" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="singleLine">To be added.</param>
        <param name="indent">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDebugString">
      <MemberSignature Language="C#" Value="public static string ToDebugString (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, bool singleLine = true, bool includeIndexes = false, string indent = &quot;&quot;);" FrameworkAlternate="efcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToDebugString(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, bool singleLine, bool includeIndexes, string indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDebugString (navigation As INavigation, Optional singleLine As Boolean = true, Optional includeIndexes As Boolean = false, Optional indent As String = &quot;&quot;) As String" FrameworkAlternate="efcore-3.0" />
      <MemberSignature Language="F#" Value="static member ToDebugString : Microsoft.EntityFrameworkCore.Metadata.INavigation * bool * bool * string -&gt; string" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.ToDebugString (navigation, singleLine, includeIndexes, indent)" />
      <MemberSignature Language="C#" Value="public static string ToDebugString (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, bool singleLine, bool includeIndexes, string indent);" FrameworkAlternate="efcore-3.1" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDebugString (navigation As INavigation, singleLine As Boolean, includeIndexes As Boolean, indent As String) As String" FrameworkAlternate="efcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="singleLine" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="includeIndexes" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="indent" Type="System.String" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="singleLine">To be added.</param>
        <param name="includeIndexes">To be added.</param>
        <param name="indent">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDebugString">
      <MemberSignature Language="C#" Value="public static string ToDebugString (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, bool singleLine = true, bool includeIndexes = false, string indent = &quot;&quot;, bool detailed = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToDebugString(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, bool singleLine, bool includeIndexes, string indent, bool detailed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Boolean,System.Boolean,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDebugString (navigation As INavigation, Optional singleLine As Boolean = true, Optional includeIndexes As Boolean = false, Optional indent As String = &quot;&quot;, Optional detailed As Boolean = true) As String" />
      <MemberSignature Language="F#" Value="static member ToDebugString : Microsoft.EntityFrameworkCore.Metadata.INavigation * bool * bool * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.ToDebugString (navigation, singleLine, includeIndexes, indent, detailed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" Index="0" FrameworkAlternate="efcore-3.1" />
        <Parameter Name="singleLine" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.1" />
        <Parameter Name="includeIndexes" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.1" />
        <Parameter Name="indent" Type="System.String" Index="3" FrameworkAlternate="efcore-3.1" />
        <Parameter Name="detailed" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="singleLine">To be added.</param>
        <param name="includeIndexes">To be added.</param>
        <param name="indent">To be added.</param>
        <param name="detailed">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
