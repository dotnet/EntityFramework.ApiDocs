<Type Name="PropertyAccessors" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors">
  <TypeSignature Language="C#" Value="public sealed class PropertyAccessors" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyAccessors extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyAccessors" />
  <TypeSignature Language="F#" Value="type PropertyAccessors = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyAccessors (Delegate currentValueGetter, Delegate originalValueGetter, Delegate relationshipSnapshotGetter, Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer,object&gt; valueBufferGetter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Delegate currentValueGetter, class System.Delegate originalValueGetter, class System.Delegate relationshipSnapshotGetter, class System.Func`2&lt;valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer, object&gt; valueBufferGetter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.#ctor(System.Delegate,System.Delegate,System.Delegate,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (currentValueGetter As Delegate, originalValueGetter As Delegate, relationshipSnapshotGetter As Delegate, valueBufferGetter As Func(Of ValueBuffer, Object))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors : Delegate * Delegate * Delegate * Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer, obj&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors (currentValueGetter, originalValueGetter, relationshipSnapshotGetter, valueBufferGetter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="currentValueGetter" Type="System.Delegate" Index="0" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="originalValueGetter" Type="System.Delegate" Index="1" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="relationshipSnapshotGetter" Type="System.Delegate" Index="2" FrameworkAlternate="efcore-1.0" />
        <Parameter Name="valueBufferGetter" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object&gt;" Index="3" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <param name="currentValueGetter">To be added.</param>
        <param name="originalValueGetter">To be added.</param>
        <param name="relationshipSnapshotGetter">To be added.</param>
        <param name="valueBufferGetter">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyAccessors (Delegate currentValueGetter, Delegate preStoreGeneratedCurrentValueGetter, Delegate originalValueGetter, Delegate relationshipSnapshotGetter, Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer,object&gt; valueBufferGetter);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Delegate currentValueGetter, class System.Delegate preStoreGeneratedCurrentValueGetter, class System.Delegate originalValueGetter, class System.Delegate relationshipSnapshotGetter, class System.Func`2&lt;valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer, object&gt; valueBufferGetter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.#ctor(System.Delegate,System.Delegate,System.Delegate,System.Delegate,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (currentValueGetter As Delegate, preStoreGeneratedCurrentValueGetter As Delegate, originalValueGetter As Delegate, relationshipSnapshotGetter As Delegate, valueBufferGetter As Func(Of ValueBuffer, Object))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors : Delegate * Delegate * Delegate * Delegate * Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer, obj&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors (currentValueGetter, preStoreGeneratedCurrentValueGetter, originalValueGetter, relationshipSnapshotGetter, valueBufferGetter)" />
      <MemberSignature Language="C#" Value="public PropertyAccessors (Delegate currentValueGetter, Delegate preStoreGeneratedCurrentValueGetter, Delegate? originalValueGetter, Delegate relationshipSnapshotGetter, Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer,object&gt;? valueBufferGetter);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="currentValueGetter" Type="System.Delegate" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="preStoreGeneratedCurrentValueGetter" Type="System.Delegate" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="originalValueGetter" Type="System.Delegate" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="relationshipSnapshotGetter" Type="System.Delegate" Index="3" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="valueBufferGetter" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object&gt;" Index="4" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="currentValueGetter">To be added.</param>
        <param name="preStoreGeneratedCurrentValueGetter">To be added.</param>
        <param name="originalValueGetter">To be added.</param>
        <param name="relationshipSnapshotGetter">To be added.</param>
        <param name="valueBufferGetter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentValueGetter">
      <MemberSignature Language="C#" Value="public Delegate CurrentValueGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate CurrentValueGetter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.CurrentValueGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValueGetter As Delegate" />
      <MemberSignature Language="F#" Value="member this.CurrentValueGetter : Delegate" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.CurrentValueGetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValueGetter">
      <MemberSignature Language="C#" Value="public Delegate OriginalValueGetter { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate OriginalValueGetter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.OriginalValueGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalValueGetter As Delegate" />
      <MemberSignature Language="F#" Value="member this.OriginalValueGetter : Delegate" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.OriginalValueGetter" />
      <MemberSignature Language="C#" Value="public Delegate? OriginalValueGetter { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreStoreGeneratedCurrentValueGetter">
      <MemberSignature Language="C#" Value="public Delegate PreStoreGeneratedCurrentValueGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate PreStoreGeneratedCurrentValueGetter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.PreStoreGeneratedCurrentValueGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreStoreGeneratedCurrentValueGetter As Delegate" />
      <MemberSignature Language="F#" Value="member this.PreStoreGeneratedCurrentValueGetter : Delegate" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.PreStoreGeneratedCurrentValueGetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipSnapshotGetter">
      <MemberSignature Language="C#" Value="public Delegate RelationshipSnapshotGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate RelationshipSnapshotGetter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.RelationshipSnapshotGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipSnapshotGetter As Delegate" />
      <MemberSignature Language="F#" Value="member this.RelationshipSnapshotGetter : Delegate" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.RelationshipSnapshotGetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueBufferGetter">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer,object&gt; ValueBufferGetter { get; }" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer, object&gt; ValueBufferGetter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.ValueBufferGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueBufferGetter As Func(Of ValueBuffer, Object)" />
      <MemberSignature Language="F#" Value="member this.ValueBufferGetter : Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.ValueBufferGetter" />
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer,object&gt;? ValueBufferGetter { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
