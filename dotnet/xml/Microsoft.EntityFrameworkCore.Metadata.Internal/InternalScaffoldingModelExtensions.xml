<Type Name="InternalScaffoldingModelExtensions" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions">
  <TypeSignature Language="C#" Value="public static class InternalScaffoldingModelExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit InternalScaffoldingModelExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module InternalScaffoldingModelExtensions" />
  <TypeSignature Language="F#" Value="type InternalScaffoldingModelExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDatabaseName">
      <MemberSignature Language="C#" Value="public static string? GetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions.GetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseName (model As IReadOnlyModel) As String" />
      <MemberSignature Language="F#" Value="static member GetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel -&gt; string" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions.GetDatabaseName model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" RefType="this" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDatabaseName">
      <MemberSignature Language="C#" Value="public static void SetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions.SetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDatabaseName (model As IMutableModel, value As String)" />
      <MemberSignature Language="F#" Value="static member SetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions.SetDatabaseName (model, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDbSetName">
      <MemberSignature Language="C#" Value="public static void SetDbSetName (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDbSetName(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions.SetDbSetName(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDbSetName (entityType As IMutableEntityType, value As String)" />
      <MemberSignature Language="F#" Value="static member SetDbSetName : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalScaffoldingModelExtensions.SetDbSetName (entityType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
