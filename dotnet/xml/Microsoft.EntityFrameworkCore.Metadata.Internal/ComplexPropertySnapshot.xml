<Type Name="ComplexPropertySnapshot" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertySnapshot">
  <TypeSignature Language="C#" Value="public class ComplexPropertySnapshot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComplexPropertySnapshot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertySnapshot" />
  <TypeSignature Language="VB.NET" Value="Public Class ComplexPropertySnapshot" />
  <TypeSignature Language="F#" Value="type ComplexPropertySnapshot = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComplexPropertySnapshot (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalComplexPropertyBuilder complexPropertyBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.PropertiesSnapshot? properties, System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder&gt;? indexes, System.Collections.Generic.List&lt;(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder, Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource?)&gt;? keys, System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.RelationshipSnapshot&gt;? relationships);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalComplexPropertyBuilder complexPropertyBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertiesSnapshot properties, class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder&gt; indexes, class System.Collections.Generic.List`1&lt;valuetype System.ValueTuple`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;&gt;&gt; keys, class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.RelationshipSnapshot&gt; relationships) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertySnapshot.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalComplexPropertyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.PropertiesSnapshot,System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder},System.Collections.Generic.List{System.ValueTuple{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource}}},System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Metadata.Internal.RelationshipSnapshot})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (complexPropertyBuilder As InternalComplexPropertyBuilder, properties As PropertiesSnapshot, indexes As List(Of InternalIndexBuilder), keys As List(Of ValueTuple(Of InternalKeyBuilder, Nullable(Of ConfigurationSource))), relationships As List(Of RelationshipSnapshot))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertySnapshot : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalComplexPropertyBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.PropertiesSnapshot * System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder&gt; * System.Collections.Generic.List&lt;ValueTuple&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder, Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;&gt;&gt; * System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.RelationshipSnapshot&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertySnapshot" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertySnapshot (complexPropertyBuilder, properties, indexes, keys, relationships)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="complexPropertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalComplexPropertyBuilder" />
        <Parameter Name="properties" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertiesSnapshot" />
        <Parameter Name="indexes" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder&gt;" />
        <Parameter Name="keys" Type="System.Collections.Generic.List&lt;System.ValueTuple&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;&gt;&gt;" />
        <Parameter Name="relationships" Type="System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.RelationshipSnapshot&gt;" />
      </Parameters>
      <Docs>
        <param name="complexPropertyBuilder">To be added.</param>
        <param name="properties">To be added.</param>
        <param name="indexes">To be added.</param>
        <param name="keys">To be added.</param>
        <param name="relationships">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalComplexPropertyBuilder? Attach (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalTypeBaseBuilder typeBaseBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalComplexPropertyBuilder Attach(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalTypeBaseBuilder typeBaseBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertySnapshot.Attach(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalTypeBaseBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Attach (typeBaseBuilder As InternalTypeBaseBuilder) As InternalComplexPropertyBuilder" />
      <MemberSignature Language="F#" Value="abstract member Attach : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalTypeBaseBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalComplexPropertyBuilder&#xA;override this.Attach : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalTypeBaseBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalComplexPropertyBuilder" Usage="complexPropertySnapshot.Attach typeBaseBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalComplexPropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeBaseBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalTypeBaseBuilder" />
      </Parameters>
      <Docs>
        <param name="typeBaseBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexProperty ComplexProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexProperty ComplexProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertySnapshot.ComplexProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ComplexProperty As ComplexProperty" />
      <MemberSignature Language="F#" Value="member this.ComplexProperty : Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexProperty" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertySnapshot.ComplexProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
