<Type Name="RelationalForeignKeyExtensions" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalForeignKeyExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalForeignKeyExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalForeignKeyExtensions" />
  <TypeSignature Language="F#" Value="type RelationalForeignKeyExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AreCompatible">
      <MemberSignature Language="C#" Value="public static bool AreCompatible (this Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, Microsoft.EntityFrameworkCore.Metadata.IForeignKey duplicateForeignKey, bool shouldThrow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreCompatible(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey duplicateForeignKey, bool shouldThrow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions.AreCompatible(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AreCompatible (foreignKey As IForeignKey, duplicateForeignKey As IForeignKey, shouldThrow As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="static member AreCompatible : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.Metadata.IForeignKey * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions.AreCompatible (foreignKey, duplicateForeignKey, shouldThrow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="duplicateForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="shouldThrow" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="duplicateForeignKey">To be added.</param>
        <param name="shouldThrow">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreCompatible">
      <MemberSignature Language="C#" Value="public static bool AreCompatible (this Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, Microsoft.EntityFrameworkCore.Metadata.IForeignKey duplicateForeignKey, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject, bool shouldThrow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreCompatible(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey duplicateForeignKey, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject, bool shouldThrow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions.AreCompatible(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AreCompatible (foreignKey As IForeignKey, duplicateForeignKey As IForeignKey, ByRef storeObject As StoreObjectIdentifier, shouldThrow As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="static member AreCompatible : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.Metadata.IForeignKey * StoreObjectIdentifier * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions.AreCompatible (foreignKey, duplicateForeignKey, storeObject, shouldThrow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="duplicateForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="2" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="shouldThrow" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="duplicateForeignKey">To be added.</param>
        <param name="storeObject">To be added.</param>
        <param name="shouldThrow">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreCompatible">
      <MemberSignature Language="C#" Value="public static bool AreCompatible (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey, Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey duplicateForeignKey, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject, bool shouldThrow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreCompatible(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey duplicateForeignKey, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject, bool shouldThrow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions.AreCompatible(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey,Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AreCompatible (foreignKey As IReadOnlyForeignKey, duplicateForeignKey As IReadOnlyForeignKey, ByRef storeObject As StoreObjectIdentifier, shouldThrow As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="static member AreCompatible : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey * Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey * StoreObjectIdentifier * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions.AreCompatible (foreignKey, duplicateForeignKey, storeObject, shouldThrow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="duplicateForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="shouldThrow" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="duplicateForeignKey">To be added.</param>
        <param name="storeObject">To be added.</param>
        <param name="shouldThrow">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstraintName">
      <MemberSignature Language="C#" Value="public static string? GetConstraintName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier principalStoreObject, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt;? logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetConstraintName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; principalStoreObject, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions.GetConstraintName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConstraintName (foreignKey As IReadOnlyForeignKey, ByRef storeObject As StoreObjectIdentifier, ByRef principalStoreObject As StoreObjectIdentifier, logger As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation)) As String" />
      <MemberSignature Language="F#" Value="static member GetConstraintName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey * StoreObjectIdentifier * StoreObjectIdentifier * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; -&gt; string" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions.GetConstraintName (foreignKey, storeObject, principalStoreObject, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="principalStoreObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="storeObject">To be added.</param>
        <param name="principalStoreObject">To be added.</param>
        <param name="logger">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultName">
      <MemberSignature Language="C#" Value="public static string? GetDefaultName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier principalStoreObject, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt;? logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey foreignKey, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; principalStoreObject, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model/Validation&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions.GetDefaultName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultName (foreignKey As IReadOnlyForeignKey, ByRef storeObject As StoreObjectIdentifier, ByRef principalStoreObject As StoreObjectIdentifier, logger As IDiagnosticsLogger(Of DbLoggerCategory.Model.Validation)) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey * StoreObjectIdentifier * StoreObjectIdentifier * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation&gt; -&gt; string" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyExtensions.GetDefaultName (foreignKey, storeObject, principalStoreObject, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyForeignKey" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="principalStoreObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model+Validation&gt;" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="storeObject">To be added.</param>
        <param name="principalStoreObject">To be added.</param>
        <param name="logger">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
