<Type Name="IFieldMatcher" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.IFieldMatcher">
  <TypeSignature Language="C#" Value="public interface IFieldMatcher" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFieldMatcher" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IFieldMatcher" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFieldMatcher" />
  <TypeSignature Language="F#" Value="type IFieldMatcher = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryMatchFieldName">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo TryMatchFieldName (Microsoft.EntityFrameworkCore.Metadata.IProperty property, System.Reflection.PropertyInfo propertyInfo, System.Collections.Generic.Dictionary&lt;string,System.Reflection.FieldInfo&gt; declaredFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo TryMatchFieldName(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class System.Reflection.PropertyInfo propertyInfo, class System.Collections.Generic.Dictionary`2&lt;string, class System.Reflection.FieldInfo&gt; declaredFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IFieldMatcher.TryMatchFieldName(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Reflection.PropertyInfo,System.Collections.Generic.Dictionary{System.String,System.Reflection.FieldInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryMatchFieldName (property As IProperty, propertyInfo As PropertyInfo, declaredFields As Dictionary(Of String, FieldInfo)) As FieldInfo" />
      <MemberSignature Language="F#" Value="abstract member TryMatchFieldName : Microsoft.EntityFrameworkCore.Metadata.IProperty * System.Reflection.PropertyInfo * System.Collections.Generic.Dictionary&lt;string, System.Reflection.FieldInfo&gt; -&gt; System.Reflection.FieldInfo" Usage="iFieldMatcher.TryMatchFieldName (property, propertyInfo, declaredFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="declaredFields" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Reflection.FieldInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="propertyInfo">To be added.</param>
        <param name="declaredFields">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
