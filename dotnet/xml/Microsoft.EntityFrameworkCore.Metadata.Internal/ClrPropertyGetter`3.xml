<Type Name="ClrPropertyGetter&lt;TEntity,TStructuralType,TValue&gt;" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter&lt;TEntity,TStructuralType,TValue&gt;">
  <TypeSignature Language="C#" Value="public sealed class ClrPropertyGetter&lt;TEntity,TStructuralType,TValue&gt; : Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClrPropertyGetter`3&lt;class TEntity, TStructuralType, TValue&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`3" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClrPropertyGetter(Of TEntity, TStructuralType, TValue)&#xA;Implements IClrPropertyGetter" />
  <TypeSignature Language="F#" Value="type ClrPropertyGetter&lt;'Entity, 'StructuralType, 'Value (requires 'Entity : null)&gt; = class&#xA;    interface IClrPropertyGetter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TStructuralType" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TEntity">To be added.</typeparam>
    <typeparam name="TStructuralType">To be added.</typeparam>
    <typeparam name="TValue">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClrPropertyGetter (Func&lt;TEntity,TValue&gt; getter, Func&lt;TEntity,bool&gt; hasSentinelValue, Func&lt;TStructuralType,TValue&gt; structuralTypeGetter, Func&lt;TStructuralType,bool&gt; hasStructuralTypeSentinelValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TEntity, !TValue&gt; getter, class System.Func`2&lt;!TEntity, bool&gt; hasSentinelValue, class System.Func`2&lt;!TStructuralType, !TValue&gt; structuralTypeGetter, class System.Func`2&lt;!TStructuralType, bool&gt; hasStructuralTypeSentinelValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`3.#ctor(System.Func{`0,`2},System.Func{`0,System.Boolean},System.Func{`1,`2},System.Func{`1,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (getter As Func(Of TEntity, TValue), hasSentinelValue As Func(Of TEntity, Boolean), structuralTypeGetter As Func(Of TStructuralType, TValue), hasStructuralTypeSentinelValue As Func(Of TStructuralType, Boolean))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter&lt;'Entity, 'StructuralType, 'Value (requires 'Entity : null)&gt; : Func&lt;'Entity, 'Value (requires 'Entity : null)&gt; * Func&lt;'Entity, bool (requires 'Entity : null)&gt; * Func&lt;'StructuralType, 'Value&gt; * Func&lt;'StructuralType, bool&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter&lt;'Entity, 'StructuralType, 'Value (requires 'Entity : null)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter&lt;'Entity, 'StructuralType, 'Value (requires 'Entity : null)&gt; (getter, hasSentinelValue, structuralTypeGetter, hasStructuralTypeSentinelValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="getter" Type="System.Func&lt;TEntity,TValue&gt;" />
        <Parameter Name="hasSentinelValue" Type="System.Func&lt;TEntity,System.Boolean&gt;" />
        <Parameter Name="structuralTypeGetter" Type="System.Func&lt;TStructuralType,TValue&gt;" />
        <Parameter Name="hasStructuralTypeSentinelValue" Type="System.Func&lt;TStructuralType,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="getter">To be added.</param>
        <param name="hasSentinelValue">To be added.</param>
        <param name="structuralTypeGetter">To be added.</param>
        <param name="hasStructuralTypeSentinelValue">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClrValue">
      <MemberSignature Language="C#" Value="public object? GetClrValue (object structuralObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetClrValue(object structuralObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`3.GetClrValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClrValue (structuralObject As Object) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetClrValue : obj -&gt; obj&#xA;override this.GetClrValue : obj -&gt; obj" Usage="clrPropertyGetter.GetClrValue structuralObject" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter.GetClrValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structuralObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="structuralObject">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClrValueUsingContainingEntity">
      <MemberSignature Language="C#" Value="public object? GetClrValueUsingContainingEntity (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetClrValueUsingContainingEntity(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`3.GetClrValueUsingContainingEntity(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClrValueUsingContainingEntity (entity As Object) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetClrValueUsingContainingEntity : obj -&gt; obj&#xA;override this.GetClrValueUsingContainingEntity : obj -&gt; obj" Usage="clrPropertyGetter.GetClrValueUsingContainingEntity entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter.GetClrValueUsingContainingEntity(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSentinel">
      <MemberSignature Language="C#" Value="public bool HasSentinel (object structuralObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasSentinel(object structuralObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`3.HasSentinel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasSentinel (structuralObject As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member HasSentinel : obj -&gt; bool&#xA;override this.HasSentinel : obj -&gt; bool" Usage="clrPropertyGetter.HasSentinel structuralObject" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter.HasSentinel(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structuralObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="structuralObject">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSentinelUsingContainingEntity">
      <MemberSignature Language="C#" Value="public bool HasSentinelUsingContainingEntity (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasSentinelUsingContainingEntity(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`3.HasSentinelUsingContainingEntity(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasSentinelUsingContainingEntity (entity As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member HasSentinelUsingContainingEntity : obj -&gt; bool&#xA;override this.HasSentinelUsingContainingEntity : obj -&gt; bool" Usage="clrPropertyGetter.HasSentinelUsingContainingEntity entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter.HasSentinelUsingContainingEntity(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
