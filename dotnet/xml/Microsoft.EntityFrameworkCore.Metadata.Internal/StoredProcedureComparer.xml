<Type Name="StoredProcedureComparer" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureComparer">
  <TypeSignature Language="C#" Value="public sealed class StoredProcedureComparer : System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt;, System.Collections.Generic.IEqualityComparer&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StoredProcedureComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StoredProcedureComparer&#xA;Implements IComparer(Of IStoredProcedure), IEqualityComparer(Of IStoredProcedure)" />
  <TypeSignature Language="F#" Value="type StoredProcedureComparer = class&#xA;    interface IEqualityComparer&lt;IStoredProcedure&gt;&#xA;    interface IComparer&lt;IStoredProcedure&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure? x, Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure? y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure x, class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure,Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As IStoredProcedure, y As IStoredProcedure) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Compare : Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure * Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure -&gt; int&#xA;override this.Compare : Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure * Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure -&gt; int" Usage="storedProcedureComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure" />
        <Parameter Name="y" Type="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure? x, Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure? y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure x, class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureComparer.Equals(Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure,Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As IStoredProcedure, y As IStoredProcedure) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure * Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure -&gt; bool" Usage="storedProcedureComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure" />
        <Parameter Name="y" Type="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureComparer.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As IStoredProcedure) As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure -&gt; int" Usage="storedProcedureComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureComparer Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureComparer Instance" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureComparer.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Instance As StoredProcedureComparer " />
      <MemberSignature Language="F#" Value=" staticval mutable Instance : Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureComparer" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureComparer.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
