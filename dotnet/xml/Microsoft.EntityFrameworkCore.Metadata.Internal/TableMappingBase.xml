<Type Name="TableMappingBase" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase">
  <TypeSignature Language="C#" Value="public class TableMappingBase : Microsoft.EntityFrameworkCore.Infrastructure.Annotatable, Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableMappingBase extends Microsoft.EntityFrameworkCore.Infrastructure.Annotatable implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase" />
  <TypeSignature Language="VB.NET" Value="Public Class TableMappingBase&#xA;Inherits Annotatable&#xA;Implements ITableMappingBase" />
  <TypeSignature Language="F#" Value="type TableMappingBase = class&#xA;    inherit Annotatable&#xA;    interface ITableMappingBase&#xA;    interface IAnnotatable" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableMappingBase extends Microsoft.EntityFrameworkCore.Infrastructure.Annotatable implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase" FrameworkAlternate="efcore-6.0" />
  <TypeSignature Language="F#" Value="type TableMappingBase = class&#xA;    inherit Annotatable&#xA;    interface ITableMappingBase&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" FrameworkAlternate="efcore-6.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Infrastructure.Annotatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-6.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableMappingBase (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase table, bool includesDerivedTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase table, bool includesDerivedTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IEntityType, table As TableBase, includesDerivedTypes As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase (entityType, table, includesDerivedTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="includesDerivedTypes" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="table">To be added.</param>
        <param name="includesDerivedTypes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableMappingBase (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.ITableBase table, bool includesDerivedTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.ITableBase table, bool includesDerivedTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.ITableBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IEntityType, table As ITableBase, includesDerivedTypes As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.ITableBase * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase (entityType, table, includesDerivedTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Metadata.ITableBase" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="includesDerivedTypes" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="table">To be added.</param>
        <param name="includesDerivedTypes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMappings">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt; ColumnMappings { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedSet`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt; ColumnMappings" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.ColumnMappings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ColumnMappings As SortedSet(Of IColumnMappingBase)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.ColumnMappings : System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.ColumnMappings" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnMappingBase&gt; ColumnMappings { get; }" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedSet`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnMappingBase&gt; ColumnMappings" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ColumnMappings As SortedSet(Of ColumnMappingBase)" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.ColumnMappings : System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnMappingBase&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.ColumnMappings" FrameworkAlternate="efcore-6.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-5.0">System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-6.0">System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ColumnMappingBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntityType As IEntityType" />
      <MemberSignature Language="F#" Value="member this.EntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.EntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IncludesDerivedTypes">
      <MemberSignature Language="C#" Value="public virtual bool IncludesDerivedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludesDerivedTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.IncludesDerivedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IncludesDerivedTypes As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludesDerivedTypes : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.IncludesDerivedTypes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.IncludesDerivedTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSharedTablePrincipal">
      <MemberSignature Language="C#" Value="public virtual bool IsSharedTablePrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSharedTablePrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.IsSharedTablePrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsSharedTablePrincipal As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSharedTablePrincipal : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.IsSharedTablePrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsSplitEntityTypePrincipal">
      <MemberSignature Language="C#" Value="public virtual bool IsSplitEntityTypePrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSplitEntityTypePrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.IsSplitEntityTypePrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsSplitEntityTypePrincipal As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSplitEntityTypePrincipal : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.IsSplitEntityTypePrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt; Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt; Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.Microsoft#EntityFrameworkCore#Metadata#ITableMappingBase#ColumnMappings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ColumnMappings As IEnumerable(Of IColumnMappingBase) Implements ITableMappingBase.ColumnMappings" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.ColumnMappings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.ITableBase Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.ITableBase Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.Microsoft#EntityFrameworkCore#Metadata#ITableMappingBase#Table" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Table As ITableBase Implements ITableMappingBase.Table" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table : Microsoft.EntityFrameworkCore.Metadata.ITableBase" Usage="Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ITableBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ITableBase Table { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.ITableBase Table" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.Table" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Table As ITableBase" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.Table : Microsoft.EntityFrameworkCore.Metadata.ITableBase" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.Table" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase Table { get; }" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase Table" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Table As TableBase" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.Table : Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase.Table" FrameworkAlternate="efcore-6.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-5.0">P:Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase.Table</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-5.0">Microsoft.EntityFrameworkCore.Metadata.ITableBase</ReturnType>
        <ReturnType FrameworkAlternate="efcore-6.0">Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
