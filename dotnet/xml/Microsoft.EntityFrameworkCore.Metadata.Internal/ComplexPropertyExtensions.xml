<Type Name="ComplexPropertyExtensions" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyExtensions">
  <TypeSignature Language="C#" Value="public static class ComplexPropertyExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ComplexPropertyExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ComplexPropertyExtensions" />
  <TypeSignature Language="F#" Value="type ComplexPropertyExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetChainToComplexProperty">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IComplexProperty&gt; GetChainToComplexProperty (this Microsoft.EntityFrameworkCore.Metadata.IComplexProperty property);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty&gt; GetChainToComplexProperty(class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty property) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyExtensions.GetChainToComplexProperty(Microsoft.EntityFrameworkCore.Metadata.IComplexProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function GetChainToComplexProperty (property As IComplexProperty) As IEnumerable(Of IComplexProperty)" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member GetChainToComplexProperty : Microsoft.EntityFrameworkCore.Metadata.IComplexProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IComplexProperty&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyExtensions.GetChainToComplexProperty property" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IComplexProperty&gt; GetChainToComplexProperty (this Microsoft.EntityFrameworkCore.Metadata.IComplexProperty property);" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty&gt; GetChainToComplexProperty(class Microsoft.EntityFrameworkCore.Metadata.IComplexProperty property) cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChainToComplexProperty (property As IComplexProperty) As IReadOnlyList(Of IComplexProperty)" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="F#" Value="static member GetChainToComplexProperty : Microsoft.EntityFrameworkCore.Metadata.IComplexProperty -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IComplexProperty&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyExtensions.GetChainToComplexProperty property" FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyExtensions+&lt;GetChainToComplexProperty&gt;d__0))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Metadata.Internal.ComplexPropertyExtensions+&lt;GetChainToComplexProperty&gt;d__0))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-8.0">System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IComplexProperty&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-9.0">System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IComplexProperty&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IComplexProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
