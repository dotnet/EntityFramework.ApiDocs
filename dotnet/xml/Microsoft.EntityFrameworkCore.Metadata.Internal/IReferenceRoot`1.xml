<Type Name="IReferenceRoot&lt;T&gt;" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IReferenceRoot&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReferenceRoot`1&lt;T&gt;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReferenceRoot(Of T)" />
  <TypeSignature Language="F#" Value="type IReferenceRoot&lt;'T&gt; = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IReferenceRoot`1&lt;T&gt;" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public void Release (Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;T&gt; reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release(class Microsoft.EntityFrameworkCore.Metadata.Internal.Reference`1&lt;!T&gt; reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot`1.Release(Microsoft.EntityFrameworkCore.Metadata.Internal.Reference{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Release (reference As Reference(Of T))" />
      <MemberSignature Language="F#" Value="abstract member Release : Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;'T&gt; -&gt; unit" Usage="iReferenceRoot.Release reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="reference">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;T&gt; Track (T object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.Reference`1&lt;!T&gt; Track(!T object) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IReferenceRoot`1.Track(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Track (object As T) As Reference(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Track : 'T -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;'T&gt;" Usage="iReferenceRoot.Track object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.Reference&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="T" />
      </Parameters>
      <Docs>
        <param name="object">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
