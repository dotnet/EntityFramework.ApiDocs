<Type Name="Table" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.Table">
  <TypeSignature Language="C#" Value="public class Table : Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase, Microsoft.EntityFrameworkCore.Metadata.ITable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Table extends Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.ITable, class Microsoft.EntityFrameworkCore.Metadata.ITableBase" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.Table" />
  <TypeSignature Language="VB.NET" Value="Public Class Table&#xA;Inherits TableBase&#xA;Implements ITable" />
  <TypeSignature Language="F#" Value="type Table = class&#xA;    inherit TableBase&#xA;    interface ITable&#xA;    interface ITableBase&#xA;    interface IAnnotatable" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Table extends Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.ITable, class Microsoft.EntityFrameworkCore.Metadata.ITableBase" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type Table = class&#xA;    inherit TableBase&#xA;    interface ITable&#xA;    interface ITableBase&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Internal.TableBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ITable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ITableBase</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Table (string name, string schema, Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel model);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string schema, class Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, schema As String, model As RelationalModel)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.Table : string * string * Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Table" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.Table (name, schema, model)" />
      <MemberSignature Language="C#" Value="public Table (string name, string? schema, Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel model);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModel" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="model">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckConstraints">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;string,Microsoft.EntityFrameworkCore.Metadata.Internal.CheckConstraint&gt; CheckConstraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Metadata.Internal.CheckConstraint&gt; CheckConstraints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.CheckConstraints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CheckConstraints As SortedDictionary(Of String, CheckConstraint)" />
      <MemberSignature Language="F#" Value="member this.CheckConstraints : System.Collections.Generic.SortedDictionary&lt;string, Microsoft.EntityFrameworkCore.Metadata.Internal.CheckConstraint&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.Table.CheckConstraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.CheckConstraint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindColumn">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Metadata.IColumnBase FindColumn (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.IColumnBase FindColumn(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.FindColumn(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindColumn (property As IProperty) As IColumnBase" />
      <MemberSignature Language="F#" Value="override this.FindColumn : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnBase" Usage="table.FindColumn property" />
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Metadata.IColumnBase? FindColumn (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.ITableBase.FindColumn(Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IColumnBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="FindColumn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.Column? FindColumn (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.Column FindColumn(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.FindColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindColumn (name As String) As Column" />
      <MemberSignature Language="F#" Value="override this.FindColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Column" Usage="table.FindColumn name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.Column</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUniqueConstraint">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint FindUniqueConstraint (string name);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint FindUniqueConstraint(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.FindUniqueConstraint(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindUniqueConstraint (name As String) As UniqueConstraint" />
      <MemberSignature Language="F#" Value="abstract member FindUniqueConstraint : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint&#xA;override this.FindUniqueConstraint : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint" Usage="table.FindUniqueConstraint name" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint? FindUniqueConstraint (string name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyConstraints">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;string,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt; ForeignKeyConstraints { get; }" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt; ForeignKeyConstraints" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.ForeignKeyConstraints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ForeignKeyConstraints As SortedDictionary(Of String, ForeignKeyConstraint)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="member this.ForeignKeyConstraints : System.Collections.Generic.SortedDictionary&lt;string, Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.Table.ForeignKeyConstraints" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt; ForeignKeyConstraints { get; }" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedSet`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt; ForeignKeyConstraints" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ForeignKeyConstraints As SortedSet(Of ForeignKeyConstraint)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.ForeignKeyConstraints : System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.Table.ForeignKeyConstraints" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">System.Collections.Generic.SortedDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Indexes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;string,Microsoft.EntityFrameworkCore.Metadata.Internal.TableIndex&gt; Indexes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Metadata.Internal.TableIndex&gt; Indexes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Indexes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Indexes As SortedDictionary(Of String, TableIndex)" />
      <MemberSignature Language="F#" Value="member this.Indexes : System.Collections.Generic.SortedDictionary&lt;string, Microsoft.EntityFrameworkCore.Metadata.Internal.TableIndex&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Indexes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.TableIndex&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExcludedFromMigrations">
      <MemberSignature Language="C#" Value="public virtual bool IsExcludedFromMigrations { get; set; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExcludedFromMigrations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.IsExcludedFromMigrations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsExcludedFromMigrations As Boolean" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="member this.IsExcludedFromMigrations : bool with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.Table.IsExcludedFromMigrations" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="C#" Value="public virtual bool IsExcludedFromMigrations { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsExcludedFromMigrations As Boolean" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="member this.IsExcludedFromMigrations : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.Table.IsExcludedFromMigrations" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">P:Microsoft.EntityFrameworkCore.Metadata.ITable.IsExcludedFromMigrations</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITable.CheckConstraints">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.CheckConstraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.CheckConstraints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Microsoft#EntityFrameworkCore#Metadata#ITable#CheckConstraints" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CheckConstraints As IEnumerable(Of ICheckConstraint) Implements ITable.CheckConstraints" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITable.CheckConstraints : seq&lt;Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ITable.CheckConstraints" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITable.CheckConstraints</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITable.Columns">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IColumn&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Microsoft#EntityFrameworkCore#Metadata#ITable#Columns" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Columns As IEnumerable(Of IColumn) Implements ITable.Columns" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITable.Columns : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ITable.Columns" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITable.Columns</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITable.EntityTypeMappings">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ITableMapping&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.EntityTypeMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ITableMapping&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.EntityTypeMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Microsoft#EntityFrameworkCore#Metadata#ITable#EntityTypeMappings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property EntityTypeMappings As IEnumerable(Of ITableMapping) Implements ITable.EntityTypeMappings" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITable.EntityTypeMappings : seq&lt;Microsoft.EntityFrameworkCore.Metadata.ITableMapping&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ITable.EntityTypeMappings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITable.EntityTypeMappings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ITableMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IColumn ITable.FindColumn (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-5.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IColumn Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Microsoft#EntityFrameworkCore#Metadata#ITable#FindColumn(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Function FindColumn (property As IProperty) As IColumn Implements ITable.FindColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IColumn" Usage="table.Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn property" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IColumn? ITable.FindColumn (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn(Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IColumn ITable.FindColumn (string name);" FrameworkAlternate="efcore-5.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IColumn Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Microsoft#EntityFrameworkCore#Metadata#ITable#FindColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindColumn (name As String) As IColumn Implements ITable.FindColumn" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IColumn&#xA;override this.Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IColumn" Usage="table.Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn name" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IColumn? ITable.FindColumn (string name);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.ITable.FindColumn(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITable.ForeignKeyConstraints">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.ForeignKeyConstraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.ForeignKeyConstraints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Microsoft#EntityFrameworkCore#Metadata#ITable#ForeignKeyConstraints" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ForeignKeyConstraints As IEnumerable(Of IForeignKeyConstraint) Implements ITable.ForeignKeyConstraints" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITable.ForeignKeyConstraints : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ITable.ForeignKeyConstraints" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITable.ForeignKeyConstraints</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITable.Indexes">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ITableIndex&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.Indexes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ITableIndex&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.Indexes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Microsoft#EntityFrameworkCore#Metadata#ITable#Indexes" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Indexes As IEnumerable(Of ITableIndex) Implements ITable.Indexes" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITable.Indexes : seq&lt;Microsoft.EntityFrameworkCore.Metadata.ITableIndex&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ITable.Indexes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITable.Indexes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ITableIndex&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITable.PrimaryKey">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IPrimaryKeyConstraint Microsoft.EntityFrameworkCore.Metadata.ITable.PrimaryKey { get; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IPrimaryKeyConstraint Microsoft.EntityFrameworkCore.Metadata.ITable.PrimaryKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Microsoft#EntityFrameworkCore#Metadata#ITable#PrimaryKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property PrimaryKey As IPrimaryKeyConstraint Implements ITable.PrimaryKey" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITable.PrimaryKey : Microsoft.EntityFrameworkCore.Metadata.IPrimaryKeyConstraint" Usage="Microsoft.EntityFrameworkCore.Metadata.ITable.PrimaryKey" />
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IPrimaryKeyConstraint? Microsoft.EntityFrameworkCore.Metadata.ITable.PrimaryKey { get; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITable.PrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IPrimaryKeyConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITable.ReferencingForeignKeyConstraints">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.ReferencingForeignKeyConstraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.ReferencingForeignKeyConstraints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Microsoft#EntityFrameworkCore#Metadata#ITable#ReferencingForeignKeyConstraints" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReferencingForeignKeyConstraints As IEnumerable(Of IForeignKeyConstraint) Implements ITable.ReferencingForeignKeyConstraints" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITable.ReferencingForeignKeyConstraints : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ITable.ReferencingForeignKeyConstraints" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITable.ReferencingForeignKeyConstraints</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKeyConstraint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITable.Triggers">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ITrigger&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ITrigger&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.Triggers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Microsoft#EntityFrameworkCore#Metadata#ITable#Triggers" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Triggers As IEnumerable(Of ITrigger) Implements ITable.Triggers" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITable.Triggers : seq&lt;Microsoft.EntityFrameworkCore.Metadata.ITrigger&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ITable.Triggers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITable.Triggers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ITrigger&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.ITable.UniqueConstraints">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.UniqueConstraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint&gt; Microsoft.EntityFrameworkCore.Metadata.ITable.UniqueConstraints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Microsoft#EntityFrameworkCore#Metadata#ITable#UniqueConstraints" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UniqueConstraints As IEnumerable(Of IUniqueConstraint) Implements ITable.UniqueConstraints" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.ITable.UniqueConstraints : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.ITable.UniqueConstraints" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.ITable.UniqueConstraints</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IUniqueConstraint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="PrimaryKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint PrimaryKey { get; set; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint PrimaryKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.PrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PrimaryKey As UniqueConstraint" />
      <MemberSignature Language="F#" Value="member this.PrimaryKey : Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.Table.PrimaryKey" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint? PrimaryKey { get; set; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencingForeignKeyConstraints">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt; ReferencingForeignKeyConstraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedSet`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt; ReferencingForeignKeyConstraints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.ReferencingForeignKeyConstraints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReferencingForeignKeyConstraints As SortedSet(Of ForeignKeyConstraint)" />
      <MemberSignature Language="F#" Value="member this.ReferencingForeignKeyConstraints : System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.Table.ReferencingForeignKeyConstraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedSet&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyConstraint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="table.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;string,Microsoft.EntityFrameworkCore.Metadata.ITrigger&gt; Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Metadata.ITrigger&gt; Triggers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Triggers As SortedDictionary(Of String, ITrigger)" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Collections.Generic.SortedDictionary&lt;string, Microsoft.EntityFrameworkCore.Metadata.ITrigger&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.Table.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Metadata.ITrigger&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueConstraints">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedDictionary&lt;string,Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint&gt; UniqueConstraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2&lt;string, class Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint&gt; UniqueConstraints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Table.UniqueConstraints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UniqueConstraints As SortedDictionary(Of String, UniqueConstraint)" />
      <MemberSignature Language="F#" Value="member this.UniqueConstraints : System.Collections.Generic.SortedDictionary&lt;string, Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.Table.UniqueConstraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.UniqueConstraint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
