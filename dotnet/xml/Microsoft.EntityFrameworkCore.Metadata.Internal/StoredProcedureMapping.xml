<Type Name="StoredProcedureMapping" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping">
  <TypeSignature Language="C#" Value="public class StoredProcedureMapping : Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt;, Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StoredProcedureMapping extends Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt; implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping, class Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class StoredProcedureMapping&#xA;Inherits TableMappingBase(Of IStoredProcedureResultColumnMapping)&#xA;Implements IStoredProcedureMapping" />
  <TypeSignature Language="F#" Value="type StoredProcedureMapping = class&#xA;    inherit TableMappingBase&lt;IStoredProcedureResultColumnMapping&gt;&#xA;    interface IStoredProcedureMapping&#xA;    interface ITableMappingBase&#xA;    interface IAnnotatable&#xA;    interface IReadOnlyAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Internal.TableMappingBase&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TColumnMapping">Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ITableMappingBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StoredProcedureMapping (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure storeStoredProcedure, Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure storedProcedure, Microsoft.EntityFrameworkCore.Metadata.ITableMapping? tableMapping, bool includesDerivedTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure storeStoredProcedure, class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure storedProcedure, class Microsoft.EntityFrameworkCore.Metadata.ITableMapping tableMapping, bool includesDerivedTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure,Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure,Microsoft.EntityFrameworkCore.Metadata.ITableMapping,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IEntityType, storeStoredProcedure As StoreStoredProcedure, storedProcedure As IStoredProcedure, tableMapping As ITableMapping, includesDerivedTypes As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure * Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure * Microsoft.EntityFrameworkCore.Metadata.ITableMapping * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping (entityType, storeStoredProcedure, storedProcedure, tableMapping, includesDerivedTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="storeStoredProcedure" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.StoreStoredProcedure" />
        <Parameter Name="storedProcedure" Type="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure" />
        <Parameter Name="tableMapping" Type="Microsoft.EntityFrameworkCore.Metadata.ITableMapping" />
        <Parameter Name="includesDerivedTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="storeStoredProcedure">To be added.</param>
        <param name="storedProcedure">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <param name="includesDerivedTypes">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameterMapping">
      <MemberSignature Language="C#" Value="public virtual bool AddParameterMapping (Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping parameterMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddParameterMapping(class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping parameterMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.AddParameterMapping(Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddParameterMapping (parameterMapping As IStoredProcedureParameterMapping) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AddParameterMapping : Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping -&gt; bool&#xA;override this.AddParameterMapping : Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping -&gt; bool" Usage="storedProcedureMapping.AddParameterMapping parameterMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterMapping" Type="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping" />
      </Parameters>
      <Docs>
        <param name="parameterMapping">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.DebugView DebugView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.DebugView" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DebugView As DebugView" />
      <MemberSignature Language="F#" Value="member this.DebugView : Microsoft.EntityFrameworkCore.Infrastructure.DebugView" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.DebugView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.DebugView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ParameterMappings">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ParameterMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ParameterMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedureMapping#ParameterMappings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ParameterMappings As IEnumerable(Of IStoredProcedureParameterMapping) Implements IStoredProcedureMapping.ParameterMappings" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ParameterMappings : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ParameterMappings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ParameterMappings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ResultColumnMappings">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ResultColumnMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt; Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ResultColumnMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.Microsoft#EntityFrameworkCore#Metadata#IStoredProcedureMapping#ResultColumnMappings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ResultColumnMappings As IEnumerable(Of IStoredProcedureResultColumnMapping) Implements IStoredProcedureMapping.ResultColumnMappings" />
      <MemberSignature Language="F#" Value="member this.Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ResultColumnMappings : seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ResultColumnMappings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.ResultColumnMappings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ParameterMappings">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt; ParameterMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt; ParameterMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.ParameterMappings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParameterMappings As List(Of IStoredProcedureParameterMapping)" />
      <MemberSignature Language="F#" Value="member this.ParameterMappings : System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.ParameterMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoredProcedure">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure StoredProcedure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure StoredProcedure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.StoredProcedure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StoredProcedure As IStoredProcedure" />
      <MemberSignature Language="F#" Value="member this.StoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.StoredProcedure" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.StoredProcedure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoredProcedure</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="StoredProcedureIdentifier">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier StoredProcedureIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier StoredProcedureIdentifier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.StoredProcedureIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StoredProcedureIdentifier As StoreObjectIdentifier" />
      <MemberSignature Language="F#" Value="member this.StoredProcedureIdentifier : Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.StoredProcedureIdentifier" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.StoredProcedureIdentifier</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="StoreStoredProcedure">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure StoreStoredProcedure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure StoreStoredProcedure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.StoreStoredProcedure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StoreStoredProcedure As IStoreStoredProcedure" />
      <MemberSignature Language="F#" Value="member this.StoreStoredProcedure : Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.StoreStoredProcedure" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.StoreStoredProcedure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IStoreStoredProcedure</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TableMapping">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.ITableMapping? TableMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.ITableMapping TableMapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.TableMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TableMapping As ITableMapping" />
      <MemberSignature Language="F#" Value="member this.TableMapping : Microsoft.EntityFrameworkCore.Metadata.ITableMapping" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.TableMapping" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureMapping.TableMapping</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ITableMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.StoredProcedureMapping.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="storedProcedureMapping.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
