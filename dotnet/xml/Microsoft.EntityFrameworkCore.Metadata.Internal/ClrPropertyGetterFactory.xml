<Type Name="ClrPropertyGetterFactory" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory">
  <TypeSignature Language="C#" Value="public class ClrPropertyGetterFactory : Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter&gt;" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClrPropertyGetterFactory extends Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter&gt;" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ClrPropertyGetterFactory&#xA;Inherits ClrAccessorFactory(Of IClrPropertyGetter)" />
  <TypeSignature Language="F#" Value="type ClrPropertyGetterFactory = class&#xA;    inherit ClrAccessorFactory&lt;IClrPropertyGetter&gt;" />
  <TypeSignature Language="C#" Value="public class ClrPropertyGetterFactory : Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory&lt;Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter&gt;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClrPropertyGetterFactory extends Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter&gt;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter&gt;</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0">Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory&lt;Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TAccessor">Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="efcore-8.0;efcore-9.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClrPropertyGetterFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter Create (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter Create(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Create (property As IPropertyBase) As IClrPropertyGetter" />
      <MemberSignature Language="F#" Value="override this.Create : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter" Usage="clrPropertyGetterFactory.Create property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual void Create (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, out System.Linq.Expressions.Expression getterExpression, out System.Linq.Expressions.Expression hasSentinelExpression, out System.Linq.Expressions.Expression structuralGetterExpression, out System.Linq.Expressions.Expression hasStructuralSentinelExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, [out] class System.Linq.Expressions.Expression&amp; getterExpression, [out] class System.Linq.Expressions.Expression&amp; hasSentinelExpression, [out] class System.Linq.Expressions.Expression&amp; structuralGetterExpression, [out] class System.Linq.Expressions.Expression&amp; hasStructuralSentinelExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Create (propertyBase As IPropertyBase, ByRef getterExpression As Expression, ByRef hasSentinelExpression As Expression, ByRef structuralGetterExpression As Expression, ByRef hasStructuralSentinelExpression As Expression)" />
      <MemberSignature Language="F#" Value="override this.Create : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * Expression * Expression * Expression * Expression -&gt; unit" Usage="clrPropertyGetterFactory.Create (propertyBase, getterExpression, hasSentinelExpression, structuralGetterExpression, hasStructuralSentinelExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="getterExpression" Type="System.Linq.Expressions.Expression" RefType="out" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="hasSentinelExpression" Type="System.Linq.Expressions.Expression" RefType="out" Index="2" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="structuralGetterExpression" Type="System.Linq.Expressions.Expression" RefType="out" Index="3" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="hasStructuralSentinelExpression" Type="System.Linq.Expressions.Expression" RefType="out" Index="4" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="getterExpression">To be added.</param>
        <param name="hasSentinelExpression">To be added.</param>
        <param name="structuralGetterExpression">To be added.</param>
        <param name="hasStructuralSentinelExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt;">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt; (System.Reflection.PropertyInfo property) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter CreateGeneric&lt;class TEntity, TValue, TNonNullableEnumValue&gt;(class System.Reflection.PropertyInfo property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory.CreateGeneric``3(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateGeneric(Of TEntity As Class, TValue As Class, TNonNullableEnumValue As Class) (property As PropertyInfo) As IClrPropertyGetter" />
      <MemberSignature Language="F#" Value="override this.CreateGeneric : System.Reflection.PropertyInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter (requires 'Entity : null)" Usage="clrPropertyGetterFactory.CreateGeneric property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TValue" />
        <TypeParameter Name="TNonNullableEnumValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="System.Reflection.PropertyInfo" Index="0" FrameworkAlternate="efcore-1.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <typeparam name="TNonNullableEnumValue">To be added.</typeparam>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt;">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt; (System.Reflection.PropertyInfo propertyInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter CreateGeneric&lt;class TEntity, TValue, TNonNullableEnumValue&gt;(class System.Reflection.PropertyInfo propertyInfo, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory.CreateGeneric``3(System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateGeneric(Of TEntity As Class, TValue As Class, TNonNullableEnumValue As Class) (propertyInfo As PropertyInfo, propertyBase As IPropertyBase) As IClrPropertyGetter" />
      <MemberSignature Language="F#" Value="override this.CreateGeneric : System.Reflection.PropertyInfo * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter (requires 'Entity : null)" Usage="clrPropertyGetterFactory.CreateGeneric (propertyInfo, propertyBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TValue" />
        <TypeParameter Name="TNonNullableEnumValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <typeparam name="TNonNullableEnumValue">To be added.</typeparam>
        <param name="propertyInfo">To be added.</param>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric&lt;TEntity,TStructuralType,TValue,TNonNullableEnumValue&gt;">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter CreateGeneric&lt;TEntity,TStructuralType,TValue,TNonNullableEnumValue&gt; (System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase? propertyBase) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter CreateGeneric&lt;class TEntity, TStructuralType, TValue, TNonNullableEnumValue&gt;(class System.Reflection.MemberInfo memberInfo, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory.CreateGeneric``4(System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateGeneric(Of TEntity As Class, TStructuralType As Class, TValue As Class, TNonNullableEnumValue As Class) (memberInfo As MemberInfo, propertyBase As IPropertyBase) As IClrPropertyGetter" />
      <MemberSignature Language="F#" Value="override this.CreateGeneric : System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter (requires 'Entity : null)" Usage="clrPropertyGetterFactory.CreateGeneric (memberInfo, propertyBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TStructuralType" />
        <TypeParameter Name="TValue" />
        <TypeParameter Name="TNonNullableEnumValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TStructuralType">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <typeparam name="TNonNullableEnumValue">To be added.</typeparam>
        <param name="memberInfo">To be added.</param>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric&lt;TEntity,TStructuralType,TValue&gt;">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt; (System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) where TEntity : class;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter CreateGeneric&lt;class TEntity, TValue, TNonNullableEnumValue&gt;(class System.Reflection.MemberInfo memberInfo, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory.CreateGeneric``3(System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateGeneric(Of TEntity As Class, TValue As Class, TNonNullableEnumValue As Class) (memberInfo As MemberInfo, propertyBase As IPropertyBase) As IClrPropertyGetter" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="override this.CreateGeneric : System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter (requires 'Entity : null)" Usage="clrPropertyGetterFactory.CreateGeneric (memberInfo, propertyBase)" />
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt; (System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase? propertyBase) where TEntity : class;" FrameworkAlternate="efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter CreateGeneric&lt;TEntity,TStructuralType,TValue&gt; (System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase? propertyBase) where TEntity : class;" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter CreateGeneric&lt;class TEntity, TStructuralType, TValue&gt;(class System.Reflection.MemberInfo memberInfo, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" FrameworkAlternate="efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateGeneric(Of TEntity As Class, TStructuralType As Class, TValue As Class) (memberInfo As MemberInfo, propertyBase As IPropertyBase) As IClrPropertyGetter" FrameworkAlternate="efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IClrPropertyGetter</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" Index="0">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TValue" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <TypeParameter Name="TStructuralType" Index="1" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
        <TypeParameter Name="TNonNullableEnumValue" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <TypeParameter Name="TValue" Index="2" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-9.0" />
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-9.0">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-9.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TStructuralType">To be added.</typeparam>
        <typeparam name="TNonNullableEnumValue">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="memberInfo">To be added.</param>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMemberInfo">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MemberInfo GetMemberInfo (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo GetMemberInfo(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory.GetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetMemberInfo (propertyBase As IPropertyBase) As MemberInfo" />
      <MemberSignature Language="F#" Value="override this.GetMemberInfo : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; System.Reflection.MemberInfo" Usage="clrPropertyGetterFactory.GetMemberInfo propertyBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" Index="0" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory Instance" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Instance As ClrPropertyGetterFactory " />
      <MemberSignature Language="F#" Value=" staticval mutable Instance : Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
