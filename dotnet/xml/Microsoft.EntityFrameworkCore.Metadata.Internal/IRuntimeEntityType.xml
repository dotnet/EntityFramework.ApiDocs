<Type Name="IRuntimeEntityType" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType">
  <TypeSignature Language="C#" Value="public interface IRuntimeEntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRuntimeEntityType implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase, class Microsoft.EntityFrameworkCore.Metadata.ITypeBase" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRuntimeEntityType&#xA;Implements IEntityType" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="F#" Value="type IRuntimeEntityType = interface&#xA;    interface IEntityType&#xA;    interface IReadOnlyEntityType&#xA;    interface IReadOnlyTypeBase&#xA;    interface IReadOnlyAnnotatable&#xA;    interface ITypeBase&#xA;    interface IAnnotatable" FrameworkAlternate="efcore-6.0;efcore-7.0" />
  <TypeSignature Language="C#" Value="public interface IRuntimeEntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeTypeBase" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRuntimeEntityType implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeTypeBase, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType, class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase, class Microsoft.EntityFrameworkCore.Metadata.ITypeBase" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRuntimeEntityType&#xA;Implements IEntityType, IRuntimeTypeBase" FrameworkAlternate="efcore-8.0" />
  <TypeSignature Language="F#" Value="type IRuntimeEntityType = interface&#xA;    interface IEntityType&#xA;    interface IReadOnlyEntityType&#xA;    interface IReadOnlyTypeBase&#xA;    interface IReadOnlyAnnotatable&#xA;    interface ITypeBase&#xA;    interface IAnnotatable&#xA;    interface IRuntimeTypeBase" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IEntityType</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTypeBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ITypeBase</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-8.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeTypeBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType? BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType BaseType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseType As IRuntimeEntityType" />
      <MemberSignature Language="F#" Value="member this.BaseType : Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the base type of this entity type. Returns <see langword="null" /> if this is not a derived type in an inheritance
                hierarchy.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexPropertyCount">
      <MemberSignature Language="C#" Value="public virtual int ComplexPropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ComplexPropertyCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.ComplexPropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ComplexPropertyCount As Integer" />
      <MemberSignature Language="F#" Value="member this.ComplexPropertyCount : int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.ComplexPropertyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Counts">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts Counts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts Counts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.Counts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Counts As PropertyCounts" />
      <MemberSignature Language="F#" Value="member this.Counts : Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.Counts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyShadowValuesFactory">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; EmptyShadowValuesFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; EmptyShadowValuesFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.EmptyShadowValuesFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyShadowValuesFactory As Func(Of ISnapshot)" />
      <MemberSignature Language="F#" Value="member this.EmptyShadowValuesFactory : Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.EmptyShadowValuesFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructorBindingConfigurationSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetConstructorBindingConfigurationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetConstructorBindingConfigurationSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.GetConstructorBindingConfigurationSource" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructorBindingConfigurationSource () As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="abstract member GetConstructorBindingConfigurationSource : unit -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="iRuntimeEntityType.GetConstructorBindingConfigurationSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceOnlyConstructorBindingConfigurationSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetServiceOnlyConstructorBindingConfigurationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetServiceOnlyConstructorBindingConfigurationSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.GetServiceOnlyConstructorBindingConfigurationSource" />
      <MemberSignature Language="VB.NET" Value="Public Function GetServiceOnlyConstructorBindingConfigurationSource () As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceOnlyConstructorBindingConfigurationSource : unit -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="iRuntimeEntityType.GetServiceOnlyConstructorBindingConfigurationSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceFactory">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext,object&gt; InstanceFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;valuetype Microsoft.EntityFrameworkCore.Storage.MaterializationContext, object&gt; InstanceFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.InstanceFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceFactory As Func(Of MaterializationContext, Object)" />
      <MemberSignature Language="F#" Value="member this.InstanceFactory : Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.InstanceFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationCount">
      <MemberSignature Language="C#" Value="public virtual int NavigationCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NavigationCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.NavigationCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NavigationCount As Integer" />
      <MemberSignature Language="F#" Value="member this.NavigationCount : int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.NavigationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValueCount">
      <MemberSignature Language="C#" Value="public virtual int OriginalValueCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OriginalValueCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.OriginalValueCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalValueCount As Integer" />
      <MemberSignature Language="F#" Value="member this.OriginalValueCount : int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.OriginalValueCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValuesFactory">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; OriginalValuesFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; OriginalValuesFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.OriginalValuesFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalValuesFactory As Func(Of InternalEntityEntry, ISnapshot)" />
      <MemberSignature Language="F#" Value="member this.OriginalValuesFactory : Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.OriginalValuesFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCount">
      <MemberSignature Language="C#" Value="public virtual int PropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PropertyCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.PropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PropertyCount As Integer" />
      <MemberSignature Language="F#" Value="member this.PropertyCount : int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.PropertyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipPropertyCount">
      <MemberSignature Language="C#" Value="public virtual int RelationshipPropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RelationshipPropertyCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.RelationshipPropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RelationshipPropertyCount As Integer" />
      <MemberSignature Language="F#" Value="member this.RelationshipPropertyCount : int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.RelationshipPropertyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipSnapshotFactory">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; RelationshipSnapshotFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; RelationshipSnapshotFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.RelationshipSnapshotFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipSnapshotFactory As Func(Of InternalEntityEntry, ISnapshot)" />
      <MemberSignature Language="F#" Value="member this.RelationshipSnapshotFactory : Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.RelationshipSnapshotFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOnlyConstructorBinding">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.InstantiationBinding? ServiceOnlyConstructorBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.InstantiationBinding ServiceOnlyConstructorBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.ServiceOnlyConstructorBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceOnlyConstructorBinding As InstantiationBinding" />
      <MemberSignature Language="F#" Value="member this.ServiceOnlyConstructorBinding : Microsoft.EntityFrameworkCore.Metadata.InstantiationBinding" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.ServiceOnlyConstructorBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.InstantiationBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowPropertyCount">
      <MemberSignature Language="C#" Value="public virtual int ShadowPropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowPropertyCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.ShadowPropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ShadowPropertyCount As Integer" />
      <MemberSignature Language="F#" Value="member this.ShadowPropertyCount : int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.ShadowPropertyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowValuesFactory">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; ShadowValuesFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; ShadowValuesFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.ShadowValuesFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShadowValuesFactory As Func(Of ValueBuffer, ISnapshot)" />
      <MemberSignature Language="F#" Value="member this.ShadowValuesFactory : Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.ShadowValuesFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Storage.ValueBuffer,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreGeneratedCount">
      <MemberSignature Language="C#" Value="public virtual int StoreGeneratedCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StoreGeneratedCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.StoreGeneratedCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StoreGeneratedCount As Integer" />
      <MemberSignature Language="F#" Value="member this.StoreGeneratedCount : int" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.StoreGeneratedCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreGeneratedValuesFactory">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; StoreGeneratedValuesFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; StoreGeneratedValuesFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.StoreGeneratedValuesFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreGeneratedValuesFactory As Func(Of ISnapshot)" />
      <MemberSignature Language="F#" Value="member this.StoreGeneratedValuesFactory : Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.StoreGeneratedValuesFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporaryValuesFactory">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; TemporaryValuesFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt; TemporaryValuesFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.TemporaryValuesFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemporaryValuesFactory As Func(Of InternalEntityEntry, ISnapshot)" />
      <MemberSignature Language="F#" Value="member this.TemporaryValuesFactory : Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.IRuntimeEntityType.TemporaryValuesFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
