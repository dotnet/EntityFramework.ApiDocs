<Type Name="HiLoValueGeneratorState" FullName="Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState">
  <TypeSignature Language="C#" Value="public class HiLoValueGeneratorState" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HiLoValueGeneratorState extends System.Object" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState" />
  <TypeSignature Language="VB.NET" Value="Public Class HiLoValueGeneratorState" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="F#" Value="type HiLoValueGeneratorState = class" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
  <TypeSignature Language="C#" Value="public class HiLoValueGeneratorState : IDisposable" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HiLoValueGeneratorState extends System.Object implements class System.IDisposable" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="VB.NET" Value="Public Class HiLoValueGeneratorState&#xA;Implements IDisposable" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <TypeSignature Language="F#" Value="type HiLoValueGeneratorState = class&#xA;    interface IDisposable" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                The thread safe state used by <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGenerator`1" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-value-generation">EF Core value generation</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HiLoValueGeneratorState (int blockSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 blockSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blockSize As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState : int -&gt; Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState" Usage="new Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState blockSize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blockSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockSize">
                The number of sequential values that can be used, starting from the low value, before
                a new low value must be fetched from the database.
            </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="hiLoValueGeneratorState.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Releases the allocated resources for this instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public virtual TValue Next&lt;TValue&gt; (Func&lt;long&gt; getNewLowValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TValue Next&lt;TValue&gt;(class System.Func`1&lt;int64&gt; getNewLowValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState.Next``1(System.Func{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next(Of TValue) (getNewLowValue As Func(Of Long)) As TValue" />
      <MemberSignature Language="F#" Value="abstract member Next : Func&lt;int64&gt; -&gt; 'Value&#xA;override this.Next : Func&lt;int64&gt; -&gt; 'Value" Usage="hiLoValueGeneratorState.Next getNewLowValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="getNewLowValue" Type="System.Func&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of values being generated.</typeparam>
        <param name="getNewLowValue">
                A function to get the next low value if needed.
            </param>
        <summary>
                Gets a value to be assigned to a property.
            </summary>
        <returns>The value to be assigned to a property.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;TValue&gt; NextAsync&lt;TValue&gt; (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;long&gt;&gt; getNewLowValue, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!TValue&gt; NextAsync&lt;TValue&gt;(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;int64&gt;&gt; getNewLowValue, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState.NextAsync``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Int64}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextAsync(Of TValue) (getNewLowValue As Func(Of CancellationToken, Task(Of Long)), Optional cancellationToken As CancellationToken = Nothing) As Task(Of TValue)" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="abstract member NextAsync : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;int64&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Value&gt;&#xA;override this.NextAsync : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;int64&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Value&gt;" Usage="hiLoValueGeneratorState.NextAsync (getNewLowValue, cancellationToken)" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;TValue&gt; NextAsync&lt;TValue&gt; (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;long&gt;&gt; getNewLowValue, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;!!TValue&gt; NextAsync&lt;TValue&gt;(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;int64&gt;&gt; getNewLowValue, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextAsync(Of TValue) (getNewLowValue As Func(Of CancellationToken, Task(Of Long)), Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of TValue)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member NextAsync : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;int64&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Value&gt;&#xA;override this.NextAsync : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;int64&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Value&gt;" Usage="hiLoValueGeneratorState.NextAsync (getNewLowValue, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">System.Threading.Tasks.Task&lt;TValue&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Threading.Tasks.ValueTask&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="getNewLowValue" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;System.Int64&gt;&gt;" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The type of values being generated.</typeparam>
        <param name="getNewLowValue">
                A function to get the next low value if needed.
            </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Gets a value to be assigned to a property.
            </summary>
        <returns>The value to be assigned to a property.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
