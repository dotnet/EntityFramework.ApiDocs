<Type Name="ValueGenerator" FullName="Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator">
  <TypeSignature Language="C#" Value="public abstract class ValueGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValueGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueGenerator" />
  <TypeSignature Language="F#" Value="type ValueGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Generates values for properties when an entity is added to a context.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-value-generation">EF Core value generation</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratesStableValues">
      <MemberSignature Language="C#" Value="public virtual bool GeneratesStableValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GeneratesStableValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.GeneratesStableValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GeneratesStableValues As Boolean" />
      <MemberSignature Language="F#" Value="member this.GeneratesStableValues : bool" Usage="Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.GeneratesStableValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether the values generated are stable. That is, the value will always be the
                same for a given property in a given entity, and does not depend on what other values may have been generated
                previously. For example, discriminator values generated for a TPH hierarchy are stable. Stable values will never
                be marked as unknown.
            </summary>
        <value>To be added.</value>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-value-generation">EF Core value generation</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratesTemporaryValues">
      <MemberSignature Language="C#" Value="public abstract bool GeneratesTemporaryValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GeneratesTemporaryValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.GeneratesTemporaryValues" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property GeneratesTemporaryValues As Boolean" />
      <MemberSignature Language="F#" Value="member this.GeneratesTemporaryValues : bool" Usage="Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.GeneratesTemporaryValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether the values generated are temporary (i.e they should be replaced
                by database generated values when the entity is saved) or are permanent (i.e. the generated values
                should be saved to the database).
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
                    An example of temporary value generation is generating negative numbers for an integer primary key
                    that are then replaced by positive numbers generated by the database when the entity is saved. An
                    example of permanent value generation are client-generated values for a <see cref="T:System.Guid" /> primary
                    key which are saved to the database.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-value-generation">EF Core value generation</see> for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public virtual object Next (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Next(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Next (entry As EntityEntry) As Object" />
      <MemberSignature Language="F#" Value="abstract member Next : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry -&gt; obj&#xA;override this.Next : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry -&gt; obj" Usage="valueGenerator.Next entry" />
      <MemberSignature Language="C#" Value="public virtual object? Next (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" />
      </Parameters>
      <Docs>
        <param name="entry">The change tracking entry of the entity for which the value is being generated.</param>
        <summary>
                Gets a value to be assigned to a property.
            </summary>
        <returns>The value to be assigned to a property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-value-generation">EF Core value generation</see> for more information and examples.
            </remarks>
        <para>The change tracking entry of the entity for which the value is being generated.</para>
      </Docs>
    </Member>
    <Member MemberName="NextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; NextAsync (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; NextAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.NextAsync(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextAsync (entry As EntityEntry, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Object)" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="abstract member NextAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.NextAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="valueGenerator.NextAsync (entry, cancellationToken)" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;object&gt; NextAsync (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; NextAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextAsync (entry As EntityEntry, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member NextAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;&#xA;override this.NextAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="valueGenerator.NextAsync (entry, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;object?&gt; NextAsync (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">The change tracking entry of the entity for which the value is being generated.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Gets a value to be assigned to a property.
            </summary>
        <returns>The value to be assigned to a property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-value-generation">EF Core value generation</see> for more information and examples.
            </remarks>
        <para>The change tracking entry of the entity for which the value is being generated.</para>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="NextValue">
      <MemberSignature Language="C#" Value="protected abstract object NextValue (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object NextValue(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.NextValue(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function NextValue (entry As EntityEntry) As Object" />
      <MemberSignature Language="F#" Value="abstract member NextValue : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry -&gt; obj" Usage="valueGenerator.NextValue entry" />
      <MemberSignature Language="C#" Value="protected abstract object? NextValue (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" />
      </Parameters>
      <Docs>
        <param name="entry">The change tracking entry of the entity for which the value is being generated.</param>
        <summary>
                Template method to be overridden by implementations to perform value generation.
            </summary>
        <returns>The generated value.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-value-generation">EF Core value generation</see> for more information and examples.
            </remarks>
        <para>The change tracking entry of the entity for which the value is being generated.</para>
      </Docs>
    </Member>
    <Member MemberName="NextValueAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;object&gt; NextValueAsync (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; NextValueAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.NextValueAsync(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NextValueAsync (entry As EntityEntry, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Object)" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="abstract member NextValueAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.NextValueAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="valueGenerator.NextValueAsync (entry, cancellationToken)" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.ValueTask&lt;object&gt; NextValueAsync (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; NextValueAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NextValueAsync (entry As EntityEntry, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="abstract member NextValueAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;&#xA;override this.NextValueAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="valueGenerator.NextValueAsync (entry, cancellationToken)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.ValueTask&lt;object?&gt; NextValueAsync (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry entry, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entry">The change tracking entry of the entity for which the value is being generated.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Template method to be overridden by implementations to perform value generation.
            </summary>
        <returns>The generated value.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-value-generation">EF Core value generation</see> for more information and examples.
            </remarks>
        <para>The change tracking entry of the entity for which the value is being generated.</para>
        <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="WithConverter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator WithConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator WithConverter(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.WithConverter(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithConverter (converter As ValueConverter) As ValueGenerator" />
      <MemberSignature Language="F#" Value="abstract member WithConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter -&gt; Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&#xA;override this.WithConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter -&gt; Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" Usage="valueGenerator.WithConverter converter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="converter"> The value converter. </param>
        <summary>
                Wraps this <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> such that it processes values converted with the given <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />.
            </summary>
        <returns> A new value generator that works with the converted values. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
