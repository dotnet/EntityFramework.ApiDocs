<Type Name="RelationalOwnedNavigationBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalOwnedNavigationBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalOwnedNavigationBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalOwnedNavigationBuilderExtensions" />
  <TypeSignature Language="F#" Value="type RelationalOwnedNavigationBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="HasCheckConstraint">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder HasCheckConstraint (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder ownedNavigationBuilder, string name, string sql);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder HasCheckConstraint(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder ownedNavigationBuilder, string name, string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.HasCheckConstraint(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasCheckConstraint (ownedNavigationBuilder As OwnedNavigationBuilder, name As String, sql As String) As OwnedNavigationBuilder" />
      <MemberSignature Language="F#" Value="static member HasCheckConstraint : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.HasCheckConstraint (ownedNavigationBuilder, name, sql)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedNavigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder" Index="0" FrameworkAlternate="efcore-5.0" RefType="this" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="sql" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="ownedNavigationBuilder"> The navigation builder for the owned type. </param>
        <param name="name"> The name of the check constraint. </param>
        <param name="sql"> The logical constraint sql used in the check constraint. </param>
        <summary>
                Configures a database check constraint when targeting a relational database.
            </summary>
        <returns> A builder to further configure the navigation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCheckConstraint&lt;TEntity,TDependentEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TEntity,TDependentEntity&gt; HasCheckConstraint&lt;TEntity,TDependentEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TEntity,TDependentEntity&gt; ownedNavigationBuilder, string name, string sql) where TEntity : class where TDependentEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; HasCheckConstraint&lt;class TEntity, class TDependentEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; ownedNavigationBuilder, string name, string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.HasCheckConstraint``2(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder{``0,``1},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasCheckConstraint(Of TEntity As Class, TDependentEntity As Class) (ownedNavigationBuilder As OwnedNavigationBuilder(Of TEntity, TDependentEntity), name As String, sql As String) As OwnedNavigationBuilder(Of TEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="static member HasCheckConstraint : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; (requires 'Entity : null and 'DependentEntity : null)" Usage="Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.HasCheckConstraint (ownedNavigationBuilder, name, sql)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TDependentEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ownedNavigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TEntity,TDependentEntity&gt;" Index="0" FrameworkAlternate="efcore-5.0" RefType="this" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="sql" Type="System.String" Index="2" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"> The entity type owning the relationship. </typeparam>
        <typeparam name="TDependentEntity"> The dependent entity type of the relationship. </typeparam>
        <param name="ownedNavigationBuilder"> The navigation builder for the owned type. </param>
        <param name="name"> The name of the check constraint. </param>
        <param name="sql"> The logical constraint sql used in the check constraint. </param>
        <summary>
                Configures a database check constraint when targeting a relational database.
            </summary>
        <returns> A builder to further configure the navigation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasJsonPropertyName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder HasJsonPropertyName (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder navigationBuilder, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder HasJsonPropertyName(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder navigationBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.HasJsonPropertyName(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasJsonPropertyName (navigationBuilder As OwnedNavigationBuilder, name As String) As OwnedNavigationBuilder" />
      <MemberSignature Language="F#" Value="static member HasJsonPropertyName : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.HasJsonPropertyName (navigationBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="navigationBuilder">The builder for the navigation being configured.</param>
        <param name="name">JSON property name to be used.</param>
        <summary>
                Configures the navigation of an entity mapped to a JSON column, mapping the navigation to a specific JSON property,
                rather than using the navigation name.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasJsonPropertyName&lt;TSource,TTarget&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TSource,TTarget&gt; HasJsonPropertyName&lt;TSource,TTarget&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TSource,TTarget&gt; navigationBuilder, string? name) where TSource : class where TTarget : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TSource, !!TTarget&gt; HasJsonPropertyName&lt;class TSource, class TTarget&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TSource, !!TTarget&gt; navigationBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.HasJsonPropertyName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder{``0,``1},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasJsonPropertyName(Of TSource As Class, TTarget As Class) (navigationBuilder As OwnedNavigationBuilder(Of TSource, TTarget), name As String) As OwnedNavigationBuilder(Of TSource, TTarget)" />
      <MemberSignature Language="F#" Value="static member HasJsonPropertyName : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'Source, 'arget (requires 'Source : null and 'arget : null)&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'Source, 'arget (requires 'Source : null and 'arget : null)&gt; (requires 'Source : null and 'arget : null)" Usage="Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.HasJsonPropertyName (navigationBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TSource,TTarget&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TTarget">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="navigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TSource,TTarget&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TTarget">To be added.</typeparam>
        <param name="navigationBuilder">The builder for the navigation being configured.</param>
        <param name="name">JSON property name to be used.</param>
        <summary>
                Configures the navigation of an entity mapped to a JSON column, mapping the navigation to a specific JSON property,
                rather than using the navigation name.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJson">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder ToJson (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder ToJson(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.ToJson(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToJson (builder As OwnedNavigationBuilder) As OwnedNavigationBuilder" />
      <MemberSignature Language="F#" Value="static member ToJson : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.ToJson builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="builder">The builder for the owned navigation being configured.</param>
        <summary>
                Configures a relationship where this entity type and the entities that it owns are mapped to a JSON column in the database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                This method should only be specified for the outer-most owned entity in the given ownership structure.
                All entities owned by this will be automatically mapped to the same JSON column.
                The ownerships must still be explicitly defined.
                Name of the navigation will be used as the JSON column name.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJson">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder ToJson (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder builder, string? jsonColumnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder ToJson(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder builder, string jsonColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.ToJson(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToJson (builder As OwnedNavigationBuilder, jsonColumnName As String) As OwnedNavigationBuilder" />
      <MemberSignature Language="F#" Value="static member ToJson : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.ToJson (builder, jsonColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="jsonColumnName" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="builder">The builder for the owned navigation being configured.</param>
        <param name="jsonColumnName">JSON column name to use.</param>
        <summary>
                Configures a relationship where this entity type and the entities that it owns are mapped to a JSON column in the database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                This method should only be specified for the outer-most owned entity in the given ownership structure.
                All entities owned by this will be automatically mapped to the same JSON column.
                The ownerships must still be explicitly defined.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJson&lt;TOwnerEntity,TDependentEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt; ToJson&lt;TOwnerEntity,TDependentEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt; builder) where TOwnerEntity : class where TDependentEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TOwnerEntity, !!TDependentEntity&gt; ToJson&lt;class TOwnerEntity, class TDependentEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TOwnerEntity, !!TDependentEntity&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.ToJson``2(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToJson(Of TOwnerEntity As Class, TDependentEntity As Class) (builder As OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity)) As OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="static member ToJson : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; (requires 'OwnerEntity : null and 'DependentEntity : null)" Usage="Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.ToJson builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOwnerEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TDependentEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TOwnerEntity">To be added.</typeparam>
        <typeparam name="TDependentEntity">To be added.</typeparam>
        <param name="builder">The builder for the owned navigation being configured.</param>
        <summary>
                Configures a relationship where this entity type and the entities that it owns are mapped to a JSON column in the database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                This method should only be specified for the outer-most owned entity in the given ownership structure.
                All entities owned by this will be automatically mapped to the same JSON column.
                The ownerships must still be explicitly defined.
                Name of the navigation will be used as the JSON column name.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJson&lt;TOwnerEntity,TDependentEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt; ToJson&lt;TOwnerEntity,TDependentEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt; builder, string? jsonColumnName) where TOwnerEntity : class where TDependentEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TOwnerEntity, !!TDependentEntity&gt; ToJson&lt;class TOwnerEntity, class TDependentEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TOwnerEntity, !!TDependentEntity&gt; builder, string jsonColumnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.ToJson``2(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder{``0,``1},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToJson(Of TOwnerEntity As Class, TDependentEntity As Class) (builder As OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity), jsonColumnName As String) As OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="static member ToJson : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; (requires 'OwnerEntity : null and 'DependentEntity : null)" Usage="Microsoft.EntityFrameworkCore.RelationalOwnedNavigationBuilderExtensions.ToJson (builder, jsonColumnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOwnerEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TDependentEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="jsonColumnName" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TOwnerEntity">To be added.</typeparam>
        <typeparam name="TDependentEntity">To be added.</typeparam>
        <param name="builder">The builder for the owned navigation being configured.</param>
        <param name="jsonColumnName">JSON column name to use.</param>
        <summary>
                Configures a relationship where this entity type and the entities that it owns are mapped to a JSON column in the database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                This method should only be specified for the outer-most owned entity in the given ownership structure.
                All entities owned by this will be automatically mapped to the same JSON column.
                The ownerships must still be explicitly defined.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
