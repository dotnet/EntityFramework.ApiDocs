<Type Name="RelationalTriggerExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalTriggerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalTriggerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalTriggerExtensions" />
  <TypeSignature Language="F#" Value="type RelationalTriggerExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Trigger extension methods for relational database metadata.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-triggers">Database triggers</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDatabaseName">
      <MemberSignature Language="C#" Value="public static string? GetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseName (trigger As IReadOnlyTrigger) As String" />
      <MemberSignature Language="F#" Value="static member GetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetDatabaseName trigger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger" RefType="this" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <summary>
                Gets the name of the trigger in the database.
            </summary>
        <returns>The name of the trigger in the database.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseName">
      <MemberSignature Language="C#" Value="public static string? GetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseName (trigger As IReadOnlyTrigger, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetDatabaseName (trigger, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger" RefType="this" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <param name="storeObject">The identifier of the store object.</param>
        <summary>
                Gets the database name of the trigger.
            </summary>
        <returns>The database name of the trigger for the given store object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseNameConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetDatabaseNameConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetDatabaseNameConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetDatabaseNameConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseNameConfigurationSource (trigger As IConventionTrigger) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetDatabaseNameConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetDatabaseNameConfigurationSource trigger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger" RefType="this" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <summary>
                Gets the configuration source for the database name.
            </summary>
        <returns>The configuration source for the database name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultDatabaseName">
      <MemberSignature Language="C#" Value="public static string? GetDefaultDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetDefaultDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultDatabaseName (trigger As IReadOnlyTrigger) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetDefaultDatabaseName trigger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger" RefType="this" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <summary>
                Returns the default name that would be used for this trigger in the database.
            </summary>
        <returns>The default name that would be used for this trigger in the database.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultDatabaseName">
      <MemberSignature Language="C#" Value="public static string? GetDefaultDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetDefaultDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultDatabaseName (trigger As IReadOnlyTrigger, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetDefaultDatabaseName (trigger, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger" RefType="this" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <param name="storeObject">The identifier of the store object.</param>
        <summary>
                Returns the default database name that would be used for this trigger.
            </summary>
        <returns>The default name that would be used for this trigger.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableName">
      <MemberSignature Language="C#" Value="public static string? GetTableName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger);" FrameworkAlternate="efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTableName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetTableName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTableName (trigger As IReadOnlyTrigger) As String" />
      <MemberSignature Language="F#" Value="static member GetTableName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetTableName trigger" />
      <MemberSignature Language="C#" Value="public static string GetTableName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger);" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger" RefType="this" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <summary>
                Gets the name of the table on which this trigger is defined.
            </summary>
        <returns>The name of the table on which this trigger is defined.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableNameConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetTableNameConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetTableNameConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetTableNameConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTableNameConfigurationSource (trigger As IConventionTrigger) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetTableNameConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetTableNameConfigurationSource trigger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger" RefType="this" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <summary>
                Gets the configuration source for the table name.
            </summary>
        <returns>The configuration source for the database name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableSchema">
      <MemberSignature Language="C#" Value="public static string? GetTableSchema (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTableSchema(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetTableSchema(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTableSchema (trigger As IReadOnlyTrigger) As String" />
      <MemberSignature Language="F#" Value="static member GetTableSchema : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetTableSchema trigger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyTrigger" RefType="this" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <summary>
                Gets the schema of the table on which this trigger is defined.
            </summary>
        <returns>The schema of the table on which this trigger is defined.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableSchemaConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetTableSchemaConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetTableSchemaConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetTableSchemaConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTableSchemaConfigurationSource (trigger As IConventionTrigger) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetTableSchemaConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.GetTableSchemaConfigurationSource trigger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger" RefType="this" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <summary>
                Gets the configuration source for the table schema.
            </summary>
        <returns>The configuration source for the database name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDatabaseName">
      <MemberSignature Language="C#" Value="public static void SetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger trigger, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger trigger, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDatabaseName (trigger As IMutableTrigger, name As String)" />
      <MemberSignature Language="F#" Value="static member SetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetDatabaseName (trigger, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <param name="name">The name of the trigger in the database.</param>
        <summary>
                Sets the name of the trigger in the database.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDatabaseName">
      <MemberSignature Language="C#" Value="public static string? SetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger, string? name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetDatabaseName (trigger As IConventionTrigger, name As String, Optional fromDataAnnotation As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member SetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetDatabaseName (trigger, name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <param name="name">The name of the trigger in the database.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the name of the trigger in the database.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTableName">
      <MemberSignature Language="C#" Value="public static void SetTableName (this Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger trigger, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTableName(class Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger trigger, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetTableName(Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTableName (trigger As IMutableTrigger, name As String)" />
      <MemberSignature Language="F#" Value="static member SetTableName : Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetTableName (trigger, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <param name="name">The name of the table on which this trigger is defined.</param>
        <summary>
                Sets the name of the table on which this trigger is defined.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTableName">
      <MemberSignature Language="C#" Value="public static string? SetTableName (this Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger, string? name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetTableName(class Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetTableName(Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetTableName (trigger As IConventionTrigger, name As String, Optional fromDataAnnotation As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member SetTableName : Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetTableName (trigger, name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <param name="name">The name of the table on which this trigger is defined.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the name of the table on which this trigger is defined.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTableSchema">
      <MemberSignature Language="C#" Value="public static void SetTableSchema (this Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger trigger, string? schema);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTableSchema(class Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger trigger, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetTableSchema(Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTableSchema (trigger As IMutableTrigger, schema As String)" />
      <MemberSignature Language="F#" Value="static member SetTableSchema : Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetTableSchema (trigger, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableTrigger" RefType="this" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <param name="schema">The schema of the table on which this trigger is defined.</param>
        <summary>
                Sets the schema of the table on which this trigger is defined.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTableSchema">
      <MemberSignature Language="C#" Value="public static string? SetTableSchema (this Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger, string? schema, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetTableSchema(class Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger trigger, string schema, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetTableSchema(Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetTableSchema (trigger As IConventionTrigger, schema As String, Optional fromDataAnnotation As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member SetTableSchema : Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalTriggerExtensions.SetTableSchema (trigger, schema, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionTrigger" RefType="this" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="trigger">The trigger.</param>
        <param name="schema">The schema of the table on which this trigger is defined.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the schema of the table on which this trigger is defined.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
