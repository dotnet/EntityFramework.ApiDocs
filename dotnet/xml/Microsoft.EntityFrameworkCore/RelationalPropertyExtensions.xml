<Type Name="RelationalPropertyExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalPropertyExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalPropertyExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalPropertyExtensions" />
  <TypeSignature Language="F#" Value="type RelationalPropertyExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Property extension methods for relational database metadata.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="FindColumn">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IColumnBase FindColumn (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IColumnBase FindColumn(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindColumn(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindColumn (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As IColumnBase" />
      <MemberSignature Language="F#" Value="static member FindColumn : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IColumnBase" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindColumn (property, storeObject)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IColumnBase? FindColumn (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IColumnBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the column corresponding to this property if it's mapped to the given table-like store object.
            </summary>
        <returns>The column to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindOverrides">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable? FindOverrides (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable FindOverrides(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindOverrides (property As IConventionProperty, ByRef storeObject As StoreObjectIdentifier) As IConventionAnnotatable" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="static member FindOverrides : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides (property, storeObject)" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides? FindOverrides (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides FindOverrides(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindOverrides (property As IConventionProperty, ByRef storeObject As StoreObjectIdentifier) As IConventionRelationalPropertyOverrides" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member FindOverrides : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides (property, storeObject)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-6.0">Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
          <para>
                    Returns the property facet overrides for a particular table-like store object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>An object that stores property facet overrides.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindOverrides">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable? FindOverrides (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable FindOverrides(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindOverrides (property As IMutableProperty, ByRef storeObject As StoreObjectIdentifier) As IMutableAnnotatable" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="static member FindOverrides : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides (property, storeObject)" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides? FindOverrides (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides FindOverrides(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindOverrides (property As IMutableProperty, ByRef storeObject As StoreObjectIdentifier) As IMutableRelationalPropertyOverrides" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member FindOverrides : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides (property, storeObject)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-6.0">Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
          <para>
                    Returns the property facet overrides for a particular table-like store object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>An object that stores property facet overrides.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindOverrides">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable FindOverrides (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable FindOverrides(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindOverrides (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As IAnnotatable" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="static member FindOverrides : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides (property, storeObject)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable? FindOverrides (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides? FindOverrides (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides FindOverrides(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindOverrides (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As IRelationalPropertyOverrides" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member FindOverrides : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides (property, storeObject)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
          <para>
                    Returns the property facet overrides for a particular table-like store object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>An object that stores property facet overrides.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindOverrides">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable? FindOverrides (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable FindOverrides(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindOverrides (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As IReadOnlyAnnotatable" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="F#" Value="static member FindOverrides : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides (property, storeObject)" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IReadOnlyRelationalPropertyOverrides? FindOverrides (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyRelationalPropertyOverrides FindOverrides(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindOverrides (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As IReadOnlyRelationalPropertyOverrides" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member FindOverrides : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyRelationalPropertyOverrides" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindOverrides (property, storeObject)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-6.0">Microsoft.EntityFrameworkCore.Infrastructure.IReadOnlyAnnotatable</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.IReadOnlyRelationalPropertyOverrides</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
          <para>
                    Returns the property facet overrides for a particular table-like store object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>An object that stores property facet overrides.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindRelationalMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindRelationalMapping (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindRelationalMapping(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindRelationalMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindRelationalMapping (property As IProperty) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="static member FindRelationalMapping : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindRelationalMapping property" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? FindRelationalMapping (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use FindRelationalTypeMapping")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use FindRelationalTypeMapping")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> for the given property on a finalized model.
            </summary>
        <returns>The type mapping, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindRelationalTypeMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindRelationalTypeMapping (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindRelationalTypeMapping(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindRelationalTypeMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindRelationalTypeMapping (property As IProperty) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="static member FindRelationalTypeMapping : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindRelationalTypeMapping property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> for the given property on a finalized model.
            </summary>
        <returns> The type mapping, or <see langword="null" /> if none was found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindRelationalTypeMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? FindRelationalTypeMapping (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindRelationalTypeMapping(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindRelationalTypeMapping(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindRelationalTypeMapping (property As IReadOnlyProperty) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="static member FindRelationalTypeMapping : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindRelationalTypeMapping property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> for the given property on a finalized model.
            </summary>
        <returns>The type mapping, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindRelationalTypeMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindRelationalTypeMapping (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindRelationalTypeMapping(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindRelationalTypeMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindRelationalTypeMapping (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="static member FindRelationalTypeMapping : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindRelationalTypeMapping (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> for the given property on a finalized model.
            </summary>
        <returns> The type mapping, or <see langword="null" /> if none was found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindRelationalTypeMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? FindRelationalTypeMapping (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindRelationalTypeMapping(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindRelationalTypeMapping(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindRelationalTypeMapping (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="static member FindRelationalTypeMapping : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindRelationalTypeMapping (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> for the given property on a finalized model.
            </summary>
        <returns>The type mapping, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSharedStoreObjectRootProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionProperty FindSharedStoreObjectRootProperty (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty FindSharedStoreObjectRootProperty(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindSharedStoreObjectRootProperty(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSharedStoreObjectRootProperty (property As IConventionProperty, ByRef storeObject As StoreObjectIdentifier) As IConventionProperty" />
      <MemberSignature Language="F#" Value="static member FindSharedStoreObjectRootProperty : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindSharedStoreObjectRootProperty (property, storeObject)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionProperty? FindSharedStoreObjectRootProperty (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
          <para>
                    Finds the first <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" /> that is mapped to the same column in a shared table-like object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The property found, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSharedStoreObjectRootProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableProperty FindSharedStoreObjectRootProperty (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty FindSharedStoreObjectRootProperty(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindSharedStoreObjectRootProperty(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSharedStoreObjectRootProperty (property As IMutableProperty, ByRef storeObject As StoreObjectIdentifier) As IMutableProperty" />
      <MemberSignature Language="F#" Value="static member FindSharedStoreObjectRootProperty : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindSharedStoreObjectRootProperty (property, storeObject)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableProperty? FindSharedStoreObjectRootProperty (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
          <para>
                    Finds the first <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" /> that is mapped to the same column in a shared table-like object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The property found, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSharedStoreObjectRootProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IProperty FindSharedStoreObjectRootProperty (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IProperty FindSharedStoreObjectRootProperty(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindSharedStoreObjectRootProperty(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSharedStoreObjectRootProperty (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As IProperty" />
      <MemberSignature Language="F#" Value="static member FindSharedStoreObjectRootProperty : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IProperty" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindSharedStoreObjectRootProperty (property, storeObject)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IProperty? FindSharedStoreObjectRootProperty (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
          <para>
                    Finds the first <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" /> that is mapped to the same column in a shared table-like object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The property found, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSharedStoreObjectRootProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty? FindSharedStoreObjectRootProperty (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty FindSharedStoreObjectRootProperty(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindSharedStoreObjectRootProperty(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSharedStoreObjectRootProperty (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As IReadOnlyProperty" />
      <MemberSignature Language="F#" Value="static member FindSharedStoreObjectRootProperty : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindSharedStoreObjectRootProperty (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
          <para>
                    Finds the first <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" /> that is mapped to the same column in a shared table-like object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The property found, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSharedTableRootPrimaryKeyProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IProperty FindSharedTableRootPrimaryKeyProperty (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IProperty FindSharedTableRootPrimaryKeyProperty(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindSharedTableRootPrimaryKeyProperty(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSharedTableRootPrimaryKeyProperty (property As IProperty) As IProperty" />
      <MemberSignature Language="F#" Value="static member FindSharedTableRootPrimaryKeyProperty : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IProperty" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.FindSharedTableRootPrimaryKeyProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
          <para>
                    Finds the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" /> that represents the same primary key property
                    as the given property, but potentially in a shared root table.
                </para>
          <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns> The property found, or <code>null</code> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollation">
      <MemberSignature Language="C#" Value="public static string GetCollation (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCollation(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCollation(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollation (property As IProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetCollation : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCollation property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Returns the collation to be used for the column.
            </summary>
        <returns> The collation for the column this property is mapped to. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollation">
      <MemberSignature Language="C#" Value="public static string? GetCollation (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCollation(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCollation(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollation (property As IReadOnlyProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetCollation : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCollation property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the collation to be used for the column.
            </summary>
        <returns>The collation for the column this property is mapped to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollation">
      <MemberSignature Language="C#" Value="public static string GetCollation (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCollation(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCollation(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollation (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetCollation : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCollation (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Returns the collation to be used for the column.
            </summary>
        <returns> The collation for the column this property is mapped to. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollation">
      <MemberSignature Language="C#" Value="public static string? GetCollation (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCollation(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCollation(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollation (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetCollation : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCollation (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the collation to be used for the column.
            </summary>
        <returns>The collation for the column this property is mapped to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollationConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetCollationConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetCollationConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCollationConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollationConfigurationSource (property As IConventionProperty) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetCollationConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCollationConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the column collation.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the column collation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnBaseName">
      <MemberSignature Language="C#" Value="public static string GetColumnBaseName (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetColumnBaseName(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnBaseName(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnBaseName (property As IProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetColumnBaseName : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnBaseName property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Returns the base name of the column to which the property would be mapped.
            </summary>
        <returns> The the base name of the column to which the property would be mapped. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnBaseName">
      <MemberSignature Language="C#" Value="public static string GetColumnBaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetColumnBaseName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnBaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnBaseName (property As IReadOnlyProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetColumnBaseName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnBaseName property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Obsolete("Use GetColumnName")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use GetColumnName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the base name of the column to which the property would be mapped.
            </summary>
        <returns>The base name of the column to which the property would be mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnName">
      <MemberSignature Language="C#" Value="public static string GetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetColumnName(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnName(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnName (property As IProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetColumnName : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnName property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use the overload that takes a StoreObjectIdentifier")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the overload that takes a StoreObjectIdentifier")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the name of the table column to which the property is mapped.
            </summary>
        <returns>The name of the table column to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnName">
      <MemberSignature Language="C#" Value="public static string GetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetColumnName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnName (property As IReadOnlyProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetColumnName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnName property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the name of the column to which the property would be mapped.
            </summary>
        <returns>The base name of the column to which the property would be mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnName">
      <MemberSignature Language="C#" Value="public static string GetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetColumnName(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnName(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnName (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetColumnName : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnName (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Returns the name of the column to which the property is mapped for a particular table.
            </summary>
        <returns> The name of the column to which the property is mapped. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnName">
      <MemberSignature Language="C#" Value="public static string? GetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetColumnName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnName (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetColumnName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnName (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the name of the column to which the property is mapped for a particular table.
            </summary>
        <returns>The name of the column to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnNameConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetColumnNameConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetColumnNameConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnNameConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnNameConfigurationSource (property As IConventionProperty) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetColumnNameConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnNameConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the column name.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the column name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnNameConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetColumnNameConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetColumnNameConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnNameConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnNameConfigurationSource (property As IConventionProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetColumnNameConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * StoreObjectIdentifier -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnNameConfigurationSource (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the column name for a particular table-like store object.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the column name for a particular table-like store object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnOrder">
      <MemberSignature Language="C#" Value="public static int? GetColumnOrder (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetColumnOrder(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnOrder(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnOrder (property As IReadOnlyProperty) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetColumnOrder : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnOrder property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the order of the column this property is mapped to.
            </summary>
        <returns>The column order.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnOrder">
      <MemberSignature Language="C#" Value="public static int? GetColumnOrder (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetColumnOrder(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnOrder(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnOrder (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetColumnOrder : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnOrder (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the order of the column this property is mapped to for a particular table.
            </summary>
        <returns>The column order.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnOrderConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetColumnOrderConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetColumnOrderConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnOrderConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnOrderConfigurationSource (property As IConventionProperty) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetColumnOrderConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnOrderConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> of the column order.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnType">
      <MemberSignature Language="C#" Value="public static string GetColumnType (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetColumnType(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnType (property As IProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetColumnType : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnType property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the database type of the column to which the property is mapped.
            </summary>
        <returns>The database type of the column to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnType">
      <MemberSignature Language="C#" Value="public static string? GetColumnType (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetColumnType(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnType (property As IReadOnlyProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetColumnType : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnType property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the database type of the column to which the property is mapped, or <see langword="null" /> if the database type
                could not be found.
            </summary>
        <returns>
                The database type of the column to which the property is mapped, or <see langword="null" /> if the database type could not
                be found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnType">
      <MemberSignature Language="C#" Value="public static string GetColumnType (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetColumnType(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnType (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetColumnType : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnType (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the database type of the column to which the property is mapped.
            </summary>
        <returns>The database type of the column to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnType">
      <MemberSignature Language="C#" Value="public static string? GetColumnType (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetColumnType(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnType (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetColumnType : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnType (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the database type of the column to which the property is mapped, or <see langword="null" /> if the database type
                could not be found.
            </summary>
        <returns>
                The database type of the column to which the property is mapped, or <see langword="null" /> if the database type could not
                be found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnTypeConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetColumnTypeConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetColumnTypeConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnTypeConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetColumnTypeConfigurationSource (property As IConventionProperty) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetColumnTypeConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetColumnTypeConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the column name.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the column name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComment">
      <MemberSignature Language="C#" Value="public static string GetComment (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComment(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComment(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComment (property As IProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetComment : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComment property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Returns the comment for the column this property is mapped to.
            </summary>
        <returns> The comment for the column this property is mapped to. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComment">
      <MemberSignature Language="C#" Value="public static string? GetComment (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComment(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComment(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComment (property As IReadOnlyProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetComment : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComment property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the comment for the column this property is mapped to.
            </summary>
        <returns>The comment for the column this property is mapped to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComment">
      <MemberSignature Language="C#" Value="public static string GetComment (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComment(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComment(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComment (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetComment : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComment (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Returns the comment for the column this property is mapped to.
            </summary>
        <returns> The comment for the column this property is mapped to. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComment">
      <MemberSignature Language="C#" Value="public static string? GetComment (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComment(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComment(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComment (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetComment : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComment (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the comment for the column this property is mapped to.
            </summary>
        <returns>The comment for the column this property is mapped to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommentConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetCommentConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetCommentConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCommentConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCommentConfigurationSource (property As IConventionProperty) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetCommentConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetCommentConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the column comment.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the column comment.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComputedColumnSql">
      <MemberSignature Language="C#" Value="public static string GetComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComputedColumnSql(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComputedColumnSql (property As IProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComputedColumnSql property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Returns the SQL expression that is used as the computed value for the column this property is mapped to.
            </summary>
        <returns> The SQL expression that is used as the computed value for the column this property is mapped to. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComputedColumnSql">
      <MemberSignature Language="C#" Value="public static string? GetComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComputedColumnSql(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComputedColumnSql (property As IReadOnlyProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComputedColumnSql property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the SQL expression that is used as the computed value for the column this property is mapped to.
            </summary>
        <returns>The SQL expression that is used as the computed value for the column this property is mapped to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComputedColumnSql">
      <MemberSignature Language="C#" Value="public static string GetComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComputedColumnSql(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComputedColumnSql (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComputedColumnSql (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Returns the SQL expression that is used as the computed value for the column this property is mapped to.
            </summary>
        <returns> The SQL expression that is used as the computed value for the column this property is mapped to. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComputedColumnSql">
      <MemberSignature Language="C#" Value="public static string? GetComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComputedColumnSql(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComputedColumnSql (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComputedColumnSql (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the SQL expression that is used as the computed value for the column this property is mapped to.
            </summary>
        <returns>The SQL expression that is used as the computed value for the column this property is mapped to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComputedColumnSqlConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetComputedColumnSqlConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetComputedColumnSqlConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComputedColumnSqlConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComputedColumnSqlConfigurationSource (property As IConventionProperty) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetComputedColumnSqlConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetComputedColumnSqlConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the computed value SQL expression.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the computed value SQL expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultColumnBaseName">
      <MemberSignature Language="C#" Value="public static string GetDefaultColumnBaseName (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultColumnBaseName(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnBaseName(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultColumnBaseName (property As IProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultColumnBaseName : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnBaseName property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Returns the default base name of the column to which the property would be mapped
            </summary>
        <returns> The default base column name to which the property would be mapped. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultColumnBaseName">
      <MemberSignature Language="C#" Value="public static string GetDefaultColumnBaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultColumnBaseName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnBaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultColumnBaseName (property As IReadOnlyProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultColumnBaseName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnBaseName property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Obsolete("Use GetDefaultColumnName")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use GetDefaultColumnName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the default base name of the column to which the property would be mapped
            </summary>
        <returns>The default base column name to which the property would be mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultColumnMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt; GetDefaultColumnMappings (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt; GetDefaultColumnMappings(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnMappings(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultColumnMappings (property As IProperty) As IEnumerable(Of IColumnMappingBase)" />
      <MemberSignature Language="F#" Value="static member GetDefaultColumnMappings : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnMappings property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMappingBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the default columns to which the property would be mapped.
            </summary>
        <returns>The default columns to which the property would be mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultColumnName">
      <MemberSignature Language="C#" Value="public static string GetDefaultColumnName (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultColumnName(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnName(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultColumnName (property As IProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultColumnName : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnName property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use the overload that takes a StoreObjectIdentifier")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the overload that takes a StoreObjectIdentifier")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the default table column name to which the property would be mapped.
            </summary>
        <returns>The default table column name to which the property would be mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultColumnName">
      <MemberSignature Language="C#" Value="public static string GetDefaultColumnName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultColumnName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultColumnName (property As IReadOnlyProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultColumnName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnName property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the default base name of the column to which the property would be mapped
            </summary>
        <returns>The default base column name to which the property would be mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultColumnName">
      <MemberSignature Language="C#" Value="public static string GetDefaultColumnName (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultColumnName(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnName(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultColumnName (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultColumnName : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnName (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Returns the default column name to which the property would be mapped.
            </summary>
        <returns> The default column name to which the property would be mapped. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultColumnName">
      <MemberSignature Language="C#" Value="public static string GetDefaultColumnName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultColumnName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultColumnName (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultColumnName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultColumnName (property, storeObject)" />
      <MemberSignature Language="C#" Value="public static string? GetDefaultColumnName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the default column name to which the property would be mapped.
            </summary>
        <returns>The default column name to which the property would be mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultValue">
      <MemberSignature Language="C#" Value="public static object GetDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultValue (property As IProperty) As Object" />
      <MemberSignature Language="F#" Value="static member GetDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; obj" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValue property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Returns the object that is used as the default value for the column this property is mapped to.
            </summary>
        <returns> The object that is used as the default value for the column this property is mapped to. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultValue">
      <MemberSignature Language="C#" Value="public static object? GetDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultValue (property As IReadOnlyProperty) As Object" />
      <MemberSignature Language="F#" Value="static member GetDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; obj" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValue property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the object that is used as the default value for the column this property is mapped to.
            </summary>
        <returns>The object that is used as the default value for the column this property is mapped to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultValue">
      <MemberSignature Language="C#" Value="public static object GetDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultValue (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As Object" />
      <MemberSignature Language="F#" Value="static member GetDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; obj" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValue (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Returns the object that is used as the default value for the column this property is mapped to.
            </summary>
        <returns> The object that is used as the default value for the column this property is mapped to. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultValue">
      <MemberSignature Language="C#" Value="public static object? GetDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultValue (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As Object" />
      <MemberSignature Language="F#" Value="static member GetDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; obj" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValue (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the object that is used as the default value for the column this property is mapped to.
            </summary>
        <returns>The object that is used as the default value for the column this property is mapped to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultValueConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetDefaultValueConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetDefaultValueConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultValueConfigurationSource (property As IConventionProperty) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetDefaultValueConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default value.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultValueSql">
      <MemberSignature Language="C#" Value="public static string GetDefaultValueSql (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultValueSql(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultValueSql (property As IProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultValueSql : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueSql property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Returns the SQL expression that is used as the default value for the column this property is mapped to.
            </summary>
        <returns> The SQL expression that is used as the default value for the column this property is mapped to. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultValueSql">
      <MemberSignature Language="C#" Value="public static string? GetDefaultValueSql (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultValueSql(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultValueSql (property As IReadOnlyProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultValueSql : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueSql property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the SQL expression that is used as the default value for the column this property is mapped to.
            </summary>
        <returns>The SQL expression that is used as the default value for the column this property is mapped to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultValueSql">
      <MemberSignature Language="C#" Value="public static string GetDefaultValueSql (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultValueSql(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultValueSql (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultValueSql : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueSql (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Returns the SQL expression that is used as the default value for the column this property is mapped to.
            </summary>
        <returns> The SQL expression that is used as the default value for the column this property is mapped to. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultValueSql">
      <MemberSignature Language="C#" Value="public static string? GetDefaultValueSql (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultValueSql(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultValueSql (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultValueSql : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueSql (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns the SQL expression that is used as the default value for the column this property is mapped to.
            </summary>
        <returns>The SQL expression that is used as the default value for the column this property is mapped to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultValueSqlConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetDefaultValueSqlConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetDefaultValueSqlConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueSqlConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultValueSqlConfigurationSource (property As IConventionProperty) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetDefaultValueSqlConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDefaultValueSqlConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default value SQL expression.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default value SQL expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteStoredProcedureParameterMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt; GetDeleteStoredProcedureParameterMappings (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt; GetDeleteStoredProcedureParameterMappings(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDeleteStoredProcedureParameterMappings(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeleteStoredProcedureParameterMappings (property As IProperty) As IEnumerable(Of IStoredProcedureParameterMapping)" />
      <MemberSignature Language="F#" Value="static member GetDeleteStoredProcedureParameterMappings : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetDeleteStoredProcedureParameterMappings property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the delete stored procedure parameters to which the property is mapped.
            </summary>
        <returns>The delete stored procedure parameters to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionColumnMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IFunctionColumnMapping&gt; GetFunctionColumnMappings (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IFunctionColumnMapping&gt; GetFunctionColumnMappings(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetFunctionColumnMappings(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFunctionColumnMappings (property As IProperty) As IEnumerable(Of IFunctionColumnMapping)" />
      <MemberSignature Language="F#" Value="static member GetFunctionColumnMappings : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IFunctionColumnMapping&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetFunctionColumnMappings property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IFunctionColumnMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the function columns to which the property is mapped.
            </summary>
        <returns>The function columns to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertStoredProcedureParameterMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt; GetInsertStoredProcedureParameterMappings (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt; GetInsertStoredProcedureParameterMappings(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetInsertStoredProcedureParameterMappings(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInsertStoredProcedureParameterMappings (property As IProperty) As IEnumerable(Of IStoredProcedureParameterMapping)" />
      <MemberSignature Language="F#" Value="static member GetInsertStoredProcedureParameterMappings : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetInsertStoredProcedureParameterMappings property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the insert stored procedure parameters to which the property is mapped.
            </summary>
        <returns>The insert stored procedure parameters to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertStoredProcedureResultColumnMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt; GetInsertStoredProcedureResultColumnMappings (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt; GetInsertStoredProcedureResultColumnMappings(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetInsertStoredProcedureResultColumnMappings(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInsertStoredProcedureResultColumnMappings (property As IProperty) As IEnumerable(Of IStoredProcedureResultColumnMapping)" />
      <MemberSignature Language="F#" Value="static member GetInsertStoredProcedureResultColumnMappings : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetInsertStoredProcedureResultColumnMappings property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the insert stored procedure result columns to which the property is mapped.
            </summary>
        <returns>The insert stored procedure result columns to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsFixedLengthConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetIsFixedLengthConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetIsFixedLengthConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsFixedLengthConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsFixedLengthConfigurationSource (property As IConventionProperty) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetIsFixedLengthConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsFixedLengthConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for <see cref="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsFixedLength(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for <see cref="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsFixedLength(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsStored">
      <MemberSignature Language="C#" Value="public static bool? GetIsStored (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; GetIsStored(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsStored(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsStored (property As IProperty) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member GetIsStored : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsStored property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Gets whether the value of the computed column this property is mapped to is stored in the database, or calculated when
                it is read.
            </summary>
        <returns>
                Whether the value of the computed column this property is mapped to is stored in the database,
                or calculated when it is read.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsStored">
      <MemberSignature Language="C#" Value="public static bool? GetIsStored (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; GetIsStored(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsStored(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsStored (property As IReadOnlyProperty) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member GetIsStored : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsStored property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets whether the value of the computed column this property is mapped to is stored in the database, or calculated when
                it is read.
            </summary>
        <returns>
                Whether the value of the computed column this property is mapped to is stored in the database,
                or calculated when it is read.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsStored">
      <MemberSignature Language="C#" Value="public static bool? GetIsStored (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; GetIsStored(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsStored(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsStored (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member GetIsStored : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsStored (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Gets whether the value of the computed column this property is mapped to is stored in the database, or calculated when
                it is read.
            </summary>
        <returns>
                Whether the value of the computed column this property is mapped to is stored in the database,
                or calculated when it is read.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsStored">
      <MemberSignature Language="C#" Value="public static bool? GetIsStored (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; GetIsStored(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsStored(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsStored (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member GetIsStored : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsStored (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Gets whether the value of the computed column this property is mapped to is stored in the database, or calculated when
                it is read.
            </summary>
        <returns>
                Whether the value of the computed column this property is mapped to is stored in the database,
                or calculated when it is read.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsStoredConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetIsStoredConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetIsStoredConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsStoredConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsStoredConfigurationSource (property As IConventionProperty) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetIsStoredConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetIsStoredConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the computed value SQL expression.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the computed value SQL expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJsonPropertyName">
      <MemberSignature Language="C#" Value="public static string? GetJsonPropertyName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetJsonPropertyName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetJsonPropertyName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetJsonPropertyName (property As IReadOnlyProperty) As String" />
      <MemberSignature Language="F#" Value="static member GetJsonPropertyName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetJsonPropertyName property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the value of JSON property name used for the given property of an entity mapped to a JSON column.
            </summary>
        <returns>
                The value for the JSON property used to store the value of this entity property.
                <see langword="null" /> is returned for key properties and for properties of entities that are not mapped to a JSON column.
            </returns>
        <remarks>
                Unless configured explicitly, entity property name is used.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJsonPropertyNameConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetJsonPropertyNameConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetJsonPropertyNameConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetJsonPropertyNameConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetJsonPropertyNameConfigurationSource (property As IConventionProperty) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetJsonPropertyNameConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetJsonPropertyNameConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the JSON property name for a given entity property.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the JSON property name for a given entity property.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappedStoreObjects">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&gt; GetMappedStoreObjects (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, Microsoft.EntityFrameworkCore.Metadata.StoreObjectType storeObjectType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&gt; GetMappedStoreObjects(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectType storeObjectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetMappedStoreObjects(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Iterator Function GetMappedStoreObjects (property As IReadOnlyProperty, storeObjectType As StoreObjectType) As IEnumerable(Of StoreObjectIdentifier)" />
      <MemberSignature Language="F#" Value="static member GetMappedStoreObjects : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * Microsoft.EntityFrameworkCore.Metadata.StoreObjectType -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetMappedStoreObjects (property, storeObjectType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.RelationalPropertyExtensions+&lt;GetMappedStoreObjects&gt;d__106))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.RelationalPropertyExtensions+&lt;GetMappedStoreObjects&gt;d__106))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObjectType" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectType" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObjectType">The type of the store object.</param>
        <summary>
          <para>
                    Returns the table-like store objects to which this property is mapped.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The table-like store objects to which this property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxLength">
      <MemberSignature Language="C#" Value="public static int? GetMaxLength (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetMaxLength(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetMaxLength(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaxLength (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetMaxLength : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetMaxLength (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Gets the maximum length of data that is allowed in this property. For example, if the property is a <see cref="T:System.String" />
                then this is the maximum number of characters.
            </summary>
        <returns> The maximum length, or <see langword="null" /> if none if defined. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxLength">
      <MemberSignature Language="C#" Value="public static int? GetMaxLength (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetMaxLength(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetMaxLength(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaxLength (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetMaxLength : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetMaxLength (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Gets the maximum length of data that is allowed in this property. For example, if the property is a <see cref="T:System.String" />
                then this is the maximum number of characters.
            </summary>
        <returns>The maximum length, or <see langword="null" /> if none is defined.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateOverrides">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable GetOrCreateOverrides (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable GetOrCreateOverrides(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOrCreateOverrides(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrCreateOverrides (property As IConventionProperty, ByRef storeObject As StoreObjectIdentifier) As IConventionAnnotatable" />
      <MemberSignature Language="F#" Value="static member GetOrCreateOverrides : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOrCreateOverrides (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
          <para>
                    Returns the property facet overrides for a particular table-like store object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>An object that stores property facet overrides.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateOverrides">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable GetOrCreateOverrides (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable GetOrCreateOverrides(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOrCreateOverrides(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrCreateOverrides (property As IMutableProperty, ByRef storeObject As StoreObjectIdentifier) As IMutableAnnotatable" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="F#" Value="static member GetOrCreateOverrides : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOrCreateOverrides (property, storeObject)" FrameworkAlternate="efcore-5.0;efcore-6.0" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides GetOrCreateOverrides (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides GetOrCreateOverrides(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrCreateOverrides (property As IMutableProperty, ByRef storeObject As StoreObjectIdentifier) As IMutableRelationalPropertyOverrides" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member GetOrCreateOverrides : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOrCreateOverrides (property, storeObject)" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0">Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable</ReturnType>
        <ReturnType FrameworkAlternate="efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
          <para>
                    Returns the property facet overrides for a particular table-like store object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>An object that stores property facet overrides.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateOverrides">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides GetOrCreateOverrides (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides GetOrCreateOverrides(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOrCreateOverrides(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOrCreateOverrides (property As IConventionProperty, ByRef storeObject As StoreObjectIdentifier, Optional fromDataAnnotation As Boolean = false) As IConventionRelationalPropertyOverrides" />
      <MemberSignature Language="F#" Value="static member GetOrCreateOverrides : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * StoreObjectIdentifier * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOrCreateOverrides (property, storeObject, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
          <para>
                    Returns the property facet overrides for a particular table-like store object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>An object that stores property facet overrides.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOverrides">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides&gt; GetOverrides (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides&gt; GetOverrides(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOverrides(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOverrides (property As IConventionProperty) As IEnumerable(Of IConventionRelationalPropertyOverrides)" />
      <MemberSignature Language="F#" Value="static member GetOverrides : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOverrides property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
          <para>
                    Returns all the property facet overrides.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The property facet overrides.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOverrides">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides&gt; GetOverrides (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides&gt; GetOverrides(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOverrides(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOverrides (property As IMutableProperty) As IEnumerable(Of IMutableRelationalPropertyOverrides)" />
      <MemberSignature Language="F#" Value="static member GetOverrides : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOverrides property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
          <para>
                    Returns all the property facet overrides.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The property facet overrides.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOverrides">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides&gt; GetOverrides (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides&gt; GetOverrides(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOverrides(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOverrides (property As IProperty) As IEnumerable(Of IRelationalPropertyOverrides)" />
      <MemberSignature Language="F#" Value="static member GetOverrides : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOverrides property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IRelationalPropertyOverrides&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
          <para>
                    Returns all the property facet overrides.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The property facet overrides.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOverrides">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyRelationalPropertyOverrides&gt; GetOverrides (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyRelationalPropertyOverrides&gt; GetOverrides(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOverrides(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOverrides (property As IReadOnlyProperty) As IEnumerable(Of IReadOnlyRelationalPropertyOverrides)" />
      <MemberSignature Language="F#" Value="static member GetOverrides : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyRelationalPropertyOverrides&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetOverrides property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyRelationalPropertyOverrides&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
          <para>
                    Returns all the property facet overrides.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The property facet overrides.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecision">
      <MemberSignature Language="C#" Value="public static int? GetPrecision (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetPrecision(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetPrecision(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrecision (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetPrecision : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetPrecision (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Gets the precision of data that is allowed in this property.
                For example, if the property is a <see cref="T:System.Decimal" /> then this is the maximum number of digits.
            </summary>
        <returns> The precision, or <see langword="null" /> if none is defined. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecision">
      <MemberSignature Language="C#" Value="public static int? GetPrecision (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetPrecision(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetPrecision(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrecision (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetPrecision : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetPrecision (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Gets the precision of data that is allowed in this property.
                For example, if the property is a <see cref="T:System.Decimal" /> then this is the maximum number of digits.
            </summary>
        <returns>The precision, or <see langword="null" /> if none is defined.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReaderFieldValue">
      <MemberSignature Language="C#" Value="public static object? GetReaderFieldValue (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.Storage.RelationalDataReader relationalReader, int ordinal, bool detailedErrorsEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetReaderFieldValue(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader relationalReader, int32 ordinal, bool detailedErrorsEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetReaderFieldValue(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Storage.RelationalDataReader,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReaderFieldValue (property As IProperty, relationalReader As RelationalDataReader, ordinal As Integer, detailedErrorsEnabled As Boolean) As Object" />
      <MemberSignature Language="F#" Value="static member GetReaderFieldValue : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Storage.RelationalDataReader * int * bool -&gt; obj" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetReaderFieldValue (property, relationalReader, ordinal, detailedErrorsEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="relationalReader" Type="Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="ordinal" Type="System.Int32" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="detailedErrorsEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="relationalReader">The read from which to read the property's value.</param>
        <param name="ordinal">The ordinal to read in the <paramref name="relationalReader" />.</param>
        <param name="detailedErrorsEnabled">Whether detailed errors should be logged.</param>
        <summary>
                Reads a value for this property from the given <paramref name="relationalReader" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationalTypeMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetRelationalTypeMapping (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetRelationalTypeMapping(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetRelationalTypeMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRelationalTypeMapping (property As IProperty) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="static member GetRelationalTypeMapping : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetRelationalTypeMapping property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> for the given property on a finalized model.
            </summary>
        <returns> The type mapping. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationalTypeMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetRelationalTypeMapping (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetRelationalTypeMapping(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetRelationalTypeMapping(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRelationalTypeMapping (property As IReadOnlyProperty) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="static member GetRelationalTypeMapping : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetRelationalTypeMapping property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> for the given property on a finalized model.
            </summary>
        <returns>The type mapping.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScale">
      <MemberSignature Language="C#" Value="public static int? GetScale (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetScale(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetScale(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScale (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetScale : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetScale (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Gets the scale of data that is allowed in this property.
                For example, if the property is a <see cref="T:System.Decimal" /> then this is the maximum number of decimal places.
            </summary>
        <returns> The scale, or <see langword="null" /> if none is defined. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScale">
      <MemberSignature Language="C#" Value="public static int? GetScale (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetScale(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetScale(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScale (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetScale : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetScale (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Gets the scale of data that is allowed in this property.
                For example, if the property is a <see cref="T:System.Decimal" /> then this is the maximum number of decimal places.
            </summary>
        <returns>The scale, or <see langword="null" /> if none is defined.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlQueryColumnMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt; GetSqlQueryColumnMappings (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt; GetSqlQueryColumnMappings(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetSqlQueryColumnMappings(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlQueryColumnMappings (property As IProperty) As IEnumerable(Of ISqlQueryColumnMapping)" />
      <MemberSignature Language="F#" Value="static member GetSqlQueryColumnMappings : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetSqlQueryColumnMappings property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ISqlQueryColumnMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the SQL query columns to which the property is mapped.
            </summary>
        <returns>The SQL query columns to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableColumnMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMapping&gt; GetTableColumnMappings (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IColumnMapping&gt; GetTableColumnMappings(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetTableColumnMappings(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTableColumnMappings (property As IProperty) As IEnumerable(Of IColumnMapping)" />
      <MemberSignature Language="F#" Value="static member GetTableColumnMappings : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMapping&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetTableColumnMappings property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IColumnMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the table columns to which the property is mapped.
            </summary>
        <returns>The table columns to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateStoredProcedureParameterMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt; GetUpdateStoredProcedureParameterMappings (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt; GetUpdateStoredProcedureParameterMappings(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetUpdateStoredProcedureParameterMappings(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUpdateStoredProcedureParameterMappings (property As IProperty) As IEnumerable(Of IStoredProcedureParameterMapping)" />
      <MemberSignature Language="F#" Value="static member GetUpdateStoredProcedureParameterMappings : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetUpdateStoredProcedureParameterMappings property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureParameterMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the update stored procedure parameters to which the property is mapped.
            </summary>
        <returns>The update stored procedure parameters to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateStoredProcedureResultColumnMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt; GetUpdateStoredProcedureResultColumnMappings (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt; GetUpdateStoredProcedureResultColumnMappings(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetUpdateStoredProcedureResultColumnMappings(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUpdateStoredProcedureResultColumnMappings (property As IProperty) As IEnumerable(Of IStoredProcedureResultColumnMapping)" />
      <MemberSignature Language="F#" Value="static member GetUpdateStoredProcedureResultColumnMappings : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetUpdateStoredProcedureResultColumnMappings property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IStoredProcedureResultColumnMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the update stored procedure result columns to which the property is mapped.
            </summary>
        <returns>The update stored procedure result columns to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewColumnMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IViewColumnMapping&gt; GetViewColumnMappings (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IViewColumnMapping&gt; GetViewColumnMappings(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetViewColumnMappings(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetViewColumnMappings (property As IProperty) As IEnumerable(Of IViewColumnMapping)" />
      <MemberSignature Language="F#" Value="static member GetViewColumnMappings : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IViewColumnMapping&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.GetViewColumnMappings property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IViewColumnMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the view columns to which the property is mapped.
            </summary>
        <returns>The view columns to which the property is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColumnNullable">
      <MemberSignature Language="C#" Value="public static bool IsColumnNullable (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsColumnNullable(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsColumnNullable(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsColumnNullable (property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsColumnNullable : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsColumnNullable property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" />. </param>
        <summary>
          <para>
                    Checks whether the column mapped to the given <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" /> will be nullable
                    when created in the database.
                </para>
          <para>
                    This depends on the property itself and also how it is mapped. For example,
                    derived non-nullable properties in a TPH type hierarchy will be mapped to nullable columns.
                    As well as properties on optional types sharing the same table.
                </para>
        </summary>
        <returns>
          <see langword="true" /> if the mapped column is nullable; <see langword="false" /> otherwise. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColumnNullable">
      <MemberSignature Language="C#" Value="public static bool IsColumnNullable (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsColumnNullable(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsColumnNullable(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsColumnNullable (property As IReadOnlyProperty) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsColumnNullable : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsColumnNullable property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" />.</param>
        <summary>
                Checks whether the column mapped to the given <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" /> will be nullable
                when created in the database.
            </summary>
        <returns>
          <see langword="true" /> if the mapped column is nullable; <see langword="false" /> otherwise.</returns>
        <remarks>
                This depends on the property itself and also how it is mapped. For example,
                derived non-nullable properties in a TPH type hierarchy will be mapped to nullable columns.
                As well as properties on optional types sharing the same table.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColumnNullable">
      <MemberSignature Language="C#" Value="public static bool IsColumnNullable (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsColumnNullable(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsColumnNullable(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsColumnNullable (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsColumnNullable : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsColumnNullable (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" />. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
          <para>
                    Checks whether the column mapped to the given <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" /> will be nullable
                    when created in the database.
                </para>
          <para>
                    This depends on the property itself and also how it is mapped. For example,
                    derived non-nullable properties in a TPH type hierarchy will be mapped to nullable columns.
                    As well as properties on optional types sharing the same table.
                </para>
        </summary>
        <returns>
          <see langword="true" /> if the mapped column is nullable; <see langword="false" /> otherwise. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColumnNullable">
      <MemberSignature Language="C#" Value="public static bool IsColumnNullable (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsColumnNullable(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsColumnNullable(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsColumnNullable (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsColumnNullable : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsColumnNullable (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Checks whether the column mapped to the given property will be nullable
                when created in the database.
            </summary>
        <returns>
          <see langword="true" /> if the mapped column is nullable; <see langword="false" /> otherwise.</returns>
        <remarks>
                This depends on the property itself and also how it is mapped. For example,
                derived non-nullable properties in a TPH type hierarchy will be mapped to nullable columns.
                As well as properties on optional types sharing the same table.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public static bool IsFixedLength (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFixedLength(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsFixedLength(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsFixedLength (property As IProperty) As Boolean" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member IsFixedLength : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsFixedLength property" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static bool? IsFixedLength (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsFixedLength(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsFixedLength (property As IProperty) As Nullable(Of Boolean)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="static member IsFixedLength : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsFixedLength property" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Boolean</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Returns a flag indicating if the property as capable of storing only fixed-length data, such as strings.
            </summary>
        <returns> A flag indicating if the property as capable of storing only fixed-length data, such as strings. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public static bool? IsFixedLength (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsFixedLength(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsFixedLength(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsFixedLength (property As IReadOnlyProperty) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsFixedLength : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsFixedLength property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns a flag indicating whether the property is capable of storing only fixed-length data, such as strings.
            </summary>
        <returns>A flag indicating whether the property is capable of storing only fixed-length data, such as strings.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public static bool? IsFixedLength (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsFixedLength(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsFixedLength(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsFixedLength (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsFixedLength : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsFixedLength (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Returns a flag indicating if the property as capable of storing only fixed-length data, such as strings.
            </summary>
        <returns> A flag indicating if the property as capable of storing only fixed-length data, such as strings. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public static bool? IsFixedLength (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsFixedLength(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsFixedLength(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsFixedLength (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsFixedLength : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsFixedLength (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Returns a flag indicating whether the property is capable of storing only fixed-length data, such as strings.
            </summary>
        <returns>A flag indicating whether the property is capable of storing only fixed-length data, such as strings.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicode">
      <MemberSignature Language="C#" Value="public static bool? IsUnicode (this Microsoft.EntityFrameworkCore.Metadata.IProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsUnicode(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsUnicode(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsUnicode (property As IProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsUnicode : Microsoft.EntityFrameworkCore.Metadata.IProperty * StoreObjectIdentifier -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsUnicode (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="storeObject"> The identifier of the table-like store object containing the column. </param>
        <summary>
                Gets a value indicating whether or not the property can persist Unicode characters.
            </summary>
        <returns> The Unicode setting, or <see langword="null" /> if none is defined. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicode">
      <MemberSignature Language="C#" Value="public static bool? IsUnicode (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsUnicode(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsUnicode(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsUnicode (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsUnicode : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.IsUnicode (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Gets a value indicating whether or not the property can persist Unicode characters.
            </summary>
        <returns>The Unicode setting, or <see langword="null" /> if none is defined.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOverrides">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides? RemoveOverrides (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides RemoveOverrides(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.RemoveOverrides(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveOverrides (property As IConventionProperty, ByRef storeObject As StoreObjectIdentifier) As IConventionRelationalPropertyOverrides" />
      <MemberSignature Language="F#" Value="static member RemoveOverrides : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.RemoveOverrides (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of a table-like store object.</param>
        <summary>
          <para>
                    Removes the property facet overrides for a particular table-like store object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>
                The removed <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionRelationalPropertyOverrides" /> or <see langword="null" />
                if no overrides for the given store object were found or the existing overrides were configured from a higher source.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOverrides">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides? RemoveOverrides (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides RemoveOverrides(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.RemoveOverrides(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveOverrides (property As IMutableProperty, ByRef storeObject As StoreObjectIdentifier) As IMutableRelationalPropertyOverrides" />
      <MemberSignature Language="F#" Value="static member RemoveOverrides : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.RemoveOverrides (property, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of a table-like store object.</param>
        <summary>
          <para>
                    Removes the property facet overrides for a particular table-like store object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>
                The removed <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableRelationalPropertyOverrides" /> or <see langword="null" />
                if no overrides for the given store object were found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCollation">
      <MemberSignature Language="C#" Value="public static void SetCollation (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string collation);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCollation(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetCollation(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetCollation (property As IMutableProperty, collation As String)" />
      <MemberSignature Language="F#" Value="static member SetCollation : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetCollation (property, collation)" />
      <MemberSignature Language="C#" Value="public static void SetCollation (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string? collation);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="collation" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="collation">The collation for the column.</param>
        <summary>
                Configures a collation to be used for column this property is mapped to.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCollation">
      <MemberSignature Language="C#" Value="public static string SetCollation (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string collation, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetCollation(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string collation, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetCollation(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetCollation (property As IConventionProperty, collation As String, Optional fromDataAnnotation As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member SetCollation : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetCollation (property, collation, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static string? SetCollation (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string? collation, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="collation" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="collation">The collation for the column.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures a collation to be used for the column this property is mapped to.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnName">
      <MemberSignature Language="C#" Value="public static void SetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string name);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetColumnName(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnName(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetColumnName (property As IMutableProperty, name As String)" />
      <MemberSignature Language="F#" Value="static member SetColumnName : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnName (property, name)" />
      <MemberSignature Language="C#" Value="public static void SetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string? name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="name">The name to set.</param>
        <summary>
                Sets the column to which the property is mapped.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnName">
      <MemberSignature Language="C#" Value="public static void SetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetColumnName(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string name, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnName(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetColumnName (property As IConventionProperty, name As String, Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetColumnName : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnName (property, name, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string SetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetColumnName(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string name, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetColumnName (property As IConventionProperty, name As String, Optional fromDataAnnotation As Boolean = false) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetColumnName : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnName (property, name, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string? SetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="name">The name to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the column to which the property is mapped.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnName">
      <MemberSignature Language="C#" Value="public static void SetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string name, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetColumnName(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string name, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnName(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetColumnName (property As IMutableProperty, name As String, ByRef storeObject As StoreObjectIdentifier)" />
      <MemberSignature Language="F#" Value="static member SetColumnName : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * string * StoreObjectIdentifier -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnName (property, name, storeObject)" />
      <MemberSignature Language="C#" Value="public static void SetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string? name, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="name">The name to set.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <summary>
                Sets the column to which the property is mapped for a particular table-like store object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnName">
      <MemberSignature Language="C#" Value="public static string SetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string name, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetColumnName(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string name, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnName(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetColumnName (property As IConventionProperty, name As String, ByRef storeObject As StoreObjectIdentifier, Optional fromDataAnnotation As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member SetColumnName : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * StoreObjectIdentifier * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnName (property, name, storeObject, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static string? SetColumnName (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string? name, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="name">The name to set.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the column to which the property is mapped for a particular table-like store object.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnOrder">
      <MemberSignature Language="C#" Value="public static void SetColumnOrder (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, int? order);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetColumnOrder(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, valuetype System.Nullable`1&lt;int32&gt; order) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnOrder(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetColumnOrder (property As IMutableProperty, order As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="static member SetColumnOrder : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * Nullable&lt;int&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnOrder (property, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="order" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="order">The column order.</param>
        <summary>
                Sets the order of the column the property is mapped to.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnOrder">
      <MemberSignature Language="C#" Value="public static int? SetColumnOrder (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, int? order, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; SetColumnOrder(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, valuetype System.Nullable`1&lt;int32&gt; order, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnOrder(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetColumnOrder (property As IConventionProperty, order As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SetColumnOrder : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * Nullable&lt;int&gt; * bool -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnOrder (property, order, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="order" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="order">The column order.</param>
        <param name="fromDataAnnotation">A value indicating whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the order of the column the property is mapped to.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnType">
      <MemberSignature Language="C#" Value="public static void SetColumnType (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string value);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetColumnType(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnType(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetColumnType (property As IMutableProperty, value As String)" />
      <MemberSignature Language="F#" Value="static member SetColumnType : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnType (property, value)" />
      <MemberSignature Language="C#" Value="public static void SetColumnType (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="value">The value to set.</param>
        <summary>
                Sets the database type of the column to which the property is mapped.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColumnType">
      <MemberSignature Language="C#" Value="public static void SetColumnType (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetColumnType(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnType(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetColumnType (property As IConventionProperty, value As String, Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetColumnType : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnType (property, value, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string SetColumnType (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetColumnType(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetColumnType (property As IConventionProperty, value As String, Optional fromDataAnnotation As Boolean = false) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetColumnType : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetColumnType (property, value, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string? SetColumnType (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="value">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the database type of the column to which the property is mapped.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetComment">
      <MemberSignature Language="C#" Value="public static void SetComment (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string comment);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComment(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string comment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetComment(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetComment (property As IMutableProperty, comment As String)" />
      <MemberSignature Language="F#" Value="static member SetComment : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetComment (property, comment)" />
      <MemberSignature Language="C#" Value="public static void SetComment (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string? comment);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="comment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="comment">The comment for the column.</param>
        <summary>
                Configures a comment to be applied to the column this property is mapped to.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetComment">
      <MemberSignature Language="C#" Value="public static void SetComment (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string comment, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComment(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string comment, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetComment(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetComment (property As IConventionProperty, comment As String, Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetComment : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetComment (property, comment, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string SetComment (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string comment, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetComment(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string comment, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetComment (property As IConventionProperty, comment As String, Optional fromDataAnnotation As Boolean = false) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetComment : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetComment (property, comment, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string? SetComment (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string? comment, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
        <Parameter Name="comment" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="comment">The comment for the column.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures a comment to be applied to the column this property is mapped to.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetComputedColumnSql">
      <MemberSignature Language="C#" Value="public static void SetComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string value);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComputedColumnSql(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetComputedColumnSql (property As IMutableProperty, value As String)" />
      <MemberSignature Language="F#" Value="static member SetComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetComputedColumnSql (property, value)" />
      <MemberSignature Language="C#" Value="public static void SetComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="value">The value to set.</param>
        <summary>
                Sets the SQL expression that is used as the computed value for the column this property is mapped to.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetComputedColumnSql">
      <MemberSignature Language="C#" Value="public static void SetComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComputedColumnSql(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetComputedColumnSql (property As IConventionProperty, value As String, Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetComputedColumnSql (property, value, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string SetComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetComputedColumnSql(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetComputedColumnSql (property As IConventionProperty, value As String, Optional fromDataAnnotation As Boolean = false) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetComputedColumnSql (property, value, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string? SetComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="value">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the SQL expression that is used as the computed value for the column this property is mapped to.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultValue">
      <MemberSignature Language="C#" Value="public static void SetDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, object value);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDefaultValue (property As IMutableProperty, value As Object)" />
      <MemberSignature Language="F#" Value="static member SetDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * obj -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetDefaultValue (property, value)" />
      <MemberSignature Language="C#" Value="public static void SetDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, object? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="value">The value to set.</param>
        <summary>
                Sets the object that is used as the default value for the column this property is mapped to.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultValue">
      <MemberSignature Language="C#" Value="public static void SetDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, object value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, object value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDefaultValue (property As IConventionProperty, value As Object, Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * obj * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetDefaultValue (property, value, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static object SetDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, object value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object SetDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, object value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetDefaultValue (property As IConventionProperty, value As Object, Optional fromDataAnnotation As Boolean = false) As Object" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * obj * bool -&gt; obj" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetDefaultValue (property, value, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static object? SetDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, object? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="value">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the object that is used as the default value for the column this property is mapped to.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultValueSql">
      <MemberSignature Language="C#" Value="public static void SetDefaultValueSql (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string value);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDefaultValueSql(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDefaultValueSql (property As IMutableProperty, value As String)" />
      <MemberSignature Language="F#" Value="static member SetDefaultValueSql : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetDefaultValueSql (property, value)" />
      <MemberSignature Language="C#" Value="public static void SetDefaultValueSql (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="value">The value to set.</param>
        <summary>
                Sets the SQL expression that is used as the default value for the column this property is mapped to.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultValueSql">
      <MemberSignature Language="C#" Value="public static void SetDefaultValueSql (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDefaultValueSql(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDefaultValueSql (property As IConventionProperty, value As String, Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetDefaultValueSql : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetDefaultValueSql (property, value, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string SetDefaultValueSql (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetDefaultValueSql(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetDefaultValueSql (property As IConventionProperty, value As String, Optional fromDataAnnotation As Boolean = false) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetDefaultValueSql : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetDefaultValueSql (property, value, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string? SetDefaultValueSql (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="value">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the SQL expression that is used as the default value for the column this property is mapped to.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFixedLength">
      <MemberSignature Language="C#" Value="public static void SetIsFixedLength (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, bool? fixedLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFixedLength(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, valuetype System.Nullable`1&lt;bool&gt; fixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetIsFixedLength(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsFixedLength (property As IMutableProperty, fixedLength As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member SetIsFixedLength : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetIsFixedLength (property, fixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="fixedLength" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="fixedLength">A value indicating whether the property is constrained to fixed length values.</param>
        <summary>
                Sets a flag indicating whether the property is capable of storing only fixed-length data, such as strings.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFixedLength">
      <MemberSignature Language="C#" Value="public static void SetIsFixedLength (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, bool? fixedLength, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFixedLength(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, valuetype System.Nullable`1&lt;bool&gt; fixedLength, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetIsFixedLength(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsFixedLength (property As IConventionProperty, fixedLength As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetIsFixedLength : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * Nullable&lt;bool&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetIsFixedLength (property, fixedLength, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static bool? SetIsFixedLength (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, bool? fixedLength, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; SetIsFixedLength(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, valuetype System.Nullable`1&lt;bool&gt; fixedLength, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetIsFixedLength (property As IConventionProperty, fixedLength As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Nullable(Of Boolean)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetIsFixedLength : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * Nullable&lt;bool&gt; * bool -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetIsFixedLength (property, fixedLength, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" />
        <Parameter Name="fixedLength" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="fixedLength">A value indicating whether the property is constrained to fixed length values.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets a flag indicating whether the property is capable of storing only fixed-length data, such as strings.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsStored">
      <MemberSignature Language="C#" Value="public static void SetIsStored (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, bool? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsStored(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, valuetype System.Nullable`1&lt;bool&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetIsStored(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsStored (property As IMutableProperty, value As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member SetIsStored : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetIsStored (property, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="value">The value to set.</param>
        <summary>
                Sets whether the value of the computed column this property is mapped to is stored in the database, or calculated when
                it is read.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsStored">
      <MemberSignature Language="C#" Value="public static bool? SetIsStored (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, bool? value, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; SetIsStored(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, valuetype System.Nullable`1&lt;bool&gt; value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetIsStored(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetIsStored (property As IConventionProperty, value As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member SetIsStored : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * Nullable&lt;bool&gt; * bool -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetIsStored (property, value, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="value">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets whether the value of the computed column this property is mapped to is stored in the database, or calculated when
                it is read.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJsonPropertyName">
      <MemberSignature Language="C#" Value="public static void SetJsonPropertyName (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetJsonPropertyName(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetJsonPropertyName(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetJsonPropertyName (property As IMutableProperty, name As String)" />
      <MemberSignature Language="F#" Value="static member SetJsonPropertyName : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetJsonPropertyName (property, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="name">The name to be used.</param>
        <summary>
                Sets the value of JSON property name used for the given property of an entity mapped to a JSON column.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJsonPropertyName">
      <MemberSignature Language="C#" Value="public static string? SetJsonPropertyName (this Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string? name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetJsonPropertyName(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetJsonPropertyName(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetJsonPropertyName (property As IConventionProperty, name As String, Optional fromDataAnnotation As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member SetJsonPropertyName : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.SetJsonPropertyName (property, name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="name">The name to be used.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the value of JSON property name used for the given property of an entity mapped to a JSON column.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetDefaultValue">
      <MemberSignature Language="C#" Value="public static bool TryGetDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, out object? defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [out] object&amp; defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.TryGetDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryGetDefaultValue (property As IReadOnlyProperty, ByRef defaultValue As Object) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryGetDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * obj -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.TryGetDefaultValue (property, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="defaultValue" Type="System.Object" RefType="out" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="defaultValue">The default value, or the CLR default if no explicit default has been set.</param>
        <summary>
                Returns the object that is used as the default value for the column this property is mapped to.
            </summary>
        <returns>
          <see langword="true" /> if a default value has been explicitly set; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetDefaultValue">
      <MemberSignature Language="C#" Value="public static bool TryGetDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject, out object? defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty property, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject, [out] object&amp; defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.TryGetDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryGetDefaultValue (property As IReadOnlyProperty, ByRef storeObject As StoreObjectIdentifier, ByRef defaultValue As Object) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryGetDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty * StoreObjectIdentifier * obj -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalPropertyExtensions.TryGetDefaultValue (property, storeObject, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyProperty" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="defaultValue" Type="System.Object" RefType="out" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <param name="storeObject">The identifier of the table-like store object containing the column.</param>
        <param name="defaultValue">The default value, or the CLR default if no explicit default has been set.</param>
        <summary>
                Returns the object that is used as the default value for the column this property is mapped to.
            </summary>
        <returns>
          <see langword="true" /> if a default value has been explicitly set; <see langword="false" /> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
