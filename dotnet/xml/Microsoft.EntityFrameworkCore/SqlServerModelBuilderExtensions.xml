<Type Name="SqlServerModelBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class SqlServerModelBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlServerModelBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SqlServerModelBuilderExtensions" />
  <TypeSignature Language="F#" Value="type SqlServerModelBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                SQL Server specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSetDatabaseMaxSize">
      <MemberSignature Language="C#" Value="public static bool CanSetDatabaseMaxSize (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string maxSize, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetDatabaseMaxSize(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string maxSize, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetDatabaseMaxSize(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetDatabaseMaxSize (modelBuilder As IConventionModelBuilder, maxSize As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetDatabaseMaxSize : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetDatabaseMaxSize (modelBuilder, maxSize, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static bool CanSetDatabaseMaxSize (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string? maxSize, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="maxSize" Type="System.String" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="maxSize">The maximum size of the database.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given value can be set as the maximum size of the database.
            </summary>
        <returns>
          <see langword="true" /> if the given value can be set as the maximum size of the database.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetHiLoSequence">
      <MemberSignature Language="C#" Value="public static bool CanSetHiLoSequence (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, string schema, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetHiLoSequence(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, string schema, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetHiLoSequence(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetHiLoSequence (modelBuilder As IConventionModelBuilder, name As String, schema As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetHiLoSequence : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetHiLoSequence (modelBuilder, name, schema, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static bool CanSetHiLoSequence (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string? name, string? schema, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="name">The name of the sequence.</param>
        <param name="schema">The schema of the sequence.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given name and schema can be set for the hi-lo sequence.
            </summary>
        <returns>
          <see langword="true" /> if the given name and schema can be set for the hi-lo sequence.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetIdentityColumnIncrement">
      <MemberSignature Language="C#" Value="public static bool CanSetIdentityColumnIncrement (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, int? increment, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetIdentityColumnIncrement(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, valuetype System.Nullable`1&lt;int32&gt; increment, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetIdentityColumnIncrement(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetIdentityColumnIncrement (modelBuilder As IConventionModelBuilder, increment As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetIdentityColumnIncrement : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Nullable&lt;int&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetIdentityColumnIncrement (modelBuilder, increment, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="increment" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="increment">The incremental value that is added to the identity value of the previous row that was loaded.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given value can be set as the default increment for SQL Server IDENTITY.
            </summary>
        <returns>
          <see langword="true" /> if the given value can be set as the default increment for SQL Server IDENTITY.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetIdentityColumnSeed">
      <MemberSignature Language="C#" Value="public static bool CanSetIdentityColumnSeed (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, int? seed, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetIdentityColumnSeed(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, valuetype System.Nullable`1&lt;int32&gt; seed, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetIdentityColumnSeed(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetIdentityColumnSeed (modelBuilder As IConventionModelBuilder, seed As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetIdentityColumnSeed : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Nullable&lt;int&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetIdentityColumnSeed (modelBuilder, seed, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="seed"> The value that is used for the very first row loaded into the table. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Returns a value indicating whether the given value can be set as the default seed for SQL Server IDENTITY.
            </summary>
        <returns>
          <see langword="true" /> if the given value can be set as the seed for SQL Server IDENTITY. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetIdentityColumnSeed">
      <MemberSignature Language="C#" Value="public static bool CanSetIdentityColumnSeed (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, long? seed, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetIdentityColumnSeed(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, valuetype System.Nullable`1&lt;int64&gt; seed, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetIdentityColumnSeed(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int64},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetIdentityColumnSeed (modelBuilder As IConventionModelBuilder, seed As Nullable(Of Long), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetIdentityColumnSeed : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Nullable&lt;int64&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetIdentityColumnSeed (modelBuilder, seed, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int64&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="seed">The value that is used for the very first row loaded into the table.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given value can be set as the default seed for SQL Server IDENTITY.
            </summary>
        <returns>
          <see langword="true" /> if the given value can be set as the seed for SQL Server IDENTITY.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetPerformanceLevelSql">
      <MemberSignature Language="C#" Value="public static bool CanSetPerformanceLevelSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string performanceLevel, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetPerformanceLevelSql(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string performanceLevel, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetPerformanceLevelSql(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetPerformanceLevelSql (modelBuilder As IConventionModelBuilder, performanceLevel As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetPerformanceLevelSql : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetPerformanceLevelSql (modelBuilder, performanceLevel, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static bool CanSetPerformanceLevelSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string? performanceLevel, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="performanceLevel" Type="System.String" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="performanceLevel">The performance level of the database expression.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given value can be set as the performance level of the database.
            </summary>
        <returns>
          <see langword="true" /> if the given value can be set as the performance level of the database.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetServiceTierSql">
      <MemberSignature Language="C#" Value="public static bool CanSetServiceTierSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string serviceTier, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetServiceTierSql(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string serviceTier, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetServiceTierSql(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetServiceTierSql (modelBuilder As IConventionModelBuilder, serviceTier As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetServiceTierSql : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetServiceTierSql (modelBuilder, serviceTier, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static bool CanSetServiceTierSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string? serviceTier, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="serviceTier" Type="System.String" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="serviceTier">The expression for the service tier of the database.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given value can be set as the service tier of the database.
            </summary>
        <returns>
          <see langword="true" /> if the given value can be set as the service tier of the database.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetValueGenerationStrategy">
      <MemberSignature Language="C#" Value="public static bool CanSetValueGenerationStrategy (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy? valueGenerationStrategy, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetValueGenerationStrategy(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy&gt; valueGenerationStrategy, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetValueGenerationStrategy (modelBuilder As IConventionModelBuilder, valueGenerationStrategy As Nullable(Of SqlServerValueGenerationStrategy), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetValueGenerationStrategy : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.CanSetValueGenerationStrategy (modelBuilder, valueGenerationStrategy, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="valueGenerationStrategy" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="valueGenerationStrategy">The value generation strategy.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given value can be set as the default value generation strategy.
            </summary>
        <returns>
          <see langword="true" /> if the given value can be set as the default value generation strategy.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasHiLoSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSequenceBuilder ForSqlServerHasHiLoSequence (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, string schema, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSequenceBuilder ForSqlServerHasHiLoSequence(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, string schema, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasHiLoSequence(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasHiLoSequence (modelBuilder As IConventionModelBuilder, name As String, schema As String, Optional fromDataAnnotation As Boolean = false) As IConventionSequenceBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasHiLoSequence : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSequenceBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasHiLoSequence (modelBuilder, name, schema, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("Use HasHiLoSequence")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use HasHiLoSequence")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSequenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="name"> The name of the sequence. </param>
        <param name="schema">The schema of the sequence. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Configures the database sequence used for the hi-lo pattern to generate values for key properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting SQL Server.
            </summary>
        <returns> A builder to further configure the sequence. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasIdentityIncrement">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder ForSqlServerHasIdentityIncrement (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, int? increment, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder ForSqlServerHasIdentityIncrement(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, valuetype System.Nullable`1&lt;int32&gt; increment, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasIdentityIncrement(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasIdentityIncrement (modelBuilder As IConventionModelBuilder, increment As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasIdentityIncrement : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Nullable&lt;int&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasIdentityIncrement (modelBuilder, increment, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("Use HasIdentityColumnIncrement")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use HasIdentityColumnIncrement")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="increment" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="increment"> The incremental value that is added to the identity value of the previous row that was loaded. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Configures the default increment for SQL Server IDENTITY.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasIdentitySeed">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder ForSqlServerHasIdentitySeed (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, int? seed, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder ForSqlServerHasIdentitySeed(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, valuetype System.Nullable`1&lt;int32&gt; seed, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasIdentitySeed(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasIdentitySeed (modelBuilder As IConventionModelBuilder, seed As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasIdentitySeed : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Nullable&lt;int&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasIdentitySeed (modelBuilder, seed, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("Use HasIdentityColumnSeed")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use HasIdentityColumnSeed")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="seed"> The value that is used for the very first row loaded into the table. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Configures the default seed for SQL Server IDENTITY.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasSequence (modelBuilder As ModelBuilder, name As String, builderAction As Action(Of RelationalSequenceBuilder)) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasSequence : Microsoft.EntityFrameworkCore.ModelBuilder * string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence (modelBuilder, name, builderAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="builderAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt;" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="name"> The name of the sequence. </param>
        <param name="builderAction"> An action that performs configuration of the sequence. </param>
        <summary>
                Configures a database sequence when targeting SQL Server.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder ForSqlServerHasSequence (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, string schema = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder ForSqlServerHasSequence(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasSequence (modelBuilder As ModelBuilder, name As String, Optional schema As String = Nothing) As RelationalSequenceBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasSequence : Microsoft.EntityFrameworkCore.ModelBuilder * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence (modelBuilder, name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="name"> The name of the sequence. </param>
        <param name="schema">The schema of the sequence. </param>
        <summary>
                Configures a database sequence when targeting SQL Server.
            </summary>
        <returns> A builder to further configure the sequence. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, string schema, Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, string schema, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasSequence (modelBuilder As ModelBuilder, name As String, schema As String, builderAction As Action(Of RelationalSequenceBuilder)) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasSequence : Microsoft.EntityFrameworkCore.ModelBuilder * string * string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence (modelBuilder, name, schema, builderAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="builderAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="name"> The name of the sequence. </param>
        <param name="schema">The schema of the sequence. </param>
        <param name="builderAction"> An action that performs configuration of the sequence. </param>
        <summary>
                Configures a database sequence when targeting SQL Server.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, Type clrType, string name, Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, class System.Type clrType, string name, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.Type,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasSequence (modelBuilder As ModelBuilder, clrType As Type, name As String, builderAction As Action(Of RelationalSequenceBuilder)) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasSequence : Microsoft.EntityFrameworkCore.ModelBuilder * Type * string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence (modelBuilder, clrType, name, builderAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="clrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="builderAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="clrType"> The type of values the sequence will generate. </param>
        <param name="name"> The name of the sequence. </param>
        <param name="builderAction"> An action that performs configuration of the sequence. </param>
        <summary>
                Configures a database sequence when targeting SQL Server.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder ForSqlServerHasSequence (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, Type clrType, string name, string schema = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder ForSqlServerHasSequence(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, class System.Type clrType, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.Type,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasSequence (modelBuilder As ModelBuilder, clrType As Type, name As String, Optional schema As String = Nothing) As RelationalSequenceBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasSequence : Microsoft.EntityFrameworkCore.ModelBuilder * Type * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence (modelBuilder, clrType, name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="clrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="clrType"> The type of values the sequence will generate. </param>
        <param name="name"> The name of the sequence. </param>
        <param name="schema">The schema of the sequence. </param>
        <summary>
                Configures a database sequence when targeting SQL Server.
            </summary>
        <returns> A builder to further configure the sequence. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, Type clrType, string name, string schema, Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, class System.Type clrType, string name, string schema, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.Type,System.String,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasSequence (modelBuilder As ModelBuilder, clrType As Type, name As String, schema As String, builderAction As Action(Of RelationalSequenceBuilder)) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasSequence : Microsoft.EntityFrameworkCore.ModelBuilder * Type * string * string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence (modelBuilder, clrType, name, schema, builderAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="clrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="schema" Type="System.String" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="builderAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt;" Index="4" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="clrType"> The type of values the sequence will generate. </param>
        <param name="name"> The name of the sequence. </param>
        <param name="schema">The schema of the sequence. </param>
        <param name="builderAction"> An action that performs configuration of the sequence. </param>
        <summary>
                Configures a database sequence when targeting SQL Server.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasSequence&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence&lt;T&gt; (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence&lt;T&gt;(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence``1(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasSequence(Of T) (modelBuilder As ModelBuilder, name As String, builderAction As Action(Of RelationalSequenceBuilder)) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasSequence : Microsoft.EntityFrameworkCore.ModelBuilder * string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence (modelBuilder, name, builderAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="builderAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt;" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The type of values the sequence will generate. </typeparam>
        <param name="modelBuilder"> The model builder. </param>
        <param name="name"> The name of the sequence. </param>
        <param name="builderAction"> An action that performs configuration of the sequence. </param>
        <summary>
                Configures a database sequence when targeting SQL Server.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasSequence&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder ForSqlServerHasSequence&lt;T&gt; (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, string schema = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder ForSqlServerHasSequence&lt;T&gt;(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence``1(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasSequence(Of T) (modelBuilder As ModelBuilder, name As String, Optional schema As String = Nothing) As RelationalSequenceBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasSequence : Microsoft.EntityFrameworkCore.ModelBuilder * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence (modelBuilder, name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The type of values the sequence will generate. </typeparam>
        <param name="modelBuilder"> The model builder. </param>
        <param name="name"> The name of the sequence. </param>
        <param name="schema">The schema of the sequence. </param>
        <summary>
                Configures a database sequence when targeting SQL Server.
            </summary>
        <returns> A builder to further configure the sequence. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasSequence&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence&lt;T&gt; (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, string schema, Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerHasSequence&lt;T&gt;(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, string schema, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; builderAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence``1(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasSequence(Of T) (modelBuilder As ModelBuilder, name As String, schema As String, builderAction As Action(Of RelationalSequenceBuilder)) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasSequence : Microsoft.EntityFrameworkCore.ModelBuilder * string * string * Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasSequence (modelBuilder, name, schema, builderAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="builderAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder&gt;" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The type of values the sequence will generate. </typeparam>
        <param name="modelBuilder"> The model builder. </param>
        <param name="name"> The name of the sequence. </param>
        <param name="schema">The schema of the sequence. </param>
        <param name="builderAction"> An action that performs configuration of the sequence. </param>
        <summary>
                Configures a database sequence when targeting SQL Server.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasValueGenerationStrategy">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder ForSqlServerHasValueGenerationStrategy (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy? valueGenerationStrategy, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder ForSqlServerHasValueGenerationStrategy(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy&gt; valueGenerationStrategy, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasValueGenerationStrategy (modelBuilder As IConventionModelBuilder, valueGenerationStrategy As Nullable(Of SqlServerValueGenerationStrategy), Optional fromDataAnnotation As Boolean = false) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasValueGenerationStrategy : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerHasValueGenerationStrategy (modelBuilder, valueGenerationStrategy, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("Use HasValueGenerationStrategy")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use HasValueGenerationStrategy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="valueGenerationStrategy" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="valueGenerationStrategy"> The value generation strategy. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Configures the default value generation strategy for key properties marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />,
                when targeting SQL Server.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerUseIdentityColumns">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerUseIdentityColumns (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerUseIdentityColumns(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerUseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerUseIdentityColumns (modelBuilder As ModelBuilder) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerUseIdentityColumns : Microsoft.EntityFrameworkCore.ModelBuilder -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerUseIdentityColumns modelBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <summary>
                Configures the model to use the SQL Server IDENTITY feature to generate values for key properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting SQL Server. This is the default
                behavior when targeting SQL Server.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerUseIdentityColumns">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerUseIdentityColumns (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, int seed = 1, int increment = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerUseIdentityColumns(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, int32 seed, int32 increment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerUseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerUseIdentityColumns (modelBuilder As ModelBuilder, Optional seed As Integer = 1, Optional increment As Integer = 1) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerUseIdentityColumns : Microsoft.EntityFrameworkCore.ModelBuilder * int * int -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerUseIdentityColumns (modelBuilder, seed, increment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("Use UseIdentityColumns")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use UseIdentityColumns")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="seed" Type="System.Int32" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="increment" Type="System.Int32" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="seed"> The value that is used for the very first row loaded into the table. </param>
        <param name="increment"> The incremental value that is added to the identity value of the previous row that was loaded. </param>
        <summary>
                Configures the model to use the SQL Server IDENTITY feature to generate values for key properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting SQL Server. This is the default
                behavior when targeting SQL Server.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerUseSequenceHiLo">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerUseSequenceHiLo (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name = default, string schema = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder ForSqlServerUseSequenceHiLo(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerUseSequenceHiLo(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerUseSequenceHiLo (modelBuilder As ModelBuilder, Optional name As String = Nothing, Optional schema As String = Nothing) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerUseSequenceHiLo : Microsoft.EntityFrameworkCore.ModelBuilder * string * string -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.ForSqlServerUseSequenceHiLo (modelBuilder, name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("Use UseHiLo")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use UseHiLo")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="name"> The name of the sequence. </param>
        <param name="schema">The schema of the sequence. </param>
        <summary>
                Configures the model to use a sequence-based hi-lo pattern to generate values for key properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting SQL Server.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDatabaseMaxSize">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder HasDatabaseMaxSize (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string maxSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder HasDatabaseMaxSize(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string maxSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasDatabaseMaxSize(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDatabaseMaxSize (modelBuilder As ModelBuilder, maxSize As String) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasDatabaseMaxSize : Microsoft.EntityFrameworkCore.ModelBuilder * string -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasDatabaseMaxSize (modelBuilder, maxSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="maxSize" Type="System.String" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="maxSize">The maximum size of the database.</param>
        <summary>
                Configures the maximum size for Azure SQL Database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
          <para>
                    Units must be included, e.g. "100 MB". See Azure SQL Database documentation for all supported values.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                    <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                    for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDatabaseMaxSize">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasDatabaseMaxSize (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string maxSize, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasDatabaseMaxSize(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string maxSize, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasDatabaseMaxSize(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDatabaseMaxSize (modelBuilder As IConventionModelBuilder, maxSize As String, Optional fromDataAnnotation As Boolean = false) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasDatabaseMaxSize : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasDatabaseMaxSize (modelBuilder, maxSize, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder? HasDatabaseMaxSize (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string? maxSize, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="maxSize" Type="System.String" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="maxSize">The maximum size of the database.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Attempts to configure the maximum size for Azure SQL Database.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
          <para>
                    Units must be included, e.g. "100 MB". See Azure SQL Database documentation for all supported values.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                    <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                    for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasHiLoSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSequenceBuilder HasHiLoSequence (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, string schema, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSequenceBuilder HasHiLoSequence(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, string schema, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasHiLoSequence(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasHiLoSequence (modelBuilder As IConventionModelBuilder, name As String, schema As String, Optional fromDataAnnotation As Boolean = false) As IConventionSequenceBuilder" />
      <MemberSignature Language="F#" Value="static member HasHiLoSequence : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSequenceBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasHiLoSequence (modelBuilder, name, schema, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSequenceBuilder? HasHiLoSequence (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string? name, string? schema, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSequenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="name">The name of the sequence.</param>
        <param name="schema">The schema of the sequence.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the database sequence used for the hi-lo pattern to generate values for key properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting SQL Server.
            </summary>
        <returns>A builder to further configure the sequence.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasIdentityColumnIncrement">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasIdentityColumnIncrement (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, int? increment, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasIdentityColumnIncrement(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, valuetype System.Nullable`1&lt;int32&gt; increment, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasIdentityColumnIncrement(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasIdentityColumnIncrement (modelBuilder As IConventionModelBuilder, increment As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasIdentityColumnIncrement : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Nullable&lt;int&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasIdentityColumnIncrement (modelBuilder, increment, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder? HasIdentityColumnIncrement (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, int? increment, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="increment" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="increment">The incremental value that is added to the identity value of the previous row that was loaded.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the default increment for SQL Server IDENTITY.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasIdentityColumnSeed">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasIdentityColumnSeed (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, int? seed, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasIdentityColumnSeed(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, valuetype System.Nullable`1&lt;int32&gt; seed, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasIdentityColumnSeed(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasIdentityColumnSeed (modelBuilder As IConventionModelBuilder, seed As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasIdentityColumnSeed : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Nullable&lt;int&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasIdentityColumnSeed (modelBuilder, seed, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The model builder. </param>
        <param name="seed"> The value that is used for the very first row loaded into the table. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Configures the default seed for SQL Server IDENTITY.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasIdentityColumnSeed">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder? HasIdentityColumnSeed (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, long? seed, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasIdentityColumnSeed(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, valuetype System.Nullable`1&lt;int64&gt; seed, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasIdentityColumnSeed(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int64},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasIdentityColumnSeed (modelBuilder As IConventionModelBuilder, seed As Nullable(Of Long), Optional fromDataAnnotation As Boolean = false) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasIdentityColumnSeed : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Nullable&lt;int64&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasIdentityColumnSeed (modelBuilder, seed, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int64&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="seed">The value that is used for the very first row loaded into the table.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the default seed for SQL Server IDENTITY.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPerformanceLevel">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder HasPerformanceLevel (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string performanceLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder HasPerformanceLevel(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string performanceLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasPerformanceLevel(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasPerformanceLevel (modelBuilder As ModelBuilder, performanceLevel As String) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasPerformanceLevel : Microsoft.EntityFrameworkCore.ModelBuilder * string -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasPerformanceLevel (modelBuilder, performanceLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="performanceLevel" Type="System.String" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="performanceLevel">The performance level of the database as a string literal.</param>
        <summary>
                Configures the performance level (SERVICE_OBJECTIVE) for Azure SQL Database as a string literal.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
          <para>
                    See Azure SQL Database documentation for supported values.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                    <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                    for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPerformanceLevelSql">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder HasPerformanceLevelSql (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string performanceLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder HasPerformanceLevelSql(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string performanceLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasPerformanceLevelSql(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasPerformanceLevelSql (modelBuilder As ModelBuilder, performanceLevel As String) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasPerformanceLevelSql : Microsoft.EntityFrameworkCore.ModelBuilder * string -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasPerformanceLevelSql (modelBuilder, performanceLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="performanceLevel" Type="System.String" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="performanceLevel">The expression for the performance level of the database.</param>
        <summary>
                Configures the performance level (SERVICE_OBJECTIVE) for Azure SQL Database as a SQL expression.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
          <para>
                    See Azure SQL Database documentation for supported values.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                    <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                    for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPerformanceLevelSql">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasPerformanceLevelSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string performanceLevel, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasPerformanceLevelSql(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string performanceLevel, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasPerformanceLevelSql(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasPerformanceLevelSql (modelBuilder As IConventionModelBuilder, performanceLevel As String, Optional fromDataAnnotation As Boolean = false) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasPerformanceLevelSql : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasPerformanceLevelSql (modelBuilder, performanceLevel, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder? HasPerformanceLevelSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string? performanceLevel, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="performanceLevel" Type="System.String" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="performanceLevel">The expression for the performance level of the database.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Attempts to configure the performance level (SERVICE_OBJECTIVE) for Azure SQL Database.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
          <para>
                    See Azure SQL Database documentation for supported values.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                    <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                    for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasServiceTier">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder HasServiceTier (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string serviceTier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder HasServiceTier(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string serviceTier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasServiceTier(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasServiceTier (modelBuilder As ModelBuilder, serviceTier As String) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasServiceTier : Microsoft.EntityFrameworkCore.ModelBuilder * string -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasServiceTier (modelBuilder, serviceTier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="serviceTier" Type="System.String" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="serviceTier">The service tier of the database as a string literal.</param>
        <summary>
                Configures the service tier (EDITION) for Azure SQL Database as a string literal.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
          <para>
                    See Azure SQL Database documentation for supported values.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                    <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                    for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasServiceTierSql">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder HasServiceTierSql (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string serviceTier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder HasServiceTierSql(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string serviceTier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasServiceTierSql(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasServiceTierSql (modelBuilder As ModelBuilder, serviceTier As String) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasServiceTierSql : Microsoft.EntityFrameworkCore.ModelBuilder * string -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasServiceTierSql (modelBuilder, serviceTier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="serviceTier" Type="System.String" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="serviceTier">The expression for the service tier of the database.</param>
        <summary>
                Configures the service tier (EDITION) for Azure SQL Database as a SQL expression.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
          <para>
                    See Azure SQL Database documentation for supported values.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                    <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                    for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasServiceTierSql">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasServiceTierSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string serviceTier, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasServiceTierSql(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string serviceTier, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasServiceTierSql(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasServiceTierSql (modelBuilder As IConventionModelBuilder, serviceTier As String, Optional fromDataAnnotation As Boolean = false) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasServiceTierSql : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasServiceTierSql (modelBuilder, serviceTier, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder? HasServiceTierSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string? serviceTier, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="serviceTier" Type="System.String" Index="1" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="serviceTier">The expression for the service tier of the database.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Attempts to configure the service tier (EDITION) for Azure SQL Database.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
          <para>
                    See Azure SQL Database documentation for supported values.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                    <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                    for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValueGenerationStrategy">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasValueGenerationStrategy (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy? valueGenerationStrategy, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder HasValueGenerationStrategy(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy&gt; valueGenerationStrategy, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasValueGenerationStrategy (modelBuilder As IConventionModelBuilder, valueGenerationStrategy As Nullable(Of SqlServerValueGenerationStrategy), Optional fromDataAnnotation As Boolean = false) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="static member HasValueGenerationStrategy : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.HasValueGenerationStrategy (modelBuilder, valueGenerationStrategy, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder? HasValueGenerationStrategy (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy? valueGenerationStrategy, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="valueGenerationStrategy" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="valueGenerationStrategy">The value generation strategy.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the default value generation strategy for key properties marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />,
                when targeting SQL Server.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseHiLo">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder UseHiLo (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name = default, string schema = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder UseHiLo(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseHiLo(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseHiLo (modelBuilder As ModelBuilder, Optional name As String = Nothing, Optional schema As String = Nothing) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member UseHiLo : Microsoft.EntityFrameworkCore.ModelBuilder * string * string -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseHiLo (modelBuilder, name, schema)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder UseHiLo (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string? name = default, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="name">The name of the sequence.</param>
        <param name="schema">The schema of the sequence.</param>
        <summary>
                Configures the model to use a sequence-based hi-lo pattern to generate values for key properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting SQL Server.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseIdentityColumns">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder UseIdentityColumns (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, int seed = 1, int increment = 1);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder UseIdentityColumns(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, int32 seed, int32 increment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseIdentityColumns (modelBuilder As ModelBuilder, Optional seed As Integer = 1, Optional increment As Integer = 1) As ModelBuilder" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="static member UseIdentityColumns : Microsoft.EntityFrameworkCore.ModelBuilder * int * int -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseIdentityColumns (modelBuilder, seed, increment)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder UseIdentityColumns (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, int seed, int increment = 1);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseIdentityColumns (modelBuilder As ModelBuilder, seed As Integer, Optional increment As Integer = 1) As ModelBuilder" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="seed" Type="System.Int32" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="increment" Type="System.Int32" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="seed">The value that is used for the very first row loaded into the table.</param>
        <param name="increment">The incremental value that is added to the identity value of the previous row that was loaded.</param>
        <summary>
                Configures the model to use the SQL Server IDENTITY feature to generate values for key properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting SQL Server. This is the default
                behavior when targeting SQL Server.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseIdentityColumns">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder UseIdentityColumns (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, long seed = 1, int increment = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder UseIdentityColumns(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, int64 seed, int32 increment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseIdentityColumns (modelBuilder As ModelBuilder, Optional seed As Long = 1, Optional increment As Integer = 1) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member UseIdentityColumns : Microsoft.EntityFrameworkCore.ModelBuilder * int64 * int -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseIdentityColumns (modelBuilder, seed, increment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="seed" Type="System.Int64" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="increment" Type="System.Int32" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="seed">The value that is used for the very first row loaded into the table.</param>
        <param name="increment">The incremental value that is added to the identity value of the previous row that was loaded.</param>
        <summary>
                Configures the model to use the SQL Server IDENTITY feature to generate values for key properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting SQL Server. This is the default
                behavior when targeting SQL Server.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseKeySequences">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ModelBuilder UseKeySequences (this Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string? nameSuffix = default, string? schema = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ModelBuilder UseKeySequences(class Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder, string nameSuffix, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseKeySequences(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseKeySequences (modelBuilder As ModelBuilder, Optional nameSuffix As String = Nothing, Optional schema As String = Nothing) As ModelBuilder" />
      <MemberSignature Language="F#" Value="static member UseKeySequences : Microsoft.EntityFrameworkCore.ModelBuilder * string * string -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions.UseKeySequences (modelBuilder, nameSuffix, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.ModelBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="nameSuffix" Type="System.String" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">The model builder.</param>
        <param name="nameSuffix">The name that will suffix the table name for each sequence created automatically.</param>
        <param name="schema">The schema of the sequence.</param>
        <summary>
                Configures the model to use a sequence per hierarchy to generate values for key properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting SQL Server.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
