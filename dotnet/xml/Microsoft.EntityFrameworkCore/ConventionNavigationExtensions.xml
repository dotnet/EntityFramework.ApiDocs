<Type Name="ConventionNavigationExtensions" FullName="Microsoft.EntityFrameworkCore.ConventionNavigationExtensions">
  <TypeSignature Language="C#" Value="public static class ConventionNavigationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConventionNavigationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ConventionNavigationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ConventionNavigationExtensions" />
  <TypeSignature Language="F#" Value="type ConventionNavigationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="efcore-6.0">
      <AttributeName Language="C#">[System.Obsolete("Use IConventionNavigation")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use IConventionNavigation")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FindInverse">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation FindInverse (this Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation FindInverse(class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConventionNavigationExtensions.FindInverse(Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindInverse (navigation As IConventionNavigation) As IConventionNavigation" />
      <MemberSignature Language="F#" Value="static member FindInverse : Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" Usage="Microsoft.EntityFrameworkCore.ConventionNavigationExtensions.FindInverse navigation" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation? FindInverse (this Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use IConventionNavigation.Inverse")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IConventionNavigation.Inverse")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" RefType="this" />
      </Parameters>
      <Docs>
        <param name="navigation">The navigation property to find the inverse of.</param>
        <summary>
                Gets the navigation property on the other end of the relationship. Returns null if
                there is no navigation property defined on the other end of the relationship.
            </summary>
        <returns>
                The inverse navigation, or <see langword="null" /> if none is defined.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsEagerLoadedConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetIsEagerLoadedConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetIsEagerLoadedConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConventionNavigationExtensions.GetIsEagerLoadedConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsEagerLoadedConfigurationSource (navigation As IConventionNavigation) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetIsEagerLoadedConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.ConventionNavigationExtensions.GetIsEagerLoadedConfigurationSource navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="navigation"> The navigation property to find configuration source for. </param>
        <summary>
                Returns the configuration source for <see cref="M:Microsoft.EntityFrameworkCore.NavigationExtensions.IsEagerLoaded(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />.
            </summary>
        <returns> The configuration source for <see cref="M:Microsoft.EntityFrameworkCore.NavigationExtensions.IsEagerLoaded(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType GetTargetType (this Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType GetTargetType(class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConventionNavigationExtensions.GetTargetType(Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTargetType (navigation As IConventionNavigation) As IConventionEntityType" />
      <MemberSignature Language="F#" Value="static member GetTargetType : Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Usage="Microsoft.EntityFrameworkCore.ConventionNavigationExtensions.GetTargetType navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use IConventionNavigation.TargetEntityType")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IConventionNavigation.TargetEntityType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" RefType="this" />
      </Parameters>
      <Docs>
        <param name="navigation">The navigation property to find the target entity type of.</param>
        <summary>
                Gets the entity type that a given navigation property will hold an instance of
                (or hold instances of if it is a collection navigation).
            </summary>
        <returns>The target entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsEagerLoaded">
      <MemberSignature Language="C#" Value="public static void SetIsEagerLoaded (this Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation, bool? eagerLoaded, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsEagerLoaded(class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation, valuetype System.Nullable`1&lt;bool&gt; eagerLoaded, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConventionNavigationExtensions.SetIsEagerLoaded(Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsEagerLoaded (navigation As IConventionNavigation, eagerLoaded As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member SetIsEagerLoaded : Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation * Nullable&lt;bool&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.ConventionNavigationExtensions.SetIsEagerLoaded (navigation, eagerLoaded, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="eagerLoaded" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="navigation"> The navigation property to set whether it should be eager loaded. </param>
        <param name="eagerLoaded"> A value indicating whether this navigation should be eager loaded by default. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Sets a value indicating whether this navigation should be eager loaded by default.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
