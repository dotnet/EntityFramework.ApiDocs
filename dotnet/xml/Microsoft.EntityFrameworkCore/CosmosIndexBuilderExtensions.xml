<Type Name="CosmosIndexBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.CosmosIndexBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class CosmosIndexBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CosmosIndexBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.CosmosIndexBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CosmosIndexBuilderExtensions" />
  <TypeSignature Language="F#" Value="type CosmosIndexBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EF9103")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EF9103")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Azure Cosmos DB-specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSetVectorIndexType">
      <MemberSignature Language="C#" Value="public static bool CanSetVectorIndexType (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, Microsoft.Azure.Cosmos.VectorIndexType? indexType, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetVectorIndexType(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Cosmos.VectorIndexType&gt; indexType, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosIndexBuilderExtensions.CanSetVectorIndexType(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Nullable{Microsoft.Azure.Cosmos.VectorIndexType},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetVectorIndexType (indexBuilder As IConventionIndexBuilder, indexType As Nullable(Of VectorIndexType), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetVectorIndexType : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder * Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.CosmosIndexBuilderExtensions.CanSetVectorIndexType (indexBuilder, indexType, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" RefType="this" />
        <Parameter Name="indexType" Type="System.Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="indexType">The index type to use.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the vector index can be configured for vectors.
            </summary>
        <returns>
          <see langword="true" /> if the index can be configured for vectors.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForVectors">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder ForVectors (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, Microsoft.Azure.Cosmos.VectorIndexType? indexType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder ForVectors(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Cosmos.VectorIndexType&gt; indexType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosIndexBuilderExtensions.ForVectors(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.Nullable{Microsoft.Azure.Cosmos.VectorIndexType})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForVectors (indexBuilder As IndexBuilder, indexType As Nullable(Of VectorIndexType)) As IndexBuilder" />
      <MemberSignature Language="F#" Value="static member ForVectors : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder * Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosIndexBuilderExtensions.ForVectors (indexBuilder, indexType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" RefType="this" />
        <Parameter Name="indexType" Type="System.Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt;" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="indexType">The type of vector index to create.</param>
        <summary>
                Configures the index as a vector index with the given vector index type, such as "flat", "diskANN", or "quantizedFlat".
                See <see href="https://aka.ms/ef-cosmos-vectors">Vector Search in Azure Cosmos DB for NoSQL</see> for more information.
            </summary>
        <returns>A builder to further configure the index.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForVectors">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder? ForVectors (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, Microsoft.Azure.Cosmos.VectorIndexType? indexType, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder ForVectors(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Cosmos.VectorIndexType&gt; indexType, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosIndexBuilderExtensions.ForVectors(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.Nullable{Microsoft.Azure.Cosmos.VectorIndexType},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForVectors (indexBuilder As IConventionIndexBuilder, indexType As Nullable(Of VectorIndexType), Optional fromDataAnnotation As Boolean = false) As IConventionIndexBuilder" />
      <MemberSignature Language="F#" Value="static member ForVectors : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder * Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosIndexBuilderExtensions.ForVectors (indexBuilder, indexType, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" RefType="this" />
        <Parameter Name="indexType" Type="System.Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="indexType">The type of vector index to create.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures whether the index as a vector index with the given vector index type, such as "flat", "diskANN", or "quantizedFlat".
                See <see href="https://aka.ms/ef-cosmos-vectors">Vector Search in Azure Cosmos DB for NoSQL</see> for more information.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForVectors&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; ForVectors&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; indexBuilder, Microsoft.Azure.Cosmos.VectorIndexType? indexType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; ForVectors&lt;TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; indexBuilder, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Cosmos.VectorIndexType&gt; indexType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosIndexBuilderExtensions.ForVectors``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.Nullable{Microsoft.Azure.Cosmos.VectorIndexType})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForVectors(Of TEntity) (indexBuilder As IndexBuilder(Of TEntity), indexType As Nullable(Of VectorIndexType)) As IndexBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member ForVectors : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt; * Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt;" Usage="Microsoft.EntityFrameworkCore.CosmosIndexBuilderExtensions.ForVectors (indexBuilder, indexType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;" RefType="this" />
        <Parameter Name="indexType" Type="System.Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="indexType">The type of vector index to create.</param>
        <summary>
                Configures whether the index as a vector index with the given vector index type, such as "flat", "diskANN", or "quantizedFlat".
                See <see href="https://aka.ms/ef-cosmos-vectors">Vector Search in Azure Cosmos DB for NoSQL</see> for more information.
            </summary>
        <returns>A builder to further configure the index.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
