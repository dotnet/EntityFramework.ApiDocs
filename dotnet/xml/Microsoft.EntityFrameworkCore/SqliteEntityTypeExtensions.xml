<Type Name="SqliteEntityTypeExtensions" FullName="Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions">
  <TypeSignature Language="C#" Value="public static class SqliteEntityTypeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqliteEntityTypeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SqliteEntityTypeExtensions" />
  <TypeSignature Language="F#" Value="type SqliteEntityTypeExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Entity type extension methods for Sqlite-specific metadata.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlite">Accessing Sqlite databases with EF Core</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetUseSqlReturningClauseConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetUseSqlReturningClauseConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetUseSqlReturningClauseConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.GetUseSqlReturningClauseConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUseSqlReturningClauseConfigurationSource (entityType As IConventionEntityType) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetUseSqlReturningClauseConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.GetUseSqlReturningClauseConfigurationSource entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type.</param>
        <summary>
                Gets the configuration source for whether to use the SQL RETURNING clause when saving changes to the table.
            </summary>
        <returns>The configuration source for the memory-optimized setting.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSqlReturningClauseUsed">
      <MemberSignature Language="C#" Value="public static bool IsSqlReturningClauseUsed (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSqlReturningClauseUsed(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.IsSqlReturningClauseUsed(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsSqlReturningClauseUsed (entityType As IReadOnlyEntityType) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsSqlReturningClauseUsed : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType -&gt; bool" Usage="Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.IsSqlReturningClauseUsed entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type.</param>
        <summary>
                Returns a value indicating whether to use the SQL RETURNING clause when saving changes to the table.
                The RETURNING clause is incompatible with certain Sqlite features, such as virtual tables or tables with AFTER triggers.
            </summary>
        <returns>
          <see langword="true" /> if the SQL RETURNING clause is used to save changes to the table.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSqlReturningClauseUsed">
      <MemberSignature Language="C#" Value="public static bool IsSqlReturningClauseUsed (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSqlReturningClauseUsed(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType entityType, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.IsSqlReturningClauseUsed(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsSqlReturningClauseUsed (entityType As IReadOnlyEntityType, ByRef storeObject As StoreObjectIdentifier) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsSqlReturningClauseUsed : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType * StoreObjectIdentifier -&gt; bool" Usage="Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.IsSqlReturningClauseUsed (entityType, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyEntityType" RefType="this" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entityType">The entity type.</param>
        <param name="storeObject">The identifier of the table-like store object.</param>
        <summary>
                Returns a value indicating whether to use the SQL RETURNING clause when saving changes to the table.
                The RETURNING clause is incompatible with certain Sqlite features, such as virtual tables or tables with AFTER triggers.
            </summary>
        <returns>
          <see langword="true" /> if the SQL RETURNING clause is used to save changes to the table.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSqlReturningClause">
      <MemberSignature Language="C#" Value="public static void UseSqlReturningClause (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, bool? useSqlReturningClause);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseSqlReturningClause(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, valuetype System.Nullable`1&lt;bool&gt; useSqlReturningClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.UseSqlReturningClause(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub UseSqlReturningClause (entityType As IMutableEntityType, useSqlReturningClause As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member UseSqlReturningClause : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.UseSqlReturningClause (entityType, useSqlReturningClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="useSqlReturningClause" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type.</param>
        <param name="useSqlReturningClause">The value to set.</param>
        <summary>
                Sets a value indicating whether to use the SQL RETURNING clause when saving changes to the table.
                The RETURNING clause is incompatible with certain Sqlite features, such as virtual tables or tables with AFTER triggers.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSqlReturningClause">
      <MemberSignature Language="C#" Value="public static bool? UseSqlReturningClause (this Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, bool? useSqlReturningClause, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; UseSqlReturningClause(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, valuetype System.Nullable`1&lt;bool&gt; useSqlReturningClause, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.UseSqlReturningClause(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseSqlReturningClause (entityType As IConventionEntityType, useSqlReturningClause As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member UseSqlReturningClause : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Nullable&lt;bool&gt; * bool -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.UseSqlReturningClause (entityType, useSqlReturningClause, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" RefType="this" />
        <Parameter Name="useSqlReturningClause" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type.</param>
        <param name="useSqlReturningClause">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets a value indicating whether to use the SQL RETURNING clause when saving changes to the table.
                The RETURNING clause is incompatible with certain Sqlite features, such as virtual tables or tables with AFTER triggers.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSqlReturningClause">
      <MemberSignature Language="C#" Value="public static void UseSqlReturningClause (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, bool? useSqlReturningClause, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseSqlReturningClause(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, valuetype System.Nullable`1&lt;bool&gt; useSqlReturningClause, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.UseSqlReturningClause(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub UseSqlReturningClause (entityType As IMutableEntityType, useSqlReturningClause As Nullable(Of Boolean), ByRef storeObject As StoreObjectIdentifier)" />
      <MemberSignature Language="F#" Value="static member UseSqlReturningClause : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * Nullable&lt;bool&gt; * StoreObjectIdentifier -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.UseSqlReturningClause (entityType, useSqlReturningClause, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="useSqlReturningClause" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entityType">The entity type.</param>
        <param name="useSqlReturningClause">The value to set.</param>
        <param name="storeObject">The identifier of the table-like store object.</param>
        <summary>
                Sets a value indicating whether to use the SQL RETURNING clause when saving changes to the table.
                The RETURNING clause is incompatible with certain Sqlite features, such as virtual tables or tables with AFTER triggers.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSqlReturningClause">
      <MemberSignature Language="C#" Value="public static bool? UseSqlReturningClause (this Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, bool? useSqlReturningClause, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; UseSqlReturningClause(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, valuetype System.Nullable`1&lt;bool&gt; useSqlReturningClause, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.UseSqlReturningClause(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseSqlReturningClause (entityType As IConventionEntityType, useSqlReturningClause As Nullable(Of Boolean), ByRef storeObject As StoreObjectIdentifier, Optional fromDataAnnotation As Boolean = false) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member UseSqlReturningClause : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Nullable&lt;bool&gt; * StoreObjectIdentifier * bool -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqliteEntityTypeExtensions.UseSqlReturningClause (entityType, useSqlReturningClause, storeObject, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" RefType="this" />
        <Parameter Name="useSqlReturningClause" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type.</param>
        <param name="useSqlReturningClause">The value to set.</param>
        <param name="storeObject">The identifier of the table-like store object.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets a value indicating whether to use the SQL RETURNING clause when saving changes to the table.
                The RETURNING clause is incompatible with certain Sqlite features, such as virtual tables or tables with AFTER triggers.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
