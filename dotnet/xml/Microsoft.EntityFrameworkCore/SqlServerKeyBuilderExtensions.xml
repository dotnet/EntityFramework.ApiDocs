<Type Name="SqlServerKeyBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class SqlServerKeyBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlServerKeyBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SqlServerKeyBuilderExtensions" />
  <TypeSignature Language="F#" Value="type SqlServerKeyBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                SQL Server specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSetIsClustered">
      <MemberSignature Language="C#" Value="public static bool CanSetIsClustered (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, bool? clustered, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetIsClustered(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, valuetype System.Nullable`1&lt;bool&gt; clustered, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.CanSetIsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetIsClustered (keyBuilder As IConventionKeyBuilder, clustered As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetIsClustered : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder * Nullable&lt;bool&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.CanSetIsClustered (keyBuilder, clustered, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="clustered" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">The builder for the key being configured.</param>
        <param name="clustered">A value indicating whether the key is clustered.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the key can be configured as clustered.
            </summary>
        <returns>
          <see langword="true" /> if the key can be configured as clustered.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerHasName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder ForSqlServerHasName (this Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder keyBuilder, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder ForSqlServerHasName(class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder keyBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.ForSqlServerHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerHasName (keyBuilder As KeyBuilder, name As String) As KeyBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerHasName : Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.ForSqlServerHasName (keyBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="keyBuilder"> The builder for the key being configured. </param>
        <param name="name"> The name of the key. </param>
        <summary>
                Configures the name of the key constraint in the database when targeting SQL Server.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerIsClustered">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder ForSqlServerIsClustered (this Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder keyBuilder, bool clustered = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder ForSqlServerIsClustered(class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder keyBuilder, bool clustered) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.ForSqlServerIsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerIsClustered (keyBuilder As KeyBuilder, Optional clustered As Boolean = true) As KeyBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerIsClustered : Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.ForSqlServerIsClustered (keyBuilder, clustered)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("Use IsClustered")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IsClustered")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="clustered" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="keyBuilder"> The builder for the key being configured. </param>
        <param name="clustered"> A value indicating whether the key is clustered. </param>
        <summary>
                Configures whether the key is clustered when targeting SQL Server.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForSqlServerIsClustered">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder ForSqlServerIsClustered (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, bool? clustered, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder ForSqlServerIsClustered(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, valuetype System.Nullable`1&lt;bool&gt; clustered, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.ForSqlServerIsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqlServerIsClustered (keyBuilder As IConventionKeyBuilder, clustered As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As IConventionKeyBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqlServerIsClustered : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder * Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.ForSqlServerIsClustered (keyBuilder, clustered, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("Use IsClustered")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IsClustered")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="clustered" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="keyBuilder"> The builder for the key being configured. </param>
        <param name="clustered"> A value indicating whether the key is clustered. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Configures whether the key is clustered when targeting SQL Server.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder IsClustered (this Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder keyBuilder, bool clustered = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder IsClustered(class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder keyBuilder, bool clustered) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.IsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsClustered (keyBuilder As KeyBuilder, Optional clustered As Boolean = true) As KeyBuilder" />
      <MemberSignature Language="F#" Value="static member IsClustered : Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.IsClustered (keyBuilder, clustered)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="clustered" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">The builder for the key being configured.</param>
        <param name="clustered">A value indicating whether the key is clustered.</param>
        <summary>
                Configures whether the key is clustered when targeting SQL Server.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder IsClustered (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, bool? clustered, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder IsClustered(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, valuetype System.Nullable`1&lt;bool&gt; clustered, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.IsClustered(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsClustered (keyBuilder As IConventionKeyBuilder, clustered As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As IConventionKeyBuilder" />
      <MemberSignature Language="F#" Value="static member IsClustered : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder * Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.IsClustered (keyBuilder, clustered, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder? IsClustered (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, bool? clustered, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="clustered" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">The builder for the key being configured.</param>
        <param name="clustered">A value indicating whether the key is clustered.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures whether the key is clustered when targeting SQL Server.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder&lt;TEntity&gt; IsClustered&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder&lt;TEntity&gt; keyBuilder, bool clustered = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder`1&lt;!!TEntity&gt; IsClustered&lt;TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder`1&lt;!!TEntity&gt; keyBuilder, bool clustered) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.IsClustered``1(Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsClustered(Of TEntity) (keyBuilder As KeyBuilder(Of TEntity), Optional clustered As Boolean = true) As KeyBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member IsClustered : Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder&lt;'Entity&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder&lt;'Entity&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerKeyBuilderExtensions.IsClustered (keyBuilder, clustered)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="clustered" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="keyBuilder">The builder for the key being configured.</param>
        <param name="clustered">A value indicating whether the key is clustered.</param>
        <summary>
                Configures whether the key is clustered when targeting SQL Server.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
