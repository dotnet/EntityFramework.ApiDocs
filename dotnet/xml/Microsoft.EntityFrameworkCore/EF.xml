<Type Name="EF" FullName="Microsoft.EntityFrameworkCore.EF">
  <TypeSignature Language="C#" Value="public static class EF" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EF extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.EF" />
  <TypeSignature Language="VB.NET" Value="Public Class EF" />
  <TypeSignature Language="F#" Value="type EF = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Static methods that are useful in application code where there is not an EF type for the method to be accessed from. For example,
                referencing a shadow state property in a LINQ query.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-database-functions">Database functions</see> and
                <see href="https://aka.ms/efcore-docs-efproperty">Using EF.Property in EF Core queries</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,Microsoft.EntityFrameworkCore.DbQuery&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext where TResult : class;" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, valuetype Microsoft.EntityFrameworkCore.Query.AsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, class TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, class Microsoft.EntityFrameworkCore.DbQuery`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``2(System.Linq.Expressions.Expression{System.Func{``0,Microsoft.EntityFrameworkCore.DbQuery{``1}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, DbQuery(Of TResult)))) As Func(Of TContext, AsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, Microsoft.EntityFrameworkCore.DbQuery&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Result : null)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,Microsoft.EntityFrameworkCore.DbQuery&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext where TResult : class;" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, class TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, class Microsoft.EntityFrameworkCore.DbQuery`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, DbQuery(Of TResult)))) As Func(Of TContext, IAsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, Microsoft.EntityFrameworkCore.DbQuery&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Result : null)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("Use DbSet instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use DbSet instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.1;efcore-2.2">System.Func&lt;TContext,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Func&lt;TContext,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,Microsoft.EntityFrameworkCore.DbQuery&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,Microsoft.EntityFrameworkCore.DbSet&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext where TResult : class;" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, valuetype Microsoft.EntityFrameworkCore.Query.AsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, class TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, class Microsoft.EntityFrameworkCore.DbSet`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``2(System.Linq.Expressions.Expression{System.Func{``0,Microsoft.EntityFrameworkCore.DbSet{``1}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, DbSet(Of TResult)))) As Func(Of TContext, AsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, Microsoft.EntityFrameworkCore.DbSet&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Result : null)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,Microsoft.EntityFrameworkCore.DbSet&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext where TResult : class;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, class TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, class Microsoft.EntityFrameworkCore.DbSet`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, DbSet(Of TResult)))) As Func(Of TContext, IAsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, Microsoft.EntityFrameworkCore.DbSet&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Result : null)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">System.Func&lt;TContext,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Func&lt;TContext,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
          <Attributes>
            <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,Microsoft.EntityFrameworkCore.DbSet&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, valuetype Microsoft.EntityFrameworkCore.Query.AsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``2(System.Linq.Expressions.Expression{System.Func{``0,System.Linq.IQueryable{``1}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, IQueryable(Of TResult)))) As Func(Of TContext, AsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, IQueryable(Of TResult)))) As Func(Of TContext, IAsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">System.Func&lt;TContext,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Func&lt;TContext,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TContext, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TContext, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``2(System.Linq.Expressions.Expression{System.Func{``0,System.Threading.CancellationToken,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, CancellationToken, TResult))) As Func(Of TContext, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TResult))) As Func(Of TContext, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'Result&gt;&gt; -&gt; Func&lt;'Context, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TContext, !!TParam1, valuetype Microsoft.EntityFrameworkCore.Query.AsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TContext, !!TParam1, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``3(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Linq.IQueryable{``2}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, AsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TContext, !!TParam1, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TContext, !!TParam1, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, IAsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">System.Func&lt;TContext,TParam1,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Func&lt;TContext,TParam1,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TContext, !!TParam1, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TContext, !!TParam1, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``3(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Threading.CancellationToken,``2}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, CancellationToken, TResult))) As Func(Of TContext, TParam1, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TContext, !!TParam1, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TContext, !!TParam1, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TResult))) As Func(Of TContext, TParam1, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``3(System.Linq.Expressions.Expression{System.Func{``0,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``1,``2}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, valuetype Microsoft.EntityFrameworkCore.Query.AsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,System.Linq.IQueryable{``3}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, AsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, IAsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">System.Func&lt;TContext,TParam1,TParam2,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Func&lt;TContext,TParam1,TParam2,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,System.Threading.CancellationToken,``3}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TResult))) As Func(Of TContext, TParam1, TParam2, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TContext, !!TParam1, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TContext, !!TParam1, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``4(System.Linq.Expressions.Expression{System.Func{``0,``1,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``2,``3}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, valuetype Microsoft.EntityFrameworkCore.Query.AsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,System.Linq.IQueryable{``4}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, AsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, IAsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">System.Func&lt;TContext,TParam1,TParam2,TParam3,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Func&lt;TContext,TParam1,TParam2,TParam3,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,System.Threading.CancellationToken,``4}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``3,``4}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, valuetype Microsoft.EntityFrameworkCore.Query.AsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,System.Linq.IQueryable{``5}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, AsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, IAsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,System.Threading.CancellationToken,``5}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``4,``5}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, valuetype Microsoft.EntityFrameworkCore.Query.AsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,System.Linq.IQueryable{``6}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, AsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, IAsyncEnumerable(Of TResult))" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2">System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,Microsoft.EntityFrameworkCore.Query.AsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,System.Threading.CancellationToken,``6}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``5,``6}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,System.Linq.IQueryable{``7}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,System.Threading.CancellationToken,``7}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``6,``7}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,System.Linq.IQueryable{``8}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,System.Threading.CancellationToken,``8}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``7,``8}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Linq.IQueryable{``9}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Threading.CancellationToken,``9}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``8,``9}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Linq.IQueryable{``10}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Threading.CancellationToken,``10}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``9,``10}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Linq.IQueryable{``11}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Threading.CancellationToken,``11}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``10,``11}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Linq.IQueryable{``12}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Threading.CancellationToken,``12}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``11,``12}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Linq.IQueryable{``13}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Threading.CancellationToken,``13}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``12,``13}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Linq.IQueryable{``14}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Threading.CancellationToken,``14}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``13,``14}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Linq.IQueryable{``15}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Threading.CancellationToken,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, valuetype System.Threading.CancellationToken, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Threading.CancellationToken,``15}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, CancellationToken, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, CancellationToken, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, System.Threading.CancellationToken, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Threading.CancellationToken,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``14,``15}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Linq.IQueryable{``16}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TParam15 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TParam15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TParam15">The type of the fifteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Threading.Tasks.Task&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TParam15 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, Task(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, System.Threading.Tasks.Task&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Threading.Tasks.Task&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TParam15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TParam15">The type of the fifteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``15,``16}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery``18(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``16,``17}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileAsyncQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TParam15 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, IAsyncEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileAsyncQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileAsyncQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TParam15" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TParam15">The type of the fifteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,Microsoft.EntityFrameworkCore.DbQuery&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext where TResult : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, class TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, class Microsoft.EntityFrameworkCore.DbQuery`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``2(System.Linq.Expressions.Expression{System.Func{``0,Microsoft.EntityFrameworkCore.DbQuery{``1}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, DbQuery(Of TResult)))) As Func(Of TContext, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, Microsoft.EntityFrameworkCore.DbQuery&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Result : null)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("Use DbSet instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use DbSet instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,Microsoft.EntityFrameworkCore.DbQuery&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,Microsoft.EntityFrameworkCore.DbSet&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext where TResult : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, class TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, class Microsoft.EntityFrameworkCore.DbSet`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``2(System.Linq.Expressions.Expression{System.Func{``0,Microsoft.EntityFrameworkCore.DbSet{``1}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, DbSet(Of TResult)))) As Func(Of TContext, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, Microsoft.EntityFrameworkCore.DbSet&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext and 'Result : null)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,Microsoft.EntityFrameworkCore.DbSet&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``2(System.Linq.Expressions.Expression{System.Func{``0,System.Linq.IQueryable{``1}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, IQueryable(Of TResult)))) As Func(Of TContext, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TResult&gt; CompileQuery&lt;TContext,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TResult))) As Func(Of TContext, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TContext, !!TParam1, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TContext, !!TParam1, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``3(System.Linq.Expressions.Expression{System.Func{``0,``1,System.Linq.IQueryable{``2}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TResult&gt; CompileQuery&lt;TContext,TParam1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TContext, !!TParam1, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TContext, !!TParam1, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TResult))) As Func(Of TContext, TParam1, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TContext, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TContext, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``3(System.Linq.Expressions.Expression{System.Func{``0,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``1,``2}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,System.Linq.IQueryable{``3}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TResult))) As Func(Of TContext, TParam1, TParam2, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TContext, !!TParam1, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TContext, !!TParam1, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``4(System.Linq.Expressions.Expression{System.Func{``0,``1,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``2,``3}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,System.Linq.IQueryable{``4}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TContext, !!TParam1, !!TParam2, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``3,``4}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,System.Linq.IQueryable{``5}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``4,``5}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,System.Linq.IQueryable{``6}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``5,``6}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,System.Linq.IQueryable{``7}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``6,``7}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,System.Linq.IQueryable{``8}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``7,``8}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Linq.IQueryable{``9}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``8,``9}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Linq.IQueryable{``10}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``9,``10}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Linq.IQueryable{``11}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``10,``11}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Linq.IQueryable{``12}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``11,``12}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Linq.IQueryable{``13}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``12,``13}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Linq.IQueryable{``14}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``13,``14}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Linq.IQueryable{``15}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``14,``15}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, class System.Linq.IQueryable`1&lt;!!TResult&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Linq.IQueryable{``16}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TParam15 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, IQueryable(Of TResult)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, System.Linq.IQueryable&lt;'Result&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TParam15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Linq.IQueryable&lt;TResult&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TParam15">The type of the fifteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, !!TResult&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, !!TResult&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TParam15 As DbContext, TResult As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, TResult))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, TResult)" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, 'Result&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, 'Result (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TParam15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TParam15">The type of the fifteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``15,``16}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; CompileQuery&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,TResult,TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt; queryExpression) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; CompileQuery&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, TResult, TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TContext, !!TParam1, !!TParam2, !!TParam3, !!TParam4, !!TParam5, !!TParam6, !!TParam7, !!TParam8, !!TParam9, !!TParam10, !!TParam11, !!TParam12, !!TParam13, !!TParam14, !!TParam15, class Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2&lt;!!TResult, !!TProperty&gt;&gt;&gt; queryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.CompileQuery``18(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``16,``17}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompileQuery(Of TContext As DbContext, TParam1 As DbContext, TParam2 As DbContext, TParam3 As DbContext, TParam4 As DbContext, TParam5 As DbContext, TParam6 As DbContext, TParam7 As DbContext, TParam8 As DbContext, TParam9 As DbContext, TParam10 As DbContext, TParam11 As DbContext, TParam12 As DbContext, TParam13 As DbContext, TParam14 As DbContext, TParam15 As DbContext, TResult As DbContext, TProperty As DbContext) (queryExpression As Expression(Of Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, IIncludableQueryable(Of TResult, TProperty)))) As Func(Of TContext, TParam1, TParam2, TParam3, TParam4, TParam5, TParam6, TParam7, TParam8, TParam9, TParam10, TParam11, TParam12, TParam13, TParam14, TParam15, IEnumerable(Of TResult))" />
      <MemberSignature Language="F#" Value="static member CompileQuery : System.Linq.Expressions.Expression&lt;Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;'Result, 'Property&gt;&gt;&gt; -&gt; Func&lt;'Context, 'TParam1, 'TParam2, 'TParam3, 'TParam4, 'TParam5, 'TParam6, 'TParam7, 'TParam8, 'TParam9, 'TParam10, 'TParam11, 'TParam12, 'TParam13, 'TParam14, 'TParam15, seq&lt;'Result&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.EF.CompileQuery queryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TParam1" />
        <TypeParameter Name="TParam2" />
        <TypeParameter Name="TParam3" />
        <TypeParameter Name="TParam4" />
        <TypeParameter Name="TParam5" />
        <TypeParameter Name="TParam6" />
        <TypeParameter Name="TParam7" />
        <TypeParameter Name="TParam8" />
        <TypeParameter Name="TParam9" />
        <TypeParameter Name="TParam10" />
        <TypeParameter Name="TParam11" />
        <TypeParameter Name="TParam12" />
        <TypeParameter Name="TParam13" />
        <TypeParameter Name="TParam14" />
        <TypeParameter Name="TParam15" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TContext,TParam1,TParam2,TParam3,TParam4,TParam5,TParam6,TParam7,TParam8,TParam9,TParam10,TParam11,TParam12,TParam13,TParam14,TParam15,Microsoft.EntityFrameworkCore.Query.IIncludableQueryable&lt;TResult,TProperty&gt;&gt;&gt;" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The target DbContext type.</typeparam>
        <typeparam name="TParam1">The type of the first query parameter.</typeparam>
        <typeparam name="TParam2">The type of the second query parameter.</typeparam>
        <typeparam name="TParam3">The type of the third query parameter.</typeparam>
        <typeparam name="TParam4">The type of the fourth query parameter.</typeparam>
        <typeparam name="TParam5">The type of the fifth query parameter.</typeparam>
        <typeparam name="TParam6">The type of the sixth query parameter.</typeparam>
        <typeparam name="TParam7">The type of the seventh query parameter.</typeparam>
        <typeparam name="TParam8">The type of the eighth query parameter.</typeparam>
        <typeparam name="TParam9">The type of the ninth query parameter.</typeparam>
        <typeparam name="TParam10">The type of the tenth query parameter.</typeparam>
        <typeparam name="TParam11">The type of the eleventh query parameter.</typeparam>
        <typeparam name="TParam12">The type of the twelfth query parameter.</typeparam>
        <typeparam name="TParam13">The type of the thirteenth query parameter.</typeparam>
        <typeparam name="TParam14">The type of the fourteenth query parameter.</typeparam>
        <typeparam name="TParam15">The type of the fifteenth query parameter.</typeparam>
        <typeparam name="TResult">The query result type.</typeparam>
        <typeparam name="TProperty">The included property type.</typeparam>
        <param name="queryExpression">The LINQ query expression.</param>
        <summary>
                Creates a compiled query delegate that when invoked will execute the specified LINQ query.
            </summary>
        <returns>A delegate that can be invoked to execute the compiled query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Functions">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbFunctions Functions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.EntityFrameworkCore.DbFunctions Functions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.EF.Functions" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Functions As DbFunctions" />
      <MemberSignature Language="F#" Value="static member Functions : Microsoft.EntityFrameworkCore.DbFunctions" Usage="Microsoft.EntityFrameworkCore.EF.Functions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbFunctions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Provides CLR methods that get translated to database functions when used in LINQ to Entities queries.
                Calling these methods in other contexts (e.g. LINQ to Objects) will throw a <see cref="T:System.NotSupportedException" />.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
                    Note that this is a static property accessed through the top-level <see cref="T:Microsoft.EntityFrameworkCore.EF" /> static type.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-database-functions">Database functions</see> for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDesignTime">
      <MemberSignature Language="C#" Value="public static bool IsDesignTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsDesignTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.EF.IsDesignTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IsDesignTime As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDesignTime : bool with get, set" Usage="Microsoft.EntityFrameworkCore.EF.IsDesignTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This flag is set to <see langword="true" /> when code is being run from a design-time tool, such
                as "dotnet ef" or one of the Package Manager Console PowerShell commands "Add-Migration", "Update-Database", etc.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
                    This flag can be inspected to change application behavior. For example, if the application is being executed by an EF
                    design-time tool, then it may choose to skip executing migrations commands as part of startup.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-commandline">EF Core command-line reference </see> for more information
                    and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static TProperty Property&lt;TProperty&gt; (object entity, string propertyName);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TProperty Property&lt;TProperty&gt;(object entity, string propertyName) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EF.Property``1(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Property(Of TProperty) (entity As Object, propertyName As String) As TProperty" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="F#" Value="static member Property : obj * string -&gt; 'Property" Usage="Microsoft.EntityFrameworkCore.EF.Property (entity, propertyName)" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
      <MemberSignature Language="C#" Value="public static TProperty Property&lt;TProperty&gt; (object instance, string propertyName);" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TProperty Property&lt;TProperty&gt;(object instance, string propertyName) cil managed" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Property(Of TProperty) (instance As Object, propertyName As String) As TProperty" FrameworkAlternate="efcore-8.0" />
      <MemberSignature Language="F#" Value="static member Property : obj * string -&gt; 'Property" Usage="Microsoft.EntityFrameworkCore.EF.Property (instance, propertyName)" FrameworkAlternate="efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="propertyName" Type="System.String" Index="1">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Query.NotParameterized]</AttributeName>
              <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Query.NotParameterized&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being referenced.</typeparam>
        <param name="entity">The entity to access the property on.</param>
        <param name="instance">The entity or complex type to access the property on.</param>
        <param name="propertyName">The name of the property.</param>
        <summary>
                References a given property or navigation on an entity or complex type instance. This is useful for shadow state properties, for
                which no CLR property exists. Currently this method can only be used in LINQ queries and can not be used to
                access the value assigned to a property in other scenarios.
            </summary>
        <returns>The value assigned to the property.</returns>
        <remarks>
          <para>
                    Note that this is a static method accessed through the top-level <see cref="T:Microsoft.EntityFrameworkCore.EF" /> static type.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-efproperty">Using EF.Property in EF Core queries</see> for more information and examples.
                </para>
        </remarks>
        <example>
          <para>
                    The following code performs a filter using the a LastUpdated shadow state property.
                </para>
          <code>
            var blogs = context.Blogs
                .Where(b =&gt; EF.Property&lt;DateTime&gt;(b, "LastUpdated") &gt; DateTime.Now.AddDays(-5));
                </code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
