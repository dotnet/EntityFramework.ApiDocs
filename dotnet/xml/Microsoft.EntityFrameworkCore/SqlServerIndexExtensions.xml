<Type Name="SqlServerIndexExtensions" FullName="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions">
  <TypeSignature Language="C#" Value="public static class SqlServerIndexExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlServerIndexExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SqlServerIndexExtensions" />
  <TypeSignature Language="F#" Value="type SqlServerIndexExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Index extension methods for SQL Server-specific metadata.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-sqlserver">Accessing SQL Server and Azure SQL databases with EF Core</see>
                for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDataCompression">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DataCompressionType? GetDataCompression (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.DataCompressionType&gt; GetDataCompression(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetDataCompression(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCompression (index As IReadOnlyIndex) As Nullable(Of DataCompressionType)" />
      <MemberSignature Language="F#" Value="static member GetDataCompression : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.DataCompressionType&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetDataCompression index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.DataCompressionType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the data compression that the index uses.
            </summary>
        <returns>The data compression that the index uses</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataCompression">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DataCompressionType? GetDataCompression (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.DataCompressionType&gt; GetDataCompression(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetDataCompression(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCompression (index As IReadOnlyIndex, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of DataCompressionType)" />
      <MemberSignature Language="F#" Value="static member GetDataCompression : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex * StoreObjectIdentifier -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.DataCompressionType&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetDataCompression (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.DataCompressionType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the store object.</param>
        <summary>
                Returns the data compression that the index uses.
            </summary>
        <returns>The data compression that the index uses</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataCompressionConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetDataCompressionConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetDataCompressionConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetDataCompressionConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataCompressionConfigurationSource (index As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetDataCompressionConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetDataCompressionConfigurationSource index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the data compression the index uses.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the data compression the index uses.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillFactor">
      <MemberSignature Language="C#" Value="public static int? GetFillFactor (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetFillFactor(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetFillFactor(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFillFactor (index As IIndex) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetFillFactor : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetFillFactor index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns a value indicating whether the index uses the fill factor.
            </summary>
        <returns>
          <see langword="true" /> if the index is online. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillFactor">
      <MemberSignature Language="C#" Value="public static int? GetFillFactor (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetFillFactor(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetFillFactor(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFillFactor (index As IReadOnlyIndex) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetFillFactor : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetFillFactor index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the fill factor that the index uses.
            </summary>
        <returns>The fill factor that the index uses</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillFactor">
      <MemberSignature Language="C#" Value="public static int? GetFillFactor (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetFillFactor(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetFillFactor(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFillFactor (index As IReadOnlyIndex, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetFillFactor : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex * StoreObjectIdentifier -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetFillFactor (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the store object.</param>
        <summary>
                Returns the fill factor that the index uses.
            </summary>
        <returns>The fill factor that the index uses</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillFactorConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetFillFactorConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetFillFactorConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetFillFactorConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFillFactorConfigurationSource (index As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetFillFactorConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetFillFactorConfigurationSource index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index uses the fill factor.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index uses the fill factor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncludeProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;string&gt; GetIncludeProperties (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; GetIncludeProperties(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIncludeProperties (index As IIndex) As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="static member GetIncludeProperties : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludeProperties index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns included property names, or <see langword="null" /> if they have not been specified.
            </summary>
        <returns> The included property names, or <see langword="null" /> if they have not been specified. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncludeProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;string&gt;? GetIncludeProperties (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; GetIncludeProperties(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIncludeProperties (index As IReadOnlyIndex) As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="static member GetIncludeProperties : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex -&gt; System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludeProperties index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns included property names, or <see langword="null" /> if they have not been specified.
            </summary>
        <returns>The included property names, or <see langword="null" /> if they have not been specified.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncludeProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;string&gt;? GetIncludeProperties (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; GetIncludeProperties(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIncludeProperties (index As IReadOnlyIndex, ByRef storeObject As StoreObjectIdentifier) As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="static member GetIncludeProperties : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex * StoreObjectIdentifier -&gt; System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludeProperties (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the store object.</param>
        <summary>
                Returns included property names, or <see langword="null" /> if they have not been specified.
            </summary>
        <returns>The included property names, or <see langword="null" /> if they have not been specified.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncludePropertiesConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetIncludePropertiesConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetIncludePropertiesConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludePropertiesConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIncludePropertiesConfigurationSource (index As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetIncludePropertiesConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludePropertiesConfigurationSource index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the included property names.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the included property names.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsClusteredConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetIsClusteredConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetIsClusteredConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIsClusteredConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsClusteredConfigurationSource (property As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetIsClusteredConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIsClusteredConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is clustered.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is clustered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsCreatedOnlineConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetIsCreatedOnlineConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetIsCreatedOnlineConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIsCreatedOnlineConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsCreatedOnlineConfigurationSource (index As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetIsCreatedOnlineConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIsCreatedOnlineConfigurationSource index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is online.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is online.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSortInTempDb">
      <MemberSignature Language="C#" Value="public static bool? GetSortInTempDb (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; GetSortInTempDb(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetSortInTempDb(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSortInTempDb (index As IReadOnlyIndex) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member GetSortInTempDb : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetSortInTempDb index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns a value indicating whether the index is sorted in tempdb.
            </summary>
        <returns>
          <see langword="true" /> if the index is sorted in tempdb.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSortInTempDb">
      <MemberSignature Language="C#" Value="public static bool? GetSortInTempDb (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; GetSortInTempDb(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetSortInTempDb(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSortInTempDb (index As IReadOnlyIndex, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member GetSortInTempDb : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex * StoreObjectIdentifier -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetSortInTempDb (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the store object.</param>
        <summary>
                Returns a value indicating whether the index is sorted in tempdb.
            </summary>
        <returns>
          <see langword="true" /> if the index is sorted in tempdb.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSortInTempDbConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetSortInTempDbConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetSortInTempDbConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetSortInTempDbConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSortInTempDbConfigurationSource (index As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetSortInTempDbConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetSortInTempDbConfigurationSource index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is sorted in tempdb.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is sorted in tempdb.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public static bool? IsClustered (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsClustered(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsClustered(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsClustered (index As IIndex) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsClustered : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsClustered index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns a value indicating whether the index is clustered.
            </summary>
        <returns>
          <see langword="true" /> if the index is clustered. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public static bool? IsClustered (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsClustered(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsClustered(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsClustered (index As IReadOnlyIndex) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsClustered : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsClustered index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns a value indicating whether the index is clustered.
            </summary>
        <returns>
          <see langword="true" /> if the index is clustered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public static bool? IsClustered (this Microsoft.EntityFrameworkCore.Metadata.IIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsClustered(class Microsoft.EntityFrameworkCore.Metadata.IIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsClustered(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsClustered (index As IIndex, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsClustered : Microsoft.EntityFrameworkCore.Metadata.IIndex * StoreObjectIdentifier -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsClustered (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <param name="storeObject"> The identifier of the store object. </param>
        <summary>
                Returns a value indicating whether the index is clustered.
            </summary>
        <returns>
          <see langword="true" /> if the index is clustered. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public static bool? IsClustered (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsClustered(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsClustered(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsClustered (index As IReadOnlyIndex, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsClustered : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex * StoreObjectIdentifier -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsClustered (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the store object.</param>
        <summary>
                Returns a value indicating whether the index is clustered.
            </summary>
        <returns>
          <see langword="true" /> if the index is clustered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCreatedOnline">
      <MemberSignature Language="C#" Value="public static bool? IsCreatedOnline (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsCreatedOnline(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsCreatedOnline(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsCreatedOnline (index As IIndex) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsCreatedOnline : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsCreatedOnline index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns a value indicating whether the index is online.
            </summary>
        <returns>
          <see langword="true" /> if the index is online. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCreatedOnline">
      <MemberSignature Language="C#" Value="public static bool? IsCreatedOnline (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsCreatedOnline(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsCreatedOnline(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsCreatedOnline (index As IReadOnlyIndex) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsCreatedOnline : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsCreatedOnline index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns a value indicating whether the index is online.
            </summary>
        <returns>
          <see langword="true" /> if the index is online.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCreatedOnline">
      <MemberSignature Language="C#" Value="public static bool? IsCreatedOnline (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsCreatedOnline(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsCreatedOnline(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsCreatedOnline (index As IReadOnlyIndex, ByRef storeObject As StoreObjectIdentifier) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsCreatedOnline : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex * StoreObjectIdentifier -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsCreatedOnline (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the store object.</param>
        <summary>
                Returns a value indicating whether the index is online.
            </summary>
        <returns>
          <see langword="true" /> if the index is online.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataCompression">
      <MemberSignature Language="C#" Value="public static void SetDataCompression (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, Microsoft.EntityFrameworkCore.DataCompressionType? dataCompression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataCompression(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.DataCompressionType&gt; dataCompression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetDataCompression(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Nullable{Microsoft.EntityFrameworkCore.DataCompressionType})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDataCompression (index As IMutableIndex, dataCompression As Nullable(Of DataCompressionType))" />
      <MemberSignature Language="F#" Value="static member SetDataCompression : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * Nullable&lt;Microsoft.EntityFrameworkCore.DataCompressionType&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetDataCompression (index, dataCompression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="dataCompression" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.DataCompressionType&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="dataCompression">The value to set.</param>
        <summary>
                Sets a value indicating the data compression the index uses.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataCompression">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DataCompressionType? SetDataCompression (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, Microsoft.EntityFrameworkCore.DataCompressionType? dataCompression, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.DataCompressionType&gt; SetDataCompression(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.DataCompressionType&gt; dataCompression, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetDataCompression(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Nullable{Microsoft.EntityFrameworkCore.DataCompressionType},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetDataCompression (index As IConventionIndex, dataCompression As Nullable(Of DataCompressionType), Optional fromDataAnnotation As Boolean = false) As Nullable(Of DataCompressionType)" />
      <MemberSignature Language="F#" Value="static member SetDataCompression : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * Nullable&lt;Microsoft.EntityFrameworkCore.DataCompressionType&gt; * bool -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.DataCompressionType&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetDataCompression (index, dataCompression, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.DataCompressionType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="dataCompression" Type="System.Nullable&lt;Microsoft.EntityFrameworkCore.DataCompressionType&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="dataCompression">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets a value indicating the data compression the index uses.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFillFactor">
      <MemberSignature Language="C#" Value="public static void SetFillFactor (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, int? fillFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFillFactor(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, valuetype System.Nullable`1&lt;int32&gt; fillFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetFillFactor(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetFillFactor (index As IMutableIndex, fillFactor As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="static member SetFillFactor : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * Nullable&lt;int&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetFillFactor (index, fillFactor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fillFactor" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="fillFactor">The value to set.</param>
        <summary>
                Sets a value indicating whether the index uses the fill factor.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFillFactor">
      <MemberSignature Language="C#" Value="public static int? SetFillFactor (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, int? fillFactor, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; SetFillFactor(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, valuetype System.Nullable`1&lt;int32&gt; fillFactor, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetFillFactor(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetFillFactor (index As IConventionIndex, fillFactor As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member SetFillFactor : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * Nullable&lt;int&gt; * bool -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetFillFactor (index, fillFactor, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fillFactor" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="fillFactor">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Defines a value indicating whether the index uses the fill factor.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIncludeProperties">
      <MemberSignature Language="C#" Value="public static void SetIncludeProperties (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, System.Collections.Generic.IReadOnlyList&lt;string&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIncludeProperties(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIncludeProperties (index As IMutableIndex, properties As IReadOnlyList(Of String))" />
      <MemberSignature Language="F#" Value="static member SetIncludeProperties : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIncludeProperties (index, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" />
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="properties">The value to set.</param>
        <summary>
                Sets included property names.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIncludeProperties">
      <MemberSignature Language="C#" Value="public static void SetIncludeProperties (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, System.Collections.Generic.IReadOnlyList&lt;string&gt; properties, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIncludeProperties(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; properties, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIncludeProperties (index As IConventionIndex, properties As IReadOnlyList(Of String), Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetIncludeProperties : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIncludeProperties (index, properties, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;string&gt; SetIncludeProperties (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, System.Collections.Generic.IReadOnlyList&lt;string&gt; properties, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; SetIncludeProperties(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; properties, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetIncludeProperties (index As IConventionIndex, properties As IReadOnlyList(Of String), Optional fromDataAnnotation As Boolean = false) As IReadOnlyList(Of String)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetIncludeProperties : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIncludeProperties (index, properties, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;string&gt;? SetIncludeProperties (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, System.Collections.Generic.IReadOnlyList&lt;string&gt;? properties, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <param name="properties">The value to set.</param>
        <summary>
                Sets included property names.
            </summary>
        <returns>The configured property names.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsClustered">
      <MemberSignature Language="C#" Value="public static void SetIsClustered (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, bool? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsClustered(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, valuetype System.Nullable`1&lt;bool&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsClustered(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsClustered (index As IMutableIndex, value As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member SetIsClustered : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsClustered (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="value">The value to set.</param>
        <param name="index">The index.</param>
        <summary>
                Sets a value indicating whether the index is clustered.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsClustered">
      <MemberSignature Language="C#" Value="public static void SetIsClustered (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, bool? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsClustered(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, valuetype System.Nullable`1&lt;bool&gt; value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsClustered(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsClustered (index As IConventionIndex, value As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetIsClustered : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * Nullable&lt;bool&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsClustered (index, value, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static bool? SetIsClustered (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, bool? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; SetIsClustered(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, valuetype System.Nullable`1&lt;bool&gt; value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetIsClustered (index As IConventionIndex, value As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Nullable(Of Boolean)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetIsClustered : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * Nullable&lt;bool&gt; * bool -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsClustered (index, value, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">The value to set.</param>
        <param name="index">The index.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets a value indicating whether the index is clustered.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsCreatedOnline">
      <MemberSignature Language="C#" Value="public static void SetIsCreatedOnline (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, bool? createdOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsCreatedOnline(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, valuetype System.Nullable`1&lt;bool&gt; createdOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsCreatedOnline(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsCreatedOnline (index As IMutableIndex, createdOnline As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member SetIsCreatedOnline : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsCreatedOnline (index, createdOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" />
        <Parameter Name="createdOnline" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="createdOnline">The value to set.</param>
        <summary>
                Sets a value indicating whether the index is online.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsCreatedOnline">
      <MemberSignature Language="C#" Value="public static void SetIsCreatedOnline (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, bool? createdOnline, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsCreatedOnline(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, valuetype System.Nullable`1&lt;bool&gt; createdOnline, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsCreatedOnline(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsCreatedOnline (index As IConventionIndex, createdOnline As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetIsCreatedOnline : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * Nullable&lt;bool&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsCreatedOnline (index, createdOnline, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static bool? SetIsCreatedOnline (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, bool? createdOnline, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; SetIsCreatedOnline(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, valuetype System.Nullable`1&lt;bool&gt; createdOnline, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetIsCreatedOnline (index As IConventionIndex, createdOnline As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Nullable(Of Boolean)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetIsCreatedOnline : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * Nullable&lt;bool&gt; * bool -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsCreatedOnline (index, createdOnline, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
        <Parameter Name="createdOnline" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="createdOnline">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets a value indicating whether the index is online.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSortInTempDb">
      <MemberSignature Language="C#" Value="public static void SetSortInTempDb (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, bool? sortInTempDb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSortInTempDb(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, valuetype System.Nullable`1&lt;bool&gt; sortInTempDb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetSortInTempDb(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetSortInTempDb (index As IMutableIndex, sortInTempDb As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member SetSortInTempDb : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetSortInTempDb (index, sortInTempDb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="sortInTempDb" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="sortInTempDb">The value to set.</param>
        <summary>
                Sets a value indicating whether the index is sorted in tempdb.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSortInTempDb">
      <MemberSignature Language="C#" Value="public static bool? SetSortInTempDb (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, bool? sortInTempDb, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; SetSortInTempDb(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, valuetype System.Nullable`1&lt;bool&gt; sortInTempDb, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetSortInTempDb(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetSortInTempDb (index As IConventionIndex, sortInTempDb As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member SetSortInTempDb : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * Nullable&lt;bool&gt; * bool -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetSortInTempDb (index, sortInTempDb, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" Index="0" FrameworkAlternate="efcore-8.0" RefType="this" />
        <Parameter Name="sortInTempDb" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="sortInTempDb">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets a value indicating whether the index is sorted in tempdb.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
