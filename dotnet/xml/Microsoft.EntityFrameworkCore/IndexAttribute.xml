<Type Name="IndexAttribute" FullName="Microsoft.EntityFrameworkCore.IndexAttribute">
  <TypeSignature Language="C#" Value="public sealed class IndexAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IndexAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.IndexAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IndexAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="F#" Value="type IndexAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Specifies an index to be generated in the database.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexAttribute (params string[] propertyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] propertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.IndexAttribute.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray propertyNames As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.IndexAttribute : string[] -&gt; Microsoft.EntityFrameworkCore.IndexAttribute" Usage="new Microsoft.EntityFrameworkCore.IndexAttribute propertyNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Obsolete("Use the other constructor")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the other constructor")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyNames">The properties which constitute the index, in order (there must be at least one).</param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.IndexAttribute" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexAttribute (string propertyName, params string[] additionalPropertyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, string[] additionalPropertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.IndexAttribute.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, ParamArray additionalPropertyNames As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.IndexAttribute : string * string[] -&gt; Microsoft.EntityFrameworkCore.IndexAttribute" Usage="new Microsoft.EntityFrameworkCore.IndexAttribute (propertyName, additionalPropertyNames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="additionalPropertyNames" Type="System.String[]" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">The first (or only) property in the index.</param>
        <param name="additionalPropertyNames">The additional properties which constitute the index, if any, in order.</param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.IndexAttribute" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllDescending">
      <MemberSignature Language="C#" Value="public bool AllDescending { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllDescending" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.IndexAttribute.AllDescending" />
      <MemberSignature Language="VB.NET" Value="Public Property AllDescending As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllDescending : bool with get, set" Usage="Microsoft.EntityFrameworkCore.IndexAttribute.AllDescending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Whether all index columns have descending sort order.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDescending">
      <MemberSignature Language="C#" Value="public bool[]? IsDescending { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool[] IsDescending" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.IndexAttribute.IsDescending" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDescending As Boolean()" />
      <MemberSignature Language="F#" Value="member this.IsDescending : bool[] with get, set" Usage="Microsoft.EntityFrameworkCore.IndexAttribute.IsDescending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A set of values indicating whether each corresponding index column has descending sort order.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnique">
      <MemberSignature Language="C#" Value="public bool IsUnique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnique" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.IndexAttribute.IsUnique" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnique As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsUnique : bool with get, set" Usage="Microsoft.EntityFrameworkCore.IndexAttribute.IsUnique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Whether the index is unique.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUniqueHasValue">
      <MemberSignature Language="C#" Value="public bool IsUniqueHasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUniqueHasValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.IndexAttribute.IsUniqueHasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUniqueHasValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsUniqueHasValue : bool" Usage="Microsoft.EntityFrameworkCore.IndexAttribute.IsUniqueHasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Checks whether <see cref="P:Microsoft.EntityFrameworkCore.IndexAttribute.IsUnique" /> has been explicitly set to a value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.IndexAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.EntityFrameworkCore.IndexAttribute.Name" />
      <MemberSignature Language="C#" Value="public string? Name { get; set; }" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The name of the index.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt; PropertyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; PropertyNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.IndexAttribute.PropertyNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyNames As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="member this.PropertyNames : System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.IndexAttribute.PropertyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The properties which constitute the index, in order.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
