<Type Name="CosmosEntityTypeBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class CosmosEntityTypeBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CosmosEntityTypeBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CosmosEntityTypeBuilderExtensions" />
  <TypeSignature Language="F#" Value="type CosmosEntityTypeBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Cosmos-specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSetAnalyticalStoreTimeToLive">
      <MemberSignature Language="C#" Value="public static bool CanSetAnalyticalStoreTimeToLive (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, int? seconds, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetAnalyticalStoreTimeToLive(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; seconds, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetAnalyticalStoreTimeToLive(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetAnalyticalStoreTimeToLive (entityTypeBuilder As IConventionEntityTypeBuilder, seconds As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetAnalyticalStoreTimeToLive : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;int&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetAnalyticalStoreTimeToLive (entityTypeBuilder, seconds, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="seconds" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="seconds">The time to live.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the time to live for analytical store can be set
                from the current configuration source
            </summary>
        <returns>
          <see langword="true" /> if the configuration can be applied.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetContainer">
      <MemberSignature Language="C#" Value="public static bool CanSetContainer (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetContainer(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetContainer(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetContainer (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetContainer : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetContainer (entityTypeBuilder, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static bool CanSetContainer (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the container.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the container that the entity type maps to can be set
                from the current configuration source
            </summary>
        <returns>
          <see langword="true" /> if the configuration can be applied.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetDefaultTimeToLive">
      <MemberSignature Language="C#" Value="public static bool CanSetDefaultTimeToLive (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, int? seconds, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetDefaultTimeToLive(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; seconds, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetDefaultTimeToLive(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetDefaultTimeToLive (entityTypeBuilder As IConventionEntityTypeBuilder, seconds As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetDefaultTimeToLive : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;int&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetDefaultTimeToLive (entityTypeBuilder, seconds, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="seconds" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="seconds">The time to live.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the default time to live can be set
                from the current configuration source
            </summary>
        <returns>
          <see langword="true" /> if the configuration can be applied.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetDiscriminatorInJsonId">
      <MemberSignature Language="C#" Value="public static bool CanSetDiscriminatorInJsonId (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, bool? includeDiscriminator, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetDiscriminatorInJsonId(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; includeDiscriminator, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetDiscriminatorInJsonId(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetDiscriminatorInJsonId (entityTypeBuilder As IConventionEntityTypeBuilder, includeDiscriminator As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetDiscriminatorInJsonId : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;bool&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetDiscriminatorInJsonId (entityTypeBuilder, includeDiscriminator, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="includeDiscriminator" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="includeDiscriminator">
          <see langword="true" /> to force __id creation, <see langword="false" /> to not force __id creation,
                <see langword="null" /> to revert to the default setting.
            </param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the setting for including the discriminator can be set
                from the current configuration source
            </summary>
        <returns>
          <see langword="true" /> if the configuration can be applied.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetJsonProperty">
      <MemberSignature Language="C#" Value="public static bool CanSetJsonProperty (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetJsonProperty(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetJsonProperty(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetJsonProperty (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetJsonProperty : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetJsonProperty (entityTypeBuilder, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static bool CanSetJsonProperty (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the parent property.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the parent property name to which the entity type is mapped to can be set
                from the current configuration source
            </summary>
        <returns>
          <see langword="true" /> if the configuration can be applied.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetPartitionKey">
      <MemberSignature Language="C#" Value="public static bool CanSetPartitionKey (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, System.Collections.Generic.IReadOnlyList&lt;string&gt;? names, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetPartitionKey(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; names, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetPartitionKey(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetPartitionKey (entityTypeBuilder As IConventionEntityTypeBuilder, names As IReadOnlyList(Of String), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetPartitionKey : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetPartitionKey (entityTypeBuilder, names, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="names" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="names">The name of the partition key properties.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the properties that are used to store the parts of a hierarchical partition key
                from the current configuration source
            </summary>
        <returns>
          <see langword="true" /> if the configuration can be applied.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetPartitionKey">
      <MemberSignature Language="C#" Value="public static bool CanSetPartitionKey (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetPartitionKey(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetPartitionKey(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetPartitionKey (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetPartitionKey : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetPartitionKey (entityTypeBuilder, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static bool CanSetPartitionKey (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-9.0">
          <AttributeName Language="C#">[System.Obsolete("Use HasPartitionKey(IReadOnlyList&lt;string&gt;, bool)")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use HasPartitionKey(IReadOnlyList&lt;string&gt;, bool)")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the partition key property.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the property that is used to store the partition key can be set
                from the current configuration source
            </summary>
        <returns>
          <see langword="true" /> if the configuration can be applied.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetRootDiscriminatorInJsonId">
      <MemberSignature Language="C#" Value="public static bool CanSetRootDiscriminatorInJsonId (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, bool? includeDiscriminator, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetRootDiscriminatorInJsonId(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; includeDiscriminator, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetRootDiscriminatorInJsonId(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetRootDiscriminatorInJsonId (entityTypeBuilder As IConventionEntityTypeBuilder, includeDiscriminator As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetRootDiscriminatorInJsonId : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;bool&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetRootDiscriminatorInJsonId (entityTypeBuilder, includeDiscriminator, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-9.0" RefType="this" />
        <Parameter Name="includeDiscriminator" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="includeDiscriminator">
          <see langword="true" /> to force __id creation, <see langword="false" /> to not force __id creation,
                <see langword="null" /> to revert to the default setting.
            </param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the setting for including the discriminator can be set
                from the current configuration source
            </summary>
        <returns>
          <see langword="true" /> if the configuration can be applied.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetShadowId">
      <MemberSignature Language="C#" Value="public static bool CanSetShadowId (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, bool? alwaysCreate, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetShadowId(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; alwaysCreate, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetShadowId(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetShadowId (entityTypeBuilder As IConventionEntityTypeBuilder, alwaysCreate As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetShadowId : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;bool&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetShadowId (entityTypeBuilder, alwaysCreate, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="alwaysCreate" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="alwaysCreate">
          <see langword="true" /> to force __id creation, <see langword="false" /> to not force __id creation,
                <see langword="null" /> to revert to the default setting.
            </param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the setting for always creating the "__id" property can be set
                from the current configuration source
            </summary>
        <returns>
          <see langword="true" /> if the configuration can be applied.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetThroughput">
      <MemberSignature Language="C#" Value="public static bool CanSetThroughput (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, int? throughput, bool autoscale, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetThroughput(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; throughput, bool autoscale, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetThroughput(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Int32},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetThroughput (entityTypeBuilder As IConventionEntityTypeBuilder, throughput As Nullable(Of Integer), autoscale As Boolean, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetThroughput : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;int&gt; * bool * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.CanSetThroughput (entityTypeBuilder, throughput, autoscale, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="throughput" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="autoscale" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="throughput">The throughput to set.</param>
        <param name="autoscale">Whether autoscale is enabled.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given throughput can be set.
            </summary>
        <returns>
          <see langword="true" /> if the given container name can be set as default.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnalyticalStoreTimeToLive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasAnalyticalStoreTimeToLive (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, int? seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasAnalyticalStoreTimeToLive(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasAnalyticalStoreTimeToLive(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasAnalyticalStoreTimeToLive (entityTypeBuilder As EntityTypeBuilder, seconds As Nullable(Of Integer)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasAnalyticalStoreTimeToLive : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasAnalyticalStoreTimeToLive (entityTypeBuilder, seconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="seconds" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="seconds">The time to live.</param>
        <summary>
                Configures the time to live for analytical store in seconds at container scope.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnalyticalStoreTimeToLive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? HasAnalyticalStoreTimeToLive (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, int? seconds, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder HasAnalyticalStoreTimeToLive(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; seconds, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasAnalyticalStoreTimeToLive(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasAnalyticalStoreTimeToLive (entityTypeBuilder As IConventionEntityTypeBuilder, seconds As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasAnalyticalStoreTimeToLive : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;int&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasAnalyticalStoreTimeToLive (entityTypeBuilder, seconds, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="seconds" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="seconds">The time to live.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the time to live for analytical store in seconds at container scope.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnalyticalStoreTimeToLive&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; HasAnalyticalStoreTimeToLive&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, int? seconds) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; HasAnalyticalStoreTimeToLive&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasAnalyticalStoreTimeToLive``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasAnalyticalStoreTimeToLive(Of TEntity As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity), seconds As Nullable(Of Integer)) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasAnalyticalStoreTimeToLive : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasAnalyticalStoreTimeToLive (entityTypeBuilder, seconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="seconds" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="seconds">The time to live.</param>
        <summary>
                Configures the time to live for analytical store in seconds at container scope.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAutoscaleThroughput">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasAutoscaleThroughput (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, int? throughput);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasAutoscaleThroughput(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; throughput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasAutoscaleThroughput(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasAutoscaleThroughput (entityTypeBuilder As EntityTypeBuilder, throughput As Nullable(Of Integer)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasAutoscaleThroughput : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasAutoscaleThroughput (entityTypeBuilder, throughput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="throughput" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="throughput">The throughput to set.</param>
        <summary>
                Configures the autoscale provisioned throughput offering.
            </summary>
        <returns>To be added.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAutoscaleThroughput&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; HasAutoscaleThroughput&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, int? throughput) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; HasAutoscaleThroughput&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; throughput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasAutoscaleThroughput``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasAutoscaleThroughput(Of TEntity As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity), throughput As Nullable(Of Integer)) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasAutoscaleThroughput : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasAutoscaleThroughput (entityTypeBuilder, throughput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="throughput" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="throughput">The throughput to set.</param>
        <summary>
                Configures the autoscale provisioned throughput offering.
            </summary>
        <returns>To be added.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultTimeToLive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasDefaultTimeToLive (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, int? seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasDefaultTimeToLive(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDefaultTimeToLive(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDefaultTimeToLive (entityTypeBuilder As EntityTypeBuilder, seconds As Nullable(Of Integer)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasDefaultTimeToLive : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDefaultTimeToLive (entityTypeBuilder, seconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="seconds" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="seconds">The time to live.</param>
        <summary>
                Configures the default time to live in seconds at container scope.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultTimeToLive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? HasDefaultTimeToLive (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, int? seconds, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder HasDefaultTimeToLive(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; seconds, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDefaultTimeToLive(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDefaultTimeToLive (entityTypeBuilder As IConventionEntityTypeBuilder, seconds As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasDefaultTimeToLive : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;int&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDefaultTimeToLive (entityTypeBuilder, seconds, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="seconds" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="seconds">The time to live.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the default time to live in seconds at container scope.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultTimeToLive&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; HasDefaultTimeToLive&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, int? seconds) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; HasDefaultTimeToLive&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDefaultTimeToLive``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDefaultTimeToLive(Of TEntity As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity), seconds As Nullable(Of Integer)) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasDefaultTimeToLive : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDefaultTimeToLive (entityTypeBuilder, seconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="seconds" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="seconds">The time to live.</param>
        <summary>
                Configures the default time to live in seconds at container scope.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiscriminatorInJsonId">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasDiscriminatorInJsonId (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, bool? includeDiscriminator = True);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasDiscriminatorInJsonId(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; includeDiscriminator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDiscriminatorInJsonId(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDiscriminatorInJsonId (entityTypeBuilder As EntityTypeBuilder, Optional includeDiscriminator As Nullable(Of Boolean) = True) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasDiscriminatorInJsonId : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDiscriminatorInJsonId (entityTypeBuilder, includeDiscriminator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="includeDiscriminator" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="includeDiscriminator">
          <see langword="true" /> to include the discriminator, <see langword="false" /> to not include the discriminator,
                <see langword="null" /> to revert to the default setting.
            </param>
        <summary>
                Includes the discriminator value of the entity type in the JSON "id" value. This was the default behavior before EF Core 9.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiscriminatorInJsonId">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? HasDiscriminatorInJsonId (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, bool? includeDiscriminator, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder HasDiscriminatorInJsonId(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; includeDiscriminator, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDiscriminatorInJsonId(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDiscriminatorInJsonId (entityTypeBuilder As IConventionEntityTypeBuilder, includeDiscriminator As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasDiscriminatorInJsonId : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDiscriminatorInJsonId (entityTypeBuilder, includeDiscriminator, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="includeDiscriminator" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="includeDiscriminator">
          <see langword="true" /> to force __id creation, <see langword="false" /> to not force __id creation,
                <see langword="null" /> to revert to the default setting.
            </param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Includes the discriminator value of the entity type in the JSON "id" value. This was the default behavior before EF Core 9.
            </summary>
        <returns>The same builder instance if the configuration was applied, <see langword="null" /> otherwise.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiscriminatorInJsonId&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; HasDiscriminatorInJsonId&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, bool? includeDiscriminator = True) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; HasDiscriminatorInJsonId&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; includeDiscriminator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDiscriminatorInJsonId``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDiscriminatorInJsonId(Of TEntity As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity), Optional includeDiscriminator As Nullable(Of Boolean) = True) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasDiscriminatorInJsonId : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasDiscriminatorInJsonId (entityTypeBuilder, includeDiscriminator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="includeDiscriminator" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="includeDiscriminator">
          <see langword="true" /> to include the discriminator, <see langword="false" /> to not include the discriminator,
                <see langword="null" /> to revert to the default setting.
            </param>
        <summary>
                Includes the discriminator value of the entity type in the JSON "id" value. This was the default behavior before EF Core 9.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasManualThroughput">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasManualThroughput (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, int? throughput);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasManualThroughput(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; throughput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasManualThroughput(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasManualThroughput (entityTypeBuilder As EntityTypeBuilder, throughput As Nullable(Of Integer)) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasManualThroughput : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasManualThroughput (entityTypeBuilder, throughput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="throughput" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="throughput">The throughput to set.</param>
        <summary>
                Configures the manual provisioned throughput offering.
            </summary>
        <returns>To be added.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasManualThroughput&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; HasManualThroughput&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, int? throughput) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; HasManualThroughput&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; throughput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasManualThroughput``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasManualThroughput(Of TEntity As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity), throughput As Nullable(Of Integer)) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasManualThroughput : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasManualThroughput (entityTypeBuilder, throughput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="throughput" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="throughput">The throughput to set.</param>
        <summary>
                Configures the manual provisioned throughput offering.
            </summary>
        <returns>To be added.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPartitionKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasPartitionKey (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, string name);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasPartitionKey(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasPartitionKey (entityTypeBuilder As EntityTypeBuilder, name As String) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasPartitionKey : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey (entityTypeBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasPartitionKey (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, string? name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the partition key property.</param>
        <summary>
                Configures the property that is used to store the partition key.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPartitionKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasPartitionKey (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, string? name, params string[]? additionalPropertyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasPartitionKey(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, string name, string[] additionalPropertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasPartitionKey (entityTypeBuilder As EntityTypeBuilder, name As String, ParamArray additionalPropertyNames As String()) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasPartitionKey : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * string * string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey (entityTypeBuilder, name, additionalPropertyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="additionalPropertyNames" Type="System.String[]" Index="2" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the first or only partition key property.</param>
        <param name="additionalPropertyNames">The names of additional properties that will form a hierarchical partition key.</param>
        <summary>
                Configures the properties that are used to store the parts of a simple or
                <see href="https://aka.ms/efcore-cosmos-hpkdocs">hierarchical partition key</see>.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPartitionKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? HasPartitionKey (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, System.Collections.Generic.IReadOnlyList&lt;string&gt;? propertyNames, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder HasPartitionKey(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; propertyNames, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasPartitionKey (entityTypeBuilder As IConventionEntityTypeBuilder, propertyNames As IReadOnlyList(Of String), Optional fromDataAnnotation As Boolean = false) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasPartitionKey : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey (entityTypeBuilder, propertyNames, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="propertyNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="propertyNames">The names of the properties that will form the hierarchical partition key.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the properties that are used to store the parts of a
                <see href="https://aka.ms/efcore-cosmos-hpkdocs">hierarchical partition key</see>.
            </summary>
        <returns>The same builder instance if the configuration was applied, <see langword="null" /> otherwise.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPartitionKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder HasPartitionKey (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder HasPartitionKey(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasPartitionKey (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasPartitionKey : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey (entityTypeBuilder, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? HasPartitionKey (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-9.0">
          <AttributeName Language="C#">[System.Obsolete("Use HasPartitionKey(IReadOnlyList&lt;string&gt;, bool)")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use HasPartitionKey(IReadOnlyList&lt;string&gt;, bool)")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the partition key property.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the property that is used to store the partition key.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPartitionKey&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; HasPartitionKey&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, string name) where TEntity : class;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; HasPartitionKey&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasPartitionKey(Of TEntity As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity), name As String) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasPartitionKey : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey (entityTypeBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; HasPartitionKey&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, string? name) where TEntity : class;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the partition key property.</param>
        <summary>
                Configures the property that is used to store the partition key.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPartitionKey&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; HasPartitionKey&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, string? name, params string[]? additionalPropertyNames) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; HasPartitionKey&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder, string name, string[] additionalPropertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasPartitionKey(Of TEntity As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity), name As String, ParamArray additionalPropertyNames As String()) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasPartitionKey : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; * string * string[] -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey (entityTypeBuilder, name, additionalPropertyNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="additionalPropertyNames" Type="System.String[]" Index="2" FrameworkAlternate="efcore-9.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the first or only partition key property.</param>
        <param name="additionalPropertyNames">The names of additional properties that will form a hierarchical partition key.</param>
        <summary>
                Configures the properties that are used to store the parts of a simple or
                <see href="https://aka.ms/efcore-cosmos-hpkdocs">hierarchical partition key</see>.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPartitionKey&lt;TEntity,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; HasPartitionKey&lt;TEntity,TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,TProperty&gt;&gt; propertyExpression) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; HasPartitionKey&lt;class TEntity, TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, !!TProperty&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey``2(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasPartitionKey(Of TEntity As Class, TProperty As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity), propertyExpression As Expression(Of Func(Of TEntity, TProperty))) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasPartitionKey : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, 'Property&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasPartitionKey (entityTypeBuilder, propertyExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" RefType="this" />
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="propertyExpression">The properties that will form the partition key.</param>
        <summary>
                Configures the properties that are used to store the parts of a simple or
                <see href="https://aka.ms/efcore-cosmos-hpkdocs">hierarchical partition key</see>.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRootDiscriminatorInJsonId">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasRootDiscriminatorInJsonId (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, bool? includeDiscriminator = True);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasRootDiscriminatorInJsonId(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; includeDiscriminator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasRootDiscriminatorInJsonId(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasRootDiscriminatorInJsonId (entityTypeBuilder As EntityTypeBuilder, Optional includeDiscriminator As Nullable(Of Boolean) = True) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasRootDiscriminatorInJsonId : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasRootDiscriminatorInJsonId (entityTypeBuilder, includeDiscriminator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Index="0" FrameworkAlternate="efcore-9.0" RefType="this" />
        <Parameter Name="includeDiscriminator" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="includeDiscriminator">
          <see langword="true" /> to include the discriminator, <see langword="false" /> to not include the discriminator,
                <see langword="null" /> to revert to the default setting.
            </param>
        <summary>
                Includes the discriminator value of the root entity type in the JSON "id" value. This allows types with the same
                primary key to be saved in the same container, while still allowing "ReadItem" to be used for lookups of an unknown type.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRootDiscriminatorInJsonId">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? HasRootDiscriminatorInJsonId (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, bool? includeDiscriminator, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder HasRootDiscriminatorInJsonId(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; includeDiscriminator, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasRootDiscriminatorInJsonId(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasRootDiscriminatorInJsonId (entityTypeBuilder As IConventionEntityTypeBuilder, includeDiscriminator As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasRootDiscriminatorInJsonId : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasRootDiscriminatorInJsonId (entityTypeBuilder, includeDiscriminator, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-9.0" RefType="this" />
        <Parameter Name="includeDiscriminator" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="includeDiscriminator">
          <see langword="true" /> to force __id creation, <see langword="false" /> to not force __id creation,
                <see langword="null" /> to revert to the default setting.
            </param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Includes the discriminator value of the root entity type in the JSON "id" value. This allows types with the same
                primary key to be saved in the same container, while still allowing "ReadItem" to be used for lookups of an unknown type.
            </summary>
        <returns>The same builder instance if the configuration was applied, <see langword="null" /> otherwise.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRootDiscriminatorInJsonId&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; HasRootDiscriminatorInJsonId&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, bool? includeDiscriminator = True) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; HasRootDiscriminatorInJsonId&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; includeDiscriminator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasRootDiscriminatorInJsonId``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasRootDiscriminatorInJsonId(Of TEntity As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity), Optional includeDiscriminator As Nullable(Of Boolean) = True) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasRootDiscriminatorInJsonId : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasRootDiscriminatorInJsonId (entityTypeBuilder, includeDiscriminator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" Index="0" FrameworkAlternate="efcore-9.0" RefType="this" />
        <Parameter Name="includeDiscriminator" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="includeDiscriminator">
          <see langword="true" /> to include the discriminator, <see langword="false" /> to not include the discriminator,
                <see langword="null" /> to revert to the default setting.
            </param>
        <summary>
                Includes the discriminator value of the root entity type in the JSON "id" value. This allows types with the same
                primary key to be saved in the same container, while still allowing "ReadItem" to be used for lookups of an unknown type.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShadowId">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasShadowId (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, bool? alwaysCreate = True);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder HasShadowId(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; alwaysCreate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasShadowId(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasShadowId (entityTypeBuilder As EntityTypeBuilder, Optional alwaysCreate As Nullable(Of Boolean) = True) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasShadowId : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasShadowId (entityTypeBuilder, alwaysCreate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="alwaysCreate" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="alwaysCreate">
          <see langword="true" /> to force __id creation, <see langword="false" /> to not force __id creation,
                <see langword="null" /> to revert to the default setting.
            </param>
        <summary>
                Forces model building to always create a "__id" shadow property mapped to the JSON "id". This was the default
                behavior before EF Core 9.0.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShadowId">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? HasShadowId (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, bool? alwaysCreate, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder HasShadowId(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; alwaysCreate, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasShadowId(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasShadowId (entityTypeBuilder As IConventionEntityTypeBuilder, alwaysCreate As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasShadowId : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasShadowId (entityTypeBuilder, alwaysCreate, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="alwaysCreate" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="alwaysCreate">
          <see langword="true" /> to force __id creation, <see langword="false" /> to not force __id creation,
                <see langword="null" /> to revert to the default setting.
            </param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Forces model building to always create a "__id" shadow property mapped to the JSON "id". This was the default
                behavior before EF Core 9.0.
            </summary>
        <returns>The same builder instance if the configuration was applied, <see langword="null" /> otherwise.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasShadowId&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; HasShadowId&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, bool? alwaysCreate = True) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; HasShadowId&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; alwaysCreate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasShadowId``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasShadowId(Of TEntity As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity), Optional alwaysCreate As Nullable(Of Boolean) = True) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasShadowId : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasShadowId (entityTypeBuilder, alwaysCreate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-9.0" />
        <Parameter Name="alwaysCreate" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="alwaysCreate">
          <see langword="true" /> to force __id creation, <see langword="false" /> to not force __id creation,
                <see langword="null" /> to revert to the default setting.
            </param>
        <summary>
                Forces model building to always create a "__id" shadow property mapped to the JSON "id". This was the default
                behavior before EF Core 9.0. Note that an "__id" property is always created if the primary key is not a single string property,
                or if the discriminator is included in the JSON "id".
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasThroughput">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? HasThroughput (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, int? throughput, bool autoscale, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder HasThroughput(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, valuetype System.Nullable`1&lt;int32&gt; throughput, bool autoscale, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasThroughput(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Nullable{System.Int32},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasThroughput (entityTypeBuilder As IConventionEntityTypeBuilder, throughput As Nullable(Of Integer), autoscale As Boolean, Optional fromDataAnnotation As Boolean = false) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasThroughput : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Nullable&lt;int&gt; * bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.HasThroughput (entityTypeBuilder, throughput, autoscale, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="throughput" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="autoscale" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="throughput">The throughput to set.</param>
        <param name="autoscale">Whether autoscale is enabled.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the provisioned throughput.
            </summary>
        <returns>To be added.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToContainer">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder ToContainer (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, string name);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder ToContainer(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToContainer(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToContainer (entityTypeBuilder As EntityTypeBuilder, name As String) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member ToContainer : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToContainer (entityTypeBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder ToContainer (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder, string? name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the container.</param>
        <summary>
                Configures the container that the entity type maps to when targeting Azure Cosmos.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToContainer">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder ToContainer (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder ToContainer(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToContainer(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToContainer (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member ToContainer : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToContainer (entityTypeBuilder, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? ToContainer (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the container.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the container that the entity type maps to when targeting Azure Cosmos.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToContainer&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; ToContainer&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, string name) where TEntity : class;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; ToContainer&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToContainer``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToContainer(Of TEntity As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity), name As String) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member ToContainer : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToContainer (entityTypeBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; ToContainer&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder, string? name) where TEntity : class;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">The entity type being configured.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the container.</param>
        <summary>
                Configures the container that the entity type maps to when targeting Azure Cosmos.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJsonProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder ToJsonProperty (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder entityTypeBuilder, string name);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder ToJsonProperty(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder entityTypeBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToJsonProperty(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToJsonProperty (entityTypeBuilder As OwnedNavigationBuilder, name As String) As OwnedNavigationBuilder" />
      <MemberSignature Language="F#" Value="static member ToJsonProperty : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToJsonProperty (entityTypeBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder ToJsonProperty (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder entityTypeBuilder, string? name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the parent property.</param>
        <summary>
                Configures the property name that the entity is mapped to when stored as an embedded document.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJsonProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder ToJsonProperty (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder ToJsonProperty(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToJsonProperty(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToJsonProperty (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member ToJsonProperty : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToJsonProperty (entityTypeBuilder, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder? ToJsonProperty (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the parent property.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the property name that the entity is mapped to when stored as an embedded document.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToJsonProperty&lt;TOwnerEntity,TDependentEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TEntity,TDependentEntity&gt; ToJsonProperty&lt;TEntity,TDependentEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TEntity,TDependentEntity&gt; entityTypeBuilder, string name) where TEntity : class where TDependentEntity : class;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; ToJsonProperty&lt;class TEntity, class TDependentEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; entityTypeBuilder, string name) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToJsonProperty``2(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder{``0,``1},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToJsonProperty(Of TEntity As Class, TDependentEntity As Class) (entityTypeBuilder As OwnedNavigationBuilder(Of TEntity, TDependentEntity), name As String) As OwnedNavigationBuilder(Of TEntity, TDependentEntity)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="static member ToJsonProperty : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; (requires 'Entity : null and 'DependentEntity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToJsonProperty (entityTypeBuilder, name)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt; ToJsonProperty&lt;TOwnerEntity,TDependentEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt; entityTypeBuilder, string? name) where TOwnerEntity : class where TDependentEntity : class;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TOwnerEntity, !!TDependentEntity&gt; ToJsonProperty&lt;class TOwnerEntity, class TDependentEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder`2&lt;!!TOwnerEntity, !!TDependentEntity&gt; entityTypeBuilder, string name) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToJsonProperty(Of TOwnerEntity As Class, TDependentEntity As Class) (entityTypeBuilder As OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity), name As String) As OwnedNavigationBuilder(Of TOwnerEntity, TDependentEntity)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberSignature Language="F#" Value="static member ToJsonProperty : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;'OwnerEntity, 'DependentEntity (requires 'OwnerEntity : null and 'DependentEntity : null)&gt; (requires 'OwnerEntity : null and 'DependentEntity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.ToJsonProperty (entityTypeBuilder, name)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0">Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TEntity,TDependentEntity&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0">Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TOwnerEntity" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TDependentEntity" Index="1">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnedNavigationBuilder&lt;TOwnerEntity,TDependentEntity&gt;" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TOwnerEntity">To be added.</typeparam>
        <typeparam name="TDependentEntity">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <param name="name">The name of the parent property.</param>
        <summary>
                Configures the property name that the entity is mapped to when stored as an embedded document.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseETagConcurrency">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UseETagConcurrency (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder UseETagConcurrency(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder entityTypeBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.UseETagConcurrency(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseETagConcurrency (entityTypeBuilder As EntityTypeBuilder) As EntityTypeBuilder" />
      <MemberSignature Language="F#" Value="static member UseETagConcurrency : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.UseETagConcurrency entityTypeBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <summary>
                Configures this entity to use CosmosDb etag concurrency checks.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseETagConcurrency&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; UseETagConcurrency&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt; entityTypeBuilder) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; UseETagConcurrency&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1&lt;!!TEntity&gt; entityTypeBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.UseETagConcurrency``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseETagConcurrency(Of TEntity As Class) (entityTypeBuilder As EntityTypeBuilder(Of TEntity)) As EntityTypeBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member UseETagConcurrency : Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.CosmosEntityTypeBuilderExtensions.UseETagConcurrency entityTypeBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0;efcore-9.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="entityTypeBuilder">The builder for the entity type being configured.</param>
        <summary>
                Configures this entity to use CosmosDb etag concurrency checks.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
