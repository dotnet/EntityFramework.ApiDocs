<Type Name="NavigationExtensions" FullName="Microsoft.EntityFrameworkCore.NavigationExtensions">
  <TypeSignature Language="C#" Value="public static class NavigationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NavigationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.NavigationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module NavigationExtensions" />
  <TypeSignature Language="F#" Value="type NavigationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="efcore-6.0">
      <AttributeName Language="C#">[System.Obsolete("Use IReadOnlyNavigation")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use IReadOnlyNavigation")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IReadOnlyNavigation" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FindInverse">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.INavigation FindInverse (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.INavigation FindInverse(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.NavigationExtensions.FindInverse(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindInverse (navigation As INavigation) As INavigation" />
      <MemberSignature Language="F#" Value="static member FindInverse : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.INavigation" Usage="Microsoft.EntityFrameworkCore.NavigationExtensions.FindInverse navigation" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.INavigation? FindInverse (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete("Use INavigation.Inverse")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use INavigation.Inverse")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use IReadOnlyNavigation.Inverse")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IReadOnlyNavigation.Inverse")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.INavigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" />
      </Parameters>
      <Docs>
        <param name="navigation">The navigation property to find the inverse of.</param>
        <summary>
                Gets the navigation property on the other end of the relationship. Returns null if
                there is no navigation property defined on the other end of the relationship.
            </summary>
        <returns>
                The inverse navigation, or <see langword="null" /> if none is defined.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollectionAccessor">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor GetCollectionAccessor (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor GetCollectionAccessor(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.NavigationExtensions.GetCollectionAccessor(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollectionAccessor (navigation As INavigation) As IClrCollectionAccessor" />
      <MemberSignature Language="F#" Value="static member GetCollectionAccessor : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor" Usage="Microsoft.EntityFrameworkCore.NavigationExtensions.GetCollectionAccessor navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="navigation"> The navigation property. </param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IClrCollectionAccessor" /> for this navigation property, which must be a collection
                navigation.
            </summary>
        <returns> The accessor. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IEntityType GetTargetType (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IEntityType GetTargetType(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.NavigationExtensions.GetTargetType(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTargetType (navigation As INavigation) As IEntityType" />
      <MemberSignature Language="F#" Value="static member GetTargetType : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="Microsoft.EntityFrameworkCore.NavigationExtensions.GetTargetType navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete("Use INavigation.TargetEntityType")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use INavigation.TargetEntityType")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use IReadOnlyNavigation.TargetEntityType")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IReadOnlyNavigation.TargetEntityType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" />
      </Parameters>
      <Docs>
        <param name="navigation">The navigation property to find the target entity type of.</param>
        <summary>
                Gets the entity type that a given navigation property will hold an instance of
                (or hold instances of if it is a collection navigation).
            </summary>
        <returns>The target entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public static bool IsCollection (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.NavigationExtensions.IsCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsCollection (navigation As INavigation) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; bool" Usage="Microsoft.EntityFrameworkCore.NavigationExtensions.IsCollection navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete("Use INavigation.IsCollection")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use INavigation.IsCollection")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use IReadOnlyNavigation.IsCollection")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IReadOnlyNavigation.IsCollection")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" />
      </Parameters>
      <Docs>
        <param name="navigation">The navigation property to check.</param>
        <summary>
                Gets a value indicating whether the given navigation property is a collection property.
            </summary>
        <returns>
          <see langword="true" /> if this is a collection property, false if it is a reference property.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDependentToPrincipal">
      <MemberSignature Language="C#" Value="public static bool IsDependentToPrincipal (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDependentToPrincipal(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.NavigationExtensions.IsDependentToPrincipal(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDependentToPrincipal (navigation As INavigation) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDependentToPrincipal : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; bool" Usage="Microsoft.EntityFrameworkCore.NavigationExtensions.IsDependentToPrincipal navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete("Use INavigation.IsOnDependent")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use INavigation.IsOnDependent")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use IReadOnlyNavigation.IsOnDependent")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IReadOnlyNavigation.IsOnDependent")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" />
      </Parameters>
      <Docs>
        <param name="navigation">The navigation property to check.</param>
        <summary>
                Gets a value indicating whether the given navigation property is the navigation property on the dependent entity
                type that points to the principal entity.
            </summary>
        <returns>
          <see langword="true" /> if the given navigation property is the navigation property on the dependent entity
                type that points to the principal entity, otherwise <see langword="false" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEagerLoaded">
      <MemberSignature Language="C#" Value="public static bool IsEagerLoaded (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEagerLoaded(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.NavigationExtensions.IsEagerLoaded(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEagerLoaded (navigation As INavigation) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsEagerLoaded : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; bool" Usage="Microsoft.EntityFrameworkCore.NavigationExtensions.IsEagerLoaded navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete("Use INavigation.IsEagerLoaded")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use INavigation.IsEagerLoaded")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use IReadOnlyNavigation.IsEagerLoaded")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IReadOnlyNavigation.IsEagerLoaded")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="navigation">The navigation property to find whether it should be eager loaded.</param>
        <summary>
                Gets a value indicating whether this navigation should be eager loaded by default.
            </summary>
        <returns>A value indicating whether this navigation should be eager loaded by default.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDebugString">
      <MemberSignature Language="C#" Value="public static string ToDebugString (this Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions options, int indent = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToDebugString(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, valuetype Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions options, int32 indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.NavigationExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDebugString (navigation As INavigation, options As MetadataDebugStringOptions, Optional indent As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="static member ToDebugString : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions * int -&gt; string" Usage="Microsoft.EntityFrameworkCore.NavigationExtensions.ToDebugString (navigation, options, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="indent" Type="System.Int32" Index="2" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="navigation"> The metadata item. </param>
        <param name="options"> Options for generating the string. </param>
        <param name="indent"> The number of indent spaces to use before each new line. </param>
        <summary>
          <para>
                    Creates a human-readable representation of the given metadata.
                </para>
          <para>
                    Warning: Do not rely on the format of the returned string.
                    It is designed for debugging only and may change arbitrarily between releases.
                </para>
        </summary>
        <returns> A human-readable representation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
