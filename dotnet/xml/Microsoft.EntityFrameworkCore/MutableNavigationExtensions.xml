<Type Name="MutableNavigationExtensions" FullName="Microsoft.EntityFrameworkCore.MutableNavigationExtensions">
  <TypeSignature Language="C#" Value="public static class MutableNavigationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MutableNavigationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.MutableNavigationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MutableNavigationExtensions" />
  <TypeSignature Language="F#" Value="type MutableNavigationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="efcore-6.0">
      <AttributeName Language="C#">[System.Obsolete("Use IMutableNavigation")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use IMutableNavigation")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FindInverse">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation FindInverse (this Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation navigation);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation FindInverse(class Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableNavigationExtensions.FindInverse(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindInverse (navigation As IMutableNavigation) As IMutableNavigation" />
      <MemberSignature Language="F#" Value="static member FindInverse : Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation" Usage="Microsoft.EntityFrameworkCore.MutableNavigationExtensions.FindInverse navigation" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation? FindInverse (this Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation navigation);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use IMutableNavigation.Inverse")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IMutableNavigation.Inverse")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation" RefType="this" />
      </Parameters>
      <Docs>
        <param name="navigation">The navigation property to find the inverse of.</param>
        <summary>
                Gets the navigation property on the other end of the relationship. Returns <see langword="null" /> if
                there is no navigation property defined on the other end of the relationship.
            </summary>
        <returns>
                The inverse navigation, or <see langword="null" /> if none is defined.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType GetTargetType (this Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType GetTargetType(class Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableNavigationExtensions.GetTargetType(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTargetType (navigation As IMutableNavigation) As IMutableEntityType" />
      <MemberSignature Language="F#" Value="static member GetTargetType : Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" Usage="Microsoft.EntityFrameworkCore.MutableNavigationExtensions.GetTargetType navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use IMutableNavigation.TargetEntityType")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use IMutableNavigation.TargetEntityType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation" RefType="this" />
      </Parameters>
      <Docs>
        <param name="navigation">The navigation property to find the target entity type of.</param>
        <summary>
                Gets the entity type that a given navigation property will hold an instance of
                (or hold instances of if it is a collection navigation).
            </summary>
        <returns>The target entity type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsEagerLoaded">
      <MemberSignature Language="C#" Value="public static void SetIsEagerLoaded (this Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation navigation, bool? eagerLoaded);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsEagerLoaded(class Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation navigation, valuetype System.Nullable`1&lt;bool&gt; eagerLoaded) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetIsEagerLoaded(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsEagerLoaded (navigation As IMutableNavigation, eagerLoaded As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member SetIsEagerLoaded : Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.MutableNavigationExtensions.SetIsEagerLoaded (navigation, eagerLoaded)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="eagerLoaded" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="navigation"> The navigation property to set whether it should be eager loaded for. </param>
        <param name="eagerLoaded"> A value indicating whether this navigation should be eager loaded by default. </param>
        <summary>
                Sets a value indicating whether this navigation should be eager loaded by default.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
