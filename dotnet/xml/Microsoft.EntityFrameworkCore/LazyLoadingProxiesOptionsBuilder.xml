<Type Name="LazyLoadingProxiesOptionsBuilder" FullName="Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder">
  <TypeSignature Language="C#" Value="public class LazyLoadingProxiesOptionsBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LazyLoadingProxiesOptionsBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class LazyLoadingProxiesOptionsBuilder" />
  <TypeSignature Language="F#" Value="type LazyLoadingProxiesOptionsBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Allows SQL Server specific configuration to be performed on <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" />.
            </summary>
    <remarks>
                Instances of this class are returned from a call to <see cref="O:SqlServerDbContextOptionsExtensions.UseSqlServer" />
                and it is not designed to be directly constructed in your application code.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyLoadingProxiesOptionsBuilder (Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder.#ctor(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (optionsBuilder As DbContextOptionsBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder : Microsoft.EntityFrameworkCore.DbContextOptionsBuilder -&gt; Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder" Usage="new Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder optionsBuilder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />
      </Parameters>
      <Docs>
        <param name="optionsBuilder">The core options builder.</param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreNonVirtualNavigations">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder IgnoreNonVirtualNavigations (bool ignoreNonVirtualNavigations = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder IgnoreNonVirtualNavigations(bool ignoreNonVirtualNavigations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder.IgnoreNonVirtualNavigations(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IgnoreNonVirtualNavigations (Optional ignoreNonVirtualNavigations As Boolean = true) As LazyLoadingProxiesOptionsBuilder" />
      <MemberSignature Language="F#" Value="abstract member IgnoreNonVirtualNavigations : bool -&gt; Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder&#xA;override this.IgnoreNonVirtualNavigations : bool -&gt; Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder" Usage="lazyLoadingProxiesOptionsBuilder.IgnoreNonVirtualNavigations ignoreNonVirtualNavigations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignoreNonVirtualNavigations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignoreNonVirtualNavigations">
          <see langword="true" /> to ignore navigations that are not virtual. The default value is
                <see langword="false" />, meaning an exception will be thrown if a non-virtual navigation is found.
            </param>
        <summary>
                Configures the proxies to ignore navigations that are not virtual. By default, an exception will be thrown if a non-virtual
                navigation is found.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionsBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.DbContextOptionsBuilder OptionsBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder OptionsBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder.OptionsBuilder" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property OptionsBuilder As DbContextOptionsBuilder" />
      <MemberSignature Language="F#" Value="member this.OptionsBuilder : Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" Usage="Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder.OptionsBuilder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the core options builder.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOption">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder WithOption (Func&lt;Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension,Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension&gt; setAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder WithOption(class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension, class Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension&gt; setAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder.WithOption(System.Func{Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension,Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function WithOption (setAction As Func(Of ProxiesOptionsExtension, ProxiesOptionsExtension)) As LazyLoadingProxiesOptionsBuilder" />
      <MemberSignature Language="F#" Value="abstract member WithOption : Func&lt;Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension, Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension&gt; -&gt; Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder&#xA;override this.WithOption : Func&lt;Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension, Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension&gt; -&gt; Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder" Usage="lazyLoadingProxiesOptionsBuilder.WithOption setAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.LazyLoadingProxiesOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setAction" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension,Microsoft.EntityFrameworkCore.Proxies.Internal.ProxiesOptionsExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="setAction">An action to set the option.</param>
        <summary>
                Sets an option by cloning the extension used to store the settings. This ensures the builder
                does not modify options that are already in use elsewhere.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
