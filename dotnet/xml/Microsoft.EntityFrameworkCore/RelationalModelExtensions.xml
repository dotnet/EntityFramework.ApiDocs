<Type Name="RelationalModelExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalModelExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalModelExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalModelExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalModelExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalModelExtensions" />
  <TypeSignature Language="F#" Value="type RelationalModelExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Relational-specific model extension methods.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunction AddDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, System.Reflection.MethodInfo methodInfo);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunction AddDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, class System.Reflection.MethodInfo methodInfo) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddDbFunction(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDbFunction (model As IMutableModel, methodInfo As MethodInfo) As DbFunction" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member AddDbFunction : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * System.Reflection.MethodInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddDbFunction (model, methodInfo)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction AddDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, System.Reflection.MethodInfo methodInfo);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction AddDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, class System.Reflection.MethodInfo methodInfo) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDbFunction (model As IMutableModel, methodInfo As MethodInfo) As IMutableDbFunction" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member AddDbFunction : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * System.Reflection.MethodInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddDbFunction (model, methodInfo)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Metadata.Internal.DbFunction</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="model">The model to add the function to.</param>
        <param name="methodInfo">The <see cref="T:System.Reflection.MethodInfo" /> for the method that is mapped to the function.</param>
        <summary>
                Creates an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction" /> mapped to the given method.
            </summary>
        <returns>The new <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction AddDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, System.Reflection.MethodInfo methodInfo, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction AddDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, class System.Reflection.MethodInfo methodInfo, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddDbFunction(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.Reflection.MethodInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDbFunction (model As IConventionModel, methodInfo As MethodInfo, Optional fromDataAnnotation As Boolean = false) As IConventionDbFunction" />
      <MemberSignature Language="F#" Value="static member AddDbFunction : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * System.Reflection.MethodInfo * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddDbFunction (model, methodInfo, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="model">The model to add the function to.</param>
        <param name="methodInfo">The <see cref="T:System.Reflection.MethodInfo" /> for the method that is mapped to the function.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Creates a function mapped to the given method.
            </summary>
        <returns>The new function.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction AddDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction AddDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddDbFunction(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDbFunction (model As IMutableModel, name As String, returnType As Type) As IMutableDbFunction" />
      <MemberSignature Language="F#" Value="static member AddDbFunction : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * string * Type -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddDbFunction (model, name, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="returnType" Type="System.Type" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to add the function to.</param>
        <param name="name">The model name of the function.</param>
        <param name="returnType">The function return type.</param>
        <summary>
                Creates a function.
            </summary>
        <returns>The new function.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction AddDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name, Type returnType, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction AddDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name, class System.Type returnType, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddDbFunction(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDbFunction (model As IConventionModel, name As String, returnType As Type, Optional fromDataAnnotation As Boolean = false) As IConventionDbFunction" />
      <MemberSignature Language="F#" Value="static member AddDbFunction : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * string * Type * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddDbFunction (model, name, returnType, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="returnType" Type="System.Type" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to add the function to.</param>
        <param name="name">The model name of the function.</param>
        <param name="returnType">The function return type.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Creates a function.
            </summary>
        <returns>The new function.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableSequence AddSequence (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name, string schema = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableSequence AddSequence(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSequence (model As IMutableModel, name As String, Optional schema As String = Nothing) As IMutableSequence" />
      <MemberSignature Language="F#" Value="static member AddSequence : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableSequence" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddSequence (model, name, schema)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableSequence AddSequence (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The model to add the sequence to.</param>
        <param name="name">The sequence name.</param>
        <param name="schema">The schema name, or <see langword="null" /> to use the default schema.</param>
        <summary>
                Either returns the existing <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableSequence" /> with the given name in the given schema
                or creates a new sequence with the given name and schema.
            </summary>
        <returns>The sequence.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionSequence AddSequence (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name, string schema = default, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionSequence AddSequence(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name, string schema, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddSequence(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSequence (model As IConventionModel, name As String, Optional schema As String = Nothing, Optional fromDataAnnotation As Boolean = false) As IConventionSequence" />
      <MemberSignature Language="F#" Value="static member AddSequence : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * string * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionSequence" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.AddSequence (model, name, schema, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionSequence? AddSequence (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name, string? schema = default, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="model">The model to add the sequence to.</param>
        <param name="name">The sequence name.</param>
        <param name="schema">The schema name, or <see langword="null" /> to use the default schema.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Either returns the existing <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableSequence" /> with the given name in the given schema
                or creates a new sequence with the given name and schema.
            </summary>
        <returns>The sequence.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, System.Reflection.MethodInfo method);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction FindDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindDbFunction (model As IConventionModel, method As MethodInfo) As IConventionDbFunction" />
      <MemberSignature Language="F#" Value="static member FindDbFunction : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * System.Reflection.MethodInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction (model, method)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction? FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, System.Reflection.MethodInfo method);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> for the method that is mapped to the function.</param>
        <summary>
                Finds a function that is mapped to the method represented by the given <see cref="T:System.Reflection.MethodInfo" />.
            </summary>
        <returns>The function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction FindDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindDbFunction (model As IConventionModel, name As String) As IConventionDbFunction" />
      <MemberSignature Language="F#" Value="static member FindDbFunction : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction (model, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction? FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="name">The model name of the function.</param>
        <summary>
                Finds a function that is mapped to the method represented by the given name.
            </summary>
        <returns>The function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IDbFunction FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IModel model, System.Reflection.MethodInfo method);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IDbFunction FindDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction(Microsoft.EntityFrameworkCore.Metadata.IModel,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindDbFunction (model As IModel, method As MethodInfo) As IDbFunction" />
      <MemberSignature Language="F#" Value="static member FindDbFunction : Microsoft.EntityFrameworkCore.Metadata.IModel * System.Reflection.MethodInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.IDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction (model, method)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IDbFunction? FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IModel model, System.Reflection.MethodInfo method);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" RefType="this" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> for the method that is mapped to the function.</param>
        <summary>
                Finds a function that is mapped to the method represented by the given <see cref="T:System.Reflection.MethodInfo" />.
            </summary>
        <returns>The function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IDbFunction FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IModel model, string name);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IDbFunction FindDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IModel model, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindDbFunction (model As IModel, name As String) As IDbFunction" />
      <MemberSignature Language="F#" Value="static member FindDbFunction : Microsoft.EntityFrameworkCore.Metadata.IModel * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction (model, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IDbFunction? FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IModel model, string name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="name">The model name of the function.</param>
        <summary>
                Finds a function that is mapped to the method represented by the given name.
            </summary>
        <returns>The function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, System.Reflection.MethodInfo method);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction FindDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindDbFunction (model As IMutableModel, method As MethodInfo) As IMutableDbFunction" />
      <MemberSignature Language="F#" Value="static member FindDbFunction : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * System.Reflection.MethodInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction (model, method)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction? FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, System.Reflection.MethodInfo method);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> for the method that is mapped to the function.</param>
        <summary>
                Finds a function that is mapped to the method represented by the given <see cref="T:System.Reflection.MethodInfo" />.
            </summary>
        <returns>The function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction FindDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindDbFunction (model As IMutableModel, name As String) As IMutableDbFunction" />
      <MemberSignature Language="F#" Value="static member FindDbFunction : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction (model, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction? FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="name">The model name of the function.</param>
        <summary>
                Finds a function that is mapped to the method represented by the given name.
            </summary>
        <returns>The function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction? FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction FindDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindDbFunction (model As IReadOnlyModel, method As MethodInfo) As IReadOnlyDbFunction" />
      <MemberSignature Language="F#" Value="static member FindDbFunction : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel * System.Reflection.MethodInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction (model, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> for the method that is mapped to the function.</param>
        <summary>
                Finds a function that is mapped to the method represented by the given <see cref="T:System.Reflection.MethodInfo" />.
            </summary>
        <returns>The function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction? FindDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction FindDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindDbFunction (model As IReadOnlyModel, name As String) As IReadOnlyDbFunction" />
      <MemberSignature Language="F#" Value="static member FindDbFunction : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindDbFunction (model, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="name">The model name of the function.</param>
        <summary>
                Finds a function that is mapped to the method represented by the given name.
            </summary>
        <returns>The function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionSequence FindSequence (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name, string schema = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionSequence FindSequence(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSequence (model As IConventionModel, name As String, Optional schema As String = Nothing) As IConventionSequence" />
      <MemberSignature Language="F#" Value="static member FindSequence : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionSequence" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindSequence (model, name, schema)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionSequence? FindSequence (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the sequence in.</param>
        <param name="name">The sequence name.</param>
        <param name="schema">The schema that contains the sequence.</param>
        <summary>
                Finds a sequence with the given name.
            </summary>
        <returns>
                The sequence or <see langword="null" /> if no sequence with the given name in
                the given schema was found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ISequence FindSequence (this Microsoft.EntityFrameworkCore.Metadata.IModel model, string name, string schema = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.ISequence FindSequence(class Microsoft.EntityFrameworkCore.Metadata.IModel model, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSequence (model As IModel, name As String, Optional schema As String = Nothing) As ISequence" />
      <MemberSignature Language="F#" Value="static member FindSequence : Microsoft.EntityFrameworkCore.Metadata.IModel * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.ISequence" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindSequence (model, name, schema)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ISequence? FindSequence (this Microsoft.EntityFrameworkCore.Metadata.IModel model, string name, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ISequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the sequence in.</param>
        <param name="name">The sequence name.</param>
        <param name="schema">The schema that contains the sequence.</param>
        <summary>
                Finds a sequence with the given name.
            </summary>
        <returns>
                The sequence or <see langword="null" /> if no sequence with the given name in
                the given schema was found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableSequence FindSequence (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name, string schema = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableSequence FindSequence(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSequence (model As IMutableModel, name As String, Optional schema As String = Nothing) As IMutableSequence" />
      <MemberSignature Language="F#" Value="static member FindSequence : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableSequence" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindSequence (model, name, schema)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableSequence? FindSequence (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the sequence in.</param>
        <param name="name">The sequence name.</param>
        <param name="schema">The schema that contains the sequence.</param>
        <summary>
                Finds a sequence with the given name.
            </summary>
        <returns>
                The sequence or <see langword="null" /> if no sequence with the given name in
                the given schema was found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IReadOnlySequence? FindSequence (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model, string name, string? schema = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IReadOnlySequence FindSequence(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindSequence(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSequence (model As IReadOnlyModel, name As String, Optional schema As String = Nothing) As IReadOnlySequence" />
      <MemberSignature Language="F#" Value="static member FindSequence : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlySequence" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.FindSequence (model, name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlySequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="schema" Type="System.String" Index="2" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the sequence in.</param>
        <param name="name">The sequence name.</param>
        <param name="schema">The schema that contains the sequence.</param>
        <summary>
                Finds a sequence with the given name.
            </summary>
        <returns>
                The sequence or <see langword="null" /> if no sequence with the given name in
                the given schema was found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollation">
      <MemberSignature Language="C#" Value="public static string GetCollation (this Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCollation(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetCollation(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollation (model As IModel) As String" />
      <MemberSignature Language="F#" Value="static member GetCollation : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetCollation model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="model"> The model to get the collation for. </param>
        <summary>
                Returns the database collation.
            </summary>
        <returns> The collation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollation">
      <MemberSignature Language="C#" Value="public static string? GetCollation (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCollation(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetCollation(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollation (model As IReadOnlyModel) As String" />
      <MemberSignature Language="F#" Value="static member GetCollation : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetCollation model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the collation for.</param>
        <summary>
                Returns the database collation.
            </summary>
        <returns>The collation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCollationConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetCollationConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetCollationConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetCollationConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCollationConfigurationSource (model As IConventionModel) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetCollationConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionModel -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetCollationConfigurationSource model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to find configuration source for.</param>
        <summary>
                Returns the configuration source for the collation.
            </summary>
        <returns>The configuration source for the collation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbFunctions">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction&gt; GetDbFunctions (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction&gt; GetDbFunctions(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDbFunctions(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDbFunctions (model As IConventionModel) As IEnumerable(Of IConventionDbFunction)" />
      <MemberSignature Language="F#" Value="static member GetDbFunctions : Microsoft.EntityFrameworkCore.Metadata.IConventionModel -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDbFunctions model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the functions in.</param>
        <summary>
                Returns all functions contained in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbFunctions">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IDbFunction&gt; GetDbFunctions (this Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IDbFunction&gt; GetDbFunctions(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDbFunctions(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDbFunctions (model As IModel) As IEnumerable(Of IDbFunction)" />
      <MemberSignature Language="F#" Value="static member GetDbFunctions : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IDbFunction&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDbFunctions model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IDbFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" RefType="this" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the functions in.</param>
        <summary>
                Returns all functions contained in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbFunctions">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction&gt; GetDbFunctions (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction&gt; GetDbFunctions(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDbFunctions(Microsoft.EntityFrameworkCore.Metadata.IMutableModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDbFunctions (model As IMutableModel) As IEnumerable(Of IMutableDbFunction)" />
      <MemberSignature Language="F#" Value="static member GetDbFunctions : Microsoft.EntityFrameworkCore.Metadata.IMutableModel -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDbFunctions model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the functions in.</param>
        <summary>
                Returns all functions contained in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbFunctions">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction&gt; GetDbFunctions (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction&gt; GetDbFunctions(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDbFunctions(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDbFunctions (model As IReadOnlyModel) As IEnumerable(Of IReadOnlyDbFunction)" />
      <MemberSignature Language="F#" Value="static member GetDbFunctions : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDbFunctions model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlyDbFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the functions in.</param>
        <summary>
                Returns all functions contained in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSchema">
      <MemberSignature Language="C#" Value="public static string GetDefaultSchema (this Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultSchema(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDefaultSchema(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultSchema (model As IModel) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultSchema : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDefaultSchema model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="model"> The model to get the default schema for. </param>
        <summary>
                Returns the default schema to use for the model, or <see langword="null" /> if none has been set.
            </summary>
        <returns> The default schema. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSchema">
      <MemberSignature Language="C#" Value="public static string? GetDefaultSchema (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultSchema(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDefaultSchema(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultSchema (model As IReadOnlyModel) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultSchema : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDefaultSchema model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the default schema for.</param>
        <summary>
                Returns the default schema to use for the model, or <see langword="null" /> if none has been set.
            </summary>
        <returns>The default schema.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSchemaConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetDefaultSchemaConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetDefaultSchemaConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDefaultSchemaConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultSchemaConfigurationSource (model As IConventionModel) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetDefaultSchemaConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionModel -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetDefaultSchemaConfigurationSource model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
      </Parameters>
      <Docs>
        <param name="model">The model to find configuration source for.</param>
        <summary>
                Returns the configuration source for the default schema.
            </summary>
        <returns>The configuration source for the default schema.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxIdentifierLength">
      <MemberSignature Language="C#" Value="public static int GetMaxIdentifierLength (this Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxIdentifierLength(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetMaxIdentifierLength(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaxIdentifierLength (model As IModel) As Integer" />
      <MemberSignature Language="F#" Value="static member GetMaxIdentifierLength : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; int" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetMaxIdentifierLength model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="model"> The model to get the maximum identifier length for. </param>
        <summary>
                Returns the maximum length allowed for store identifiers.
            </summary>
        <returns> The maximum identifier length. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxIdentifierLength">
      <MemberSignature Language="C#" Value="public static int GetMaxIdentifierLength (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxIdentifierLength(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetMaxIdentifierLength(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaxIdentifierLength (model As IReadOnlyModel) As Integer" />
      <MemberSignature Language="F#" Value="static member GetMaxIdentifierLength : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel -&gt; int" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetMaxIdentifierLength model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the maximum identifier length for.</param>
        <summary>
                Returns the maximum length allowed for store identifiers.
            </summary>
        <returns>The maximum identifier length.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxIdentifierLengthConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetMaxIdentifierLengthConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetMaxIdentifierLengthConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetMaxIdentifierLengthConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaxIdentifierLengthConfigurationSource (model As IConventionModel) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetMaxIdentifierLengthConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionModel -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetMaxIdentifierLengthConfigurationSource model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
      </Parameters>
      <Docs>
        <param name="model">The model to find configuration source for.</param>
        <summary>
                Returns the configuration source for <see cref="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetMaxIdentifierLength(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)" />.
            </summary>
        <returns>The configuration source for <see cref="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetMaxIdentifierLength(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationalModel">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IRelationalModel GetRelationalModel (this Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IRelationalModel GetRelationalModel(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetRelationalModel(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRelationalModel (model As IModel) As IRelationalModel" />
      <MemberSignature Language="F#" Value="static member GetRelationalModel : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; Microsoft.EntityFrameworkCore.Metadata.IRelationalModel" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetRelationalModel model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IRelationalModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the database model for.</param>
        <summary>
                Returns the database model.
            </summary>
        <returns>The database model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSequences">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSequence&gt; GetSequences (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionSequence&gt; GetSequences(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetSequences(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSequences (model As IConventionModel) As IReadOnlyList(Of IConventionSequence)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member GetSequences : Microsoft.EntityFrameworkCore.Metadata.IConventionModel -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSequence&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetSequences model" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSequence&gt; GetSequences (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionSequence&gt; GetSequences(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSequences (model As IConventionModel) As IEnumerable(Of IConventionSequence)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member GetSequences : Microsoft.EntityFrameworkCore.Metadata.IConventionModel -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSequence&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetSequences model" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSequence&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSequence&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the sequences in.</param>
        <summary>
                Returns all sequences contained in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSequences">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.ISequence&gt; GetSequences (this Microsoft.EntityFrameworkCore.Metadata.IModel model);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ISequence&gt; GetSequences(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetSequences(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSequences (model As IModel) As IReadOnlyList(Of ISequence)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member GetSequences : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.ISequence&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetSequences model" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ISequence&gt; GetSequences (this Microsoft.EntityFrameworkCore.Metadata.IModel model);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ISequence&gt; GetSequences(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSequences (model As IModel) As IEnumerable(Of ISequence)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member GetSequences : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.ISequence&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetSequences model" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.ISequence&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ISequence&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" RefType="this" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the sequences in.</param>
        <summary>
                Returns all sequences contained in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSequences">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableSequence&gt; GetSequences (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableSequence&gt; GetSequences(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetSequences(Microsoft.EntityFrameworkCore.Metadata.IMutableModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSequences (model As IMutableModel) As IReadOnlyList(Of IMutableSequence)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member GetSequences : Microsoft.EntityFrameworkCore.Metadata.IMutableModel -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableSequence&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetSequences model" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableSequence&gt; GetSequences (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableSequence&gt; GetSequences(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSequences (model As IMutableModel) As IEnumerable(Of IMutableSequence)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member GetSequences : Microsoft.EntityFrameworkCore.Metadata.IMutableModel -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableSequence&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetSequences model" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableSequence&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableSequence&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the sequences in.</param>
        <summary>
                Returns all sequences contained in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSequences">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlySequence&gt; GetSequences (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IReadOnlySequence&gt; GetSequences(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetSequences(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSequences (model As IReadOnlyModel) As IEnumerable(Of IReadOnlySequence)" />
      <MemberSignature Language="F#" Value="static member GetSequences : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlySequence&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.GetSequences model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IReadOnlySequence&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyModel" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to get the sequences in.</param>
        <summary>
                Returns all sequences contained in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction RemoveDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, System.Reflection.MethodInfo method);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction RemoveDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveDbFunction(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveDbFunction (model As IConventionModel, method As MethodInfo) As IConventionDbFunction" />
      <MemberSignature Language="F#" Value="static member RemoveDbFunction : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * System.Reflection.MethodInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveDbFunction (model, method)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction? RemoveDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, System.Reflection.MethodInfo method);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> for the method that is mapped to the function.</param>
        <summary>
                Removes the function that is mapped to the method represented by the given
                <see cref="T:System.Reflection.MethodInfo" />.
            </summary>
        <returns>The removed function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction RemoveDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction RemoveDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveDbFunction(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveDbFunction (model As IConventionModel, name As String) As IConventionDbFunction" />
      <MemberSignature Language="F#" Value="static member RemoveDbFunction : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveDbFunction (model, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction? RemoveDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="name">The model name of the function.</param>
        <summary>
                Removes the function that is mapped to the method represented by the given
                <see cref="T:System.Reflection.MethodInfo" />.
            </summary>
        <returns>The removed function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction RemoveDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, System.Reflection.MethodInfo method);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction RemoveDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveDbFunction(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveDbFunction (model As IMutableModel, method As MethodInfo) As IMutableDbFunction" />
      <MemberSignature Language="F#" Value="static member RemoveDbFunction : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * System.Reflection.MethodInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveDbFunction (model, method)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction? RemoveDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, System.Reflection.MethodInfo method);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> for the method that is mapped to the function.</param>
        <summary>
                Removes the function that is mapped to the method represented by the given
                <see cref="T:System.Reflection.MethodInfo" />.
            </summary>
        <returns>The removed function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDbFunction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction RemoveDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction RemoveDbFunction(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveDbFunction(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveDbFunction (model As IMutableModel, name As String) As IMutableDbFunction" />
      <MemberSignature Language="F#" Value="static member RemoveDbFunction : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveDbFunction (model, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction? RemoveDbFunction (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableDbFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the function in.</param>
        <param name="name">The model name of the function.</param>
        <summary>
                Removes the function that is mapped to the method represented by the given
                <see cref="T:System.Reflection.MethodInfo" />.
            </summary>
        <returns>The removed function or <see langword="null" /> if the method is not mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionSequence RemoveSequence (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name, string schema = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionSequence RemoveSequence(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveSequence(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveSequence (model As IConventionModel, name As String, Optional schema As String = Nothing) As IConventionSequence" />
      <MemberSignature Language="F#" Value="static member RemoveSequence : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionSequence" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveSequence (model, name, schema)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionSequence? RemoveSequence (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string name, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the sequence in.</param>
        <param name="name">The sequence name.</param>
        <param name="schema">The schema that contains the sequence.</param>
        <summary>
                Removes the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionSequence" /> with the given name.
            </summary>
        <returns>
                The removed <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionSequence" /> or <see langword="null" /> if no sequence with the given name in
                the given schema was found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSequence">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableSequence RemoveSequence (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name, string schema = default);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableSequence RemoveSequence(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveSequence(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveSequence (model As IMutableModel, name As String, Optional schema As String = Nothing) As IMutableSequence" />
      <MemberSignature Language="F#" Value="static member RemoveSequence : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableSequence" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.RemoveSequence (model, name, schema)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableSequence? RemoveSequence (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string name, string? schema = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The model to find the sequence in.</param>
        <param name="name">The sequence name.</param>
        <param name="schema">The schema that contains the sequence.</param>
        <summary>
                Removes the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableSequence" /> with the given name.
            </summary>
        <returns>
                The removed <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableSequence" /> or <see langword="null" /> if no sequence with the given name in
                the given schema was found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCollation">
      <MemberSignature Language="C#" Value="public static void SetCollation (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string value);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCollation(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetCollation(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetCollation (model As IMutableModel, value As String)" />
      <MemberSignature Language="F#" Value="static member SetCollation : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetCollation (model, value)" />
      <MemberSignature Language="C#" Value="public static void SetCollation (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to set the collation for.</param>
        <param name="value">The value to set.</param>
        <summary>
                Sets the database collation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCollation">
      <MemberSignature Language="C#" Value="public static string SetCollation (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetCollation(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetCollation(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetCollation (model As IConventionModel, value As String, Optional fromDataAnnotation As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member SetCollation : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetCollation (model, value, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static string? SetCollation (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="model">The model to set the collation for.</param>
        <param name="value">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the database collation.
            </summary>
        <returns>The configured collation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultSchema">
      <MemberSignature Language="C#" Value="public static void SetDefaultSchema (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string value);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDefaultSchema(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetDefaultSchema(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDefaultSchema (model As IMutableModel, value As String)" />
      <MemberSignature Language="F#" Value="static member SetDefaultSchema : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetDefaultSchema (model, value)" />
      <MemberSignature Language="C#" Value="public static void SetDefaultSchema (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, string? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The model to set the default schema for.</param>
        <param name="value">The value to set.</param>
        <summary>
                Sets the default schema.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultSchema">
      <MemberSignature Language="C#" Value="public static void SetDefaultSchema (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDefaultSchema(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetDefaultSchema(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDefaultSchema (model As IConventionModel, value As String, Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetDefaultSchema : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetDefaultSchema (model, value, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string SetDefaultSchema (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetDefaultSchema(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetDefaultSchema (model As IConventionModel, value As String, Optional fromDataAnnotation As Boolean = false) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetDefaultSchema : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetDefaultSchema (model, value, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string? SetDefaultSchema (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, string? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="model">The model to set the default schema for.</param>
        <param name="value">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the default schema.
            </summary>
        <returns>The configured schema.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxIdentifierLength">
      <MemberSignature Language="C#" Value="public static void SetMaxIdentifierLength (this Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, int? length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMaxIdentifierLength(class Microsoft.EntityFrameworkCore.Metadata.IMutableModel model, valuetype System.Nullable`1&lt;int32&gt; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetMaxIdentifierLength(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetMaxIdentifierLength (model As IMutableModel, length As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="static member SetMaxIdentifierLength : Microsoft.EntityFrameworkCore.Metadata.IMutableModel * Nullable&lt;int&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetMaxIdentifierLength (model, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableModel" RefType="this" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="model">The model to set the default schema for.</param>
        <param name="length">The value to set.</param>
        <summary>
                Sets the maximum length allowed for store identifiers.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxIdentifierLength">
      <MemberSignature Language="C#" Value="public static void SetMaxIdentifierLength (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, int? length, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMaxIdentifierLength(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, valuetype System.Nullable`1&lt;int32&gt; length, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetMaxIdentifierLength(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.Nullable{System.Int32},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetMaxIdentifierLength (model As IConventionModel, length As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetMaxIdentifierLength : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * Nullable&lt;int&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetMaxIdentifierLength (model, length, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static int? SetMaxIdentifierLength (this Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, int? length, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; SetMaxIdentifierLength(class Microsoft.EntityFrameworkCore.Metadata.IConventionModel model, valuetype System.Nullable`1&lt;int32&gt; length, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetMaxIdentifierLength (model As IConventionModel, length As Nullable(Of Integer), Optional fromDataAnnotation As Boolean = false) As Nullable(Of Integer)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetMaxIdentifierLength : Microsoft.EntityFrameworkCore.Metadata.IConventionModel * Nullable&lt;int&gt; * bool -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.SetMaxIdentifierLength (model, length, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionModel" RefType="this" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="model">The model to set the default schema for.</param>
        <param name="length">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the maximum length allowed for store identifiers.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDebugString">
      <MemberSignature Language="C#" Value="public static string ToDebugString (this Microsoft.EntityFrameworkCore.Metadata.IRelationalModel model, Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions options, int indent = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToDebugString(class Microsoft.EntityFrameworkCore.Metadata.IRelationalModel model, valuetype Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions options, int32 indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalModelExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IRelationalModel,Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDebugString (model As IRelationalModel, options As MetadataDebugStringOptions, Optional indent As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="static member ToDebugString : Microsoft.EntityFrameworkCore.Metadata.IRelationalModel * Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions * int -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalModelExtensions.ToDebugString (model, options, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalModel" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.MetadataDebugStringOptions" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="indent" Type="System.Int32" Index="2" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="model"> The metadata item. </param>
        <param name="options"> Options for generating the string. </param>
        <param name="indent"> The number of indent spaces to use before each new line. </param>
        <summary>
          <para>
                    Creates a human-readable representation of the given metadata.
                </para>
          <para>
                    Warning: Do not rely on the format of the returned string.
                    It is designed for debugging only and may change arbitrarily between releases.
                </para>
        </summary>
        <returns> A human-readable representation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
