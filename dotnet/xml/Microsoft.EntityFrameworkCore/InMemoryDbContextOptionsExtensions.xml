<Type Name="InMemoryDbContextOptionsExtensions" FullName="Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions">
  <TypeSignature Language="C#" Value="public static class InMemoryDbContextOptionsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit InMemoryDbContextOptionsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module InMemoryDbContextOptionsExtensions" />
  <TypeSignature Language="F#" Value="type InMemoryDbContextOptionsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                In-memory specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="UseInMemoryDatabase">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseInMemoryDatabase (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseInMemoryDatabase(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseInMemoryDatabase (optionsBuilder As DbContextOptionsBuilder, Optional inMemoryOptionsAction As Action(Of InMemoryDbContextOptionsBuilder) = Nothing) As DbContextOptionsBuilder" />
      <MemberSignature Language="F#" Value="static member UseInMemoryDatabase : Microsoft.EntityFrameworkCore.DbContextOptionsBuilder * Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" Usage="Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase (optionsBuilder, inMemoryOptionsAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.0">
          <AttributeName Language="C#">[System.Obsolete("Use UseInMemoryDatabase(string) instead. The database will be shared anywhere the same name is used.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use UseInMemoryDatabase(string) instead. The database will be shared anywhere the same name is used.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("Use UseInMemoryDatabase(string, InMemoryDatabaseRoot) instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use UseInMemoryDatabase(string, InMemoryDatabaseRoot) instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="inMemoryOptionsAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="optionsBuilder"> The builder being used to configure the context. </param>
        <param name="inMemoryOptionsAction">An optional action to allow additional in-memory specific configuration.</param>
        <summary>
                Configures the context to connect to the legacy shared in-memory database.
                This method is obsolete. Use <see cref="M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})" />
                instead.
            </summary>
        <returns> The options builder so that further configuration can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseInMemoryDatabase">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseInMemoryDatabase (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, string databaseName, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction = default);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseInMemoryDatabase(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, string databaseName, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseInMemoryDatabase (optionsBuilder As DbContextOptionsBuilder, databaseName As String, Optional inMemoryOptionsAction As Action(Of InMemoryDbContextOptionsBuilder) = Nothing) As DbContextOptionsBuilder" />
      <MemberSignature Language="F#" Value="static member UseInMemoryDatabase : Microsoft.EntityFrameworkCore.DbContextOptionsBuilder * string * Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" Usage="Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase (optionsBuilder, databaseName, inMemoryOptionsAction)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseInMemoryDatabase (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, string databaseName, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt;? inMemoryOptionsAction = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" RefType="this" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="inMemoryOptionsAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="optionsBuilder">The builder being used to configure the context.</param>
        <param name="databaseName">
                The name of the in-memory database. This allows the scope of the in-memory database to be controlled
                independently of the context. The in-memory database is shared anywhere the same name is used.
            </param>
        <param name="inMemoryOptionsAction">An optional action to allow additional in-memory specific configuration.</param>
        <summary>
                Configures the context to connect to a named in-memory database.
                The in-memory database is shared anywhere the same name is used, but only for a given
                service provider. To use the same in-memory database across service providers, call
                <see cref="M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})" />
                passing a shared <see cref="T:Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot" /> on which to root the database.
            </summary>
        <returns>The options builder so that further configuration can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-dbcontext-options">Using DbContextOptions</see>, and
                <see href="https://aka.ms/efcore-docs-in-memory">The EF Core in-memory database provider</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseInMemoryDatabase">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseInMemoryDatabase (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, string databaseName, Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot databaseRoot, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction = default);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseInMemoryDatabase(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, string databaseName, class Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot databaseRoot, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseInMemoryDatabase (optionsBuilder As DbContextOptionsBuilder, databaseName As String, databaseRoot As InMemoryDatabaseRoot, Optional inMemoryOptionsAction As Action(Of InMemoryDbContextOptionsBuilder) = Nothing) As DbContextOptionsBuilder" />
      <MemberSignature Language="F#" Value="static member UseInMemoryDatabase : Microsoft.EntityFrameworkCore.DbContextOptionsBuilder * string * Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot * Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" Usage="Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase (optionsBuilder, databaseName, databaseRoot, inMemoryOptionsAction)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder UseInMemoryDatabase (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder, string databaseName, Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot? databaseRoot, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt;? inMemoryOptionsAction = default);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="databaseName" Type="System.String" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="databaseRoot" Type="Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="inMemoryOptionsAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt;" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="optionsBuilder">The builder being used to configure the context.</param>
        <param name="databaseName">
                The name of the in-memory database. This allows the scope of the in-memory database to be controlled
                independently of the context. The in-memory database is shared anywhere the same name is used.
            </param>
        <param name="databaseRoot">
                All in-memory databases will be rooted in this object, allowing the application
                to control their lifetime. This is useful when sometimes the context instance
                is created explicitly with <see langword="new" /> while at other times it is resolved using dependency injection.
            </param>
        <param name="inMemoryOptionsAction">An optional action to allow additional in-memory specific configuration.</param>
        <summary>
                Configures the context to connect to a named in-memory database.
                The in-memory database is shared anywhere the same name is used, but only for a given
                service provider.
            </summary>
        <returns>The options builder so that further configuration can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-dbcontext-options">Using DbContextOptions</see>, and
                <see href="https://aka.ms/efcore-docs-in-memory">The EF Core in-memory database provider</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseInMemoryDatabase&lt;TContext&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; UseInMemoryDatabase&lt;TContext&gt; (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; optionsBuilder, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction = default) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1&lt;!!TContext&gt; UseInMemoryDatabase&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt;(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1&lt;!!TContext&gt; optionsBuilder, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseInMemoryDatabase(Of TContext As DbContext) (optionsBuilder As DbContextOptionsBuilder(Of TContext), Optional inMemoryOptionsAction As Action(Of InMemoryDbContextOptionsBuilder) = Nothing) As DbContextOptionsBuilder(Of TContext)" />
      <MemberSignature Language="F#" Value="static member UseInMemoryDatabase : Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; * Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase (optionsBuilder, inMemoryOptionsAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.0">
          <AttributeName Language="C#">[System.Obsolete("Use UseInMemoryDatabase(string) instead. The database will be shared anywhere the same name is used.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use UseInMemoryDatabase(string) instead. The database will be shared anywhere the same name is used.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName Language="C#">[System.Obsolete("Use UseInMemoryDatabase(string, InMemoryDatabaseRoot) instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use UseInMemoryDatabase(string, InMemoryDatabaseRoot) instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="inMemoryOptionsAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt;" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <typeparam name="TContext"> The type of context being configured. </typeparam>
        <param name="optionsBuilder"> The builder being used to configure the context. </param>
        <param name="inMemoryOptionsAction">An optional action to allow additional in-memory specific configuration.</param>
        <summary>
                Configures the context to connect to the legacy shared in-memory database.
                This method is obsolete. Use
                <see cref="M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})" /> instead.
            </summary>
        <returns> The options builder so that further configuration can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseInMemoryDatabase&lt;TContext&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; UseInMemoryDatabase&lt;TContext&gt; (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; optionsBuilder, string databaseName, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction = default) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1&lt;!!TContext&gt; UseInMemoryDatabase&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt;(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1&lt;!!TContext&gt; optionsBuilder, string databaseName, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseInMemoryDatabase(Of TContext As DbContext) (optionsBuilder As DbContextOptionsBuilder(Of TContext), databaseName As String, Optional inMemoryOptionsAction As Action(Of InMemoryDbContextOptionsBuilder) = Nothing) As DbContextOptionsBuilder(Of TContext)" />
      <MemberSignature Language="F#" Value="static member UseInMemoryDatabase : Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; * string * Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase (optionsBuilder, databaseName, inMemoryOptionsAction)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; UseInMemoryDatabase&lt;TContext&gt; (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; optionsBuilder, string databaseName, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt;? inMemoryOptionsAction = default) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt;" RefType="this" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="inMemoryOptionsAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The type of context being configured.</typeparam>
        <param name="optionsBuilder">The builder being used to configure the context.</param>
        <param name="databaseName">
                The name of the in-memory database. This allows the scope of the in-memory database to be controlled
                independently of the context. The in-memory database is shared anywhere the same name is used.
            </param>
        <param name="inMemoryOptionsAction">An optional action to allow additional in-memory specific configuration.</param>
        <summary>
                Configures the context to connect to an in-memory database.
                The in-memory database is shared anywhere the same name is used, but only for a given
                service provider. To use the same in-memory database across service providers, call
                <see cref="M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})" />
                passing a shared <see cref="T:Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot" /> on which to root the database.
            </summary>
        <returns>The options builder so that further configuration can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-dbcontext-options">Using DbContextOptions</see>, and
                <see href="https://aka.ms/efcore-docs-in-memory">The EF Core in-memory database provider</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseInMemoryDatabase&lt;TContext&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; UseInMemoryDatabase&lt;TContext&gt; (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; optionsBuilder, string databaseName, Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot databaseRoot, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction = default) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1&lt;!!TContext&gt; UseInMemoryDatabase&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt;(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1&lt;!!TContext&gt; optionsBuilder, string databaseName, class Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot databaseRoot, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; inMemoryOptionsAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseInMemoryDatabase(Of TContext As DbContext) (optionsBuilder As DbContextOptionsBuilder(Of TContext), databaseName As String, databaseRoot As InMemoryDatabaseRoot, Optional inMemoryOptionsAction As Action(Of InMemoryDbContextOptionsBuilder) = Nothing) As DbContextOptionsBuilder(Of TContext)" />
      <MemberSignature Language="F#" Value="static member UseInMemoryDatabase : Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; * string * Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot * Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase (optionsBuilder, databaseName, databaseRoot, inMemoryOptionsAction)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; UseInMemoryDatabase&lt;TContext&gt; (this Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt; optionsBuilder, string databaseName, Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot? databaseRoot, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt;? inMemoryOptionsAction = default) where TContext : Microsoft.EntityFrameworkCore.DbContext;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder&lt;TContext&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="databaseName" Type="System.String" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="databaseRoot" Type="Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="inMemoryOptionsAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder&gt;" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">The type of context being configured.</typeparam>
        <param name="optionsBuilder">The builder being used to configure the context.</param>
        <param name="databaseName">
                The name of the in-memory database. This allows the scope of the in-memory database to be controlled
                independently of the context. The in-memory database is shared anywhere the same name is used.
            </param>
        <param name="databaseRoot">
                All in-memory databases will be rooted in this object, allowing the application
                to control their lifetime. This is useful when sometimes the context instance
                is created explicitly with <see langword="new" /> while at other times it is resolved using dependency injection.
            </param>
        <param name="inMemoryOptionsAction">An optional action to allow additional in-memory specific configuration.</param>
        <summary>
                Configures the context to connect to an in-memory database.
                The in-memory database is shared anywhere the same name is used, but only for a given
                service provider.
            </summary>
        <returns>The options builder so that further configuration can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-dbcontext-options">Using DbContextOptions</see>, and
                <see href="https://aka.ms/efcore-docs-in-memory">The EF Core in-memory database provider</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
