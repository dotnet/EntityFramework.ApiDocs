<Type Name="SqliteIndexBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class SqliteIndexBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqliteIndexBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SqliteIndexBuilderExtensions" />
  <TypeSignature Language="F#" Value="type SqliteIndexBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                SQLite specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ForSqliteHasName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder ForSqliteHasName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder builder, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder ForSqliteHasName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder builder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ForSqliteHasName (builder As IndexBuilder, name As String) As IndexBuilder" />
      <MemberSignature Language="F#" Value="static member ForSqliteHasName : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" Usage="Microsoft.EntityFrameworkCore.SqliteIndexBuilderExtensions.ForSqliteHasName (builder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"> The builder for the index being configured. </param>
        <param name="name"> The name of the index. </param>
        <summary>
                Configures the name of the index in the database when targeting SQLite.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
