<Type Name="RelationalElementTypeBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalElementTypeBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalElementTypeBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalElementTypeBuilderExtensions" />
  <TypeSignature Language="F#" Value="type RelationalElementTypeBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSetFixedLength">
      <MemberSignature Language="C#" Value="public static bool CanSetFixedLength (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder elementTypeBuilder, bool? fixedLength, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetFixedLength(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder elementTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; fixedLength, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.CanSetFixedLength(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetFixedLength (elementTypeBuilder As IConventionElementTypeBuilder, fixedLength As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetFixedLength : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder * Nullable&lt;bool&gt; * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.CanSetFixedLength (elementTypeBuilder, fixedLength, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder" RefType="this" />
        <Parameter Name="fixedLength" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementTypeBuilder"> builder for the elements being configured.</param>
        <param name="fixedLength">A value indicating whether the elements are constrained to fixed length values.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the elements can be configured as being fixed length or not.
            </summary>
        <returns>
          <see langword="true" /> if the elements can be configured as being fixed length or not.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetStoreType">
      <MemberSignature Language="C#" Value="public static bool CanSetStoreType (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder elementTypeBuilder, string? typeName, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetStoreType(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder elementTypeBuilder, string typeName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.CanSetStoreType(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetStoreType (elementTypeBuilder As IConventionElementTypeBuilder, typeName As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetStoreType : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.CanSetStoreType (elementTypeBuilder, typeName, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder" RefType="this" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementTypeBuilder"> builder for the elements being configured.</param>
        <param name="typeName">The name of the data type of the elements.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given data type can be set for the elements.
            </summary>
        <returns>
          <see langword="true" /> if the given data type can be set for the property.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasStoreType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder HasStoreType (this Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder elementTypeBuilder, string? typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder HasStoreType(class Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder elementTypeBuilder, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.HasStoreType(Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasStoreType (elementTypeBuilder As ElementTypeBuilder, typeName As String) As ElementTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasStoreType : Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.HasStoreType (elementTypeBuilder, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder" RefType="this" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementTypeBuilder">The builder for the elements being configured.</param>
        <param name="typeName">The name of the data type of the elements.</param>
        <summary>
                Configures the data type of the elements of the collection.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasStoreType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder? HasStoreType (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder elementTypeBuilder, string? typeName, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder HasStoreType(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder elementTypeBuilder, string typeName, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.HasStoreType(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasStoreType (elementTypeBuilder As IConventionElementTypeBuilder, typeName As String, Optional fromDataAnnotation As Boolean = false) As IConventionElementTypeBuilder" />
      <MemberSignature Language="F#" Value="static member HasStoreType : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.HasStoreType (elementTypeBuilder, typeName, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder" RefType="this" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementTypeBuilder"> builder for the elements being configured.</param>
        <param name="typeName">The name of the data type of the elements.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the data type of the elements of the collection.
            </summary>
        <returns>The same builder instance if the configuration was applied, <see langword="null" /> otherwise.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder IsFixedLength (this Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder elementTypeBuilder, bool fixedLength = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder IsFixedLength(class Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder elementTypeBuilder, bool fixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.IsFixedLength(Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsFixedLength (elementTypeBuilder As ElementTypeBuilder, Optional fixedLength As Boolean = true) As ElementTypeBuilder" />
      <MemberSignature Language="F#" Value="static member IsFixedLength : Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.IsFixedLength (elementTypeBuilder, fixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.ElementTypeBuilder" RefType="this" />
        <Parameter Name="fixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementTypeBuilder">The builder for the elements being configured.</param>
        <param name="fixedLength">A value indicating whether the elements are constrained to fixed length values.</param>
        <summary>
                Configures the elements as capable of storing only fixed-length data, such as strings.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder? IsFixedLength (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder elementTypeBuilder, bool? fixedLength, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder IsFixedLength(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder elementTypeBuilder, valuetype System.Nullable`1&lt;bool&gt; fixedLength, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.IsFixedLength(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsFixedLength (elementTypeBuilder As IConventionElementTypeBuilder, fixedLength As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As IConventionElementTypeBuilder" />
      <MemberSignature Language="F#" Value="static member IsFixedLength : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder * Nullable&lt;bool&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalElementTypeBuilderExtensions.IsFixedLength (elementTypeBuilder, fixedLength, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionElementTypeBuilder" RefType="this" />
        <Parameter Name="fixedLength" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementTypeBuilder"> builder for the elements being configured.</param>
        <param name="fixedLength">A value indicating whether the elements are constrained to fixed length values.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the elements as capable of storing only fixed-length data, such as strings.
            </summary>
        <returns>     The same builder instance if the configuration was applied, <see langword="null" /> otherwise.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
