<Type Name="CosmosIndexExtensions" FullName="Microsoft.EntityFrameworkCore.CosmosIndexExtensions">
  <TypeSignature Language="C#" Value="public static class CosmosIndexExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CosmosIndexExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.CosmosIndexExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CosmosIndexExtensions" />
  <TypeSignature Language="F#" Value="type CosmosIndexExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.Experimental("EF9103")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.Experimental("EF9103")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Index extension methods for Azure Cosmos DB-specific metadata.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see>, and
                <see href="https://aka.ms/efcore-docs-cosmos">Accessing Azure Cosmos DB with EF Core</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetVectorIndexType">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Cosmos.VectorIndexType? GetVectorIndexType (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Cosmos.VectorIndexType&gt; GetVectorIndexType(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosIndexExtensions.GetVectorIndexType(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVectorIndexType (index As IReadOnlyIndex) As Nullable(Of VectorIndexType)" />
      <MemberSignature Language="F#" Value="static member GetVectorIndexType : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex -&gt; Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt;" Usage="Microsoft.EntityFrameworkCore.CosmosIndexExtensions.GetVectorIndexType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the vector index type to use, such as "flat", "diskANN", or "quantizedFlat".
                See <see href="https://aka.ms/ef-cosmos-vectors">Vector Search in Azure Cosmos DB for NoSQL</see> for more information.
            </summary>
        <returns>The index type to use, or <see langword="null" /> if none is set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVectorIndexTypeConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetVectorIndexTypeConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetVectorIndexTypeConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosIndexExtensions.GetVectorIndexTypeConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVectorIndexTypeConfigurationSource (property As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetVectorIndexTypeConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.CosmosIndexExtensions.GetVectorIndexTypeConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property">The property.</param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the <see cref="M:Microsoft.EntityFrameworkCore.CosmosIndexExtensions.GetVectorIndexType(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)" />.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is clustered.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVectorIndexType">
      <MemberSignature Language="C#" Value="public static void SetVectorIndexType (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, Microsoft.Azure.Cosmos.VectorIndexType? indexType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetVectorIndexType(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Cosmos.VectorIndexType&gt; indexType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosIndexExtensions.SetVectorIndexType(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Nullable{Microsoft.Azure.Cosmos.VectorIndexType})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetVectorIndexType (index As IMutableIndex, indexType As Nullable(Of VectorIndexType))" />
      <MemberSignature Language="F#" Value="static member SetVectorIndexType : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.CosmosIndexExtensions.SetVectorIndexType (index, indexType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" />
        <Parameter Name="indexType" Type="System.Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt;" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="indexType">The index type to use.</param>
        <summary>
                Sets the vector index type to use, such as "flat", "diskANN", or "quantizedFlat".
                See <see href="https://aka.ms/ef-cosmos-vectors">Vector Search in Azure Cosmos DB for NoSQL</see> for more information.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVectorIndexType">
      <MemberSignature Language="C#" Value="public static string? SetVectorIndexType (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, Microsoft.Azure.Cosmos.VectorIndexType? indexType, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetVectorIndexType(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Cosmos.VectorIndexType&gt; indexType, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.CosmosIndexExtensions.SetVectorIndexType(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Nullable{Microsoft.Azure.Cosmos.VectorIndexType},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetVectorIndexType (index As IConventionIndex, indexType As Nullable(Of VectorIndexType), Optional fromDataAnnotation As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member SetVectorIndexType : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt; * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.CosmosIndexExtensions.SetVectorIndexType (index, indexType, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
        <Parameter Name="indexType" Type="System.Nullable&lt;Microsoft.Azure.Cosmos.VectorIndexType&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="indexType">The index type to use.</param>
        <param name="index">The index.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the vector index type to use, such as "flat", "diskANN", or "quantizedFlat".
                See <see href="https://aka.ms/ef-cosmos-vectors">Vector Search in Azure Cosmos DB for NoSQL</see> for more information.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
