<Type Name="RelationalIndexExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalIndexExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalIndexExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalIndexExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalIndexExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalIndexExtensions" />
  <TypeSignature Language="F#" Value="type RelationalIndexExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Index extension methods for relational database metadata.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="FindSharedObjectRootIndex">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionIndex FindSharedObjectRootIndex (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex FindSharedObjectRootIndex(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.FindSharedObjectRootIndex(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSharedObjectRootIndex (index As IConventionIndex, ByRef storeObject As StoreObjectIdentifier) As IConventionIndex" />
      <MemberSignature Language="F#" Value="static member FindSharedObjectRootIndex : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.FindSharedObjectRootIndex (index, storeObject)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionIndex? FindSharedObjectRootIndex (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the containing store object.</param>
        <summary>
          <para>
                    Finds the first <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" /> that is mapped to the same index in a shared table-like object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The index found, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSharedObjectRootIndex">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IIndex FindSharedObjectRootIndex (this Microsoft.EntityFrameworkCore.Metadata.IIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IIndex FindSharedObjectRootIndex(class Microsoft.EntityFrameworkCore.Metadata.IIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.FindSharedObjectRootIndex(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSharedObjectRootIndex (index As IIndex, ByRef storeObject As StoreObjectIdentifier) As IIndex" />
      <MemberSignature Language="F#" Value="static member FindSharedObjectRootIndex : Microsoft.EntityFrameworkCore.Metadata.IIndex * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IIndex" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.FindSharedObjectRootIndex (index, storeObject)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IIndex? FindSharedObjectRootIndex (this Microsoft.EntityFrameworkCore.Metadata.IIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the containing store object.</param>
        <summary>
          <para>
                    Finds the first <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" /> that is mapped to the same index in a shared table-like object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The index found, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSharedObjectRootIndex">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableIndex FindSharedObjectRootIndex (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex FindSharedObjectRootIndex(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.FindSharedObjectRootIndex(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSharedObjectRootIndex (index As IMutableIndex, ByRef storeObject As StoreObjectIdentifier) As IMutableIndex" />
      <MemberSignature Language="F#" Value="static member FindSharedObjectRootIndex : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.FindSharedObjectRootIndex (index, storeObject)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableIndex? FindSharedObjectRootIndex (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the containing store object.</param>
        <summary>
          <para>
                    Finds the first <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" /> that is mapped to the same index in a shared table-like object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The index found, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSharedObjectRootIndex">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex? FindSharedObjectRootIndex (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex FindSharedObjectRootIndex(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.FindSharedObjectRootIndex(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindSharedObjectRootIndex (index As IReadOnlyIndex, ByRef storeObject As StoreObjectIdentifier) As IReadOnlyIndex" />
      <MemberSignature Language="F#" Value="static member FindSharedObjectRootIndex : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex * StoreObjectIdentifier -&gt; Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.FindSharedObjectRootIndex (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the containing store object.</param>
        <summary>
          <para>
                    Finds the first <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IIndex" /> that is mapped to the same index in a shared table-like object.
                </para>
          <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
        </summary>
        <returns>The index found, or <see langword="null" /> if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseName">
      <MemberSignature Language="C#" Value="public static string GetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseName (index As IIndex) As String" />
      <MemberSignature Language="F#" Value="static member GetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDatabaseName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns the name of the index in the database.
            </summary>
        <returns> The name of the index in the database. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseName">
      <MemberSignature Language="C#" Value="public static string GetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseName (index As IReadOnlyIndex) As String" />
      <MemberSignature Language="F#" Value="static member GetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDatabaseName index" />
      <MemberSignature Language="C#" Value="public static string? GetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the name of the index in the database.
            </summary>
        <returns>The name of the index in the database.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseName">
      <MemberSignature Language="C#" Value="public static string GetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseName (index As IIndex, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IIndex * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDatabaseName (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <param name="storeObject"> The identifier of the store object. </param>
        <summary>
                Returns the name of the index in the database.
            </summary>
        <returns> The name of the index in the database. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseName">
      <MemberSignature Language="C#" Value="public static string? GetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseName (index As IReadOnlyIndex, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDatabaseName (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the store object.</param>
        <summary>
                Returns the name of the index in the database.
            </summary>
        <returns>The name of the index in the database.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseNameConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetDatabaseNameConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetDatabaseNameConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDatabaseNameConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDatabaseNameConfigurationSource (index As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetDatabaseNameConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDatabaseNameConfigurationSource index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the name of the index in the database.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the name of the index in the database.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultDatabaseName">
      <MemberSignature Language="C#" Value="public static string GetDefaultDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDefaultDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultDatabaseName (index As IIndex) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDefaultDatabaseName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns the default name that would be used for this index.
            </summary>
        <returns> The default name that would be used for this index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultDatabaseName">
      <MemberSignature Language="C#" Value="public static string GetDefaultDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" FrameworkAlternate="efcore-6.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDefaultDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultDatabaseName (index As IReadOnlyIndex) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDefaultDatabaseName index" />
      <MemberSignature Language="C#" Value="public static string? GetDefaultDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the default name that would be used for this index.
            </summary>
        <returns>The default name that would be used for this index.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultDatabaseName">
      <MemberSignature Language="C#" Value="public static string GetDefaultDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDefaultDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultDatabaseName (index As IIndex, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IIndex * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDefaultDatabaseName (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <param name="storeObject"> The identifier of the store object. </param>
        <summary>
                Returns the default name that would be used for this index.
            </summary>
        <returns> The default name that would be used for this index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultDatabaseName">
      <MemberSignature Language="C#" Value="public static string? GetDefaultDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDefaultDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultDatabaseName (index As IReadOnlyIndex, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDefaultDatabaseName (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the store object.</param>
        <summary>
                Returns the default name that would be used for this index.
            </summary>
        <returns>The default name that would be used for this index.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultName">
      <MemberSignature Language="C#" Value="public static string GetDefaultName (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultName(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDefaultName(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultName (index As IIndex) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultName : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetDefaultName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use GetDefaultDatabaseName() instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use GetDefaultDatabaseName() instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the default name that would be used for this index.
            </summary>
        <returns>The default name that would be used for this index.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilter">
      <MemberSignature Language="C#" Value="public static string GetFilter (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFilter(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetFilter(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFilter (index As IIndex) As String" />
      <MemberSignature Language="F#" Value="static member GetFilter : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetFilter index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns the index filter expression.
            </summary>
        <returns> The index filter expression. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilter">
      <MemberSignature Language="C#" Value="public static string? GetFilter (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFilter(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetFilter(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFilter (index As IReadOnlyIndex) As String" />
      <MemberSignature Language="F#" Value="static member GetFilter : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetFilter index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the index filter expression.
            </summary>
        <returns>The index filter expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilter">
      <MemberSignature Language="C#" Value="public static string GetFilter (this Microsoft.EntityFrameworkCore.Metadata.IIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFilter(class Microsoft.EntityFrameworkCore.Metadata.IIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetFilter(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFilter (index As IIndex, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetFilter : Microsoft.EntityFrameworkCore.Metadata.IIndex * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetFilter (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-5.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <param name="storeObject"> The identifier of the containing store object. </param>
        <summary>
                Returns the index filter expression.
            </summary>
        <returns> The index filter expression. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilter">
      <MemberSignature Language="C#" Value="public static string? GetFilter (this Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, in Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier storeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFilter(class Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex index, [in]valuetype Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier&amp; storeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetFilter(Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex,Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFilter (index As IReadOnlyIndex, ByRef storeObject As StoreObjectIdentifier) As String" />
      <MemberSignature Language="F#" Value="static member GetFilter : Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex * StoreObjectIdentifier -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetFilter (index, storeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IReadOnlyIndex" RefType="this" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="storeObject" Type="Microsoft.EntityFrameworkCore.Metadata.StoreObjectIdentifier" RefType="ref" Index="1" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="storeObject">The identifier of the containing store object.</param>
        <summary>
                Returns the index filter expression.
            </summary>
        <returns>The index filter expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilterConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetFilterConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetFilterConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetFilterConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFilterConfigurationSource (index As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetFilterConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetFilterConfigurationSource index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index filter expression.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the index filter expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappedTableIndexes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ITableIndex&gt; GetMappedTableIndexes (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ITableIndex&gt; GetMappedTableIndexes(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetMappedTableIndexes(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMappedTableIndexes (index As IIndex) As IEnumerable(Of ITableIndex)" />
      <MemberSignature Language="F#" Value="static member GetMappedTableIndexes : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.ITableIndex&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetMappedTableIndexes index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ITableIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Gets the table indexes to which the index is mapped.
            </summary>
        <returns>The table indexes to which the index is mapped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetName(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetName (index As IIndex) As String" />
      <MemberSignature Language="F#" Value="static member GetName : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use GetDatabaseName() instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use GetDatabaseName() instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Returns the name of the index in the database.
            </summary>
        <returns>The name of the index in the database.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNameConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetNameConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetNameConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetNameConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNameConfigurationSource (index As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetNameConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.GetNameConfigurationSource index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use GetDatabaseNameConfigurationSource() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use GetDatabaseNameConfigurationSource() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the name of the index in the database.
            </summary>
        <returns>The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the name of the index in the database.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDatabaseName">
      <MemberSignature Language="C#" Value="public static void SetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, string name);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetDatabaseName (index As IMutableIndex, name As String)" />
      <MemberSignature Language="F#" Value="static member SetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetDatabaseName (index, name)" />
      <MemberSignature Language="C#" Value="public static void SetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, string? name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="name">The value to set.</param>
        <summary>
                Sets the name of the index in the database.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDatabaseName">
      <MemberSignature Language="C#" Value="public static string SetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetDatabaseName (index As IConventionIndex, name As String, Optional fromDataAnnotation As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member SetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetDatabaseName (index, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static string? SetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="name">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the name of the index in the database.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFilter">
      <MemberSignature Language="C#" Value="public static void SetFilter (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, string value);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFilter(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetFilter(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetFilter (index As IMutableIndex, value As String)" />
      <MemberSignature Language="F#" Value="static member SetFilter : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetFilter (index, value)" />
      <MemberSignature Language="C#" Value="public static void SetFilter (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, string? value);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="value">The value to set.</param>
        <summary>
                Sets the index filter expression.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFilter">
      <MemberSignature Language="C#" Value="public static void SetFilter (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, string value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFilter(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, string value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetFilter(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetFilter (index As IConventionIndex, value As String, Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member SetFilter : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetFilter (index, value, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static string SetFilter (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, string value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SetFilter(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, string value, bool fromDataAnnotation) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetFilter (index As IConventionIndex, value As String, Optional fromDataAnnotation As Boolean = false) As String" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member SetFilter : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * string * bool -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetFilter (index, value, fromDataAnnotation)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="C#" Value="public static string? SetFilter (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, string? value, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="value">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the index filter expression.
            </summary>
        <returns>The configured value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public static void SetName (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, string name);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetName(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetName(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetName (index As IMutableIndex, name As String)" />
      <MemberSignature Language="F#" Value="static member SetName : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetName (index, name)" />
      <MemberSignature Language="C#" Value="public static void SetName (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, string? name);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use SetDatabaseName() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use SetDatabaseName() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="name">The value to set.</param>
        <summary>
                Sets the name of the index in the database.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public static void SetName (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetName(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetName(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetName (index As IConventionIndex, name As String, Optional fromDataAnnotation As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member SetName : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalIndexExtensions.SetName (index, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static void SetName (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use SetDatabaseName() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use SetDatabaseName() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="index">The index.</param>
        <param name="name">The value to set.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Sets the name of the index in the database.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
