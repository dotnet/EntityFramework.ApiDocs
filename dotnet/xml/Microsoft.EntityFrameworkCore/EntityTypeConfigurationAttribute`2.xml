<Type Name="EntityTypeConfigurationAttribute&lt;TConfiguration,TEntity&gt;" FullName="Microsoft.EntityFrameworkCore.EntityTypeConfigurationAttribute&lt;TConfiguration,TEntity&gt;">
  <TypeSignature Language="C#" Value="public sealed class EntityTypeConfigurationAttribute&lt;TConfiguration,TEntity&gt; : Microsoft.EntityFrameworkCore.EntityTypeConfigurationAttribute where TConfiguration : class, IEntityTypeConfiguration&lt;TEntity&gt; where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityTypeConfigurationAttribute`2&lt;class (class Microsoft.EntityFrameworkCore.IEntityTypeConfiguration`1&lt;!TEntity&gt;) TConfiguration, class TEntity&gt; extends Microsoft.EntityFrameworkCore.EntityTypeConfigurationAttribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.EntityTypeConfigurationAttribute`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityTypeConfigurationAttribute(Of TConfiguration, TEntity)&#xA;Inherits EntityTypeConfigurationAttribute" />
  <TypeSignature Language="F#" Value="type EntityTypeConfigurationAttribute&lt;'Configuration, 'Entity (requires 'Configuration : null and 'Configuration :&gt; IEntityTypeConfiguration&lt;'Entity&gt; and 'Entity : null)&gt; = class&#xA;    inherit EntityTypeConfigurationAttribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TConfiguration">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.EntityFrameworkCore.IEntityTypeConfiguration&lt;TEntity&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.EntityTypeConfigurationAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TConfiguration">The IEntityTypeConfiguration&lt;&gt; type to use.</typeparam>
    <typeparam name="TEntity">The entity type to be configured.</typeparam>
    <summary>
                Specifies the configuration type for the entity type.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityTypeConfigurationAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.EntityTypeConfigurationAttribute`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.EntityTypeConfigurationAttribute" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
