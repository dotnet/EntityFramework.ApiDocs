<Type Name="RelationalPrimitiveCollectionBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalPrimitiveCollectionBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalPrimitiveCollectionBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalPrimitiveCollectionBuilderExtensions" />
  <TypeSignature Language="F#" Value="type RelationalPrimitiveCollectionBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="HasColumnName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasColumnName (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasColumnName(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasColumnName (primitiveCollectionBuilder As PrimitiveCollectionBuilder, name As String) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasColumnName : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnName (primitiveCollectionBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="name">The name of the column.</param>
        <summary>
                Configures the column that the property maps to when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnName&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasColumnName&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasColumnName&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasColumnName(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty), name As String) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasColumnName : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnName (primitiveCollectionBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being configured.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="name">The name of the column.</param>
        <summary>
                Configures the column that the property maps to when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnOrder">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasColumnOrder (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, int? order);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasColumnOrder(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, valuetype System.Nullable`1&lt;int32&gt; order) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnOrder(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasColumnOrder (primitiveCollectionBuilder As PrimitiveCollectionBuilder, order As Nullable(Of Integer)) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasColumnOrder : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnOrder (primitiveCollectionBuilder, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
        <Parameter Name="order" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder of the property being configured.</param>
        <param name="order">The column order.</param>
        <summary>
                Configures the order of the column the property is mapped to.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnOrder&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasColumnOrder&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder, int? order);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasColumnOrder&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder, valuetype System.Nullable`1&lt;int32&gt; order) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnOrder``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasColumnOrder(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty), order As Nullable(Of Integer)) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasColumnOrder : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnOrder (primitiveCollectionBuilder, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
        <Parameter Name="order" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="primitiveCollectionBuilder">The builder of the property being configured.</param>
        <param name="order">The column order.</param>
        <summary>
                Configures the order of the column the property is mapped to.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasColumnType (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string? typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasColumnType(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasColumnType (primitiveCollectionBuilder As PrimitiveCollectionBuilder, typeName As String) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasColumnType : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnType (primitiveCollectionBuilder, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="typeName">The name of the data type of the column.</param>
        <summary>
                Configures the data type of the column that the property maps to when targeting a relational database.
                This should be the complete type name, including precision, scale, length, etc.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnType&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasColumnType&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder, string? typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasColumnType&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnType``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasColumnType(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty), typeName As String) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasColumnType : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasColumnType (primitiveCollectionBuilder, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being configured.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="typeName">The name of the data type of the column.</param>
        <summary>
                Configures the data type of the column that the property maps to when targeting a relational database.
                This should be the complete type name, including precision, scale, length, etc.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasComment">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasComment (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string? comment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasComment(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string comment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComment(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasComment (primitiveCollectionBuilder As PrimitiveCollectionBuilder, comment As String) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasComment : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComment (primitiveCollectionBuilder, comment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
        <Parameter Name="comment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="comment">The comment for the column.</param>
        <summary>
                Configures a comment to be applied to the column
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasComment&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasComment&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder, string? comment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasComment&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder, string comment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComment``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasComment(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty), comment As String) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasComment : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComment (primitiveCollectionBuilder, comment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
        <Parameter Name="comment" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being configured.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="comment">The comment for the column.</param>
        <summary>
                Configures a comment to be applied to the column
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasComputedColumnSql">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasComputedColumnSql(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasComputedColumnSql (primitiveCollectionBuilder As PrimitiveCollectionBuilder) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql primitiveCollectionBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <summary>
                Configures the property to map to a computed column when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
          <para>
                    When called with no arguments, this method tells EF that a column is computed without needing to
                    specify the actual SQL used to computed it. This can be useful when mapping EF to an existing
                    database.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasComputedColumnSql">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string? sql);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasComputedColumnSql(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasComputedColumnSql (primitiveCollectionBuilder As PrimitiveCollectionBuilder, sql As String) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql (primitiveCollectionBuilder, sql)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="sql">The SQL expression that computes values for the column.</param>
        <summary>
                Configures the property to map to a computed column when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasComputedColumnSql">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasComputedColumnSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string? sql, bool? stored);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasComputedColumnSql(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string sql, valuetype System.Nullable`1&lt;bool&gt; stored) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasComputedColumnSql (primitiveCollectionBuilder As PrimitiveCollectionBuilder, sql As String, stored As Nullable(Of Boolean)) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder * string * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql (primitiveCollectionBuilder, sql, stored)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="stored" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="sql">The SQL expression that computes values for the column.</param>
        <param name="stored">
                If <see langword="true" />, the computed value is calculated on row modification and stored in the database like a regular column.
                If <see langword="false" />, the value is computed when the value is read, and does not occupy any actual storage.
                <see langword="null" /> selects the database provider default.
            </param>
        <summary>
                Configures the property to map to a computed column when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasComputedColumnSql&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasComputedColumnSql&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasComputedColumnSql&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasComputedColumnSql(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty)) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql primitiveCollectionBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being configured.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <summary>
                Configures the property to map to a computed column when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
          <para>
                    When called with no arguments, this method tells EF that a column is computed without needing to
                    specify the actual SQL used to computed it. This can be useful when mapping EF to an existing
                    database.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasComputedColumnSql&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasComputedColumnSql&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder, string? sql);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasComputedColumnSql&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder, string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasComputedColumnSql(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty), sql As String) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql (primitiveCollectionBuilder, sql)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being configured.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="sql">The SQL expression that computes values for the column.</param>
        <summary>
                Configures the property to map to a computed column when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasComputedColumnSql&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasComputedColumnSql&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder, string? sql, bool? stored);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasComputedColumnSql&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder, string sql, valuetype System.Nullable`1&lt;bool&gt; stored) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0},System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasComputedColumnSql(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty), sql As String, stored As Nullable(Of Boolean)) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasComputedColumnSql : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; * string * Nullable&lt;bool&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasComputedColumnSql (primitiveCollectionBuilder, sql, stored)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="stored" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being configured.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="sql">The SQL expression that computes values for the column.</param>
        <param name="stored">
                If <see langword="true" />, the computed value is calculated on row modification and stored in the database like a regular column.
                If <see langword="false" />, the value is computed when the value is read, and does not occupy any actual storage.
                <see langword="null" /> selects the database provider default.
            </param>
        <summary>
                Configures the property to map to a computed column when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValue">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDefaultValue (primitiveCollectionBuilder As PrimitiveCollectionBuilder) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasDefaultValue : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValue primitiveCollectionBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <summary>
                Configures the default value for the column that the property maps
                to when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
          <para>
                    When called with no argument, this method tells EF that a column has a default
                    value constraint of some sort without needing to specify exactly what it is.
                    This can be useful when mapping EF to an existing database.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValue">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasDefaultValue (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDefaultValue (primitiveCollectionBuilder As PrimitiveCollectionBuilder, value As Object) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasDefaultValue : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValue (primitiveCollectionBuilder, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="value">The default value of the column.</param>
        <summary>
                Configures the default value for the column that the property maps
                to when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValue&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasDefaultValue&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasDefaultValue&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDefaultValue(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty)) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasDefaultValue : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValue primitiveCollectionBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being configured.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <summary>
                Configures the default value for the column that the property maps
                to when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
          <para>
                    When called with no argument, this method tells EF that a column has a default
                    value constraint of some sort without needing to specify exactly what it is.
                    This can be useful when mapping EF to an existing database.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValue&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasDefaultValue&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder, object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasDefaultValue&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDefaultValue(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty), value As Object) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasDefaultValue : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValue (primitiveCollectionBuilder, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being configured.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="value">The default value of the column.</param>
        <summary>
                Configures the default value for the column that the property maps
                to when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValueSql">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasDefaultValueSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasDefaultValueSql(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDefaultValueSql (primitiveCollectionBuilder As PrimitiveCollectionBuilder) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasDefaultValueSql : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValueSql primitiveCollectionBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <summary>
                Configures the default value expression for the column that the property maps to when targeting a
                relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
          <para>
                    When called with no argument, this method tells EF that a column has a default value constraint of
                    some sort without needing to specify exactly what it is. This can be useful when mapping EF to an
                    existing database.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValueSql">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasDefaultValueSql (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string? sql);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasDefaultValueSql(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDefaultValueSql (primitiveCollectionBuilder As PrimitiveCollectionBuilder, sql As String) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasDefaultValueSql : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValueSql (primitiveCollectionBuilder, sql)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="sql">The SQL expression for the default value of the column.</param>
        <summary>
                Configures the default value expression for the column that the property maps to when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValueSql&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasDefaultValueSql&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasDefaultValueSql&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDefaultValueSql(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty)) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasDefaultValueSql : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValueSql primitiveCollectionBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being configured.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <summary>
                Configures the default value expression for the column that the property maps to when targeting a
                relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
          <para>
                    When called with no argument, this method tells EF that a column has a default value constraint of
                    some sort without needing to specify exactly what it is. This can be useful when mapping EF to an
                    existing database.
                </para>
          <para>
                    See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValueSql&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasDefaultValueSql&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder, string? sql);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasDefaultValueSql&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder, string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDefaultValueSql(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty), sql As String) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasDefaultValueSql : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasDefaultValueSql (primitiveCollectionBuilder, sql)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being configured.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="sql">The SQL expression for the default value of the column.</param>
        <summary>
                Configures the default value expression for the column that the property maps to when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-default-values">Database default values</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasJsonPropertyName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasJsonPropertyName (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder HasJsonPropertyName(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasJsonPropertyName(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasJsonPropertyName (primitiveCollectionBuilder As PrimitiveCollectionBuilder, name As String) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasJsonPropertyName : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasJsonPropertyName (primitiveCollectionBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="name">JSON property name to be used.</param>
        <summary>
                Configures the property of an entity mapped to a JSON column, mapping the entity property to a specific JSON property,
                rather than using the entity property name.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasJsonPropertyName&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; HasJsonPropertyName&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; HasJsonPropertyName&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasJsonPropertyName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasJsonPropertyName(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty), name As String) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member HasJsonPropertyName : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.HasJsonPropertyName (primitiveCollectionBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="name">JSON property name to be used.</param>
        <summary>
                Configures the property of an entity mapped to a JSON column, mapping the entity property to a specific JSON property,
                rather than using the entity property name.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder IsFixedLength (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, bool fixedLength = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder IsFixedLength(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, bool fixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.IsFixedLength(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsFixedLength (primitiveCollectionBuilder As PrimitiveCollectionBuilder, Optional fixedLength As Boolean = true) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member IsFixedLength : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.IsFixedLength (primitiveCollectionBuilder, fixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
        <Parameter Name="fixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="fixedLength">A value indicating whether the property is constrained to fixed length values.</param>
        <summary>
                Configures the property as capable of storing only fixed-length data, such as strings.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; IsFixedLength&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder, bool fixedLength = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; IsFixedLength&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder, bool fixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.IsFixedLength``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsFixedLength(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty), Optional fixedLength As Boolean = true) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member IsFixedLength : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.IsFixedLength (primitiveCollectionBuilder, fixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
        <Parameter Name="fixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">The type of the property being configured.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="fixedLength">A value indicating whether the property is constrained to fixed length values.</param>
        <summary>
                Configures the property as capable of storing only fixed-length data, such as strings.
            </summary>
        <returns>The same builder instance so that multiple configuration calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCollation">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder UseCollation (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string? collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder UseCollation(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder primitiveCollectionBuilder, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.UseCollation(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseCollation (primitiveCollectionBuilder As PrimitiveCollectionBuilder, collation As String) As PrimitiveCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member UseCollation : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.UseCollation (primitiveCollectionBuilder, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="collation">The collation for the column.</param>
        <summary>
                Configures the property to use the given collation. The database column will be created with the given
                collation, and it will be used implicitly in all collation-sensitive operations.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-collations">Database collations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCollation&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; UseCollation&lt;TProperty&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt; primitiveCollectionBuilder, string? collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; UseCollation&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder`1&lt;!!TProperty&gt; primitiveCollectionBuilder, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.UseCollation``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseCollation(Of TProperty) (primitiveCollectionBuilder As PrimitiveCollectionBuilder(Of TProperty), collation As String) As PrimitiveCollectionBuilder(Of TProperty)" />
      <MemberSignature Language="F#" Value="static member UseCollation : Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;'Property&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalPrimitiveCollectionBuilderExtensions.UseCollation (primitiveCollectionBuilder, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="primitiveCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.PrimitiveCollectionBuilder&lt;TProperty&gt;" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="primitiveCollectionBuilder">The builder for the property being configured.</param>
        <param name="collation">The collation for the column.</param>
        <summary>
                Configures the property to use the given collation. The database column will be created with the given
                collation, and it will be used implicitly in all collation-sensitive operations.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-collations">Database collations</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
