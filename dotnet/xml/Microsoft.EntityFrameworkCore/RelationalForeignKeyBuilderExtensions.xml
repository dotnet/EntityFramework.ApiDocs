<Type Name="RelationalForeignKeyBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalForeignKeyBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalForeignKeyBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalForeignKeyBuilderExtensions" />
  <TypeSignature Language="F#" Value="type RelationalForeignKeyBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Relational database specific extension methods for relationship builders.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSetConstraintName">
      <MemberSignature Language="C#" Value="public static bool CanSetConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationship, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetConstraintName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationship, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.CanSetConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetConstraintName (relationship As IConventionForeignKeyBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.CanSetConstraintName (relationship, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static bool CanSetConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationship, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationship" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="relationship">The builder being used to configure the relationship.</param>
        <param name="name">The name of the foreign key constraint.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the foreign key constraint name can be set for this relationship
                from the current configuration source
            </summary>
        <returns>
          <see langword="true" /> if the configuration can be applied.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetConstraintName">
      <MemberSignature Language="C#" Value="public static bool CanSetConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationship, string name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetConstraintName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationship, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.CanSetConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetConstraintName (relationship As IConventionRelationshipBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.CanSetConstraintName (relationship, name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationship" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationship"> The builder being used to configure the relationship. </param>
        <param name="name"> The name of the foreign key constraint. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Returns a value indicating whether the foreign key constraint name can be set for this relationship
                from the current configuration source
            </summary>
        <returns>
          <c>true</c> if the configuration can be applied. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstraintName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder HasConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder ownershipBuilder, string name);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder HasConstraintName(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder ownershipBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasConstraintName (ownershipBuilder As OwnershipBuilder, name As String) As OwnershipBuilder" />
      <MemberSignature Language="F#" Value="static member HasConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName (ownershipBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder HasConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder ownershipBuilder, string? name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownershipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ownershipBuilder">The builder being used to configure the relationship.</param>
        <param name="name">The name of the foreign key constraint.</param>
        <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstraintName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder HasConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder referenceCollectionBuilder, string name);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder HasConstraintName(class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder referenceCollectionBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasConstraintName (referenceCollectionBuilder As ReferenceCollectionBuilder, name As String) As ReferenceCollectionBuilder" />
      <MemberSignature Language="F#" Value="static member HasConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName (referenceCollectionBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder HasConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder referenceCollectionBuilder, string? name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referenceCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="referenceCollectionBuilder">The builder being used to configure the relationship.</param>
        <param name="name">The name of the foreign key constraint.</param>
        <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstraintName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder referenceReferenceBuilder, string name);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasConstraintName(class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder referenceReferenceBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasConstraintName (referenceReferenceBuilder As ReferenceReferenceBuilder, name As String) As ReferenceReferenceBuilder" />
      <MemberSignature Language="F#" Value="static member HasConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName (referenceReferenceBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder HasConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder referenceReferenceBuilder, string? name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referenceReferenceBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="referenceReferenceBuilder">The builder being used to configure the relationship.</param>
        <param name="name">The name of the foreign key constraint.</param>
        <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstraintName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder HasConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationship, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder HasConstraintName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationship, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasConstraintName (relationship As IConventionForeignKeyBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As IConventionForeignKeyBuilder" />
      <MemberSignature Language="F#" Value="static member HasConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName (relationship, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder? HasConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder relationship, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationship" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionForeignKeyBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="relationship">The builder being used to configure the relationship.</param>
        <param name="name">The name of the foreign key constraint.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstraintName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder HasConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationship, string name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder HasConstraintName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationship, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasConstraintName (relationship As IConventionRelationshipBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As IConventionRelationshipBuilder" />
      <MemberSignature Language="F#" Value="static member HasConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName (relationship, name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationship" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationship"> The builder being used to configure the relationship. </param>
        <param name="name"> The name of the foreign key constraint. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstraintName&lt;TEntity,TDependentEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder&lt;TEntity,TDependentEntity&gt; HasConstraintName&lt;TEntity,TDependentEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder&lt;TEntity,TDependentEntity&gt; ownershipBuilder, string name) where TEntity : class where TDependentEntity : class;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; HasConstraintName&lt;class TEntity, class TDependentEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; ownershipBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder{``0,``1},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasConstraintName(Of TEntity As Class, TDependentEntity As Class) (ownershipBuilder As OwnershipBuilder(Of TEntity, TDependentEntity), name As String) As OwnershipBuilder(Of TEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="static member HasConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; (requires 'Entity : null and 'DependentEntity : null)" Usage="Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName (ownershipBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder&lt;TEntity,TDependentEntity&gt; HasConstraintName&lt;TEntity,TDependentEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder&lt;TEntity,TDependentEntity&gt; ownershipBuilder, string? name) where TEntity : class where TDependentEntity : class;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder&lt;TEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TDependentEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ownershipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.OwnershipBuilder&lt;TEntity,TDependentEntity&gt;" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">The entity type on one end of the relationship.</typeparam>
        <typeparam name="TDependentEntity">The entity type on the other end of the relationship.</typeparam>
        <param name="ownershipBuilder">The builder being used to configure the relationship.</param>
        <param name="name">The name of the foreign key constraint.</param>
        <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstraintName&lt;TEntity,TRelatedEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;TEntity,TRelatedEntity&gt; HasConstraintName&lt;TEntity,TRelatedEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;TEntity,TRelatedEntity&gt; referenceCollectionBuilder, string name) where TEntity : class where TRelatedEntity : class;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2&lt;!!TEntity, !!TRelatedEntity&gt; HasConstraintName&lt;class TEntity, class TRelatedEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2&lt;!!TEntity, !!TRelatedEntity&gt; referenceCollectionBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder{``0,``1},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasConstraintName(Of TEntity As Class, TRelatedEntity As Class) (referenceCollectionBuilder As ReferenceCollectionBuilder(Of TEntity, TRelatedEntity), name As String) As ReferenceCollectionBuilder(Of TEntity, TRelatedEntity)" />
      <MemberSignature Language="F#" Value="static member HasConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt; (requires 'Entity : null and 'RelatedEntity : null)" Usage="Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName (referenceCollectionBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;TEntity,TRelatedEntity&gt; HasConstraintName&lt;TEntity,TRelatedEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;TEntity,TRelatedEntity&gt; referenceCollectionBuilder, string? name) where TEntity : class where TRelatedEntity : class;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;TEntity,TRelatedEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TRelatedEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="referenceCollectionBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;TEntity,TRelatedEntity&gt;" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">The principal entity type in this relationship.</typeparam>
        <typeparam name="TRelatedEntity">The dependent entity type in this relationship.</typeparam>
        <param name="referenceCollectionBuilder">The builder being used to configure the relationship.</param>
        <param name="name">The name of the foreign key constraint.</param>
        <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstraintName&lt;TEntity,TRelatedEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity,TRelatedEntity&gt; HasConstraintName&lt;TEntity,TRelatedEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity,TRelatedEntity&gt; referenceReferenceBuilder, string name) where TEntity : class where TRelatedEntity : class;" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2&lt;!!TEntity, !!TRelatedEntity&gt; HasConstraintName&lt;class TEntity, class TRelatedEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2&lt;!!TEntity, !!TRelatedEntity&gt; referenceReferenceBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasConstraintName(Of TEntity As Class, TRelatedEntity As Class) (referenceReferenceBuilder As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity), name As String) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)" />
      <MemberSignature Language="F#" Value="static member HasConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt; (requires 'Entity : null and 'RelatedEntity : null)" Usage="Microsoft.EntityFrameworkCore.RelationalForeignKeyBuilderExtensions.HasConstraintName (referenceReferenceBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity,TRelatedEntity&gt; HasConstraintName&lt;TEntity,TRelatedEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity,TRelatedEntity&gt; referenceReferenceBuilder, string? name) where TEntity : class where TRelatedEntity : class;" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity,TRelatedEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TRelatedEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="referenceReferenceBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity,TRelatedEntity&gt;" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">The entity type on one end of the relationship.</typeparam>
        <typeparam name="TRelatedEntity">The entity type on the other end of the relationship.</typeparam>
        <param name="referenceReferenceBuilder">The builder being used to configure the relationship.</param>
        <param name="name">The name of the foreign key constraint.</param>
        <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-modeling">Modeling entity types and relationships</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
