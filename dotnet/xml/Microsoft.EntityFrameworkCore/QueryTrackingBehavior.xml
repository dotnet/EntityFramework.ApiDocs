<Type Name="QueryTrackingBehavior" FullName="Microsoft.EntityFrameworkCore.QueryTrackingBehavior">
  <TypeSignature Language="C#" Value="public enum QueryTrackingBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed QueryTrackingBehavior extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.QueryTrackingBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Enum QueryTrackingBehavior" />
  <TypeSignature Language="F#" Value="type QueryTrackingBehavior = " />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
                Indicates how the results of a query are tracked by the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-query-tracking">Tracking vs. no-tracking queries in EF Core</see> for more information and
                examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="NoTracking">
      <MemberSignature Language="C#" Value="NoTracking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.EntityFrameworkCore.QueryTrackingBehavior NoTracking = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.QueryTrackingBehavior.NoTracking" />
      <MemberSignature Language="VB.NET" Value="NoTracking" />
      <MemberSignature Language="F#" Value="NoTracking = 1" Usage="Microsoft.EntityFrameworkCore.QueryTrackingBehavior.NoTracking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.QueryTrackingBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
                The change tracker will not track any of the entities that are returned from a LINQ query. If the
                entity instances are modified, this will not be detected by the change tracker and
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> will not persist those changes to the database.
            </summary>
        <remarks>
          <para>
                    Disabling change tracking is useful for read-only scenarios because it avoids the overhead of setting
                    up change tracking for each entity instance. You should not disable change tracking if you want to
                    manipulate entity instances and persist those changes to the database using
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
                </para>
          <para>
                    Identity resolution will not be performed. If an entity with a given key is in different result in the result set
                    then they will be different instances.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoTrackingWithIdentityResolution">
      <MemberSignature Language="C#" Value="NoTrackingWithIdentityResolution" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.EntityFrameworkCore.QueryTrackingBehavior NoTrackingWithIdentityResolution = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.QueryTrackingBehavior.NoTrackingWithIdentityResolution" />
      <MemberSignature Language="VB.NET" Value="NoTrackingWithIdentityResolution" />
      <MemberSignature Language="F#" Value="NoTrackingWithIdentityResolution = 2" Usage="Microsoft.EntityFrameworkCore.QueryTrackingBehavior.NoTrackingWithIdentityResolution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.QueryTrackingBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
                The change tracker will not track any of the entities that are returned from a LINQ query. If the
                entity instances are modified, this will not be detected by the change tracker and
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> will not persist those changes to the database.
            </summary>
        <remarks>
          <para>
                    Disabling change tracking is useful for read-only scenarios because it avoids the overhead of setting
                    up change tracking for each entity instance. You should not disable change tracking if you want to
                    manipulate entity instances and persist those changes to the database using
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
                </para>
          <para>
                    Identity resolution will be performed to ensure that all occurrences of an entity with a given key
                    in the result set are represented by the same entity instance.
                </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackAll">
      <MemberSignature Language="C#" Value="TrackAll" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.EntityFrameworkCore.QueryTrackingBehavior TrackAll = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.QueryTrackingBehavior.TrackAll" />
      <MemberSignature Language="VB.NET" Value="TrackAll" />
      <MemberSignature Language="F#" Value="TrackAll = 0" Usage="Microsoft.EntityFrameworkCore.QueryTrackingBehavior.TrackAll" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.QueryTrackingBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
                The change tracker will keep track of changes for all entities that are returned from a LINQ query.
                Any modification to the entity instances will be detected and persisted to the database during
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>
