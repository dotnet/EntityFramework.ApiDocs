<Type Name="SqlServerTableBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.SqlServerTableBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class SqlServerTableBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlServerTableBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServerTableBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SqlServerTableBuilderExtensions" />
  <TypeSignature Language="F#" Value="type SqlServerTableBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                SQL Server specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsTemporal">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder IsTemporal (this Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder tableBuilder, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder&gt; buildAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder IsTemporal(class Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder tableBuilder, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerTableBuilderExtensions.IsTemporal(Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsTemporal (tableBuilder As TableBuilder, buildAction As Action(Of TemporalTableBuilder)) As TableBuilder" />
      <MemberSignature Language="F#" Value="static member IsTemporal : Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerTableBuilderExtensions.IsTemporal (tableBuilder, buildAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder" RefType="this" />
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="tableBuilder">The builder for the table being configured.</param>
        <param name="buildAction">An action that performs configuration of the temporal table.</param>
        <summary>
                Configures the table as temporal.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-temporal">Using SQL Server temporal tables with EF Core</see>
                for more information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporal">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder IsTemporal (this Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder tableBuilder, bool temporal = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder IsTemporal(class Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder tableBuilder, bool temporal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerTableBuilderExtensions.IsTemporal(Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsTemporal (tableBuilder As TableBuilder, Optional temporal As Boolean = true) As TemporalTableBuilder" />
      <MemberSignature Language="F#" Value="static member IsTemporal : Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder" Usage="Microsoft.EntityFrameworkCore.SqlServerTableBuilderExtensions.IsTemporal (tableBuilder, temporal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder" RefType="this" />
        <Parameter Name="temporal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tableBuilder">The builder for the table being configured.</param>
        <param name="temporal">A value indicating whether the table is temporal.</param>
        <summary>
                Configures the table as temporal.
            </summary>
        <returns>An object that can be used to configure the temporal table.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-temporal">Using SQL Server temporal tables with EF Core</see>
                for more information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporal&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder&lt;TEntity&gt; IsTemporal&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder&lt;TEntity&gt; tableBuilder, Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder&lt;TEntity&gt;&gt; buildAction) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder`1&lt;!!TEntity&gt; IsTemporal&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder`1&lt;!!TEntity&gt; tableBuilder, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder`1&lt;!!TEntity&gt;&gt; buildAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerTableBuilderExtensions.IsTemporal``1(Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder{``0},System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsTemporal(Of TEntity As Class) (tableBuilder As TableBuilder(Of TEntity), buildAction As Action(Of TemporalTableBuilder(Of TEntity))) As TableBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member IsTemporal : Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder&lt;'Entity (requires 'Entity : null)&gt; * Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder&lt;'Entity&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.SqlServerTableBuilderExtensions.IsTemporal (tableBuilder, buildAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="tableBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder&lt;TEntity&gt;" RefType="this" />
        <Parameter Name="buildAction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder&lt;TEntity&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">The entity type being configured.</typeparam>
        <param name="tableBuilder">The builder for the table being configured.</param>
        <param name="buildAction">An action that performs configuration of the temporal table.</param>
        <summary>
                Configures the table as temporal.
            </summary>
        <returns>The same builder instance so that multiple calls can be chained.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-temporal">Using SQL Server temporal tables with EF Core</see>
                for more information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporal&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder&lt;TEntity&gt; IsTemporal&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder&lt;TEntity&gt; tableBuilder, bool temporal = true) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder`1&lt;!!TEntity&gt; IsTemporal&lt;class TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder`1&lt;!!TEntity&gt; tableBuilder, bool temporal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerTableBuilderExtensions.IsTemporal``1(Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsTemporal(Of TEntity As Class) (tableBuilder As TableBuilder(Of TEntity), Optional temporal As Boolean = true) As TemporalTableBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member IsTemporal : Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder&lt;'Entity (requires 'Entity : null)&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="Microsoft.EntityFrameworkCore.SqlServerTableBuilderExtensions.IsTemporal (tableBuilder, temporal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.TemporalTableBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="tableBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.TableBuilder&lt;TEntity&gt;" RefType="this" />
        <Parameter Name="temporal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">The entity type being configured.</typeparam>
        <param name="tableBuilder">The builder for the table being configured.</param>
        <param name="temporal">A value indicating whether the table is temporal.</param>
        <summary>
                Configures the table as temporal.
            </summary>
        <returns>An object that can be used to configure the temporal table.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-temporal">Using SQL Server temporal tables with EF Core</see>
                for more information.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
