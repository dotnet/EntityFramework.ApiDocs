<Type Name="RelationalIndexBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalIndexBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalIndexBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalIndexBuilderExtensions" />
  <TypeSignature Language="F#" Value="type RelationalIndexBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" />.
            </summary>
    <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information and examples.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSetDatabaseName">
      <MemberSignature Language="C#" Value="public static bool CanSetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.CanSetDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetDatabaseName (indexBuilder As IConventionIndexBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetDatabaseName : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.CanSetDatabaseName (indexBuilder, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static bool CanSetDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="name">The name of the index.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given name can be set for the index.
            </summary>
        <returns>
          <see langword="true" /> if the given name can be set for the index.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetFilter">
      <MemberSignature Language="C#" Value="public static bool CanSetFilter (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string sql, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetFilter(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string sql, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.CanSetFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetFilter (indexBuilder As IConventionIndexBuilder, sql As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetFilter : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.CanSetFilter (indexBuilder, sql, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static bool CanSetFilter (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string? sql, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sql" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="sql">The filter expression for the index.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given expression can be set as the filter for the index.
            </summary>
        <returns>
          <see langword="true" /> if the given name can be set for the index.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSetName">
      <MemberSignature Language="C#" Value="public static bool CanSetName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.CanSetName(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetName (indexBuilder As IConventionIndexBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetName : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.CanSetName (indexBuilder, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static bool CanSetName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use CanSetDatabaseName() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use CanSetDatabaseName() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="name">The name of the index.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Returns a value indicating whether the given name can be set for the index.
            </summary>
        <returns>
          <see langword="true" /> if the given name can be set for the index.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDatabaseName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder HasDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, string name);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder HasDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDatabaseName (indexBuilder As IndexBuilder, name As String) As IndexBuilder" />
      <MemberSignature Language="F#" Value="static member HasDatabaseName : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName (indexBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder HasDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, string? name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="name">The name of the index.</param>
        <summary>
                Configures the name of the index in the database when targeting a relational database.
            </summary>
        <returns>A builder to further configure the index.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDatabaseName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder HasDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder HasDatabaseName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDatabaseName (indexBuilder As IConventionIndexBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As IConventionIndexBuilder" />
      <MemberSignature Language="F#" Value="static member HasDatabaseName : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName (indexBuilder, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder? HasDatabaseName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="name">The name of the index.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the name of the index in the database when targeting a relational database.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDatabaseName&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; HasDatabaseName&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; indexBuilder, string name);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; HasDatabaseName&lt;TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; indexBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasDatabaseName(Of TEntity) (indexBuilder As IndexBuilder(Of TEntity), name As String) As IndexBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasDatabaseName : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasDatabaseName (indexBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; HasDatabaseName&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; indexBuilder, string? name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">The entity type being configured.</typeparam>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="name">The name of the index.</param>
        <summary>
                Configures the name of the index in the database when targeting a relational database.
            </summary>
        <returns>A builder to further configure the index.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder HasFilter (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, string sql);" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder HasFilter(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasFilter (indexBuilder As IndexBuilder, sql As String) As IndexBuilder" />
      <MemberSignature Language="F#" Value="static member HasFilter : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter (indexBuilder, sql)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder HasFilter (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, string? sql);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sql" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="sql">The filter expression for the index.</param>
        <summary>
                Configures the filter expression for the index.
            </summary>
        <returns>A builder to further configure the index.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder HasFilter (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string sql, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder HasFilter(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string sql, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasFilter (indexBuilder As IConventionIndexBuilder, sql As String, Optional fromDataAnnotation As Boolean = false) As IConventionIndexBuilder" />
      <MemberSignature Language="F#" Value="static member HasFilter : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter (indexBuilder, sql, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder? HasFilter (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string? sql, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sql" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="sql">The filter expression for the index.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the filter expression for the index.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFilter&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; HasFilter&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; indexBuilder, string sql);" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; HasFilter&lt;TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; indexBuilder, string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasFilter(Of TEntity) (indexBuilder As IndexBuilder(Of TEntity), sql As String) As IndexBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasFilter : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasFilter (indexBuilder, sql)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; HasFilter&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; indexBuilder, string? sql);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="sql" Type="System.String" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">The entity type being configured.</typeparam>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="sql">The filter expression for the index.</param>
        <summary>
                Configures the filter expression for the index.
            </summary>
        <returns>A builder to further configure the index.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder HasName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, string name);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder HasName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasName (indexBuilder As IndexBuilder, name As String) As IndexBuilder" />
      <MemberSignature Language="F#" Value="static member HasName : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName (indexBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder HasName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder indexBuilder, string? name);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
          <AttributeName Language="C#">[System.Obsolete("Use HasDatabaseName() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use HasDatabaseName() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="name">The name of the index.</param>
        <summary>
                Configures the name of the index in the database when targeting a relational database.
            </summary>
        <returns>A builder to further configure the index.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information and examples.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder HasName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder HasName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasName (indexBuilder As IConventionIndexBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As IConventionIndexBuilder" />
      <MemberSignature Language="F#" Value="static member HasName : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName (indexBuilder, name, fromDataAnnotation)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder? HasName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string? name, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use HasDatabaseName() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use HasDatabaseName() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" RefType="this" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="name">The name of the index.</param>
        <param name="fromDataAnnotation">Indicates whether the configuration was specified using a data annotation.</param>
        <summary>
                Configures the name of the index in the database when targeting a relational database.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <see langword="null" /> otherwise.
            </returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasName&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; HasName&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; indexBuilder, string name);" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; HasName&lt;TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder`1&lt;!!TEntity&gt; indexBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasName(Of TEntity) (indexBuilder As IndexBuilder(Of TEntity), name As String) As IndexBuilder(Of TEntity)" />
      <MemberSignature Language="F#" Value="static member HasName : Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;'Entity&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName (indexBuilder, name)" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; HasName&lt;TEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt; indexBuilder, string? name);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete("Use HasDatabaseName() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use HasDatabaseName() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder&lt;TEntity&gt;" RefType="this" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">The entity type being configured.</typeparam>
        <param name="indexBuilder">The builder for the index being configured.</param>
        <param name="name">The name of the index.</param>
        <summary>
                Configures the name of the index in the database when targeting a relational database.
            </summary>
        <returns>A builder to further configure the index.</returns>
        <remarks>
                See <see href="https://aka.ms/efcore-docs-indexes">Indexes</see> for more information.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
