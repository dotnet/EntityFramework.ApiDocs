<Type Name="SqliteNetTopologySuiteTypeMappingSourcePlugin" FullName="Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteNetTopologySuiteTypeMappingSourcePlugin">
  <TypeSignature Language="C#" Value="public class SqliteNetTopologySuiteTypeMappingSourcePlugin : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSourcePlugin" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqliteNetTopologySuiteTypeMappingSourcePlugin extends System.Object implements class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSourcePlugin" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteNetTopologySuiteTypeMappingSourcePlugin" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteNetTopologySuiteTypeMappingSourcePlugin&#xA;Implements IRelationalTypeMappingSourcePlugin" />
  <TypeSignature Language="F#" Value="type SqliteNetTopologySuiteTypeMappingSourcePlugin = class&#xA;    interface IRelationalTypeMappingSourcePlugin" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite.NetTopologySuite</AssemblyName>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSourcePlugin</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteNetTopologySuiteTypeMappingSourcePlugin (GeoAPI.IGeometryServices geometryServices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class GeoAPI.IGeometryServices geometryServices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteNetTopologySuiteTypeMappingSourcePlugin.#ctor(GeoAPI.IGeometryServices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (geometryServices As IGeometryServices)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteNetTopologySuiteTypeMappingSourcePlugin : GeoAPI.IGeometryServices -&gt; Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteNetTopologySuiteTypeMappingSourcePlugin" Usage="new Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteNetTopologySuiteTypeMappingSourcePlugin geometryServices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite.NetTopologySuite</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="geometryServices" Type="GeoAPI.IGeometryServices" Index="0" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="geometryServices">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteNetTopologySuiteTypeMappingSourcePlugin (NetTopologySuite.NtsGeometryServices geometryServices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class NetTopologySuite.NtsGeometryServices geometryServices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteNetTopologySuiteTypeMappingSourcePlugin.#ctor(NetTopologySuite.NtsGeometryServices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (geometryServices As NtsGeometryServices)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteNetTopologySuiteTypeMappingSourcePlugin : NetTopologySuite.NtsGeometryServices -&gt; Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteNetTopologySuiteTypeMappingSourcePlugin" Usage="new Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteNetTopologySuiteTypeMappingSourcePlugin geometryServices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite.NetTopologySuite</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="geometryServices" Type="NetTopologySuite.NtsGeometryServices" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="geometryServices">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMapping">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping (in Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo mappingInfo);" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping([in]valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo mappingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteNetTopologySuiteTypeMappingSourcePlugin.FindMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindMapping (mappingInfo As RelationalTypeMappingInfo) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member FindMapping : RelationalTypeMappingInfo -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&#xA;override this.FindMapping : RelationalTypeMappingInfo -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="sqliteNetTopologySuiteTypeMappingSourcePlugin.FindMapping mappingInfo" />
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? FindMapping (in Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo? mappingInfo);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSourcePlugin.FindMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite.NetTopologySuite</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappingInfo" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-3.0;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mappingInfo">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
