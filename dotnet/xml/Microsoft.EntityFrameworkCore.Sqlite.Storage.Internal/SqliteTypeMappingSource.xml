<Type Name="SqliteTypeMappingSource" FullName="Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteTypeMappingSource">
  <TypeSignature Language="C#" Value="public class SqliteTypeMappingSource : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqliteTypeMappingSource extends Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteTypeMappingSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteTypeMappingSource&#xA;Inherits RelationalTypeMappingSource" />
  <TypeSignature Language="F#" Value="type SqliteTypeMappingSource = class&#xA;    inherit RelationalTypeMappingSource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteTypeMappingSource (Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies dependencies, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies relationalDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies dependencies, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies relationalDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteTypeMappingSource.#ctor(Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As TypeMappingSourceDependencies, relationalDependencies As RelationalTypeMappingSourceDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteTypeMappingSource : Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies -&gt; Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteTypeMappingSource" Usage="new Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteTypeMappingSource (dependencies, relationalDependencies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies" />
        <Parameter Name="relationalDependencies" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="relationalDependencies">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMapping">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping (in Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo mappingInfo);" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping([in]valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo mappingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteTypeMappingSource.FindMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FindMapping (mappingInfo As RelationalTypeMappingInfo) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.FindMapping : RelationalTypeMappingInfo -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="sqliteTypeMappingSource.FindMapping mappingInfo" />
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping? FindMapping (in Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo? mappingInfo);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappingInfo" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-3.0;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mappingInfo">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpatialiteType">
      <MemberSignature Language="C#" Value="public static bool IsSpatialiteType (string columnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSpatialiteType(string columnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteTypeMappingSource.IsSpatialiteType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSpatialiteType (columnType As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsSpatialiteType : string -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteTypeMappingSource.IsSpatialiteType columnType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnType" Type="System.String" Index="0" FrameworkAlternate="efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="columnType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
