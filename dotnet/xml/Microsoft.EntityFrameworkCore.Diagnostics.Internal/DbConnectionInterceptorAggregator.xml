<Type Name="DbConnectionInterceptorAggregator" FullName="Microsoft.EntityFrameworkCore.Diagnostics.Internal.DbConnectionInterceptorAggregator">
  <TypeSignature Language="C#" Value="public class DbConnectionInterceptorAggregator : Microsoft.EntityFrameworkCore.Diagnostics.InterceptorAggregator&lt;Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbConnectionInterceptorAggregator extends Microsoft.EntityFrameworkCore.Diagnostics.InterceptorAggregator`1&lt;class Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.Internal.DbConnectionInterceptorAggregator" />
  <TypeSignature Language="VB.NET" Value="Public Class DbConnectionInterceptorAggregator&#xA;Inherits InterceptorAggregator(Of IDbConnectionInterceptor)" />
  <TypeSignature Language="F#" Value="type DbConnectionInterceptorAggregator = class&#xA;    inherit InterceptorAggregator&lt;IDbConnectionInterceptor&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.InterceptorAggregator&lt;Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbConnectionInterceptorAggregator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.DbConnectionInterceptorAggregator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChain">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor CreateChain (System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor&gt; interceptors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor CreateChain(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor&gt; interceptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.DbConnectionInterceptorAggregator.CreateChain(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChain (interceptors As IEnumerable(Of IDbConnectionInterceptor)) As IDbConnectionInterceptor" />
      <MemberSignature Language="F#" Value="override this.CreateChain : seq&lt;Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor&gt; -&gt; Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor" Usage="dbConnectionInterceptorAggregator.CreateChain interceptors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interceptors" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Diagnostics.IDbConnectionInterceptor&gt;" />
      </Parameters>
      <Docs>
        <param name="interceptors">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
