<Type Name="DelegatingDbContextLogger" FullName="Microsoft.EntityFrameworkCore.Diagnostics.Internal.DelegatingDbContextLogger">
  <TypeSignature Language="C#" Value="public class DelegatingDbContextLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelegatingDbContextLogger extends System.Object implements class Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.Internal.DelegatingDbContextLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class DelegatingDbContextLogger&#xA;Implements IDbContextLogger" />
  <TypeSignature Language="F#" Value="type DelegatingDbContextLogger = class&#xA;    interface IDbContextLogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelegatingDbContextLogger (Action&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventData&gt; logger, Func&lt;Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel,bool&gt; filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;class Microsoft.EntityFrameworkCore.Diagnostics.EventData&gt; logger, class System.Func`3&lt;valuetype Microsoft.Extensions.Logging.EventId, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.DelegatingDbContextLogger.#ctor(System.Action{Microsoft.EntityFrameworkCore.Diagnostics.EventData},System.Func{Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logger As Action(Of EventData), filter As Func(Of EventId, LogLevel, Boolean))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.Internal.DelegatingDbContextLogger : Action&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventData&gt; * Func&lt;Microsoft.Extensions.Logging.EventId, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.EntityFrameworkCore.Diagnostics.Internal.DelegatingDbContextLogger" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.Internal.DelegatingDbContextLogger (logger, filter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logger" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Diagnostics.EventData&gt;" />
        <Parameter Name="filter" Type="System.Func&lt;Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <param name="filter">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual void Log (Microsoft.EntityFrameworkCore.Diagnostics.EventData eventData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log(class Microsoft.EntityFrameworkCore.Diagnostics.EventData eventData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.DelegatingDbContextLogger.Log(Microsoft.EntityFrameworkCore.Diagnostics.EventData)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Log (eventData As EventData)" />
      <MemberSignature Language="F#" Value="abstract member Log : Microsoft.EntityFrameworkCore.Diagnostics.EventData -&gt; unit&#xA;override this.Log : Microsoft.EntityFrameworkCore.Diagnostics.EventData -&gt; unit" Usage="delegatingDbContextLogger.Log eventData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger.Log(Microsoft.EntityFrameworkCore.Diagnostics.EventData)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventData" Type="Microsoft.EntityFrameworkCore.Diagnostics.EventData" />
      </Parameters>
      <Docs>
        <param name="eventData">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLog">
      <MemberSignature Language="C#" Value="public virtual bool ShouldLog (Microsoft.Extensions.Logging.EventId eventId, Microsoft.Extensions.Logging.LogLevel logLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLog(valuetype Microsoft.Extensions.Logging.EventId eventId, valuetype Microsoft.Extensions.Logging.LogLevel logLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.DelegatingDbContextLogger.ShouldLog(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldLog (eventId As EventId, logLevel As LogLevel) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLog : Microsoft.Extensions.Logging.EventId * Microsoft.Extensions.Logging.LogLevel -&gt; bool&#xA;override this.ShouldLog : Microsoft.Extensions.Logging.EventId * Microsoft.Extensions.Logging.LogLevel -&gt; bool" Usage="delegatingDbContextLogger.ShouldLog (eventId, logLevel)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger.ShouldLog(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="eventId">To be added.</param>
        <param name="logLevel">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
