<Type Name="RelationalCommandDiagnosticsLogger" FullName="Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger">
  <TypeSignature Language="C#" Value="public class RelationalCommandDiagnosticsLogger : Microsoft.EntityFrameworkCore.Diagnostics.Internal.DiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt;, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt;, Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalCommandDiagnosticsLogger extends Microsoft.EntityFrameworkCore.Diagnostics.Internal.DiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; implements class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt;, class Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalCommandDiagnosticsLogger&#xA;Inherits DiagnosticsLogger(Of DbLoggerCategory.Database.Command)&#xA;Implements IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), IRelationalCommandDiagnosticsLogger" />
  <TypeSignature Language="F#" Value="type RelationalCommandDiagnosticsLogger = class&#xA;    inherit DiagnosticsLogger&lt;DbLoggerCategory.Database.Command&gt;&#xA;    interface IRelationalCommandDiagnosticsLogger&#xA;    interface IDiagnosticsLogger&lt;DbLoggerCategory.Database.Command&gt;&#xA;    interface IDiagnosticsLogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.Internal.DiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalCommandDiagnosticsLogger (Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, System.Diagnostics.DiagnosticSource diagnosticSource, Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions loggingDefinitions, Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger contextLogger, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions, Microsoft.EntityFrameworkCore.Diagnostics.IInterceptors? interceptors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, class System.Diagnostics.DiagnosticSource diagnosticSource, class Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions loggingDefinitions, class Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger contextLogger, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions, class Microsoft.EntityFrameworkCore.Diagnostics.IInterceptors interceptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions,System.Diagnostics.DiagnosticSource,Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions,Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Diagnostics.IInterceptors)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loggerFactory As ILoggerFactory, loggingOptions As ILoggingOptions, diagnosticSource As DiagnosticSource, loggingDefinitions As LoggingDefinitions, contextLogger As IDbContextLogger, contextOptions As IDbContextOptions, Optional interceptors As IInterceptors = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger : Microsoft.Extensions.Logging.ILoggerFactory * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions * System.Diagnostics.DiagnosticSource * Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions * Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions * Microsoft.EntityFrameworkCore.Diagnostics.IInterceptors -&gt; Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger (loggerFactory, loggingOptions, diagnosticSource, loggingDefinitions, contextLogger, contextOptions, interceptors)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" />
        <Parameter Name="diagnosticSource" Type="System.Diagnostics.DiagnosticSource" />
        <Parameter Name="loggingDefinitions" Type="Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions" />
        <Parameter Name="contextLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger" />
        <Parameter Name="contextOptions" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
        <Parameter Name="interceptors" Type="Microsoft.EntityFrameworkCore.Diagnostics.IInterceptors" />
      </Parameters>
      <Docs>
        <param name="loggerFactory">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <param name="diagnosticSource">To be added.</param>
        <param name="loggingDefinitions">To be added.</param>
        <param name="contextLogger">To be added.</param>
        <param name="contextOptions">To be added.</param>
        <param name="interceptors">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandCanceled">
      <MemberSignature Language="C#" Value="public virtual void CommandCanceled (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, Guid commandId, Guid connectionId, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommandCanceled(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandCanceled(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CommandCanceled (connection As IRelationalConnection, command As DbCommand, context As DbContext, executeMethod As DbCommandMethod, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource)" />
      <MemberSignature Language="F#" Value="abstract member CommandCanceled : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; unit&#xA;override this.CommandCanceled : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; unit" Usage="relationalCommandDiagnosticsLogger.CommandCanceled (connection, command, context, executeMethod, commandId, connectionId, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandCanceled(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="executeMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="7" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" Index="8" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="executeMethod">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CommandCanceledAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CommandCanceledAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, Guid commandId, Guid connectionId, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CommandCanceledAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandCanceledAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandCanceledAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, executeMethod As DbCommandMethod, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CommandCanceledAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CommandCanceledAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="relationalCommandDiagnosticsLogger.CommandCanceledAsync (connection, command, context, executeMethod, commandId, connectionId, startTime, duration, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandCanceledAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="executeMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="7" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" Index="8" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="9" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="executeMethod">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CommandCreated">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbCommand CommandCreated (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbCommand CommandCreated(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandCreated(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandCreated (connection As IRelationalConnection, command As DbCommand, commandMethod As DbCommandMethod, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource) As DbCommand" />
      <MemberSignature Language="F#" Value="abstract member CommandCreated : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; System.Data.Common.DbCommand&#xA;override this.CommandCreated : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; System.Data.Common.DbCommand" Usage="relationalCommandDiagnosticsLogger.CommandCreated (connection, command, commandMethod, context, commandId, connectionId, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandCreated(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="commandMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="commandMethod">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandCreating">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbCommand&gt; CommandCreating (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbCommand&gt; CommandCreating(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandCreating(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandCreating (connection As IRelationalConnection, commandMethod As DbCommandMethod, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource) As InterceptionResult(Of DbCommand)" />
      <MemberSignature Language="F#" Value="abstract member CommandCreating : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbCommand&gt;&#xA;override this.CommandCreating : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbCommand&gt;" Usage="relationalCommandDiagnosticsLogger.CommandCreating (connection, commandMethod, context, commandId, connectionId, startTime, commandSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandCreating(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbCommand&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="commandMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="commandMethod">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="commandSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandError">
      <MemberSignature Language="C#" Value="public virtual void CommandError (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, Guid commandId, Guid connectionId, Exception exception, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommandError(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandError(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Exception,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CommandError (connection As IRelationalConnection, command As DbCommand, context As DbContext, executeMethod As DbCommandMethod, commandId As Guid, connectionId As Guid, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource)" />
      <MemberSignature Language="F#" Value="abstract member CommandError : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * Exception * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; unit&#xA;override this.CommandError : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * Exception * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; unit" Usage="relationalCommandDiagnosticsLogger.CommandError (connection, command, context, executeMethod, commandId, connectionId, exception, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandError(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Exception,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="executeMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="executeMethod">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="exception">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandErrorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CommandErrorAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, Guid commandId, Guid connectionId, Exception exception, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CommandErrorAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod executeMethod, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandErrorAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Exception,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandErrorAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, executeMethod As DbCommandMethod, commandId As Guid, connectionId As Guid, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CommandErrorAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * Exception * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CommandErrorAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Guid * Guid * Exception * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="relationalCommandDiagnosticsLogger.CommandErrorAsync (connection, command, context, executeMethod, commandId, connectionId, exception, startTime, duration, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandErrorAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,System.Guid,System.Guid,System.Exception,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="executeMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="executeMethod">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="exception">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandInitialized">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbCommand CommandInitialized (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbCommand CommandInitialized(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, valuetype Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod commandMethod, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandInitialized(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandInitialized (connection As IRelationalConnection, command As DbCommand, commandMethod As DbCommandMethod, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource) As DbCommand" />
      <MemberSignature Language="F#" Value="abstract member CommandInitialized : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; System.Data.Common.DbCommand&#xA;override this.CommandInitialized : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; System.Data.Common.DbCommand" Usage="relationalCommandDiagnosticsLogger.CommandInitialized (connection, command, commandMethod, context, commandId, connectionId, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandInitialized(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandMethod" Type="Microsoft.EntityFrameworkCore.Diagnostics.DbCommandMethod" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="connectionId" Type="System.Guid" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="7" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" Index="8" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="commandMethod">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecuted">
      <MemberSignature Language="C#" Value="public virtual int CommandNonQueryExecuted (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, int methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CommandNonQueryExecuted(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, int32 methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandNonQueryExecuted(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Int32,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandNonQueryExecuted (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Integer, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CommandNonQueryExecuted : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * int * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; int&#xA;override this.CommandNonQueryExecuted : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * int * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; int" Usage="relationalCommandDiagnosticsLogger.CommandNonQueryExecuted (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandNonQueryExecuted(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Int32,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Int32" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="methodResult">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecutedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; CommandNonQueryExecutedAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, int methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; CommandNonQueryExecutedAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, int32 methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandNonQueryExecutedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Int32,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandNonQueryExecutedAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Integer, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member CommandNonQueryExecutedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * int * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.CommandNonQueryExecutedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * int * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="relationalCommandDiagnosticsLogger.CommandNonQueryExecutedAsync (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandNonQueryExecutedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Int32,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Int32" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="methodResult">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecuting">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt; CommandNonQueryExecuting (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;int32&gt; CommandNonQueryExecuting(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandNonQueryExecuting(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandNonQueryExecuting (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource) As InterceptionResult(Of Integer)" />
      <MemberSignature Language="F#" Value="abstract member CommandNonQueryExecuting : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&#xA;override this.CommandNonQueryExecuting : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;" Usage="relationalCommandDiagnosticsLogger.CommandNonQueryExecuting (connection, command, context, commandId, connectionId, startTime, commandSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandNonQueryExecuting(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="commandSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandNonQueryExecutingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&gt; CommandNonQueryExecutingAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;int32&gt;&gt; CommandNonQueryExecutingAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandNonQueryExecutingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandNonQueryExecutingAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult(Of Integer))" />
      <MemberSignature Language="F#" Value="abstract member CommandNonQueryExecutingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&gt;&#xA;override this.CommandNonQueryExecutingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;int&gt;&gt;" Usage="relationalCommandDiagnosticsLogger.CommandNonQueryExecutingAsync (connection, command, context, commandId, connectionId, startTime, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandNonQueryExecutingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="commandSource">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecuted">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbDataReader CommandReaderExecuted (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, System.Data.Common.DbDataReader methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbDataReader CommandReaderExecuted(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Data.Common.DbDataReader methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandReaderExecuted(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Data.Common.DbDataReader,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandReaderExecuted (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As DbDataReader, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource) As DbDataReader" />
      <MemberSignature Language="F#" Value="abstract member CommandReaderExecuted : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * System.Data.Common.DbDataReader * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; System.Data.Common.DbDataReader&#xA;override this.CommandReaderExecuted : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * System.Data.Common.DbDataReader * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; System.Data.Common.DbDataReader" Usage="relationalCommandDiagnosticsLogger.CommandReaderExecuted (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandReaderExecuted(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Data.Common.DbDataReader,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="methodResult">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecutedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbDataReader&gt; CommandReaderExecutedAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, System.Data.Common.DbDataReader methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class System.Data.Common.DbDataReader&gt; CommandReaderExecutedAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, class System.Data.Common.DbDataReader methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandReaderExecutedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Data.Common.DbDataReader,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandReaderExecutedAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As DbDataReader, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of DbDataReader)" />
      <MemberSignature Language="F#" Value="abstract member CommandReaderExecutedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * System.Data.Common.DbDataReader * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbDataReader&gt;&#xA;override this.CommandReaderExecutedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * System.Data.Common.DbDataReader * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbDataReader&gt;" Usage="relationalCommandDiagnosticsLogger.CommandReaderExecutedAsync (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandReaderExecutedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Data.Common.DbDataReader,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="methodResult">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecuting">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt; CommandReaderExecuting (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbDataReader&gt; CommandReaderExecuting(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandReaderExecuting(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandReaderExecuting (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource) As InterceptionResult(Of DbDataReader)" />
      <MemberSignature Language="F#" Value="abstract member CommandReaderExecuting : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&#xA;override this.CommandReaderExecuting : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;" Usage="relationalCommandDiagnosticsLogger.CommandReaderExecuting (connection, command, context, commandId, connectionId, startTime, commandSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandReaderExecuting(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="commandSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandReaderExecutingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt; CommandReaderExecutingAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbDataReader&gt;&gt; CommandReaderExecutingAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandReaderExecutingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandReaderExecutingAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult(Of DbDataReader))" />
      <MemberSignature Language="F#" Value="abstract member CommandReaderExecutingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt;&#xA;override this.CommandReaderExecutingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt;" Usage="relationalCommandDiagnosticsLogger.CommandReaderExecutingAsync (connection, command, context, commandId, connectionId, startTime, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandReaderExecutingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbDataReader&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="commandSource">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecuted">
      <MemberSignature Language="C#" Value="public virtual object? CommandScalarExecuted (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, object? methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CommandScalarExecuted(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, object methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandScalarExecuted(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Object,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandScalarExecuted (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Object, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource) As Object" />
      <MemberSignature Language="F#" Value="abstract member CommandScalarExecuted : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * obj * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; obj&#xA;override this.CommandScalarExecuted : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * obj * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; obj" Usage="relationalCommandDiagnosticsLogger.CommandScalarExecuted (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandScalarExecuted(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Object,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Object" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="methodResult">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecutedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;object?&gt; CommandScalarExecutedAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, object? methodResult, DateTimeOffset startTime, TimeSpan duration, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; CommandScalarExecutedAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, object methodResult, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandScalarExecutedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Object,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandScalarExecutedAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, methodResult As Object, startTime As DateTimeOffset, duration As TimeSpan, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member CommandScalarExecutedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * obj * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;&#xA;override this.CommandScalarExecutedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * obj * DateTimeOffset * TimeSpan * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="relationalCommandDiagnosticsLogger.CommandScalarExecutedAsync (connection, command, context, commandId, connectionId, methodResult, startTime, duration, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandScalarExecutedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.Object,System.DateTimeOffset,System.TimeSpan,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="methodResult" Type="System.Object" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="methodResult">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="commandSource">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecuting">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;object&gt; CommandScalarExecuting (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;object&gt; CommandScalarExecuting(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandScalarExecuting(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandScalarExecuting (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource) As InterceptionResult(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member CommandScalarExecuting : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt;&#xA;override this.CommandScalarExecuting : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt;" Usage="relationalCommandDiagnosticsLogger.CommandScalarExecuting (connection, command, context, commandId, connectionId, startTime, commandSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandScalarExecuting(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="commandSource">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandScalarExecutingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;object&gt;&gt; CommandScalarExecutingAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, Microsoft.EntityFrameworkCore.DbContext? context, Guid commandId, Guid connectionId, DateTimeOffset startTime, Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;object&gt;&gt; CommandScalarExecutingAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class Microsoft.EntityFrameworkCore.DbContext context, valuetype System.Guid commandId, valuetype System.Guid connectionId, valuetype System.DateTimeOffset startTime, valuetype Microsoft.EntityFrameworkCore.Diagnostics.CommandSource commandSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.CommandScalarExecutingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CommandScalarExecutingAsync (connection As IRelationalConnection, command As DbCommand, context As DbContext, commandId As Guid, connectionId As Guid, startTime As DateTimeOffset, commandSource As CommandSource, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of InterceptionResult(Of Object))" />
      <MemberSignature Language="F#" Value="abstract member CommandScalarExecutingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt;&gt;&#xA;override this.CommandScalarExecutingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * Microsoft.EntityFrameworkCore.DbContext * Guid * Guid * DateTimeOffset * Microsoft.EntityFrameworkCore.Diagnostics.CommandSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;obj&gt;&gt;" Usage="relationalCommandDiagnosticsLogger.CommandScalarExecutingAsync (connection, command, context, commandId, connectionId, startTime, commandSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.CommandScalarExecutingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,Microsoft.EntityFrameworkCore.DbContext,System.Guid,System.Guid,System.DateTimeOffset,Microsoft.EntityFrameworkCore.Diagnostics.CommandSource,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="connectionId" Type="System.Guid" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="commandSource" Type="Microsoft.EntityFrameworkCore.Diagnostics.CommandSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="context">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="connectionId">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="commandSource">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataReaderClosing">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult DataReaderClosing (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, System.Data.Common.DbDataReader dataReader, Guid commandId, int recordsAffected, int readCount, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult DataReaderClosing(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class System.Data.Common.DbDataReader dataReader, valuetype System.Guid commandId, int32 recordsAffected, int32 readCount, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.DataReaderClosing(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Int32,System.Int32,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DataReaderClosing (connection As IRelationalConnection, command As DbCommand, dataReader As DbDataReader, commandId As Guid, recordsAffected As Integer, readCount As Integer, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="abstract member DataReaderClosing : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * int * int * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&#xA;override this.DataReaderClosing : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * int * int * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="relationalCommandDiagnosticsLogger.DataReaderClosing (connection, command, dataReader, commandId, recordsAffected, readCount, startTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.DataReaderClosing(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Int32,System.Int32,System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="dataReader" Type="System.Data.Common.DbDataReader" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="recordsAffected" Type="System.Int32" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="readCount" Type="System.Int32" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="dataReader">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="readCount">To be added.</param>
        <param name="startTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataReaderClosingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; DataReaderClosingAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, System.Data.Common.DbDataReader dataReader, Guid commandId, int recordsAffected, int readCount, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; DataReaderClosingAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class System.Data.Common.DbDataReader dataReader, valuetype System.Guid commandId, int32 recordsAffected, int32 readCount, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.DataReaderClosingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Int32,System.Int32,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DataReaderClosingAsync (connection As IRelationalConnection, command As DbCommand, dataReader As DbDataReader, commandId As Guid, recordsAffected As Integer, readCount As Integer, startTime As DateTimeOffset) As ValueTask(Of InterceptionResult)" />
      <MemberSignature Language="F#" Value="abstract member DataReaderClosingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * int * int * DateTimeOffset -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;&#xA;override this.DataReaderClosingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * int * int * DateTimeOffset -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="relationalCommandDiagnosticsLogger.DataReaderClosingAsync (connection, command, dataReader, commandId, recordsAffected, readCount, startTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.DataReaderClosingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Int32,System.Int32,System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="dataReader" Type="System.Data.Common.DbDataReader" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandId" Type="System.Guid" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="recordsAffected" Type="System.Int32" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="readCount" Type="System.Int32" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="6" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="dataReader">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="readCount">To be added.</param>
        <param name="startTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataReaderDisposing">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult DataReaderDisposing (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Data.Common.DbCommand command, System.Data.Common.DbDataReader dataReader, Guid commandId, int recordsAffected, int readCount, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult DataReaderDisposing(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Data.Common.DbCommand command, class System.Data.Common.DbDataReader dataReader, valuetype System.Guid commandId, int32 recordsAffected, int32 readCount, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.DataReaderDisposing(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Int32,System.Int32,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DataReaderDisposing (connection As IRelationalConnection, command As DbCommand, dataReader As DbDataReader, commandId As Guid, recordsAffected As Integer, readCount As Integer, startTime As DateTimeOffset, duration As TimeSpan) As InterceptionResult" />
      <MemberSignature Language="F#" Value="abstract member DataReaderDisposing : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * int * int * DateTimeOffset * TimeSpan -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&#xA;override this.DataReaderDisposing : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Data.Common.DbCommand * System.Data.Common.DbDataReader * Guid * int * int * DateTimeOffset * TimeSpan -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="relationalCommandDiagnosticsLogger.DataReaderDisposing (connection, command, dataReader, commandId, recordsAffected, readCount, startTime, duration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.DataReaderDisposing(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Guid,System.Int32,System.Int32,System.DateTimeOffset,System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="dataReader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="commandId" Type="System.Guid" />
        <Parameter Name="recordsAffected" Type="System.Int32" />
        <Parameter Name="readCount" Type="System.Int32" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="command">To be added.</param>
        <param name="dataReader">To be added.</param>
        <param name="commandId">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="readCount">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogCommandCreate">
      <MemberSignature Language="C#" Value="public virtual bool ShouldLogCommandCreate (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogCommandCreate(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.ShouldLogCommandCreate(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldLogCommandCreate (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogCommandCreate : DateTimeOffset -&gt; bool&#xA;override this.ShouldLogCommandCreate : DateTimeOffset -&gt; bool" Usage="relationalCommandDiagnosticsLogger.ShouldLogCommandCreate now" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.ShouldLogCommandCreate(System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogCommandExecute">
      <MemberSignature Language="C#" Value="public virtual bool ShouldLogCommandExecute (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogCommandExecute(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.ShouldLogCommandExecute(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldLogCommandExecute (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogCommandExecute : DateTimeOffset -&gt; bool&#xA;override this.ShouldLogCommandExecute : DateTimeOffset -&gt; bool" Usage="relationalCommandDiagnosticsLogger.ShouldLogCommandExecute now" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.ShouldLogCommandExecute(System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogDataReaderClose">
      <MemberSignature Language="C#" Value="public virtual bool ShouldLogDataReaderClose (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogDataReaderClose(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.ShouldLogDataReaderClose(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldLogDataReaderClose (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogDataReaderClose : DateTimeOffset -&gt; bool&#xA;override this.ShouldLogDataReaderClose : DateTimeOffset -&gt; bool" Usage="relationalCommandDiagnosticsLogger.ShouldLogDataReaderClose now" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.ShouldLogDataReaderClose(System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogDataReaderDispose">
      <MemberSignature Language="C#" Value="public virtual bool ShouldLogDataReaderDispose (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogDataReaderDispose(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalCommandDiagnosticsLogger.ShouldLogDataReaderDispose(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldLogDataReaderDispose (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogDataReaderDispose : DateTimeOffset -&gt; bool&#xA;override this.ShouldLogDataReaderDispose : DateTimeOffset -&gt; bool" Usage="relationalCommandDiagnosticsLogger.ShouldLogDataReaderDispose now" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger.ShouldLogDataReaderDispose(System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
