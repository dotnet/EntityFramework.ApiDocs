<Type Name="CoreResources" FullName="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources">
  <TypeSignature Language="C#" Value="public static class CoreResources" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CoreResources extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources" />
  <TypeSignature Language="VB.NET" Value="Public Class CoreResources" />
  <TypeSignature Language="F#" Value="type CoreResources = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LogAmbiguousEndRequired">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogAmbiguousEndRequired (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogAmbiguousEndRequired(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogAmbiguousEndRequired(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogAmbiguousEndRequired (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogAmbiguousEndRequired : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogAmbiguousEndRequired logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The foreign key {foreignKeyProperties} on entity type '{entityType}' cannot be configured as required since the dependent side cannot be determined. To identify the dependent side of the relationship, configure the foreign key property or the principal key before configuring the foreign key as required in 'OnModelCreating'. See https://go.microsoft.com/fwlink/?LinkId=724062 for more details.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCascadeDelete">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,Microsoft.EntityFrameworkCore.EntityState,string&gt; LogCascadeDelete (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, valuetype Microsoft.EntityFrameworkCore.EntityState, string&gt; LogCascadeDelete(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCascadeDelete(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogCascadeDelete (logger As IDiagnosticsLogger) As EventDefinition(Of String, EntityState, String)" />
      <MemberSignature Language="F#" Value="static member LogCascadeDelete : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, Microsoft.EntityFrameworkCore.EntityState, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCascadeDelete logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,Microsoft.EntityFrameworkCore.EntityState,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                A cascade state change of an entity of type '{entityType}' to '{state}' occurred due to deletion of its parent entity of type '{parentType}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCascadeDeleteOrphan">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,Microsoft.EntityFrameworkCore.EntityState,string&gt; LogCascadeDeleteOrphan (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, valuetype Microsoft.EntityFrameworkCore.EntityState, string&gt; LogCascadeDeleteOrphan(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCascadeDeleteOrphan(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogCascadeDeleteOrphan (logger As IDiagnosticsLogger) As EventDefinition(Of String, EntityState, String)" />
      <MemberSignature Language="F#" Value="static member LogCascadeDeleteOrphan : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, Microsoft.EntityFrameworkCore.EntityState, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCascadeDeleteOrphan logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,Microsoft.EntityFrameworkCore.EntityState,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                An entity of type '{entityType}' changed to '{state}' state due to severed required relationship to its parent entity of type '{parentType}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCascadeDeleteOrphanSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,Microsoft.EntityFrameworkCore.EntityState,string&gt; LogCascadeDeleteOrphanSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, valuetype Microsoft.EntityFrameworkCore.EntityState, string&gt; LogCascadeDeleteOrphanSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCascadeDeleteOrphanSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogCascadeDeleteOrphanSensitive (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, EntityState, String)" />
      <MemberSignature Language="F#" Value="static member LogCascadeDeleteOrphanSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, Microsoft.EntityFrameworkCore.EntityState, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCascadeDeleteOrphanSensitive logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,Microsoft.EntityFrameworkCore.EntityState,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                An entity of type '{entityType}' with key '{keyValues}' changed to '{state}' state due to severed required relationship to its parent entity of type '{parentType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCascadeDeleteSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,Microsoft.EntityFrameworkCore.EntityState,string,string&gt; LogCascadeDeleteSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, valuetype Microsoft.EntityFrameworkCore.EntityState, string, string&gt; LogCascadeDeleteSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCascadeDeleteSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogCascadeDeleteSensitive (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, EntityState, String, String)" />
      <MemberSignature Language="F#" Value="static member LogCascadeDeleteSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, Microsoft.EntityFrameworkCore.EntityState, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCascadeDeleteSensitive logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,Microsoft.EntityFrameworkCore.EntityState,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                A cascade state change of an entity of type '{entityType}' with key '{keyValues}' to '{state}' occurred due to the deletion of its parent entity of type '{parentType}' with key '{parentKeyValues}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCollectionChangeDetected">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int,int,string,string&gt; LogCollectionChangeDetected (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;int32, int32, string, string&gt; LogCollectionChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCollectionChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogCollectionChangeDetected (logger As IDiagnosticsLogger) As EventDefinition(Of Integer, Integer, String, String)" />
      <MemberSignature Language="F#" Value="static member LogCollectionChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int, int, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCollectionChangeDetected logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Int32,System.Int32,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                {addedCount} entities were added and {removedCount} entities were removed from navigation '{entityType}.{property}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCollectionChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int,int,string,string,string&gt; LogCollectionChangeDetectedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;int32, int32, string, string, string&gt; LogCollectionChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCollectionChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogCollectionChangeDetectedSensitive (logger As IDiagnosticsLogger) As EventDefinition(Of Integer, Integer, String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogCollectionChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int, int, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCollectionChangeDetectedSensitive logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Int32,System.Int32,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                {addedCount} entities were added and {removedCount} entities were removed from navigation '{entityType}.{property}' on entity with key '{keyValues}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCollectionWithoutComparer">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogCollectionWithoutComparer (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogCollectionWithoutComparer(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCollectionWithoutComparer(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogCollectionWithoutComparer (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogCollectionWithoutComparer : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCollectionWithoutComparer logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The property '{entityType}.{property}' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCompilingQueryModel">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogCompilingQueryModel (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogCompilingQueryModel(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCompilingQueryModel(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogCompilingQueryModel (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogCompilingQueryModel : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogCompilingQueryModel logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Compiling query model: {newline}'{queryModel}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogConflictingForeignKeyAttributesOnNavigationAndProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogConflictingForeignKeyAttributesOnNavigationAndProperty (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogConflictingForeignKeyAttributesOnNavigationAndProperty(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogConflictingForeignKeyAttributesOnNavigationAndProperty(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogConflictingForeignKeyAttributesOnNavigationAndProperty (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogConflictingForeignKeyAttributesOnNavigationAndProperty : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogConflictingForeignKeyAttributesOnNavigationAndProperty logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string?,string,string?&gt; LogConflictingForeignKeyAttributesOnNavigationAndProperty (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The relationship was separated into two relationships because the [ForeignKey] attribute specified on the navigation '{navigationEntityType}.{navigation}' doesn't match the [ForeignKey] attribute specified on the property '{propertyEntityType}.{property}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogConflictingKeylessAndKeyAttributes">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogConflictingKeylessAndKeyAttributes (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogConflictingKeylessAndKeyAttributes(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogConflictingKeylessAndKeyAttributes(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogConflictingKeylessAndKeyAttributes (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogConflictingKeylessAndKeyAttributes : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogConflictingKeylessAndKeyAttributes logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The entity type '{entity}' has the [Keyless] attribute, but the [Key] attribute was specified on property '{property}'; the two are incompatible, consider removing one. Note that the entity will have no key unless you configure one in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogConflictingShadowForeignKeys">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogConflictingShadowForeignKeys (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogConflictingShadowForeignKeys(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogConflictingShadowForeignKeys(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogConflictingShadowForeignKeys (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogConflictingShadowForeignKeys : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogConflictingShadowForeignKeys logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                There are multiple relationships between '{dependentEntityType}' and '{principalEntityType}' without configured foreign key properties. This will cause Entity Framework to create shadow properties on '{dependentType}' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogContextDisposed">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogContextDisposed (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogContextDisposed(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogContextDisposed(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogContextDisposed (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogContextDisposed : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogContextDisposed logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                '{contextType}' disposed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogContextInitialized">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogContextInitialized (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogContextInitialized(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogContextInitialized(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogContextInitialized (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String)" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="F#" Value="static member LogContextInitialized : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogContextInitialized logger" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string?,string?,string&gt; LogContextInitialized (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, string, string, string&gt; LogContextInitialized(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogContextInitialized (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String, String)" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member LogContextInitialized : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogContextInitialized logger" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Entity Framework Core {version} initialized '{contextType}' using provider '{provider}:{providerVersion}' with options: {options}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDetachedLazyLoading">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogDetachedLazyLoading (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogDetachedLazyLoading(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogDetachedLazyLoading(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogDetachedLazyLoading (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogDetachedLazyLoading : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogDetachedLazyLoading logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                An attempt was made to lazy-load navigation '{navigation}' on a detached entity of type '{entityType}'. Lazy loading is not supported for detached entities or entities that are loaded with 'AsNoTracking'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDetectChangesCompleted">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogDetectChangesCompleted (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogDetectChangesCompleted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogDetectChangesCompleted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogDetectChangesCompleted (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogDetectChangesCompleted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogDetectChangesCompleted logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                DetectChanges completed for '{contextType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDetectChangesStarting">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogDetectChangesStarting (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogDetectChangesStarting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogDetectChangesStarting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogDetectChangesStarting (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogDetectChangesStarting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogDetectChangesStarting logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?&gt; LogDetectChangesStarting (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                DetectChanges starting for '{contextType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDistinctAfterOrderByWithoutRowLimitingOperatorWarning">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogDistinctAfterOrderByWithoutRowLimitingOperatorWarning (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogDistinctAfterOrderByWithoutRowLimitingOperatorWarning(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogDistinctAfterOrderByWithoutRowLimitingOperatorWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogDistinctAfterOrderByWithoutRowLimitingOperatorWarning (logger As IDiagnosticsLogger) As EventDefinition" />
      <MemberSignature Language="F#" Value="static member LogDistinctAfterOrderByWithoutRowLimitingOperatorWarning : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogDistinctAfterOrderByWithoutRowLimitingOperatorWarning logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The query uses the 'Distinct' operator after applying an ordering. If there are any row limiting operation used before 'Distinct' and after ordering then ordering will be used for it. Ordering(s) will be erased after 'Distinct' and results afterwards would be unordered.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDuplicateDependentEntityTypeInstance">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogDuplicateDependentEntityTypeInstance (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogDuplicateDependentEntityTypeInstance(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogDuplicateDependentEntityTypeInstance(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogDuplicateDependentEntityTypeInstance (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogDuplicateDependentEntityTypeInstance : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogDuplicateDependentEntityTypeInstance logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The same entity is being tracked as different entity types '{dependent1}' and '{dependent2}' with defining navigations. If a property value changes, it will result in two store changes, which might not be the desired outcome.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExceptionDuringQueryIteration">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type,string,Exception&gt; LogExceptionDuringQueryIteration (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;class System.Type, string, class System.Exception&gt; LogExceptionDuringQueryIteration(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogExceptionDuringQueryIteration(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogExceptionDuringQueryIteration (logger As IDiagnosticsLogger) As EventDefinition(Of Type, String, Exception)" />
      <MemberSignature Language="F#" Value="static member LogExceptionDuringQueryIteration : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type, string, Exception&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogExceptionDuringQueryIteration logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Type,System.String,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                An exception occurred while iterating over the results of a query for context type '{contextType}'.{newline}{error}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExceptionDuringSaveChanges">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type,string,Exception&gt; LogExceptionDuringSaveChanges (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;class System.Type, string, class System.Exception&gt; LogExceptionDuringSaveChanges(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogExceptionDuringSaveChanges(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogExceptionDuringSaveChanges (logger As IDiagnosticsLogger) As EventDefinition(Of Type, String, Exception)" />
      <MemberSignature Language="F#" Value="static member LogExceptionDuringSaveChanges : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type, string, Exception&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogExceptionDuringSaveChanges logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type?,string,Exception&gt; LogExceptionDuringSaveChanges (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Type,System.String,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExecutionStrategyRetrying">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int,string,Exception&gt; LogExecutionStrategyRetrying (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;int32, string, class System.Exception&gt; LogExecutionStrategyRetrying(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogExecutionStrategyRetrying(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogExecutionStrategyRetrying (logger As IDiagnosticsLogger) As EventDefinition(Of Integer, String, Exception)" />
      <MemberSignature Language="F#" Value="static member LogExecutionStrategyRetrying : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int, string, Exception&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogExecutionStrategyRetrying logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Int32,System.String,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                A transient exception occurred during execution. The operation will be retried after {delay}ms.{newline}{error}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFirstWithoutOrderByAndFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogFirstWithoutOrderByAndFilter (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogFirstWithoutOrderByAndFilter(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogFirstWithoutOrderByAndFilter(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogFirstWithoutOrderByAndFilter (logger As IDiagnosticsLogger) As EventDefinition(Of String)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member LogFirstWithoutOrderByAndFilter : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogFirstWithoutOrderByAndFilter logger" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogFirstWithoutOrderByAndFilter (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogFirstWithoutOrderByAndFilter(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogFirstWithoutOrderByAndFilter (logger As IDiagnosticsLogger) As EventDefinition" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member LogFirstWithoutOrderByAndFilter : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogFirstWithoutOrderByAndFilter logger" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyAttributesOnBothNavigations">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogForeignKeyAttributesOnBothNavigations (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogForeignKeyAttributesOnBothNavigations(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogForeignKeyAttributesOnBothNavigations(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogForeignKeyAttributesOnBothNavigations (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogForeignKeyAttributesOnBothNavigations : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogForeignKeyAttributesOnBothNavigations logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Navigations '{dependentEntityType}.{dependentNavigation}' and '{principalEntityType}.{principalNavigation}' were separated into two relationships since the [ForeignKey] attribute was specified on navigations on both sides.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyAttributesOnBothProperties">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string,string,string&gt; LogForeignKeyAttributesOnBothProperties (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6&lt;string, string, string, string, string, string&gt; LogForeignKeyAttributesOnBothProperties(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogForeignKeyAttributesOnBothProperties(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogForeignKeyAttributesOnBothProperties (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogForeignKeyAttributesOnBothProperties : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogForeignKeyAttributesOnBothProperties logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string?,string,string?,string?,string?&gt; LogForeignKeyAttributesOnBothProperties (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Navigations '{dependentEntityType}.{dependentNavigation}' and '{principalEntityType}.{principalNavigation}' were separated into two relationships since the [ForeignKey] attribute was specified on properties '{dependentProperty}' and '{principalProperty}' on both sides.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyChangeDetected">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogForeignKeyChangeDetected (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogForeignKeyChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogForeignKeyChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogForeignKeyChangeDetected (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogForeignKeyChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogForeignKeyChangeDetected logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The foreign key property '{entityType}.{property}' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,object,object,string&gt; LogForeignKeyChangeDetectedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, object, object, string&gt; LogForeignKeyChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogForeignKeyChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogForeignKeyChangeDetectedSensitive (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, Object, Object, String)" />
      <MemberSignature Language="F#" Value="static member LogForeignKeyChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, obj, obj, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogForeignKeyChangeDetectedSensitive logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,object?,object?,string&gt; LogForeignKeyChangeDetectedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.Object,System.Object,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The foreign key property '{entityType}.{property}' was detected as changed from '{oldValue}' to '{newValue}' for entity with key '{keyValues}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIgnoredInclude">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogIgnoredInclude (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogIgnoredInclude(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogIgnoredInclude(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogIgnoredInclude (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogIgnoredInclude : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogIgnoredInclude logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The Include operation for navigation '{include}' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIncludingNavigation">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogIncludingNavigation (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogIncludingNavigation(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogIncludingNavigation(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogIncludingNavigation (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogIncludingNavigation : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogIncludingNavigation logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Including navigation: '{navigation}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIncompatibleMatchingForeignKeyProperties">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogIncompatibleMatchingForeignKeyProperties (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogIncompatibleMatchingForeignKeyProperties(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogIncompatibleMatchingForeignKeyProperties(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogIncompatibleMatchingForeignKeyProperties (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member LogIncompatibleMatchingForeignKeyProperties : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogIncompatibleMatchingForeignKeyProperties logger" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogIncompatibleMatchingForeignKeyProperties (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogIncompatibleMatchingForeignKeyProperties(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogIncompatibleMatchingForeignKeyProperties (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member LogIncompatibleMatchingForeignKeyProperties : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogIncompatibleMatchingForeignKeyProperties logger" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                For the relationship between dependent '{dependentToPrincipalNavigationSpecification}' and principal '{principalToDependentNavigationSpecification}', the foreign key properties haven't been configured by convention because the best match {foreignKeyProperties} are incompatible with the current principal key {principalKey}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogInvalidIncludePath">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;object,object&gt; LogInvalidIncludePath (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;object, object&gt; LogInvalidIncludePath(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogInvalidIncludePath(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogInvalidIncludePath (logger As IDiagnosticsLogger) As EventDefinition(Of Object, Object)" />
      <MemberSignature Language="F#" Value="static member LogInvalidIncludePath : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;obj, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogInvalidIncludePath logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Unable to find navigation '{navigation}' specified in string based include path '{navigationChain}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLazyLoadOnDisposedContext">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogLazyLoadOnDisposedContext (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogLazyLoadOnDisposedContext(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogLazyLoadOnDisposedContext(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogLazyLoadOnDisposedContext (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogLazyLoadOnDisposedContext : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogLazyLoadOnDisposedContext logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                An attempt was made to lazy-load navigation '{entityType}.{navigation}' after the associated DbContext was disposed or returned to the pool, or the entity was explicitly detached from the context.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogManyServiceProvidersCreated">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogManyServiceProvidersCreated (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogManyServiceProvidersCreated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogManyServiceProvidersCreated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogManyServiceProvidersCreated (logger As IDiagnosticsLogger) As EventDefinition" />
      <MemberSignature Language="F#" Value="static member LogManyServiceProvidersCreated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogManyServiceProvidersCreated logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. This is commonly caused by injection of a new singleton service instance into every DbContext instance. For example, calling 'UseLoggerFactory' passing in a new instance each time--see https://go.microsoft.com/fwlink/?linkid=869049 for more details. This may lead to performance issues, consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMappedComplexPropertyIgnored">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogMappedComplexPropertyIgnored (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogMappedComplexPropertyIgnored(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMappedComplexPropertyIgnored(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogMappedComplexPropertyIgnored (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogMappedComplexPropertyIgnored : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMappedComplexPropertyIgnored logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The complex property '{type}.{property}' was first mapped explicitly and then ignored. Consider not mapping the complex property in the first place.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMappedEntityTypeIgnored">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogMappedEntityTypeIgnored (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogMappedEntityTypeIgnored(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMappedEntityTypeIgnored(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogMappedEntityTypeIgnored (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogMappedEntityTypeIgnored : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMappedEntityTypeIgnored logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The entity type '{entityType}' was first mapped explicitly and then ignored. Consider not mapping the entity type in the first place.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMappedNavigationIgnored">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogMappedNavigationIgnored (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogMappedNavigationIgnored(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMappedNavigationIgnored(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogMappedNavigationIgnored (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogMappedNavigationIgnored : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMappedNavigationIgnored logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The navigation '{entityType}.{navigation}' was first mapped explicitly and then ignored. Consider not mapping the navigation in the first place.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMappedPropertyIgnored">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogMappedPropertyIgnored (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogMappedPropertyIgnored(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMappedPropertyIgnored(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogMappedPropertyIgnored (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogMappedPropertyIgnored : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMappedPropertyIgnored logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The property '{entityType}.{property}' was first mapped explicitly and then ignored. Consider not mapping the property in the first place.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMultipleInversePropertiesSameTarget">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogMultipleInversePropertiesSameTarget (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogMultipleInversePropertiesSameTarget(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMultipleInversePropertiesSameTarget(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogMultipleInversePropertiesSameTarget (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogMultipleInversePropertiesSameTarget : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMultipleInversePropertiesSameTarget logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string?&gt; LogMultipleInversePropertiesSameTarget (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                There are multiple navigations ({navigations}) configured with [InverseProperty] attribute which point to the same inverse navigation '{inverseNavigation}' therefore no relationship was configured by convention.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMultipleNavigationProperties">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogMultipleNavigationProperties (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogMultipleNavigationProperties(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMultipleNavigationProperties(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogMultipleNavigationProperties (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogMultipleNavigationProperties : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMultipleNavigationProperties logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                No relationship from '{firstEntityType}' to '{secondEntityType}' has been configured by convention because there are multiple properties on one entity type - {navigationProperties} that could be matched with the properties on the other entity type - {inverseNavigations}. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMultiplePrimaryKeyCandidates">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogMultiplePrimaryKeyCandidates (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogMultiplePrimaryKeyCandidates(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMultiplePrimaryKeyCandidates(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogMultiplePrimaryKeyCandidates (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogMultiplePrimaryKeyCandidates : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogMultiplePrimaryKeyCandidates logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                A primary key hasn't been configured by convention as both properties '{firstProperty}' and '{secondProperty}' could be used as the primary key for the entity type '{entityType}'. This message can be disregarded if explicit configuration has been specified in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNavigationBaseIncluded">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogNavigationBaseIncluded (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogNavigationBaseIncluded(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNavigationBaseIncluded(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNavigationBaseIncluded (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogNavigationBaseIncluded : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNavigationBaseIncluded logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Including navigation: '{navigation}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNavigationBaseIncludeIgnored">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogNavigationBaseIncludeIgnored (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogNavigationBaseIncludeIgnored(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNavigationBaseIncludeIgnored(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNavigationBaseIncludeIgnored (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogNavigationBaseIncludeIgnored : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNavigationBaseIncludeIgnored logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The navigation '{navigation}' was ignored from 'Include' in the query since the fix-up will automatically populate it. If any further navigations are specified in 'Include' afterwards then they will be ignored. Walking back include tree is not allowed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNavigationLazyLoading">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogNavigationLazyLoading (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogNavigationLazyLoading(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNavigationLazyLoading(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNavigationLazyLoading (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogNavigationLazyLoading : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNavigationLazyLoading logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The navigation '{entityType}.{navigation}' is being lazy-loaded.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNonDefiningInverseNavigation">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string,string&gt; LogNonDefiningInverseNavigation (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, string, string, string&gt; LogNonDefiningInverseNavigation(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNonDefiningInverseNavigation(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNonDefiningInverseNavigation (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogNonDefiningInverseNavigation : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNonDefiningInverseNavigation logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string?,string,string?,string?&gt; LogNonDefiningInverseNavigation (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The navigation '{targetEntityType}.{inverseNavigation}' specified in the [InverseProperty] attribute cannot be used as the inverse of '{weakEntityType}.{navigation}' because it's not the defining navigation '{definingNavigation}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNonNullableInverted">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogNonNullableInverted (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogNonNullableInverted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNonNullableInverted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNonNullableInverted (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogNonNullableInverted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNonNullableInverted logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The navigation '{navigation}' is non-nullable, causing the entity type '{entityType}' to be configured as the dependent side in the corresponding relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNonNullableReferenceOnBothNavigations">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogNonNullableReferenceOnBothNavigations (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogNonNullableReferenceOnBothNavigations(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNonNullableReferenceOnBothNavigations(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNonNullableReferenceOnBothNavigations (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogNonNullableReferenceOnBothNavigations : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNonNullableReferenceOnBothNavigations logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                '{principalEntityType}.{principalNavigation}' may still be null at runtime despite being declared as non-nullable, since only the navigation to principal '{dependentEntityType}.{dependentNavigation}' can be configured as required.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNonNullableReferenceOnDependent">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogNonNullableReferenceOnDependent (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogNonNullableReferenceOnDependent(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNonNullableReferenceOnDependent(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNonNullableReferenceOnDependent (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogNonNullableReferenceOnDependent : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNonNullableReferenceOnDependent logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                '{principalEntityType}.{principalNavigation}' may still be null at runtime despite being declared as non-nullable, since only the navigation to principal can be configured as required.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNonOwnershipInverseNavigation">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string,string&gt; LogNonOwnershipInverseNavigation (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, string, string, string&gt; LogNonOwnershipInverseNavigation(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNonOwnershipInverseNavigation(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogNonOwnershipInverseNavigation (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogNonOwnershipInverseNavigation : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogNonOwnershipInverseNavigation logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string?,string,string?,string?&gt; LogNonOwnershipInverseNavigation (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The navigation '{targetEntityType}.{inverseNavigation}' specified in the [InverseProperty] attribute cannot be used as the inverse of '{ownedEntityType}.{navigation}' because it's not the ownership navigation '{ownershipNavigation}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogOldModelVersion">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogOldModelVersion (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogOldModelVersion(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogOldModelVersion(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogOldModelVersion (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogOldModelVersion : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogOldModelVersion logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The model supplied in the context options was created with EF Core version '{oldVersion}', but the context is from version '{newVersion}'. Update the externally built model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogOptimisticConcurrencyException">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Exception&gt; LogOptimisticConcurrencyException (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;class System.Exception&gt; LogOptimisticConcurrencyException(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogOptimisticConcurrencyException(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogOptimisticConcurrencyException (logger As IDiagnosticsLogger) As EventDefinition(Of Exception)" />
      <MemberSignature Language="F#" Value="static member LogOptimisticConcurrencyException : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Exception&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogOptimisticConcurrencyException logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                {error}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogOptimizedQueryModel">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogOptimizedQueryModel (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogOptimizedQueryModel(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogOptimizedQueryModel(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogOptimizedQueryModel (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogOptimizedQueryModel : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogOptimizedQueryModel logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Optimized query model: {newline}'{queryModel}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPossibleIncorrectRequiredNavigationWithQueryFilterInteraction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogPossibleIncorrectRequiredNavigationWithQueryFilterInteraction (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogPossibleIncorrectRequiredNavigationWithQueryFilterInteraction(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogPossibleIncorrectRequiredNavigationWithQueryFilterInteraction(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogPossibleIncorrectRequiredNavigationWithQueryFilterInteraction (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogPossibleIncorrectRequiredNavigationWithQueryFilterInteraction : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogPossibleIncorrectRequiredNavigationWithQueryFilterInteraction logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Entity '{principalEntityType}' has a global query filter defined and is the required end of a relationship with the entity '{declaringEntityType}'. This may lead to unexpected results when the required entity is filtered out. Either configure the navigation as optional, or define matching query filters for both entities in the navigation. See https://go.microsoft.com/fwlink/?linkid=2131316 for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPossibleUnintendedCollectionNavigationNullComparison">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogPossibleUnintendedCollectionNavigationNullComparison (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogPossibleUnintendedCollectionNavigationNullComparison(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogPossibleUnintendedCollectionNavigationNullComparison(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogPossibleUnintendedCollectionNavigationNullComparison (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogPossibleUnintendedCollectionNavigationNullComparison : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogPossibleUnintendedCollectionNavigationNullComparison logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Collection navigations are only considered null if their parent entity is null. Use 'Any' to check whether collection navigation '{navigationPath}' is empty.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPossibleUnintendedReferenceComparison">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;object,object&gt; LogPossibleUnintendedReferenceComparison (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;object, object&gt; LogPossibleUnintendedReferenceComparison(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogPossibleUnintendedReferenceComparison(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogPossibleUnintendedReferenceComparison (logger As IDiagnosticsLogger) As EventDefinition(Of Object, Object)" />
      <MemberSignature Language="F#" Value="static member LogPossibleUnintendedReferenceComparison : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;obj, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogPossibleUnintendedReferenceComparison logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Possible unintended reference comparison between '{left}' and '{right}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPropertyChangeDetected">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogPropertyChangeDetected (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogPropertyChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogPropertyChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogPropertyChangeDetected (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogPropertyChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogPropertyChangeDetected logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The unchanged property '{entityType}.{property}' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPropertyChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,object,object,string&gt; LogPropertyChangeDetectedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, object, object, string&gt; LogPropertyChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogPropertyChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogPropertyChangeDetectedSensitive (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, Object, Object, String)" />
      <MemberSignature Language="F#" Value="static member LogPropertyChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, obj, obj, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogPropertyChangeDetectedSensitive logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,object?,object?,string&gt; LogPropertyChangeDetectedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.Object,System.Object,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The unchanged property '{entityType}.{property}' was detected as changed from '{oldValue}' to '{newValue}' and will be marked as modified for entity with key '{keyValues}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogQueryCanceled">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type&gt; LogQueryCanceled (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;class System.Type&gt; LogQueryCanceled(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogQueryCanceled(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogQueryCanceled (logger As IDiagnosticsLogger) As EventDefinition(Of Type)" />
      <MemberSignature Language="F#" Value="static member LogQueryCanceled : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogQueryCanceled logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                A query was canceled for context type '{contextType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogQueryCompilationStarting">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogQueryCompilationStarting (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogQueryCompilationStarting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogQueryCompilationStarting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogQueryCompilationStarting (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogQueryCompilationStarting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogQueryCompilationStarting logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Compiling query expression: {newline}'{queryExpression}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogQueryExecutionPlanned">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogQueryExecutionPlanned (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogQueryExecutionPlanned(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogQueryExecutionPlanned(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogQueryExecutionPlanned (logger As IDiagnosticsLogger) As EventDefinition(Of String)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member LogQueryExecutionPlanned : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogQueryExecutionPlanned logger" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogQueryExecutionPlanned (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogQueryExecutionPlanned(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogQueryExecutionPlanned (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member LogQueryExecutionPlanned : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogQueryExecutionPlanned logger" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Generated query execution expression: {newline}'{plan}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRedundantAddServicesCall">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRedundantAddServicesCall (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRedundantAddServicesCall(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRedundantAddServicesCall(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogRedundantAddServicesCall (logger As IDiagnosticsLogger) As EventDefinition" />
      <MemberSignature Language="F#" Value="static member LogRedundantAddServicesCall : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRedundantAddServicesCall logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                'AddEntityFramework*' was called on the service provider, but 'UseInternalServiceProvider' wasn't called in the DbContext options configuration. Consider removing the 'AddEntityFramework*' call, as in most cases it's not needed and may cause conflicts with other products and services registered in the same service provider.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRedundantForeignKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRedundantForeignKey (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRedundantForeignKey(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRedundantForeignKey(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogRedundantForeignKey (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogRedundantForeignKey : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRedundantForeignKey logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The foreign key {redundantForeignKeyProperties} on entity type '{entityType}' targets itself. Consider removing it since it serves no purpose.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRedundantIndexRemoved">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogRedundantIndexRemoved (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogRedundantIndexRemoved(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRedundantIndexRemoved(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogRedundantIndexRemoved (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogRedundantIndexRemoved : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRedundantIndexRemoved logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The index {redundantIndexProperties} was not created on entity type '{firstEntityType}' as the properties are already covered by the index {otherIndexProperties}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogReferenceChangeDetected">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogReferenceChangeDetected (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogReferenceChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogReferenceChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogReferenceChangeDetected (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogReferenceChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogReferenceChangeDetected logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The navigation '{entityType}.{property}' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogReferenceChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogReferenceChangeDetectedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogReferenceChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogReferenceChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogReferenceChangeDetectedSensitive (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogReferenceChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogReferenceChangeDetectedSensitive logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The navigation '{entityType}.{property}' for entity with key '{keyValues}' was detected as changed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequiredAttributeInverted">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRequiredAttributeInverted (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRequiredAttributeInverted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRequiredAttributeInverted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogRequiredAttributeInverted (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogRequiredAttributeInverted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRequiredAttributeInverted logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The navigation '{navigation}' has a [Required] attribute causing the entity type '{entityType}' to be configured as the dependent side in the corresponding relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequiredAttributeOnBothNavigations">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogRequiredAttributeOnBothNavigations (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogRequiredAttributeOnBothNavigations(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRequiredAttributeOnBothNavigations(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogRequiredAttributeOnBothNavigations (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogRequiredAttributeOnBothNavigations : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRequiredAttributeOnBothNavigations logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The [Required] attribute on '{principalEntityType}.{principalNavigation}' was ignored because there is also a [Required] attribute on '{dependentEntityType}.{dependentNavigation}'. The [Required] attribute should only be specified on the dependent side of the relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequiredAttributeOnCollection">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRequiredAttributeOnCollection (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRequiredAttributeOnCollection(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRequiredAttributeOnCollection(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogRequiredAttributeOnCollection (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogRequiredAttributeOnCollection : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRequiredAttributeOnCollection logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The [Required] attribute on '{principalEntityType}.{principalNavigation}' was ignored because it is a collection. The [Required] attribute should only be specified on reference navigations pointing to the principal side of the relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequiredAttributeOnDependent">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRequiredAttributeOnDependent (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRequiredAttributeOnDependent(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRequiredAttributeOnDependent(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogRequiredAttributeOnDependent (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogRequiredAttributeOnDependent : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRequiredAttributeOnDependent logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0;efcore-6.0">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The [Required] attribute on '{principalEntityType}.{principalNavigation}' is invalid. The [Required] attribute can only be specified on the navigation pointing to the principal side of the relationship. To change the dependent side, configure the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequiredAttributeOnSkipNavigation">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRequiredAttributeOnSkipNavigation (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRequiredAttributeOnSkipNavigation(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRequiredAttributeOnSkipNavigation(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogRequiredAttributeOnSkipNavigation (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogRequiredAttributeOnSkipNavigation : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRequiredAttributeOnSkipNavigation logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The [Required] attribute on '{principalEntityType}.{principalNavigation}' was ignored because it is a skip navigation. Consider configuring the underlying foreign keys in 'OnModelCreating' instead.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRowLimitingOperationWithoutOrderBy">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogRowLimitingOperationWithoutOrderBy (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogRowLimitingOperationWithoutOrderBy(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRowLimitingOperationWithoutOrderBy(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogRowLimitingOperationWithoutOrderBy (logger As IDiagnosticsLogger) As EventDefinition(Of String)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="static member LogRowLimitingOperationWithoutOrderBy : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRowLimitingOperationWithoutOrderBy logger" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRowLimitingOperationWithoutOrderBy (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogRowLimitingOperationWithoutOrderBy(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogRowLimitingOperationWithoutOrderBy (logger As IDiagnosticsLogger) As EventDefinition" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberSignature Language="F#" Value="static member LogRowLimitingOperationWithoutOrderBy : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogRowLimitingOperationWithoutOrderBy logger" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0">Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSaveChangesCanceled">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type?&gt; LogSaveChangesCanceled (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;class System.Type&gt; LogSaveChangesCanceled(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSaveChangesCanceled(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogSaveChangesCanceled (logger As IDiagnosticsLogger) As EventDefinition(Of Type)" />
      <MemberSignature Language="F#" Value="static member LogSaveChangesCanceled : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSaveChangesCanceled logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                A cancellation occurred while saving changes for context type '{contextType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSaveChangesCompleted">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,int&gt; LogSaveChangesCompleted (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, int32&gt; LogSaveChangesCompleted(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSaveChangesCompleted(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogSaveChangesCompleted (logger As IDiagnosticsLogger) As EventDefinition(Of String, Integer)" />
      <MemberSignature Language="F#" Value="static member LogSaveChangesCompleted : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, int&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSaveChangesCompleted logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?,int&gt; LogSaveChangesCompleted (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                SaveChanges completed for '{contextType}' with {savedCount} entities written to the database.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSaveChangesStarting">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogSaveChangesStarting (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogSaveChangesStarting(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSaveChangesStarting(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogSaveChangesStarting (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogSaveChangesStarting : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSaveChangesStarting logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string?&gt; LogSaveChangesStarting (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                SaveChanges starting for '{contextType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSensitiveDataLoggingEnabled">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogSensitiveDataLoggingEnabled (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogSensitiveDataLoggingEnabled(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSensitiveDataLoggingEnabled(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogSensitiveDataLoggingEnabled (logger As IDiagnosticsLogger) As EventDefinition" />
      <MemberSignature Language="F#" Value="static member LogSensitiveDataLoggingEnabled : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSensitiveDataLoggingEnabled logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogServiceProviderCreated">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogServiceProviderCreated (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogServiceProviderCreated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogServiceProviderCreated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogServiceProviderCreated (logger As IDiagnosticsLogger) As EventDefinition" />
      <MemberSignature Language="F#" Value="static member LogServiceProviderCreated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogServiceProviderCreated logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                An 'IServiceProvider' was created for internal use by Entity Framework.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogServiceProviderDebugInfo">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogServiceProviderDebugInfo (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogServiceProviderDebugInfo(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogServiceProviderDebugInfo(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogServiceProviderDebugInfo (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogServiceProviderDebugInfo : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogServiceProviderDebugInfo logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: {debugInfo}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogShadowForeignKeyPropertyCreated">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogShadowForeignKeyPropertyCreated (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogShadowForeignKeyPropertyCreated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogShadowForeignKeyPropertyCreated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogShadowForeignKeyPropertyCreated (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogShadowForeignKeyPropertyCreated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogShadowForeignKeyPropertyCreated logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The foreign key property '{entityType}.{property}' was created in shadow state because a conflicting property with the simple name '{baseName}' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogShadowPropertyCreated">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogShadowPropertyCreated (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogShadowPropertyCreated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogShadowPropertyCreated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogShadowPropertyCreated (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogShadowPropertyCreated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogShadowPropertyCreated logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The property '{entityType}.{property}' was created in shadow state because there are no eligible CLR members with a matching name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSkipCollectionChangeDetected">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int,int,string,string&gt; LogSkipCollectionChangeDetected (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;int32, int32, string, string&gt; LogSkipCollectionChangeDetected(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSkipCollectionChangeDetected(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogSkipCollectionChangeDetected (logger As IDiagnosticsLogger) As EventDefinition(Of Integer, Integer, String, String)" />
      <MemberSignature Language="F#" Value="static member LogSkipCollectionChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int, int, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSkipCollectionChangeDetected logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Int32,System.Int32,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                {addedCount} entities were added and {removedCount} entities were removed from skip navigation '{entityType}.{property}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSkipCollectionChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int,int,string,string,string&gt; LogSkipCollectionChangeDetectedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;int32, int32, string, string, string&gt; LogSkipCollectionChangeDetectedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSkipCollectionChangeDetectedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogSkipCollectionChangeDetectedSensitive (logger As IDiagnosticsLogger) As EventDefinition(Of Integer, Integer, String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogSkipCollectionChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int, int, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogSkipCollectionChangeDetectedSensitive logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Int32,System.Int32,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                {addedCount} entities were added and {removedCount} entities were removed from skip navigation '{entityType}.{property}' on entity with key '{keyValues}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStartedTracking">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogStartedTracking (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogStartedTracking(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogStartedTracking(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogStartedTracking (logger As IDiagnosticsLogger) As EventDefinition(Of String, String)" />
      <MemberSignature Language="F#" Value="static member LogStartedTracking : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogStartedTracking logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Context '{contextType}' started tracking '{entityType}' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStartedTrackingSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogStartedTrackingSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogStartedTrackingSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogStartedTrackingSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogStartedTrackingSensitive (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogStartedTrackingSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogStartedTrackingSensitive logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                Context '{contextType}' started tracking '{entityType}' entity with key '{keyValues}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStateChanged">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState&gt; LogStateChanged (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, valuetype Microsoft.EntityFrameworkCore.EntityState, valuetype Microsoft.EntityFrameworkCore.EntityState&gt; LogStateChanged(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogStateChanged(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogStateChanged (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, EntityState, EntityState)" />
      <MemberSignature Language="F#" Value="static member LogStateChanged : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, Microsoft.EntityFrameworkCore.EntityState, Microsoft.EntityFrameworkCore.EntityState&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogStateChanged logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                An entity of type '{entityType}' tracked by '{contextType}' changed state from '{oldState}' to '{newState}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStateChangedSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState&gt; LogStateChangedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, string, valuetype Microsoft.EntityFrameworkCore.EntityState, valuetype Microsoft.EntityFrameworkCore.EntityState&gt; LogStateChangedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogStateChangedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogStateChangedSensitive (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String, EntityState, EntityState)" />
      <MemberSignature Language="F#" Value="static member LogStateChangedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, Microsoft.EntityFrameworkCore.EntityState, Microsoft.EntityFrameworkCore.EntityState&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogStateChangedSensitive logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                The '{entityType}' entity with key '{keyValues}' tracked by '{contextType}' changed state from '{oldState}' to '{newState}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStringEnumValueInJson">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogStringEnumValueInJson (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogStringEnumValueInJson(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogStringEnumValueInJson(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogStringEnumValueInJson (logger As IDiagnosticsLogger) As EventDefinition(Of String)" />
      <MemberSignature Language="F#" Value="static member LogStringEnumValueInJson : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogStringEnumValueInJson logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" Index="0" FrameworkAlternate="efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                A string value was read from JSON for enum '{enumType}'. Starting with EF Core 8, a breaking change was made to store enum values in JSON as numbers by default. See https://aka.ms/efcore-docs-jsonenums for details.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogTempValueGenerated">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogTempValueGenerated (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogTempValueGenerated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogTempValueGenerated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogTempValueGenerated (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogTempValueGenerated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogTempValueGenerated logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                '{contextType}' generated a temporary value for the property '{entityType}.{property}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogTempValueGeneratedSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,object,string,string&gt; LogTempValueGeneratedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, object, string, string&gt; LogTempValueGeneratedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogTempValueGeneratedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogTempValueGeneratedSensitive (logger As IDiagnosticsLogger) As EventDefinition(Of String, Object, String, String)" />
      <MemberSignature Language="F#" Value="static member LogTempValueGeneratedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, obj, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogTempValueGeneratedSensitive logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,object?,string,string&gt; LogTempValueGeneratedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.Object,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                '{contextType}' generated temporary value '{keyValue}' for the property '{entityType}.{property}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogValueGenerated">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogValueGenerated (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogValueGenerated(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogValueGenerated(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogValueGenerated (logger As IDiagnosticsLogger) As EventDefinition(Of String, String, String)" />
      <MemberSignature Language="F#" Value="static member LogValueGenerated : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogValueGenerated logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                '{contextType}' generated a value for the property '{entityType}.{property}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogValueGeneratedSensitive">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,object,string,string&gt; LogValueGeneratedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, object, string, string&gt; LogValueGeneratedSensitive(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogValueGeneratedSensitive(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogValueGeneratedSensitive (logger As IDiagnosticsLogger) As EventDefinition(Of String, Object, String, String)" />
      <MemberSignature Language="F#" Value="static member LogValueGeneratedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, obj, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Diagnostics.Internal.CoreResources.LogValueGeneratedSensitive logger" />
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,object?,string,string&gt; LogValueGeneratedSensitive (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger logger);" FrameworkAlternate="efcore-6.0;efcore-7.0;efcore-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.Object,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                '{contextType}' generated value '{keyValue}' for the property '{entityType}.{property}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
