<Type Name="RelationalConnectionDiagnosticsLogger" FullName="Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger">
  <TypeSignature Language="C#" Value="public class RelationalConnectionDiagnosticsLogger : Microsoft.EntityFrameworkCore.Diagnostics.Internal.DiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt;, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Connection&gt;, Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalConnectionDiagnosticsLogger extends Microsoft.EntityFrameworkCore.Diagnostics.Internal.DiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt; implements class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Connection&gt;, class Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalConnectionDiagnosticsLogger&#xA;Inherits DiagnosticsLogger(Of DbLoggerCategory.Database.Connection)&#xA;Implements IDiagnosticsLogger(Of DbLoggerCategory.Database.Connection), IRelationalConnectionDiagnosticsLogger" />
  <TypeSignature Language="F#" Value="type RelationalConnectionDiagnosticsLogger = class&#xA;    inherit DiagnosticsLogger&lt;DbLoggerCategory.Database.Connection&gt;&#xA;    interface IRelationalConnectionDiagnosticsLogger&#xA;    interface IDiagnosticsLogger&lt;DbLoggerCategory.Database.Connection&gt;&#xA;    interface IDiagnosticsLogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.Internal.DiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Connection&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalConnectionDiagnosticsLogger (Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, System.Diagnostics.DiagnosticSource diagnosticSource, Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions loggingDefinitions, Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger contextLogger, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions, Microsoft.EntityFrameworkCore.Diagnostics.IInterceptors? interceptors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, class System.Diagnostics.DiagnosticSource diagnosticSource, class Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions loggingDefinitions, class Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger contextLogger, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions, class Microsoft.EntityFrameworkCore.Diagnostics.IInterceptors interceptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions,System.Diagnostics.DiagnosticSource,Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions,Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Diagnostics.IInterceptors)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loggerFactory As ILoggerFactory, loggingOptions As ILoggingOptions, diagnosticSource As DiagnosticSource, loggingDefinitions As LoggingDefinitions, contextLogger As IDbContextLogger, contextOptions As IDbContextOptions, Optional interceptors As IInterceptors = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger : Microsoft.Extensions.Logging.ILoggerFactory * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions * System.Diagnostics.DiagnosticSource * Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions * Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions * Microsoft.EntityFrameworkCore.Diagnostics.IInterceptors -&gt; Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger (loggerFactory, loggingOptions, diagnosticSource, loggingDefinitions, contextLogger, contextOptions, interceptors)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" />
        <Parameter Name="diagnosticSource" Type="System.Diagnostics.DiagnosticSource" />
        <Parameter Name="loggingDefinitions" Type="Microsoft.EntityFrameworkCore.Diagnostics.LoggingDefinitions" />
        <Parameter Name="contextLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDbContextLogger" />
        <Parameter Name="contextOptions" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
        <Parameter Name="interceptors" Type="Microsoft.EntityFrameworkCore.Diagnostics.IInterceptors" />
      </Parameters>
      <Docs>
        <param name="loggerFactory">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <param name="diagnosticSource">To be added.</param>
        <param name="loggingDefinitions">To be added.</param>
        <param name="contextLogger">To be added.</param>
        <param name="contextOptions">To be added.</param>
        <param name="interceptors">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionClosed">
      <MemberSignature Language="C#" Value="public virtual void ConnectionClosed (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectionClosed(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionClosed(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ConnectionClosed (connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionClosed : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; unit&#xA;override this.ConnectionClosed : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; unit" Usage="relationalConnectionDiagnosticsLogger.ConnectionClosed (connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionClosed(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionClosedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ConnectionClosedAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ConnectionClosedAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionClosedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionClosedAsync (connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan) As Task" />
      <MemberSignature Language="F#" Value="abstract member ConnectionClosedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; System.Threading.Tasks.Task&#xA;override this.ConnectionClosedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; System.Threading.Tasks.Task" Usage="relationalConnectionDiagnosticsLogger.ConnectionClosedAsync (connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionClosedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionClosing">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionClosing (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionClosing(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionClosing(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionClosing (connection As IRelationalConnection, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="abstract member ConnectionClosing : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&#xA;override this.ConnectionClosing : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="relationalConnectionDiagnosticsLogger.ConnectionClosing (connection, startTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionClosing(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionClosingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionClosingAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionClosingAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionClosingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionClosingAsync (connection As IRelationalConnection, startTime As DateTimeOffset) As ValueTask(Of InterceptionResult)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionClosingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;&#xA;override this.ConnectionClosingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="relationalConnectionDiagnosticsLogger.ConnectionClosingAsync (connection, startTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionClosingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionCreated">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbConnection ConnectionCreated (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbConnection ConnectionCreated(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionCreated(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionCreated (connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan) As DbConnection" />
      <MemberSignature Language="F#" Value="abstract member ConnectionCreated : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; System.Data.Common.DbConnection&#xA;override this.ConnectionCreated : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; System.Data.Common.DbConnection" Usage="relationalConnectionDiagnosticsLogger.ConnectionCreated (connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionCreated(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionCreating">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbConnection&gt; ConnectionCreating (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult`1&lt;class System.Data.Common.DbConnection&gt; ConnectionCreating(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionCreating(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionCreating (connection As IRelationalConnection, startTime As DateTimeOffset) As InterceptionResult(Of DbConnection)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionCreating : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbConnection&gt;&#xA;override this.ConnectionCreating : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbConnection&gt;" Usage="relationalConnectionDiagnosticsLogger.ConnectionCreating (connection, startTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionCreating(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&lt;System.Data.Common.DbConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionDisposed">
      <MemberSignature Language="C#" Value="public virtual void ConnectionDisposed (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectionDisposed(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionDisposed(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ConnectionDisposed (connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionDisposed : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; unit&#xA;override this.ConnectionDisposed : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; unit" Usage="relationalConnectionDiagnosticsLogger.ConnectionDisposed (connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionDisposed(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionDisposedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ConnectionDisposedAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ConnectionDisposedAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionDisposedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionDisposedAsync (connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan) As Task" />
      <MemberSignature Language="F#" Value="abstract member ConnectionDisposedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; System.Threading.Tasks.Task&#xA;override this.ConnectionDisposedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; System.Threading.Tasks.Task" Usage="relationalConnectionDiagnosticsLogger.ConnectionDisposedAsync (connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionDisposedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="duration" Type="System.TimeSpan" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionDisposing">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionDisposing (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionDisposing(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionDisposing(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionDisposing (connection As IRelationalConnection, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="abstract member ConnectionDisposing : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&#xA;override this.ConnectionDisposing : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="relationalConnectionDiagnosticsLogger.ConnectionDisposing (connection, startTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionDisposing(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionDisposingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionDisposingAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionDisposingAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionDisposingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionDisposingAsync (connection As IRelationalConnection, startTime As DateTimeOffset) As ValueTask(Of InterceptionResult)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionDisposingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;&#xA;override this.ConnectionDisposingAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="relationalConnectionDiagnosticsLogger.ConnectionDisposingAsync (connection, startTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionDisposingAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionError">
      <MemberSignature Language="C#" Value="public virtual void ConnectionError (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Exception exception, DateTimeOffset startTime, TimeSpan duration, bool logErrorAsDebug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectionError(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, bool logErrorAsDebug) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionError(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Exception,System.DateTimeOffset,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ConnectionError (connection As IRelationalConnection, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, logErrorAsDebug As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionError : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Exception * DateTimeOffset * TimeSpan * bool -&gt; unit&#xA;override this.ConnectionError : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Exception * DateTimeOffset * TimeSpan * bool -&gt; unit" Usage="relationalConnectionDiagnosticsLogger.ConnectionError (connection, exception, startTime, duration, logErrorAsDebug)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionError(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Exception,System.DateTimeOffset,System.TimeSpan,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="logErrorAsDebug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="exception">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="logErrorAsDebug">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionErrorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ConnectionErrorAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Exception exception, DateTimeOffset startTime, TimeSpan duration, bool logErrorAsDebug, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ConnectionErrorAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Exception exception, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, bool logErrorAsDebug, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionErrorAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Exception,System.DateTimeOffset,System.TimeSpan,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionErrorAsync (connection As IRelationalConnection, exception As Exception, startTime As DateTimeOffset, duration As TimeSpan, logErrorAsDebug As Boolean, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member ConnectionErrorAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Exception * DateTimeOffset * TimeSpan * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ConnectionErrorAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Exception * DateTimeOffset * TimeSpan * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="relationalConnectionDiagnosticsLogger.ConnectionErrorAsync (connection, exception, startTime, duration, logErrorAsDebug, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionErrorAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Exception,System.DateTimeOffset,System.TimeSpan,System.Boolean,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="logErrorAsDebug" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="exception">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="logErrorAsDebug">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpened">
      <MemberSignature Language="C#" Value="public virtual void ConnectionOpened (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectionOpened(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionOpened(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ConnectionOpened (connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionOpened : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; unit&#xA;override this.ConnectionOpened : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan -&gt; unit" Usage="relationalConnectionDiagnosticsLogger.ConnectionOpened (connection, startTime, duration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionOpened(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpenedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ConnectionOpenedAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, TimeSpan duration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ConnectionOpenedAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.TimeSpan duration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionOpenedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionOpenedAsync (connection As IRelationalConnection, startTime As DateTimeOffset, duration As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member ConnectionOpenedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ConnectionOpenedAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="relationalConnectionDiagnosticsLogger.ConnectionOpenedAsync (connection, startTime, duration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionOpenedAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.TimeSpan,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="duration">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpening">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionOpening (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult ConnectionOpening(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionOpening(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionOpening (connection As IRelationalConnection, startTime As DateTimeOffset) As InterceptionResult" />
      <MemberSignature Language="F#" Value="abstract member ConnectionOpening : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&#xA;override this.ConnectionOpening : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset -&gt; Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult" Usage="relationalConnectionDiagnosticsLogger.ConnectionOpening (connection, startTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionOpening(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionOpeningAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionOpeningAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, DateTimeOffset startTime, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt; ConnectionOpeningAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.DateTimeOffset startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ConnectionOpeningAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConnectionOpeningAsync (connection As IRelationalConnection, startTime As DateTimeOffset, cancellationToken As CancellationToken) As ValueTask(Of InterceptionResult)" />
      <MemberSignature Language="F#" Value="abstract member ConnectionOpeningAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;&#xA;override this.ConnectionOpeningAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;" Usage="relationalConnectionDiagnosticsLogger.ConnectionOpeningAsync (connection, startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ConnectionOpeningAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.DateTimeOffset,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Microsoft.EntityFrameworkCore.Diagnostics.InterceptionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="startTime">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogConnectionClose">
      <MemberSignature Language="C#" Value="public virtual bool ShouldLogConnectionClose (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogConnectionClose(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ShouldLogConnectionClose(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldLogConnectionClose (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogConnectionClose : DateTimeOffset -&gt; bool&#xA;override this.ShouldLogConnectionClose : DateTimeOffset -&gt; bool" Usage="relationalConnectionDiagnosticsLogger.ShouldLogConnectionClose now" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ShouldLogConnectionClose(System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogConnectionCreate">
      <MemberSignature Language="C#" Value="public virtual bool ShouldLogConnectionCreate (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogConnectionCreate(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ShouldLogConnectionCreate(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldLogConnectionCreate (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogConnectionCreate : DateTimeOffset -&gt; bool&#xA;override this.ShouldLogConnectionCreate : DateTimeOffset -&gt; bool" Usage="relationalConnectionDiagnosticsLogger.ShouldLogConnectionCreate now" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ShouldLogConnectionCreate(System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogConnectionDispose">
      <MemberSignature Language="C#" Value="public virtual bool ShouldLogConnectionDispose (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogConnectionDispose(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ShouldLogConnectionDispose(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldLogConnectionDispose (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogConnectionDispose : DateTimeOffset -&gt; bool&#xA;override this.ShouldLogConnectionDispose : DateTimeOffset -&gt; bool" Usage="relationalConnectionDiagnosticsLogger.ShouldLogConnectionDispose now" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ShouldLogConnectionDispose(System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogConnectionOpen">
      <MemberSignature Language="C#" Value="public virtual bool ShouldLogConnectionOpen (DateTimeOffset now);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogConnectionOpen(valuetype System.DateTimeOffset now) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.Internal.RelationalConnectionDiagnosticsLogger.ShouldLogConnectionOpen(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldLogConnectionOpen (now As DateTimeOffset) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogConnectionOpen : DateTimeOffset -&gt; bool&#xA;override this.ShouldLogConnectionOpen : DateTimeOffset -&gt; bool" Usage="relationalConnectionDiagnosticsLogger.ShouldLogConnectionOpen now" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IRelationalConnectionDiagnosticsLogger.ShouldLogConnectionOpen(System.DateTimeOffset)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="now" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="now">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
