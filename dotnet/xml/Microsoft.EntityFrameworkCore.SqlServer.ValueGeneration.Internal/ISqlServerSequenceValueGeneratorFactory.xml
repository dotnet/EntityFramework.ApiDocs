<Type Name="ISqlServerSequenceValueGeneratorFactory" FullName="Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.ISqlServerSequenceValueGeneratorFactory">
  <TypeSignature Language="C#" Value="public interface ISqlServerSequenceValueGeneratorFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISqlServerSequenceValueGeneratorFactory" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.ISqlServerSequenceValueGeneratorFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISqlServerSequenceValueGeneratorFactory" />
  <TypeSignature Language="F#" Value="type ISqlServerSequenceValueGeneratorFactory = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ISqlServerSequenceValueGeneratorFactory" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator Create (Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState generatorState, Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator Create(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState generatorState, class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.ISqlServerSequenceValueGeneratorFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState,Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (property As IProperty, generatorState As SqlServerSequenceValueGeneratorState, connection As ISqlServerConnection) As ValueGenerator" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState * Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection -&gt; Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" Usage="iSqlServerSequenceValueGeneratorFactory.Create (property, generatorState, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="generatorState" Type="Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="generatorState">To be added.</param>
        <param name="connection">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator Create (Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState generatorState, Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection connection, Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; commandLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator Create(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState generatorState, class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection connection, class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; commandLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.ISqlServerSequenceValueGeneratorFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState,Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (property As IProperty, generatorState As SqlServerSequenceValueGeneratorState, connection As ISqlServerConnection, rawSqlCommandBuilder As IRawSqlCommandBuilder, commandLogger As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command)) As ValueGenerator" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState * Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection * Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; -&gt; Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" Usage="iSqlServerSequenceValueGeneratorFactory.Create (property, generatorState, connection, rawSqlCommandBuilder, commandLogger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="generatorState" Type="Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="rawSqlCommandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
        <Parameter Name="commandLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" Index="4" FrameworkAlternate="efcore-3.0;efcore-3.1;efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="generatorState">To be added.</param>
        <param name="connection">To be added.</param>
        <param name="rawSqlCommandBuilder">To be added.</param>
        <param name="commandLogger">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator Create (Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState generatorState, Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection connection, Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger commandLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator Create(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState generatorState, class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection connection, class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, class Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger commandLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.ISqlServerSequenceValueGeneratorFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState,Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (property As IProperty, generatorState As SqlServerSequenceValueGeneratorState, connection As ISqlServerConnection, rawSqlCommandBuilder As IRawSqlCommandBuilder, commandLogger As IRelationalCommandDiagnosticsLogger) As ValueGenerator" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState * Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection * Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder * Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" Usage="iSqlServerSequenceValueGeneratorFactory.Create (property, generatorState, connection, rawSqlCommandBuilder, commandLogger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="generatorState" Type="Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState" Index="1" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection" Index="2" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="rawSqlCommandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" Index="3" FrameworkAlternate="efcore-6.0" />
        <Parameter Name="commandLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger" Index="4" FrameworkAlternate="efcore-6.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="generatorState">To be added.</param>
        <param name="connection">To be added.</param>
        <param name="rawSqlCommandBuilder">To be added.</param>
        <param name="commandLogger">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator? TryCreate (Microsoft.EntityFrameworkCore.Metadata.IProperty property, Type clrType, Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState generatorState, Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection connection, Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger commandLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator TryCreate(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class System.Type clrType, class Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState generatorState, class Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection connection, class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder, class Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger commandLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.ISqlServerSequenceValueGeneratorFactory.TryCreate(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Type,Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState,Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreate (property As IProperty, clrType As Type, generatorState As SqlServerSequenceValueGeneratorState, connection As ISqlServerConnection, rawSqlCommandBuilder As IRawSqlCommandBuilder, commandLogger As IRelationalCommandDiagnosticsLogger) As ValueGenerator" />
      <MemberSignature Language="F#" Value="abstract member TryCreate : Microsoft.EntityFrameworkCore.Metadata.IProperty * Type * Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState * Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection * Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder * Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger -&gt; Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" Usage="iSqlServerSequenceValueGeneratorFactory.TryCreate (property, clrType, generatorState, connection, rawSqlCommandBuilder, commandLogger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="clrType" Type="System.Type" Index="1" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="generatorState" Type="Microsoft.EntityFrameworkCore.SqlServer.ValueGeneration.Internal.SqlServerSequenceValueGeneratorState" Index="2" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.ISqlServerConnection" Index="3" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="rawSqlCommandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" Index="4" FrameworkAlternate="efcore-7.0;efcore-8.0" />
        <Parameter Name="commandLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IRelationalCommandDiagnosticsLogger" Index="5" FrameworkAlternate="efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="clrType">To be added.</param>
        <param name="generatorState">To be added.</param>
        <param name="connection">To be added.</param>
        <param name="rawSqlCommandBuilder">To be added.</param>
        <param name="commandLogger">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
