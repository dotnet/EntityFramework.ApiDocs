<Type Name="ISingletonOptionsInitializer" FullName="Microsoft.EntityFrameworkCore.Internal.ISingletonOptionsInitializer">
  <TypeSignature Language="C#" Value="public interface ISingletonOptionsInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISingletonOptionsInitializer" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.ISingletonOptionsInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISingletonOptionsInitializer" />
  <TypeSignature Language="F#" Value="type ISingletonOptionsInitializer = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ISingletonOptionsInitializer" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>
                The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="EnsureInitialized">
      <MemberSignature Language="C#" Value="public void EnsureInitialized (IServiceProvider serviceProvider, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureInitialized(class System.IServiceProvider serviceProvider, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.ISingletonOptionsInitializer.EnsureInitialized(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureInitialized (serviceProvider As IServiceProvider, options As IDbContextOptions)" />
      <MemberSignature Language="F#" Value="abstract member EnsureInitialized : IServiceProvider * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; unit" Usage="iSingletonOptionsInitializer.EnsureInitialized (serviceProvider, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
