<Type Name="EntityFinderFactory" FullName="Microsoft.EntityFrameworkCore.Internal.EntityFinderFactory">
  <TypeSignature Language="C#" Value="public class EntityFinderFactory : Microsoft.EntityFrameworkCore.Internal.IEntityFinderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityFinderFactory extends System.Object implements class Microsoft.EntityFrameworkCore.Internal.IEntityFinderFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.EntityFinderFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityFinderFactory&#xA;Implements IEntityFinderFactory" />
  <TypeSignature Language="F#" Value="type EntityFinderFactory = class&#xA;    interface IEntityFinderFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Internal.IEntityFinderFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityFinderFactory (Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource entityFinderSource, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource, Microsoft.EntityFrameworkCore.Internal.IDbSetCache setCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource entityFinderSource, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource, class Microsoft.EntityFrameworkCore.Internal.IDbSetCache setCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.EntityFinderFactory.#ctor(Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Internal.IDbSetSource,Microsoft.EntityFrameworkCore.Internal.IDbSetCache)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityFinderSource As IEntityFinderSource, stateManager As IStateManager, setSource As IDbSetSource, setCache As IDbSetCache)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Internal.EntityFinderFactory : Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Internal.IDbSetSource * Microsoft.EntityFrameworkCore.Internal.IDbSetCache -&gt; Microsoft.EntityFrameworkCore.Internal.EntityFinderFactory" Usage="new Microsoft.EntityFrameworkCore.Internal.EntityFinderFactory (entityFinderSource, stateManager, setSource, setCache)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityFinderSource" Type="Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource" />
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="setSource" Type="Microsoft.EntityFrameworkCore.Internal.IDbSetSource" />
        <Parameter Name="setCache" Type="Microsoft.EntityFrameworkCore.Internal.IDbSetCache" />
      </Parameters>
      <Docs>
        <param name="entityFinderSource">To be added.</param>
        <param name="stateManager">To be added.</param>
        <param name="setSource">To be added.</param>
        <param name="setCache">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Internal.IEntityFinder Create (Microsoft.EntityFrameworkCore.Metadata.IEntityType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.IEntityFinder Create(class Microsoft.EntityFrameworkCore.Metadata.IEntityType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.EntityFinderFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (type As IEntityType) As IEntityFinder" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Internal.IEntityFinder&#xA;override this.Create : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Internal.IEntityFinder" Usage="entityFinderFactory.Create type" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Internal.IEntityFinderFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IEntityFinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
