<Type Name="RelationCommandCacheExtensions" FullName="Microsoft.EntityFrameworkCore.Internal.RelationCommandCacheExtensions">
  <TypeSignature Language="C#" Value="public static class RelationCommandCacheExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationCommandCacheExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.RelationCommandCacheExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationCommandCacheExtensions" />
  <TypeSignature Language="F#" Value="type RelationCommandCacheExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="RentAndPopulateRelationalCommand">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IRelationalCommand RentAndPopulateRelationalCommand (this Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache relationalCommandCache, Microsoft.EntityFrameworkCore.Query.RelationalQueryContext queryContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand RentAndPopulateRelationalCommand(class Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache relationalCommandCache, class Microsoft.EntityFrameworkCore.Query.RelationalQueryContext queryContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationCommandCacheExtensions.RentAndPopulateRelationalCommand(Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache,Microsoft.EntityFrameworkCore.Query.RelationalQueryContext)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RentAndPopulateRelationalCommand (relationalCommandCache As RelationalCommandCache, queryContext As RelationalQueryContext) As IRelationalCommand" />
      <MemberSignature Language="F#" Value="static member RentAndPopulateRelationalCommand : Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache * Microsoft.EntityFrameworkCore.Query.RelationalQueryContext -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" Usage="Microsoft.EntityFrameworkCore.Internal.RelationCommandCacheExtensions.RentAndPopulateRelationalCommand (relationalCommandCache, queryContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationalCommandCache" Type="Microsoft.EntityFrameworkCore.Query.Internal.RelationalCommandCache" RefType="this" />
        <Parameter Name="queryContext" Type="Microsoft.EntityFrameworkCore.Query.RelationalQueryContext" />
      </Parameters>
      <Docs>
        <param name="relationalCommandCache">To be added.</param>
        <param name="queryContext">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
