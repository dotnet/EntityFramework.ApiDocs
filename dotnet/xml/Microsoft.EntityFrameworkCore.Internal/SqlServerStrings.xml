<Type Name="SqlServerStrings" FullName="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings">
  <TypeSignature Language="C#" Value="public static class SqlServerStrings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlServerStrings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerStrings" />
  <TypeSignature Language="F#" Value="type SqlServerStrings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            	This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AlterIdentityColumn">
      <MemberSignature Language="C#" Value="public static string AlterIdentityColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string AlterIdentityColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterIdentityColumn" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlterIdentityColumn As String" />
      <MemberSignature Language="F#" Value="static member AlterIdentityColumn : string" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterIdentityColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                To change the IDENTITY property of a column, the column needs to be dropped and recreated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterMemoryOptimizedTable">
      <MemberSignature Language="C#" Value="public static string AlterMemoryOptimizedTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string AlterMemoryOptimizedTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterMemoryOptimizedTable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlterMemoryOptimizedTable As String" />
      <MemberSignature Language="F#" Value="static member AlterMemoryOptimizedTable : string" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.AlterMemoryOptimizedTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                To set memory-optimized on a table on or off the table needs to be dropped and recreated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityBadType">
      <MemberSignature Language="C#" Value="public static string IdentityBadType (object property, object entityType, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentityBadType(object property, object entityType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IdentityBadType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentityBadType (property As Object, entityType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentityBadType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IdentityBadType (property, entityType, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                Identity value generation cannot be used for the property '{property}' on entity type '{entityType}' because the property type is '{propertyType}'. Identity value generation can only be used with signed integer properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatibleTableMemoryOptimizedMismatch">
      <MemberSignature Language="C#" Value="public static string IncompatibleTableMemoryOptimizedMismatch (object table, object entityType, object otherEntityType, object memoryOptimizedEntityType, object nonMemoryOptimizedEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncompatibleTableMemoryOptimizedMismatch(object table, object entityType, object otherEntityType, object memoryOptimizedEntityType, object nonMemoryOptimizedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IncompatibleTableMemoryOptimizedMismatch(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncompatibleTableMemoryOptimizedMismatch (table As Object, entityType As Object, otherEntityType As Object, memoryOptimizedEntityType As Object, nonMemoryOptimizedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncompatibleTableMemoryOptimizedMismatch : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IncompatibleTableMemoryOptimizedMismatch (table, entityType, otherEntityType, memoryOptimizedEntityType, nonMemoryOptimizedEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="otherEntityType" Type="System.Object" Index="2" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="memoryOptimizedEntityType" Type="System.Object" Index="3" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="nonMemoryOptimizedEntityType" Type="System.Object" Index="4" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="table">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="otherEntityType">To be added.</param>
        <param name="memoryOptimizedEntityType">To be added.</param>
        <param name="nonMemoryOptimizedEntityType">To be added.</param>
        <summary>
                Cannot use table '{table}' for entity type '{entityType}' since it is being used for entity type '{otherEntityType}' and entity type '{memoryOptimizedEntityType}' is marked as memory-optimized, but entity type '{nonMemoryOptimizedEntityType}' is not.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexTableRequired">
      <MemberSignature Language="C#" Value="public static string IndexTableRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string IndexTableRequired" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IndexTableRequired" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IndexTableRequired As String" />
      <MemberSignature Language="F#" Value="static member IndexTableRequired : string" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.IndexTableRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                SQL Server requires the table name to be specified for rename index operations. Specify table name in the call to MigrationBuilder.RenameIndex.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogByteIdentityColumn">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogByteIdentityColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogByteIdentityColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogByteIdentityColumn" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogByteIdentityColumn As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogByteIdentityColumn : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogByteIdentityColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The property '{property}' on entity type '{entityType}' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogColumnNameEmptyOnForeignKey">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogColumnNameEmptyOnForeignKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogColumnNameEmptyOnForeignKey" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogColumnNameEmptyOnForeignKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogColumnNameEmptyOnForeignKey As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogColumnNameEmptyOnForeignKey : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogColumnNameEmptyOnForeignKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found a column on foreign key {tableName}.{fkName} with an empty or null name. Not including column in foreign key
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogColumnNameEmptyOnIndex">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogColumnNameEmptyOnIndex;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogColumnNameEmptyOnIndex" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogColumnNameEmptyOnIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogColumnNameEmptyOnIndex As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogColumnNameEmptyOnIndex : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogColumnNameEmptyOnIndex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found a column on index {indexName} on table {tableName} with an empty or null name. Not including column in index.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogColumnNameEmptyOnTable">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogColumnNameEmptyOnTable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogColumnNameEmptyOnTable" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogColumnNameEmptyOnTable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogColumnNameEmptyOnTable As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogColumnNameEmptyOnTable : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogColumnNameEmptyOnTable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found a column on table {tableName} with an empty or null name. Skipping column.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogColumnNotInSelectionSet">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogColumnNotInSelectionSet;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogColumnNotInSelectionSet" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogColumnNotInSelectionSet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogColumnNotInSelectionSet As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogColumnNotInSelectionSet : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogColumnNotInSelectionSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Column {columnName} belongs to table {tableName} which is not included in the selection set. Skipping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDefaultDecimalTypeColumn">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogDefaultDecimalTypeColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogDefaultDecimalTypeColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogDefaultDecimalTypeColumn" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogDefaultDecimalTypeColumn As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogDefaultDecimalTypeColumn : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogDefaultDecimalTypeColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                No type was specified for the decimal column '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accomadate all the values using 'ForSqlServerHasColumnType()'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyColumnNotInSelectionSet">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogForeignKeyColumnNotInSelectionSet;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogForeignKeyColumnNotInSelectionSet" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogForeignKeyColumnNotInSelectionSet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogForeignKeyColumnNotInSelectionSet As EventDefinition(Of String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogForeignKeyColumnNotInSelectionSet : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogForeignKeyColumnNotInSelectionSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Foreign key column {columnName} belongs to foreign key {fkName} on table {tableName} which is not included in the selection set. Skipping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyNameEmpty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogForeignKeyNameEmpty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogForeignKeyNameEmpty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogForeignKeyNameEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogForeignKeyNameEmpty As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogForeignKeyNameEmpty : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogForeignKeyNameEmpty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found a foreign key on table {tableName} with an empty or null name. Skipping foreign key.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyScaffoldErrorPropertyNotFound">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogForeignKeyScaffoldErrorPropertyNotFound;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogForeignKeyScaffoldErrorPropertyNotFound" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogForeignKeyScaffoldErrorPropertyNotFound" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogForeignKeyScaffoldErrorPropertyNotFound As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogForeignKeyScaffoldErrorPropertyNotFound : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogForeignKeyScaffoldErrorPropertyNotFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Could not scaffold the foreign key '{foreignKeyName}'.  The following columns in the foreign key could not be scaffolded: {columnNames}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundColumn">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition LogFoundColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition LogFoundColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundColumn" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundColumn As FallbackEventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundColumn : Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found column with table: {tableName}, column name: {columnName}, data type: {dataType}, ordinal: {ordinal}, nullable: {isNullable}, primary key ordinal: {primaryKeyOrdinal}, default value: {defaultValue}, computed value: {computedValue}, precision: {precision}, scale: {scale}, maximum length: {maxLength}, identity: {isIdentity}, computed: {isComputed}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundDefaultSchema">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogFoundDefaultSchema;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogFoundDefaultSchema" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundDefaultSchema" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundDefaultSchema As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundDefaultSchema : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundDefaultSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found default schema {defaultSchema}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundForeignKeyColumn">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition LogFoundForeignKeyColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition LogFoundForeignKeyColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundForeignKeyColumn" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundForeignKeyColumn As FallbackEventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundForeignKeyColumn : Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundForeignKeyColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found foreign key column with table: {tableName}, foreign key name: {fkName}, principal table: {principalTableName}, column name: {columnName}, principal column name: {principalColumnName}, update action: {updateAction}, delete action: {deleteAction}, ordinal: {ordinal}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundIndexColumn">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,int?&gt; LogFoundIndexColumn;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, valuetype System.Nullable`1&lt;int32&gt;&gt; LogFoundIndexColumn" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundIndexColumn" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundIndexColumn As EventDefinition(Of String, String, String, Nullable(Of Integer)) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundIndexColumn : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, Nullable&lt;int&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundIndexColumn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.Nullable&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found index column on index {indexName} on table {tableName}, column name: {columnName}, ordinal: {ordinal}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundSequence">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition LogFoundSequence;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition LogFoundSequence" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundSequence" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundSequence As FallbackEventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundSequence : Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundSequence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.FallbackEventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found sequence name: {name}, data type: {dataType}, cyclic: {isCyclic}, increment: {increment}, start: {start}, minimum: {min}, maximum: {max}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundTable">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogFoundTable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogFoundTable" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundTable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundTable As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundTable : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundTable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found table with name: {name}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFoundTypeAlias">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogFoundTypeAlias;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogFoundTypeAlias" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundTypeAlias" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFoundTypeAlias As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFoundTypeAlias : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogFoundTypeAlias" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found type alias with name: {alias} which maps to underlying data type {dataType}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIndexColumnNotInSelectionSet">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogIndexColumnNotInSelectionSet;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogIndexColumnNotInSelectionSet" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogIndexColumnNotInSelectionSet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogIndexColumnNotInSelectionSet As EventDefinition(Of String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogIndexColumnNotInSelectionSet : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogIndexColumnNotInSelectionSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Index column {columnName} belongs to index {indexName} on table {tableName} which is not included in the selection set. Skipping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIndexNameEmpty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogIndexNameEmpty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogIndexNameEmpty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogIndexNameEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogIndexNameEmpty As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogIndexNameEmpty : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogIndexNameEmpty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Found an index on table {tableName} with an empty or null name. Skipping index.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMissingSchema">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogMissingSchema;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogMissingSchema" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogMissingSchema" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogMissingSchema As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogMissingSchema : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogMissingSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unable to find a schema in the database matching the selected schema {schema}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMissingTable">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogMissingTable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogMissingTable" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogMissingTable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogMissingTable As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogMissingTable : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogMissingTable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unable to find a table in the database matching the selected table {table}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPrincipalTableNotInSelectionSet">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogPrincipalTableNotInSelectionSet;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogPrincipalTableNotInSelectionSet" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogPrincipalTableNotInSelectionSet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogPrincipalTableNotInSelectionSet As EventDefinition(Of String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogPrincipalTableNotInSelectionSet : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogPrincipalTableNotInSelectionSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                For foreign key {fkName} on table {tableName}, unable to model the end of the foreign key on principal table {principaltableName}. This is usually because the principal table was not included in the selection set.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSequencesRequireName">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogSequencesRequireName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogSequencesRequireName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogSequencesRequireName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogSequencesRequireName As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogSequencesRequireName : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogSequencesRequireName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Sequence name cannot be null or empty. Entity Framework cannot model a sequence that does not have a name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogTableNotInSelectionSet">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogTableNotInSelectionSet;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogTableNotInSelectionSet" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogTableNotInSelectionSet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogTableNotInSelectionSet As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogTableNotInSelectionSet : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogTableNotInSelectionSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Table {tableName} is not included in the selection set. Skipping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogUnableToFindTableForIndex">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogUnableToFindTableForIndex;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogUnableToFindTableForIndex" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogUnableToFindTableForIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogUnableToFindTableForIndex As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogUnableToFindTableForIndex : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogUnableToFindTableForIndex" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                For index {indexName}. Unable to find parent table {tableName}. Skipping index.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogUnableToScaffoldIndexMissingProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogUnableToScaffoldIndexMissingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogUnableToScaffoldIndexMissingProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogUnableToScaffoldIndexMissingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogUnableToScaffoldIndexMissingProperty As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogUnableToScaffoldIndexMissingProperty : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.LogUnableToScaffoldIndexMissingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unable to scaffold the index '{indexName}'. The following columns could not be scaffolded: {columnNames}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleIdentityColumns">
      <MemberSignature Language="C#" Value="public static string MultipleIdentityColumns (object properties, object table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleIdentityColumns(object properties, object table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.MultipleIdentityColumns(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleIdentityColumns (properties As Object, table As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleIdentityColumns : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.MultipleIdentityColumns (properties, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="table" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                The properties {properties} are configured to use 'Identity' value generator and are mapped to the same table '{table}'. Only one column per table can be configured as 'Identity'. Call 'ValueGeneratedNever' for properties that should not use 'Identity'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoInitialCatalog">
      <MemberSignature Language="C#" Value="public static string NoInitialCatalog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoInitialCatalog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.NoInitialCatalog" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoInitialCatalog As String" />
      <MemberSignature Language="F#" Value="static member NoInitialCatalog : string" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.NoInitialCatalog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The database name could not be determined. To use EnsureDeleted, the connection string must specify Initial Catalog.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonKeyValueGeneration">
      <MemberSignature Language="C#" Value="public static string NonKeyValueGeneration (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonKeyValueGeneration(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.NonKeyValueGeneration(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonKeyValueGeneration (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonKeyValueGeneration : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.NonKeyValueGeneration (property, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="entityType" Type="System.Object" Index="1" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' is configured to use 'SequenceHiLo' value generator, which is only intended for keys. If this was intentional configure an alternate key on the property, otherwise call 'ValueGeneratedNever' or configure store generation for this property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceBadType">
      <MemberSignature Language="C#" Value="public static string SequenceBadType (object property, object entityType, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SequenceBadType(object property, object entityType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.SequenceBadType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SequenceBadType (property As Object, entityType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SequenceBadType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.SequenceBadType (property, entityType, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                SQL Server sequences cannot be used to generate values for the property '{property}' on entity type '{entityType}' because the property type is '{propertyType}'. Sequences can only be used with integer properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransientExceptionDetected">
      <MemberSignature Language="C#" Value="public static string TransientExceptionDetected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TransientExceptionDetected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.TransientExceptionDetected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransientExceptionDetected As String" />
      <MemberSignature Language="F#" Value="static member TransientExceptionDetected : string" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.TransientExceptionDetected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An exception has been raised that is likely due to a transient failure. If you are connecting to a SQL Azure database consider using SqlAzureExecutionStrategy.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnqualifiedDataType">
      <MemberSignature Language="C#" Value="public static string UnqualifiedDataType (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnqualifiedDataType(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.UnqualifiedDataType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnqualifiedDataType (dataType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnqualifiedDataType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.SqlServerStrings.UnqualifiedDataType dataType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">To be added.</param>
        <summary>
                Data type '{dataType}' is not supported in this form. Either specify the length explicitly in the type name, for example as '{dataType}(16)', or remove the data type and use APIs such as HasMaxLength to allow EF choose the data type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
