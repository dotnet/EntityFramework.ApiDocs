<Type Name="IEntityFinderSource" FullName="Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource">
  <TypeSignature Language="C#" Value="public interface IEntityFinderSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEntityFinderSource" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEntityFinderSource" />
  <TypeSignature Language="F#" Value="type IEntityFinderSource = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IEntityFinderSource" FrameworkAlternate="efcore-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>
                The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Internal.IEntityFinder Create (Microsoft.EntityFrameworkCore.DbContext context, Microsoft.EntityFrameworkCore.Metadata.IEntityType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.IEntityFinder Create(class Microsoft.EntityFrameworkCore.DbContext context, class Microsoft.EntityFrameworkCore.Metadata.IEntityType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource.Create(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (context As DbContext, type As IEntityType) As IEntityFinder" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.DbContext * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Internal.IEntityFinder" Usage="iEntityFinderSource.Create (context, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IEntityFinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="0" FrameworkAlternate="efcore-2.0" />
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="1" FrameworkAlternate="efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Internal.IEntityFinder Create (Microsoft.EntityFrameworkCore.DbContext context, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.IEntityFinder Create(class Microsoft.EntityFrameworkCore.DbContext context, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource.Create(Microsoft.EntityFrameworkCore.DbContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (context As DbContext, type As Type) As IEntityFinder" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.DbContext * Type -&gt; Microsoft.EntityFrameworkCore.Internal.IEntityFinder" Usage="iEntityFinderSource.Create (context, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IEntityFinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" Index="0" FrameworkAlternate="efcore-1.1" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Internal.IEntityFinder Create (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource, Microsoft.EntityFrameworkCore.Internal.IDbSetCache setCache, Microsoft.EntityFrameworkCore.Metadata.IEntityType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.IEntityFinder Create(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource, class Microsoft.EntityFrameworkCore.Internal.IDbSetCache setCache, class Microsoft.EntityFrameworkCore.Metadata.IEntityType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource.Create(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Internal.IDbSetSource,Microsoft.EntityFrameworkCore.Internal.IDbSetCache,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (stateManager As IStateManager, setSource As IDbSetSource, setCache As IDbSetCache, type As IEntityType) As IEntityFinder" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Internal.IDbSetSource * Microsoft.EntityFrameworkCore.Internal.IDbSetCache * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Internal.IEntityFinder" Usage="iEntityFinderSource.Create (stateManager, setSource, setCache, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IEntityFinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="setSource" Type="Microsoft.EntityFrameworkCore.Internal.IDbSetSource" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="setCache" Type="Microsoft.EntityFrameworkCore.Internal.IDbSetCache" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1;efcore-5.0;efcore-6.0;efcore-7.0;efcore-8.0" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="setSource">To be added.</param>
        <param name="setCache">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
