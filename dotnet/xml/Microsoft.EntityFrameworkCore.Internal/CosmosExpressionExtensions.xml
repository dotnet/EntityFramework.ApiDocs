<Type Name="CosmosExpressionExtensions" FullName="Microsoft.EntityFrameworkCore.Internal.CosmosExpressionExtensions">
  <TypeSignature Language="C#" Value="public static class CosmosExpressionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CosmosExpressionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.CosmosExpressionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CosmosExpressionExtensions" />
  <TypeSignature Language="F#" Value="type CosmosExpressionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsLogicalNot">
      <MemberSignature Language="C#" Value="public static bool IsLogicalNot (this Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression sqlUnaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLogicalNot(class Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression sqlUnaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CosmosExpressionExtensions.IsLogicalNot(Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsLogicalNot (sqlUnaryExpression As SqlUnaryExpression) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLogicalNot : Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Internal.CosmosExpressionExtensions.IsLogicalNot sqlUnaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Cosmos</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlUnaryExpression" Type="Microsoft.EntityFrameworkCore.Cosmos.Query.Internal.SqlUnaryExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="sqlUnaryExpression">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
