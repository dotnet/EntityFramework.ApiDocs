<Type Name="Graph&lt;TVertex&gt;" FullName="Microsoft.EntityFrameworkCore.Internal.Graph&lt;TVertex&gt;">
  <TypeSignature Language="C#" Value="public abstract class Graph&lt;TVertex&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Graph`1&lt;TVertex&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.Graph`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Graph(Of TVertex)" />
  <TypeSignature Language="F#" Value="type Graph&lt;'Vertex&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TVertex" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TVertex">To be added.</typeparam>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Graph ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.Graph`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncomingNeighbors">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;TVertex&gt; GetIncomingNeighbors (TVertex to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TVertex&gt; GetIncomingNeighbors(!TVertex to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.Graph`1.GetIncomingNeighbors(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIncomingNeighbors (to As TVertex) As IEnumerable(Of TVertex)" />
      <MemberSignature Language="F#" Value="abstract member GetIncomingNeighbors : 'Vertex -&gt; seq&lt;'Vertex&gt;" Usage="graph.GetIncomingNeighbors to" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TVertex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="TVertex" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="to">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncomingNeighbours">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;TVertex&gt; GetIncomingNeighbours (TVertex to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TVertex&gt; GetIncomingNeighbours(!TVertex to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.Graph`1.GetIncomingNeighbours(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIncomingNeighbours (to As TVertex) As IEnumerable(Of TVertex)" />
      <MemberSignature Language="F#" Value="abstract member GetIncomingNeighbours : 'Vertex -&gt; seq&lt;'Vertex&gt;" Usage="graph.GetIncomingNeighbours to" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TVertex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="TVertex" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="to">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutgoingNeighbors">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;TVertex&gt; GetOutgoingNeighbors (TVertex from);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TVertex&gt; GetOutgoingNeighbors(!TVertex from) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.Graph`1.GetOutgoingNeighbors(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOutgoingNeighbors (from As TVertex) As IEnumerable(Of TVertex)" />
      <MemberSignature Language="F#" Value="abstract member GetOutgoingNeighbors : 'Vertex -&gt; seq&lt;'Vertex&gt;" Usage="graph.GetOutgoingNeighbors from" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TVertex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="TVertex" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutgoingNeighbours">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;TVertex&gt; GetOutgoingNeighbours (TVertex from);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TVertex&gt; GetOutgoingNeighbours(!TVertex from) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.Graph`1.GetOutgoingNeighbours(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOutgoingNeighbours (from As TVertex) As IEnumerable(Of TVertex)" />
      <MemberSignature Language="F#" Value="abstract member GetOutgoingNeighbours : 'Vertex -&gt; seq&lt;'Vertex&gt;" Usage="graph.GetOutgoingNeighbours from" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TVertex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="TVertex" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnreachableVertices">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ISet&lt;TVertex&gt; GetUnreachableVertices (System.Collections.Generic.IReadOnlyList&lt;TVertex&gt; roots);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ISet`1&lt;!TVertex&gt; GetUnreachableVertices(class System.Collections.Generic.IReadOnlyList`1&lt;!TVertex&gt; roots) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.Graph`1.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnreachableVertices (roots As IReadOnlyList(Of TVertex)) As ISet(Of TVertex)" />
      <MemberSignature Language="F#" Value="abstract member GetUnreachableVertices : System.Collections.Generic.IReadOnlyList&lt;'Vertex&gt; -&gt; System.Collections.Generic.ISet&lt;'Vertex&gt;&#xA;override this.GetUnreachableVertices : System.Collections.Generic.IReadOnlyList&lt;'Vertex&gt; -&gt; System.Collections.Generic.ISet&lt;'Vertex&gt;" Usage="graph.GetUnreachableVertices roots" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;TVertex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roots" Type="System.Collections.Generic.IReadOnlyList&lt;TVertex&gt;" />
      </Parameters>
      <Docs>
        <param name="roots">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertices">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;TVertex&gt; Vertices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TVertex&gt; Vertices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.Graph`1.Vertices" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Vertices As IEnumerable(Of TVertex)" />
      <MemberSignature Language="F#" Value="member this.Vertices : seq&lt;'Vertex&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.Graph&lt;'Vertex&gt;.Vertices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TVertex&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
